{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\rbush\\\\index.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\style-loader\\\\index.js!C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\ol.css\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\ol.css\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\style-loader\\\\lib\\\\addStyles.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\style-loader\\\\lib\\\\urls.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\quickselect\\\\quickselect.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\util.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\AssertionError.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\CollectionEventType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\ObjectEventType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\obj.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\events.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\Disposable.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\functions.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\events\\\\Event.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\events\\\\Target.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\events\\\\EventType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\Observable.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\Object.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\Collection.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\MapEvent.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\MapBrowserEvent.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\has.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\MapBrowserEventType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\MapBrowserPointerEvent.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\pointer\\\\EventType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\pointer\\\\EventSource.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\pointer\\\\MouseSource.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\pointer\\\\MsSource.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\pointer\\\\NativeSource.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\pointer\\\\PointerEvent.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\array.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\pointer\\\\TouchSource.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\pointer\\\\PointerEventHandler.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\MapBrowserEventHandler.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\MapEventType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\MapProperty.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\EventType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\TileState.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\asserts.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\structs\\\\PriorityQueue.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\TileQueue.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\tilegrid\\\\common.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\math.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\centerconstraint.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\extent\\\\Corner.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\extent\\\\Relationship.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\extent.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\resolutionconstraint.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\rotationconstraint.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\ViewHint.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\ViewProperty.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\coordinate.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\easing.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\GeometryType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\GeometryLayout.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\transform.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\sphere.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\proj\\\\Units.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\proj\\\\Projection.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\proj\\\\epsg3857.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\proj\\\\epsg4326.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\proj\\\\projections.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\proj\\\\transforms.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\proj.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\transform.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\Geometry.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\SimpleGeometry.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\area.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\closest.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\deflate.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\inflate.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\simplify.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\LinearRing.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\Point.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\contains.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\interiorpoint.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\segments.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\intersectsextent.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\reverse.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\orient.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\Polygon.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\View.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\dom.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\layer\\\\Property.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\layer\\\\Base.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\State.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\layer\\\\Group.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\size.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\PluggableMap.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\control\\\\Control.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\css.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\layer\\\\Layer.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\control\\\\Attribution.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\control\\\\Rotate.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\control\\\\Zoom.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\Kinetic.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\Property.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\Interaction.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\DoubleClickZoom.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\events\\\\condition.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\Pointer.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\DragPan.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\DragRotate.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\Box.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\DragBox.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\DragZoom.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\events\\\\KeyCode.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\KeyboardPan.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\KeyboardZoom.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\MouseWheelZoom.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\PinchRotate.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction\\\\PinchZoom.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\Event.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\color.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\style\\\\IconImageCache.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\renderer\\\\Map.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\renderer\\\\Composite.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\Map.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\control\\\\util.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\interaction.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\layer\\\\TileProperty.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\layer\\\\BaseTile.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\TileRange.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\structs\\\\LRUCache.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\LabelCache.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\ImageState.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\renderer\\\\Layer.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\renderer\\\\canvas\\\\Layer.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\renderer\\\\canvas\\\\TileLayer.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\layer\\\\Tile.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\colorlike.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\style\\\\Image.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\style\\\\RegularShape.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\style\\\\Circle.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\style\\\\Fill.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\style\\\\Stroke.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\style\\\\Style.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\layer\\\\BaseVector.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\VectorContext.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\Instruction.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\Builder.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\ImageBuilder.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\LineStringBuilder.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\PolygonBuilder.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\straightchunk.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\style\\\\TextPlacement.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\TextBuilder.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\BuilderGroup.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\BuilderType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\length.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\textpath.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\Executor.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\render\\\\canvas\\\\ExecutorGroup.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\renderer\\\\vector.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\renderer\\\\canvas\\\\VectorLayer.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\layer\\\\Vector.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\format\\\\FormatType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\featureloader.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\loadingstrategy.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\Source.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\VectorEventType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\structs\\\\RBush.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\Vector.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\Feature.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\format\\\\Feature.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\format\\\\JSONFeature.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\GeometryCollection.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\interpolate.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\LineString.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\MultiLineString.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\MultiPoint.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\MultiPolygon.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\geom\\\\flat\\\\center.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\format\\\\GeoJSON.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\style\\\\Text.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\reproj\\\\common.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\Tile.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\ImageTile.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\tilecoord.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\TileCache.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\reproj.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\reproj\\\\Triangulation.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\reproj\\\\Tile.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\tileurlfunction.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\tilegrid\\\\TileGrid.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\tilegrid.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\Tile.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\TileEventType.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\UrlTile.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\TileImage.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\XYZ.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\node_modules\\\\ol\\\\source\\\\OSM.js\",\"C:\\\\Users\\\\gabig\\\\Desktop\\\\geo02\\\\main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"rbush\",\"default\",\"quickselect\",\"maxEntries\",\"format\",\"this\",\"_maxEntries\",\"Math\",\"max\",\"_minEntries\",\"ceil\",\"_initFormat\",\"clear\",\"findItem\",\"item\",\"items\",\"equalsFn\",\"indexOf\",\"length\",\"calcBBox\",\"node\",\"toBBox\",\"distBBox\",\"children\",\"k\",\"destNode\",\"createNode\",\"minX\",\"Infinity\",\"minY\",\"maxX\",\"maxY\",\"child\",\"extend\",\"leaf\",\"a\",\"b\",\"min\",\"compareNodeMinX\",\"compareNodeMinY\",\"bboxArea\",\"bboxMargin\",\"contains\",\"intersects\",\"height\",\"multiSelect\",\"arr\",\"left\",\"right\",\"compare\",\"mid\",\"stack\",\"pop\",\"push\",\"all\",\"_all\",\"data\",\"search\",\"bbox\",\"result\",\"len\",\"childBBox\",\"nodesToSearch\",\"collides\",\"load\",\"insert\",\"_build\",\"slice\",\"_splitRoot\",\"tmpNode\",\"_insert\",\"remove\",\"parent\",\"index\",\"goingUp\",\"path\",\"indexes\",\"splice\",\"_condense\",\"compareMinX\",\"compareMinY\",\"toJSON\",\"fromJSON\",\"apply\",\"N\",\"M\",\"log\",\"pow\",\"j\",\"right2\",\"right3\",\"N2\",\"N1\",\"sqrt\",\"_chooseSubtree\",\"level\",\"targetNode\",\"area\",\"enlargement\",\"minArea\",\"minEnlargement\",\"isNode\",\"insertPath\",\"_split\",\"_adjustParentBBoxes\",\"_chooseSplitAxis\",\"splitIndex\",\"_chooseSplitIndex\",\"newNode\",\"bbox1\",\"bbox2\",\"overlap\",\"minOverlap\",\"_allDistMargin\",\"sort\",\"leftBBox\",\"rightBBox\",\"margin\",\"siblings\",\"compareArr\",\"Function\",\"join\",\"content\",\"options\",\"hmr\",\"transform\",\"insertInto\",\"undefined\",\"locals\",\"useSourceMap\",\"list\",\"toString\",\"map\",\"cssMapping\",\"btoa\",\"sourceMapping\",\"sourceMap\",\"unescape\",\"encodeURIComponent\",\"JSON\",\"stringify\",\"sourceURLs\",\"sources\",\"source\",\"sourceRoot\",\"concat\",\"cssWithMappingToString\",\"mediaQuery\",\"alreadyImportedModules\",\"id\",\"fn\",\"memo\",\"stylesInDom\",\"isOldIE\",\"window\",\"document\",\"atob\",\"arguments\",\"getElement\",\"target\",\"styleTarget\",\"querySelector\",\"HTMLIFrameElement\",\"contentDocument\",\"head\",\"e\",\"singleton\",\"singletonCounter\",\"stylesInsertedAtTop\",\"fixUrls\",\"addStylesToDom\",\"styles\",\"domStyle\",\"refs\",\"parts\",\"addStyle\",\"listToStyles\",\"newStyles\",\"base\",\"part\",\"css\",\"media\",\"insertStyleElement\",\"style\",\"Error\",\"lastStyleElementInsertedAtTop\",\"insertAt\",\"nextSibling\",\"insertBefore\",\"appendChild\",\"firstChild\",\"before\",\"removeStyleElement\",\"parentNode\",\"removeChild\",\"idx\",\"createStyleElement\",\"createElement\",\"attrs\",\"type\",\"nonce\",\"nc\",\"getNonce\",\"addAttrs\",\"el\",\"keys\",\"forEach\",\"setAttribute\",\"obj\",\"update\",\"styleIndex\",\"applyToSingletonTag\",\"URL\",\"createObjectURL\",\"revokeObjectURL\",\"Blob\",\"link\",\"rel\",\"createLinkElement\",\"autoFixUrls\",\"convertToAbsoluteUrls\",\"blob\",\"oldSrc\",\"href\",\"styleSheet\",\"cssText\",\"createTextNode\",\"newObj\",\"DEBUG\",\"newList\",\"mayRemove\",\"textStore\",\"replaceText\",\"replacement\",\"filter\",\"Boolean\",\"cssNode\",\"childNodes\",\"location\",\"baseUrl\",\"protocol\",\"host\",\"currentDir\",\"pathname\",\"replace\",\"fullMatch\",\"origUrl\",\"newUrl\",\"unquotedOrigUrl\",\"trim\",\"$1\",\"test\",\"swap\",\"tmp\",\"defaultCompare\",\"quickselectStep\",\"z\",\"exp\",\"sd\",\"newLeft\",\"floor\",\"newRight\",\"factory\",\"util_abstract\",\"uidCounter_\",\"getUid\",\"ol_uid\",\"String\",\"extendStatics\",\"VERSION\",\"__extends\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"__\",\"constructor\",\"ol_AssertionError\",\"_super\",\"AssertionError\",\"code\",\"_this\",\"message\",\"split\",\"CollectionEventType\",\"ADD\",\"REMOVE\",\"ObjectEventType\",\"obj_assign\",\"assign\",\"var_sources\",\"TypeError\",\"output\",\"ii\",\"getValues\",\"values\",\"isEmpty\",\"findListener\",\"listeners\",\"listener\",\"opt_this\",\"opt_setDeleteIndex\",\"listenerObj\",\"bindTo\",\"deleteIndex\",\"getListeners\",\"listenerMap\",\"getListenerMap\",\"opt_create\",\"ol_lm\",\"removeListeners\",\"removeEventListener\",\"boundListener\",\"removeListenerMap\",\"listen\",\"opt_once\",\"callOnce\",\"addEventListener\",\"evt\",\"unlistenByKey\",\"bindListener\",\"listenOnce\",\"unlisten\",\"ol_Disposable\",\"Disposable\",\"disposed_\",\"dispose\",\"disposeInternal\",\"TRUE\",\"FALSE\",\"VOID\",\"events_Event\",\"Event\",\"propagationStopped\",\"preventDefault\",\"stopPropagation\",\"Target_extends\",\"events_Target\",\"Target\",\"pendingRemovals_\",\"dispatching_\",\"listeners_\",\"dispatchEvent\",\"event\",\"propagate\",\"pendingRemovals\",\"unlistenAll\",\"hasListener\",\"opt_type\",\"EventType\",\"CHANGE\",\"CLEAR\",\"CONTEXTMENU\",\"CLICK\",\"DBLCLICK\",\"DRAGENTER\",\"DRAGOVER\",\"DROP\",\"ERROR\",\"KEYDOWN\",\"KEYPRESS\",\"LOAD\",\"MOUSEDOWN\",\"MOUSEMOVE\",\"MOUSEOUT\",\"MOUSEUP\",\"MOUSEWHEEL\",\"MSPOINTERDOWN\",\"RESIZE\",\"TOUCHSTART\",\"TOUCHMOVE\",\"TOUCHEND\",\"WHEEL\",\"Observable_extends\",\"ol_Observable\",\"Observable\",\"revision_\",\"changed\",\"getRevision\",\"on\",\"isArray\",\"once\",\"un\",\"Object_extends\",\"ObjectEvent\",\"oldValue\",\"Object_BaseObject\",\"BaseObject\",\"opt_values\",\"values_\",\"setProperties\",\"getKeys\",\"getProperties\",\"notify\",\"eventType\",\"getChangeEventType\",\"set\",\"opt_silent\",\"unset\",\"changeEventTypeCache\",\"ol_Object\",\"Collection_extends\",\"Property\",\"CollectionEvent\",\"opt_element\",\"opt_index\",\"element\",\"ol_Collection\",\"Collection\",\"opt_array\",\"opt_options\",\"unique_\",\"unique\",\"array_\",\"assertUnique_\",\"updateLength_\",\"getLength\",\"f\",\"array\",\"getArray\",\"elem\",\"removeAt\",\"prev\",\"setAt\",\"opt_except\",\"MapEvent_extends\",\"ol_MapEvent\",\"MapEvent\",\"opt_frameState\",\"frameState\",\"MapBrowserEvent_extends\",\"ol_MapBrowserEvent\",\"MapBrowserEvent\",\"browserEvent\",\"opt_dragging\",\"originalEvent\",\"pixel\",\"getEventPixel\",\"coordinate\",\"getCoordinateFromPixel\",\"dragging\",\"ua\",\"navigator\",\"userAgent\",\"toLowerCase\",\"FIREFOX\",\"SAFARI\",\"WEBKIT\",\"MAC\",\"DEVICE_PIXEL_RATIO\",\"devicePixelRatio\",\"TOUCH\",\"POINTER\",\"MSPOINTER\",\"MapBrowserEventType\",\"SINGLECLICK\",\"POINTERDRAG\",\"POINTERMOVE\",\"POINTERDOWN\",\"POINTERUP\",\"POINTEROVER\",\"POINTEROUT\",\"POINTERENTER\",\"POINTERLEAVE\",\"POINTERCANCEL\",\"MapBrowserPointerEvent_extends\",\"ol_MapBrowserPointerEvent\",\"MapBrowserPointerEvent\",\"pointerEvent\",\"pointer_EventType\",\"pointer_EventSource\",\"EventSource\",\"dispatcher\",\"mapping\",\"mapping_\",\"getEvents\",\"getHandlerForEvent\",\"MouseSource_extends\",\"POINTER_ID\",\"POINTER_TYPE\",\"mousedown\",\"inEvent\",\"isEventSimulatedFromTouch_\",\"pointerMap\",\"cancel\",\"prepareEvent\",\"down\",\"mousemove\",\"move\",\"mouseup\",\"button\",\"up\",\"cleanupMouse\",\"mouseover\",\"enterOver\",\"mouseout\",\"leaveOut\",\"cloneEvent\",\"pd\",\"pointerId\",\"isPrimary\",\"pointerType\",\"pointer_MouseSource\",\"MouseSource\",\"lastTouches\",\"lts\",\"x\",\"clientX\",\"y\",\"clientY\",\"dx\",\"abs\",\"dy\",\"MsSource_extends\",\"POINTER_TYPES\",\"msPointerDown\",\"prepareEvent_\",\"msPointerMove\",\"msPointerUp\",\"cleanup\",\"msPointerOut\",\"msPointerOver\",\"msPointerCancel\",\"msLostPointerCapture\",\"makeEvent\",\"msGotPointerCapture\",\"pointer_MsSource\",\"MsSource\",\"MSPointerDown\",\"MSPointerMove\",\"MSPointerUp\",\"MSPointerOut\",\"MSPointerOver\",\"MSPointerCancel\",\"MSGotPointerCapture\",\"MSLostPointerCapture\",\"NativeSource_extends\",\"pointerDown\",\"fireNativeEvent\",\"pointerMove\",\"pointerUp\",\"pointerOut\",\"pointerOver\",\"pointerCancel\",\"lostPointerCapture\",\"gotPointerCapture\",\"pointer_NativeSource\",\"NativeSource\",\"pointerdown\",\"pointermove\",\"pointerup\",\"pointerout\",\"pointerover\",\"pointercancel\",\"gotpointercapture\",\"lostpointercapture\",\"PointerEvent_extends\",\"HAS_BUTTONS\",\"PointerEvent\",\"opt_eventDict\",\"eventDict\",\"buttons\",\"which\",\"getButtons\",\"pressure\",\"getPressure\",\"bubbles\",\"cancelable\",\"view\",\"detail\",\"screenX\",\"screenY\",\"ctrlKey\",\"altKey\",\"shiftKey\",\"metaKey\",\"relatedTarget\",\"width\",\"tiltX\",\"tiltY\",\"hwTimestamp\",\"ev\",\"MouseEvent\",\"pointer_PointerEvent\",\"numberSafeCompareFunction\",\"linearFindNearest\",\"direction\",\"reverseSubArray\",\"begin\",\"end\",\"extension\",\"equals\",\"arr1\",\"arr2\",\"len1\",\"TouchSource_extends\",\"touchstart\",\"vacuumTouches_\",\"setPrimaryTouch_\",\"changedTouches\",\"dedupSynthMouse_\",\"clickCount_\",\"processTouches_\",\"overDown_\",\"touchmove\",\"moveOverOut_\",\"touchend\",\"upOut_\",\"touchcancel\",\"cancelOut_\",\"pointer_TouchSource\",\"TouchSource\",\"mouseSource\",\"firstTouchId_\",\"resetId_\",\"dedupTimeout_\",\"isPrimaryTouch_\",\"inTouch\",\"identifier\",\"count\",\"cancelResetClickCount_\",\"removePrimaryPointer_\",\"inPointer\",\"resetClickCount_\",\"setTimeout\",\"resetClickCountHandler_\",\"clearTimeout\",\"touchToPointer_\",\"radiusX\",\"radiusY\",\"force\",\"inFunction\",\"touches\",\"pointer\",\"findTouch_\",\"touchList\",\"searchId\",\"Number\",\"out\",\"outTarget\",\"over\",\"enter\",\"outEvent\",\"leave\",\"cleanUpPointer_\",\"lt_1\",\"PointerEventHandler_extends\",\"CLONE_PROPS\",\"pointer_PointerEventHandler\",\"PointerEventHandler\",\"element_\",\"eventMap_\",\"eventSourceList_\",\"registerSources\",\"registerSource\",\"register_\",\"newEvents\",\"handler\",\"eventSource\",\"addEvents_\",\"unregister_\",\"removeEvents_\",\"eventHandler_\",\"events\",\"eventName\",\"eventCopy\",\"fireEvent\",\"contains_\",\"container\",\"contained\",\"inType\",\"wrapMouseEvent\",\"MapBrowserEventHandler_extends\",\"ol_MapBrowserEventHandler\",\"MapBrowserEventHandler\",\"moveTolerance\",\"map_\",\"clickTimeoutId_\",\"dragging_\",\"dragListenerKeys_\",\"moveTolerance_\",\"down_\",\"getViewport\",\"activePointers_\",\"trackedTouches_\",\"pointerEventHandler_\",\"documentPointerEventHandler_\",\"pointerdownListenerKey_\",\"handlePointerDown_\",\"relayedListenerKey_\",\"relayEvent_\",\"emulateClick_\",\"newEvent\",\"updateActivePointers_\",\"handlePointerUp_\",\"isMouseActionButton_\",\"handlePointerMove_\",\"isMoving_\",\"MapEventType\",\"MapProperty\",\"LAYERGROUP\",\"SIZE\",\"TARGET\",\"VIEW\",\"render_EventType\",\"TileState\",\"IDLE\",\"LOADING\",\"LOADED\",\"EMPTY\",\"ABORT\",\"assert\",\"assertion\",\"errorCode\",\"structs_PriorityQueue\",\"PriorityQueue\",\"priorityFunction\",\"keyFunction\",\"priorityFunction_\",\"keyFunction_\",\"elements_\",\"priorities_\",\"queuedElements_\",\"dequeue\",\"elements\",\"priorities\",\"siftUp_\",\"elementKey\",\"enqueue\",\"priority\",\"siftDown_\",\"getCount\",\"getLeftChildIndex_\",\"getRightChildIndex_\",\"getParentIndex_\",\"heapify_\",\"isKeyQueued\",\"isQueued\",\"startIndex\",\"lIndex\",\"rIndex\",\"smallerChildIndex\",\"parentIndex\",\"reprioritize\",\"TileQueue_extends\",\"ol_TileQueue\",\"TileQueue\",\"tilePriorityFunction\",\"tileChangeCallback\",\"getKey\",\"tileChangeCallback_\",\"tilesLoading_\",\"tilesLoadingKeys_\",\"added\",\"handleTileChange\",\"getTilesLoading\",\"tile\",\"state\",\"getState\",\"hifi\",\"tileKey\",\"loadMoreTiles\",\"maxTotalLoading\",\"maxNewLoads\",\"newLoads\",\"abortedTiles\",\"DEFAULT_MAX_ZOOM\",\"DEFAULT_TILE_SIZE\",\"clamp\",\"cosh\",\"squaredSegmentDistance\",\"x1\",\"y1\",\"x2\",\"y2\",\"math_squaredDistance\",\"toRadians\",\"angleInDegrees\",\"PI\",\"modulo\",\"lerp\",\"none\",\"center\",\"Corner\",\"BOTTOM_LEFT\",\"BOTTOM_RIGHT\",\"TOP_LEFT\",\"TOP_RIGHT\",\"Relationship\",\"UNKNOWN\",\"INTERSECTING\",\"ABOVE\",\"RIGHT\",\"BELOW\",\"LEFT\",\"boundingExtent\",\"coordinates\",\"extent\",\"createEmpty\",\"extendCoordinate\",\"buffer\",\"opt_extent\",\"clone\",\"closestSquaredDistanceXY\",\"containsCoordinate\",\"containsXY\",\"containsExtent\",\"extent1\",\"extent2\",\"coordinateRelationship\",\"relationship\",\"createOrUpdate\",\"createOrUpdateEmpty\",\"createOrUpdateFromFlatCoordinates\",\"flatCoordinates\",\"offset\",\"stride\",\"extendFlatCoordinates\",\"extent_equals\",\"extent_extend\",\"extendCoordinates\",\"extendXY\",\"getArea\",\"extent_isEmpty\",\"getWidth\",\"getHeight\",\"getBottomLeft\",\"getBottomRight\",\"getCenter\",\"getCorner\",\"corner\",\"getTopLeft\",\"getTopRight\",\"getForViewAndSize\",\"resolution\",\"rotation\",\"size\",\"cosRotation\",\"cos\",\"sinRotation\",\"sin\",\"xCos\",\"xSin\",\"yCos\",\"ySin\",\"x0\",\"x3\",\"y0\",\"y3\",\"getIntersection\",\"intersection\",\"extent_intersects\",\"getViewportClampedResolution\",\"maxExtent\",\"viewportSize\",\"xResolution\",\"yResolution\",\"getSmoothClampedResolution\",\"maxResolution\",\"minResolution\",\"createMinMaxResolution\",\"opt_smooth\",\"opt_maxExtent\",\"opt_isMoving\",\"cappedMaxRes\",\"disable\",\"rotationconstraint_none\",\"ViewHint\",\"ViewProperty\",\"coordinate_equals\",\"coordinate1\",\"coordinate2\",\"rotate\",\"angle\",\"cosAngle\",\"sinAngle\",\"easeIn\",\"easeOut\",\"inAndOut\",\"linear\",\"GeometryType\",\"POINT\",\"LINE_STRING\",\"LINEAR_RING\",\"POLYGON\",\"MULTI_POINT\",\"MULTI_LINE_STRING\",\"MULTI_POLYGON\",\"GEOMETRY_COLLECTION\",\"CIRCLE\",\"GeometryLayout\",\"XY\",\"XYZ\",\"XYM\",\"XYZM\",\"transform2D\",\"opt_dest\",\"dest\",\"DEFAULT_RADIUS\",\"getDistance\",\"c1\",\"c2\",\"opt_radius\",\"radius\",\"lat1\",\"lat2\",\"deltaLatBy2\",\"deltaLonBy2\",\"atan2\",\"Units\",\"DEGREES\",\"FEET\",\"METERS\",\"PIXELS\",\"TILE_PIXELS\",\"USFEET\",\"METERS_PER_UNIT\",\"proj_Units\",\"proj_Projection\",\"Projection\",\"code_\",\"units_\",\"extent_\",\"worldExtent_\",\"worldExtent\",\"axisOrientation_\",\"axisOrientation\",\"global_\",\"global\",\"canWrapX_\",\"getPointResolutionFunc_\",\"getPointResolution\",\"defaultTileGrid_\",\"metersPerUnit_\",\"metersPerUnit\",\"canWrapX\",\"getCode\",\"getExtent\",\"getUnits\",\"getMetersPerUnit\",\"getWorldExtent\",\"getAxisOrientation\",\"isGlobal\",\"setGlobal\",\"getDefaultTileGrid\",\"setDefaultTileGrid\",\"tileGrid\",\"setExtent\",\"setWorldExtent\",\"setGetPointResolution\",\"func\",\"getPointResolutionFunc\",\"epsg3857_extends\",\"RADIUS\",\"HALF_SIZE\",\"EXTENT\",\"WORLD_EXTENT\",\"epsg3857_EPSG3857Projection\",\"EPSG3857Projection\",\"units\",\"point\",\"PROJECTIONS\",\"fromEPSG4326\",\"input\",\"opt_output\",\"opt_dimension\",\"dimension\",\"halfSize\",\"tan\",\"toEPSG4326\",\"atan\",\"epsg4326_extends\",\"epsg4326_EXTENT\",\"epsg4326_METERS_PER_UNIT\",\"epsg4326_EPSG4326Projection\",\"EPSG4326Projection\",\"opt_axisOrientation\",\"epsg4326_PROJECTIONS\",\"projections_cache\",\"projections2\",\"forwardTransform\",\"inverseTransform\",\"transforms\",\"transforms_add\",\"destination\",\"transformFn\",\"sourceCode\",\"destinationCode\",\"cloneTransform\",\"identityTransform\",\"addProjection\",\"projection\",\"projections_add\",\"proj_get\",\"projectionLike\",\"opt_units\",\"pointResolution\",\"toEPSG4326_1\",\"getTransformFromProjections\",\"vertices\",\"addEquivalentProjections\",\"projections\",\"addProjections\",\"createProjection\",\"defaultCode\",\"equivalent\",\"projection1\",\"projection2\",\"equalUnits\",\"sourceProjection\",\"destinationProjection\",\"transformFunc\",\"transforms_get\",\"getTransform\",\"proj_transform\",\"compose\",\"dx1\",\"dy1\",\"sx\",\"sy\",\"dx2\",\"dy2\",\"makeInverse\",\"mat\",\"det\",\"transform_toString\",\"Geometry_extends\",\"tmpTransform\",\"geom_Geometry\",\"Geometry\",\"extentRevision_\",\"simplifiedGeometryCache\",\"simplifiedGeometryMaxMinSquaredTolerance\",\"simplifiedGeometryRevision\",\"closestPointXY\",\"closestPoint\",\"minSquaredDistance\",\"coord\",\"getClosestPoint\",\"opt_closestPoint\",\"NaN\",\"intersectsCoordinate\",\"computeExtent\",\"returnOrUpdate\",\"anchor\",\"scale\",\"opt_sy\",\"opt_anchor\",\"simplify\",\"tolerance\",\"getSimplifiedGeometry\",\"squaredTolerance\",\"getType\",\"applyTransform\",\"intersectsExtent\",\"translate\",\"deltaX\",\"deltaY\",\"sourceProj\",\"inCoordinates\",\"outCoordinates\",\"pixelExtent\",\"projectedExtent\",\"SimpleGeometry_extends\",\"getStrideForLayout\",\"layout\",\"geom_SimpleGeometry\",\"SimpleGeometry\",\"getCoordinates\",\"getFirstCoordinate\",\"getFlatCoordinates\",\"getLastCoordinate\",\"getLayout\",\"simplifiedGeometry\",\"getSimplifiedGeometryInternal\",\"getStride\",\"setFlatCoordinates\",\"setCoordinates\",\"opt_layout\",\"setLayout\",\"nesting\",\"getLayoutForStride\",\"anchorX\",\"anchorY\",\"transform_rotate\",\"transform_scale\",\"area_linearRing\",\"twiceArea\",\"area_linearRings\",\"ends\",\"assignClosest\",\"offset1\",\"offset2\",\"maxSquaredDelta\",\"squaredDelta\",\"arrayMaxSquaredDelta\",\"assignClosestPoint\",\"maxDelta\",\"isRing\",\"opt_tmpPoint\",\"squaredDistance\",\"tmpPoint\",\"assignClosestArrayPoint\",\"deflateCoordinates\",\"deflateCoordinatesArray\",\"coordinatess\",\"opt_ends\",\"jj\",\"inflateCoordinates\",\"opt_coordinates\",\"inflateCoordinatesArray\",\"opt_coordinatess\",\"inflateMultiCoordinatesArray\",\"endss\",\"opt_coordinatesss\",\"coordinatesss\",\"douglasPeucker\",\"simplifiedFlatCoordinates\",\"simplifiedOffset\",\"markers\",\"last\",\"first\",\"maxSquaredDistance\",\"squaredDistance_1\",\"douglasPeuckerArray\",\"simplifiedEnds\",\"snap\",\"round\",\"quantize\",\"quantizeArray\",\"LinearRing_extends\",\"geom_LinearRing\",\"LinearRing\",\"maxDelta_\",\"maxDeltaRevision_\",\"Point_extends\",\"geom_Point\",\"Point\",\"deflateCoordinate\",\"linearRingContainsExtent\",\"callback\",\"val\",\"forEachCorner\",\"linearRingContainsXY\",\"wn\",\"linearRingsContainsXY\",\"getInteriorPointOfArray\",\"flatCenters\",\"flatCentersOffset\",\"intersections\",\"rr\",\"pointX\",\"maxSegmentLength\",\"segmentLength\",\"isNaN\",\"ret\",\"point1\",\"point2\",\"intersectsLineString\",\"coordinatesExtent\",\"start\",\"startRel\",\"endRel\",\"startX\",\"startY\",\"endX\",\"endY\",\"slope\",\"intersectsSegment\",\"intersectsLinearRingArray\",\"intersectsLinearRing\",\"reverse_coordinates\",\"linearRingIsClockwise\",\"edge\",\"linearRingsAreOriented\",\"opt_right\",\"isClockwise\",\"orientLinearRings\",\"orientLinearRingsArray\",\"Polygon_extends\",\"Polygon_Polygon\",\"Polygon\",\"ends_\",\"flatInteriorPointRevision_\",\"flatInteriorPoint_\",\"orientedRevision_\",\"orientedFlatCoordinates_\",\"appendLinearRing\",\"linearRing\",\"getOrientedFlatCoordinates\",\"getEnds\",\"getFlatInteriorPoint\",\"flatCenter\",\"getInteriorPoint\",\"getLinearRingCount\",\"getLinearRing\",\"getLinearRings\",\"linearRings\",\"geom_Polygon\",\"fromExtent\",\"View_extends\",\"DEFAULT_MIN_ZOOM\",\"animationCallback\",\"returnValue\",\"isNoopAnimation\",\"animation\",\"sourceCenter\",\"targetCenter\",\"sourceResolution\",\"targetResolution\",\"sourceRotation\",\"targetRotation\",\"ol_View\",\"View\",\"hints_\",\"animations_\",\"updateAnimationKey_\",\"projection_\",\"targetCenter_\",\"targetResolution_\",\"targetRotation_\",\"applyOptions_\",\"resolutionConstraintInfo\",\"resolutionConstraint\",\"minZoom\",\"maxZoom\",\"zoomFactor\",\"multiWorld\",\"smooth\",\"smoothResolutionConstraint\",\"resolutions\",\"constrainResolution\",\"capped\",\"createSnapToResolutions\",\"constrainOnlyCenter\",\"defaultMaxResolution\",\"defaultMinResolution\",\"power\",\"opt_minResolution\",\"zoomLevel\",\"createSnapToPower\",\"extent_1\",\"constraint\",\"createResolutionConstraint\",\"maxResolution_\",\"minResolution_\",\"zoomFactor_\",\"resolutions_\",\"minZoom_\",\"centerConstraint\",\"onlyCenter\",\"smoothExtentConstraint\",\"viewWidth\",\"viewHeight\",\"ratio\",\"createCenterConstraint\",\"rotationConstraint\",\"enableRotation\",\"constrainRotation\",\"opt_tolerance\",\"theta\",\"createRotationConstraint\",\"constraints_\",\"setRotation\",\"setCenter\",\"setResolution\",\"zoom\",\"setZoom\",\"resolveConstraints\",\"options_\",\"getUpdatedOptions_\",\"newOptions\",\"getResolution\",\"getZoom\",\"getRotation\",\"animate\",\"var_args\",\"isDef\",\"getAnimating\",\"animate_\",\"animationCount\",\"Date\",\"now\",\"series\",\"complete\",\"duration\",\"easing\",\"getResolutionForZoom\",\"delta\",\"setHint\",\"updateAnimations_\",\"getInteracting\",\"cancelAnimations\",\"cancelAnimationFrame\",\"more\",\"seriesComplete\",\"elapsed\",\"fraction\",\"progress\",\"getSizeFromViewport_\",\"constrainedResolution\",\"calculateCenterZoom\",\"applyTargetState_\",\"constrainedRotation\",\"calculateCenterRotate\",\"requestAnimationFrame\",\"currentCenter\",\"currentResolution\",\"opt_rotation\",\"selector\",\"metrics\",\"getComputedStyle\",\"parseInt\",\"w\",\"h\",\"getConstraints\",\"getHints\",\"opt_hints\",\"calculateExtent\",\"opt_size\",\"getMaxResolution\",\"getMinResolution\",\"getMaxZoom\",\"getZoomForResolution\",\"setMaxZoom\",\"getMinZoom\",\"setMinZoom\",\"setConstrainResolution\",\"enabled\",\"getProjection\",\"getResolutions\",\"getResolutionForExtent\",\"getResolutionForValueFunction\",\"opt_power\",\"getValueForResolutionFunction\",\"pixelRatio\",\"nearest\",\"baseLevel\",\"fit\",\"geometryOrExtent\",\"geometry\",\"padding\",\"coords\",\"minRotX\",\"minRotY\",\"maxRotX\",\"maxRotY\",\"rotX\",\"rotY\",\"getConstrainedResolution\",\"centerRotX\",\"centerRotY\",\"getConstrainedCenter\",\"centerOn\",\"position\",\"centerX\",\"centerY\",\"adjustCenter\",\"deltaCoordinates\",\"adjustResolution\",\"isMoving\",\"newResolution\",\"adjustZoom\",\"adjustRotation\",\"newRotation\",\"hint\",\"opt_doNotCancelAnims\",\"opt_forceMoving\",\"newCenter\",\"opt_duration\",\"opt_resolutionDirection\",\"beginInteraction\",\"endInteraction\",\"opt_targetResolution\",\"getConstrainedZoom\",\"targetZoom\",\"opt_direction\",\"targetRes\",\"createCanvasContext2D\",\"opt_width\",\"opt_height\",\"canvas\",\"getContext\",\"replaceNode\",\"oldNode\",\"replaceChild\",\"removeNode\",\"layer_Property\",\"OPACITY\",\"VISIBLE\",\"Z_INDEX\",\"MAX_RESOLUTION\",\"MIN_RESOLUTION\",\"SOURCE\",\"Base_extends\",\"Base\",\"BaseLayer\",\"properties\",\"opacity\",\"visible\",\"zIndex\",\"className_\",\"className\",\"state_\",\"getClassName\",\"getLayerState\",\"layer\",\"managed\",\"getOpacity\",\"sourceState\",\"getSourceState\",\"getVisible\",\"getZIndex\",\"getLayersArray\",\"getLayerStatesArray\",\"opt_states\",\"setMaxResolution\",\"setMinResolution\",\"setOpacity\",\"setVisible\",\"setZIndex\",\"zindex\",\"State\",\"UNDEFINED\",\"READY\",\"Group_extends\",\"Group_Property\",\"LAYERS\",\"Group\",\"LayerGroup\",\"baseOptions\",\"layers\",\"layersListenerKeys_\",\"listenerKeys_\",\"handleLayersChanged_\",\"setLayers\",\"handleLayerChange_\",\"getLayers\",\"handleLayersAdd_\",\"handleLayersRemove_\",\"layersArray\",\"collectionEvent\",\"states\",\"pos\",\"ownLayerState\",\"layerState\",\"toSize\",\"PluggableMap_extends\",\"ol_PluggableMap\",\"PluggableMap\",\"optionsInternal\",\"keyboardEventTarget\",\"getElementById\",\"controls\",\"interactions\",\"overlays\",\"layerGroup\",\"createOptionsInternal\",\"maxTilesLoading_\",\"maxTilesLoading\",\"pixelRatio_\",\"animationDelayKey_\",\"animationDelay_\",\"renderFrame_\",\"coordinateToPixelTransform_\",\"pixelToCoordinateTransform_\",\"frameIndex_\",\"frameState_\",\"previousExtent_\",\"viewPropertyListenerKey_\",\"viewChangeListenerKey_\",\"layerGroupPropertyListenerKeys_\",\"viewport_\",\"overflow\",\"msTouchAction\",\"touchAction\",\"overlayContainer_\",\"overlayContainerStopEvent_\",\"mapBrowserEventHandler_\",\"handleMapBrowserEvent\",\"keyboardEventTarget_\",\"keyHandlerKeys_\",\"handleBrowserEvent\",\"overlays_\",\"overlayIdIndex_\",\"renderer_\",\"createRenderer\",\"handleResize_\",\"focus_\",\"postRenderFunctions_\",\"tileQueue_\",\"getTilePriority\",\"handleTileChange_\",\"skippedFeatureUids_\",\"handleLayerGroupChanged_\",\"handleViewChanged_\",\"handleSizeChanged_\",\"handleTargetChanged_\",\"control\",\"setMap\",\"interaction\",\"addOverlayInternal_\",\"getId\",\"addControl\",\"getControls\",\"addInteraction\",\"getInteractions\",\"addLayer\",\"getLayerGroup\",\"addOverlay\",\"overlay\",\"getOverlays\",\"setTarget\",\"forEachFeatureAtPixel\",\"hitTolerance\",\"layerFilter\",\"forEachFeatureAtCoordinate\",\"getFeaturesAtPixel\",\"features\",\"feature\",\"forEachLayerAtPixel\",\"hasFeatureAtPixel\",\"hasFeatureAtCoordinate\",\"getEventCoordinate\",\"viewportPosition\",\"getBoundingClientRect\",\"eventPosition\",\"top\",\"getTarget\",\"getTargetElement\",\"pixelToCoordinateTransform\",\"getOverlayById\",\"getPixelFromCoordinate\",\"coordinateToPixelTransform\",\"getRenderer\",\"getSize\",\"getView\",\"getOverlayContainer\",\"getOverlayContainerStopEvent\",\"tileSourceKey\",\"tileCenter\",\"tileResolution\",\"wantedTiles\",\"focus\",\"mapBrowserEvent\",\"HTMLElement\",\"parentElement\",\"interactionsArray\",\"getActive\",\"handleEvent\",\"handlePostRender\",\"tileQueue\",\"hints\",\"viewHints\",\"lowOnFrameBudget\",\"time\",\"getLoading\",\"getSource\",\"loading\",\"dispatchRenderEvent\",\"postRenderFunctions\",\"render\",\"targetElement\",\"updateSize\",\"removeLayerRenderers\",\"handleViewPropertyChanged_\",\"isRendered\",\"renderSync\",\"removeControl\",\"removeInteraction\",\"removeLayer\",\"removeOverlay\",\"viewState\",\"previousFrameState\",\"hasArea\",\"layerStatesArray\",\"skippedFeatureUids\",\"usedTiles\",\"renderFrame\",\"setLayerGroup\",\"setSize\",\"setView\",\"skipFeature\",\"computedStyle\",\"offsetWidth\",\"parseFloat\",\"offsetHeight\",\"unskipFeature\",\"cache\",\"Control_extends\",\"control_Control\",\"Control\",\"target_\",\"listenerKeys\",\"getMap\",\"CLASS_HIDDEN\",\"CLASS_UNSELECTABLE\",\"CLASS_CONTROL\",\"CLASS_COLLAPSED\",\"getFontFamilies\",\"font\",\"family\",\"fontFamily\",\"Layer_extends\",\"visibleAtResolution\",\"layer_Layer\",\"Layer\",\"mapPrecomposeKey_\",\"mapRenderKey_\",\"sourceChangeKey_\",\"handleSourcePropertyChange_\",\"setSource\",\"handleSourceChange_\",\"layerRenderer\",\"prepareFrame\",\"renderEvent\",\"Attribution_extends\",\"Attribution_render\",\"mapEvent\",\"updateElement_\",\"control_Attribution\",\"Attribution\",\"ulElement_\",\"collapsed_\",\"collapsed\",\"overrideCollapsible_\",\"collapsible\",\"collapsible_\",\"tipLabel\",\"collapseLabel\",\"collapseLabel_\",\"textContent\",\"label\",\"label_\",\"activeLabel\",\"title\",\"handleClick_\",\"cssClasses\",\"renderedAttributions_\",\"renderedVisible_\",\"collectSourceAttributions_\",\"lookup\",\"visibleAttributions\",\"attributionGetter\",\"getAttributions\",\"attributions\",\"getAttributionsCollapsible\",\"setCollapsible\",\"display\",\"lastChild\",\"removeChildren\",\"innerHTML\",\"handleToggle_\",\"classList\",\"toggle\",\"getCollapsible\",\"setCollapsed\",\"getCollapsed\",\"Rotate_extends\",\"Rotate_render\",\"rotation_\",\"autoHide_\",\"add\",\"control_Rotate\",\"Rotate\",\"callResetNorth_\",\"resetNorth\",\"duration_\",\"autoHide\",\"resetNorth_\",\"Zoom_extends\",\"control_Zoom\",\"Zoom\",\"zoomInLabel\",\"zoomOutLabel\",\"zoomInTipLabel\",\"zoomOutTipLabel\",\"inElement\",\"outElement\",\"zoomByDelta_\",\"currentZoom\",\"newZoom\",\"ol_Kinetic\",\"Kinetic\",\"decay\",\"minVelocity\",\"delay\",\"decay_\",\"minVelocity_\",\"delay_\",\"points_\",\"angle_\",\"initialVelocity_\",\"lastIndex\",\"firstIndex\",\"getAngle\",\"interaction_Property\",\"Interaction_extends\",\"zoomByDelta\",\"interaction_Interaction\",\"Interaction\",\"setActive\",\"active\",\"DoubleClickZoom_extends\",\"stopEvent\",\"delta_\",\"interaction_DoubleClickZoom\",\"DoubleClickZoom\",\"altShiftKeysOnly\",\"condition_focus\",\"activeElement\",\"always\",\"mouseActionButton\",\"noModifierKeys\",\"shiftKeyOnly\",\"targetNotEditable\",\"tagName\",\"mouseOnly\",\"Pointer_extends\",\"Pointer_centroid\",\"pointerEvents\",\"Pointer\",\"PointerInteraction\",\"handleDownEvent\",\"handleDragEvent\",\"handleMoveEvent\",\"handleUpEvent\",\"stopDown\",\"handlingDownUpSequence\",\"trackedPointers_\",\"targetPointers\",\"updateTrackedPointers_\",\"handledUp\",\"handled\",\"isPointerDraggingEvent\",\"event_1\",\"DragPan_extends\",\"interaction_DragPan\",\"DragPan\",\"kinetic_\",\"kinetic\",\"lastCentroid\",\"lastPointersCount_\",\"panning_\",\"condition_\",\"condition\",\"noKinetic_\",\"centroid\",\"distance\",\"centerpx\",\"DragRotate_extends\",\"interaction_DragRotate\",\"DragRotate\",\"lastAngle_\",\"Box_extends\",\"Box\",\"RenderBox\",\"geometry_\",\"startPixel_\",\"endPixel_\",\"render_\",\"startPixel\",\"endPixel\",\"setPixels\",\"createOrUpdateGeometry\",\"getGeometry\",\"DragBox_extends\",\"DragBoxEventType\",\"DragBoxEvent\",\"interaction_DragBox\",\"DragBox\",\"box_\",\"minArea_\",\"onBoxEnd_\",\"onBoxEnd\",\"boxEndCondition_\",\"boxEndCondition\",\"defaultBoxEndCondition\",\"DragZoom_extends\",\"out_\",\"mapExtent\",\"boxPixelExtent\",\"scaleFromCenter\",\"interaction_DragZoom\",\"DragZoom\",\"KeyCode\",\"UP\",\"DOWN\",\"KeyboardPan_extends\",\"KeyboardPan_handleEvent\",\"keyCode\",\"mapUnitsDelta\",\"pixelDelta_\",\"pan\",\"interaction_KeyboardPan\",\"KeyboardPan\",\"defaultCondition_\",\"pixelDelta\",\"KeyboardZoom_extends\",\"KeyboardZoom_handleEvent\",\"charCode\",\"charCodeAt\",\"interaction_KeyboardZoom\",\"KeyboardZoom\",\"MouseWheelZoom_extends\",\"Mode\",\"interaction_MouseWheelZoom\",\"MouseWheelZoom\",\"totalDelta_\",\"lastDelta_\",\"timeout_\",\"timeout\",\"useAnchor_\",\"useAnchor\",\"lastAnchor_\",\"startTime_\",\"timeoutId_\",\"mode_\",\"trackpadEventGap_\",\"trackpadTimeoutId_\",\"trackpadDeltaPerZoom_\",\"endInteraction_\",\"sign\",\"wheelEvent\",\"deltaMode\",\"WheelEvent\",\"DOM_DELTA_PIXEL\",\"DOM_DELTA_LINE\",\"wheelDeltaY\",\"timeLeft\",\"handleWheelZoom_\",\"setMouseAnchor\",\"PinchRotate_extends\",\"interaction_PinchRotate\",\"PinchRotate\",\"pointerOptions\",\"anchor_\",\"rotating_\",\"rotationDelta_\",\"threshold_\",\"threshold\",\"rotationDelta\",\"touch0\",\"touch1\",\"PinchZoom_extends\",\"interaction_PinchZoom\",\"PinchZoom\",\"lastDistance_\",\"lastScaleDelta_\",\"scaleDelta\",\"Event_extends\",\"render_Event\",\"RenderEvent\",\"opt_inversePixelTransform\",\"opt_context\",\"opt_glContext\",\"inversePixelTransform\",\"context\",\"glContext\",\"HEX_COLOR_RE_\",\"NAMED_COLOR_RE_\",\"cacheSize\",\"normalize\",\"color\",\"color_toString\",\"g\",\"IconImageCache\",\"cache_\",\"cacheSize_\",\"maxCacheSize_\",\"canExpireCache\",\"expire\",\"iconImage\",\"src\",\"crossOrigin\",\"maxCacheSize\",\"asString\",\"shared\",\"Map_extends\",\"expireIconCache\",\"renderer_Map\",\"MapRenderer\",\"layerRenderers_\",\"layerRendererListeners_\",\"calculateMatrices2D\",\"removeLayerRendererByKey_\",\"thisArg\",\"thisArg2\",\"viewResolution\",\"translatedCoordinate\",\"projectionExtent\",\"worldWidth\",\"layerStates\",\"getLayerRenderer\",\"callback_1\",\"getWrapX\",\"layerKey\",\"renderer\",\"handleLayerRendererChange_\",\"getLayerRenderers\",\"scheduleExpireIconCache\",\"scheduleRemoveUnusedLayerRenderers\",\"layerStatesMap\",\"reduce\",\"acc\",\"_loop_1\",\"this_1\",\"Composite_extends\",\"Composite\",\"CompositeMapRenderer\",\"children_\",\"oldChildren\",\"oldChild\",\"newChild\",\"replaceChildren\",\"getDataAtPixel\",\"ol_Map_extends\",\"ol_Map\",\"Map\",\"zoomOptions\",\"rotateOptions\",\"attribution\",\"attributionOptions\",\"defaults\",\"altShiftDragRotate\",\"doubleClickZoom\",\"zoomDelta\",\"zoomDuration\",\"dragPan\",\"onFocusOnly\",\"pinchRotate\",\"pinchZoom\",\"keyboard\",\"mouseWheelZoom\",\"shiftDragZoom\",\"interaction_defaults\",\"TileProperty\",\"BaseTile_extends\",\"BaseTile\",\"BaseTileLayer\",\"preload\",\"useInterimTilesOnError\",\"setPreload\",\"setUseInterimTilesOnError\",\"getPreload\",\"getUseInterimTilesOnError\",\"TileRange\",\"tileCoord\",\"containsTileRange\",\"tileRange\",\"TileRange_createOrUpdate\",\"ol_TileRange\",\"LRUCache_extends\",\"structs_LRUCache\",\"LRUCache\",\"opt_highWaterMark\",\"highWaterMark\",\"count_\",\"entries_\",\"oldest_\",\"newest_\",\"containsKey\",\"entry\",\"value_\",\"key_\",\"newer\",\"older\",\"peekLast\",\"peekLastKey\",\"peekFirstKey\",\"LabelCache_extends\",\"LabelCache_LabelCache\",\"LabelCache\",\"consumers\",\"consumer\",\"consumerId\",\"prune\",\"outer\",\"release\",\"defaultLineDash\",\"defaultPadding\",\"labelCache\",\"checkedFonts\",\"measureContext\",\"textHeights\",\"checkFont\",\"interval\",\"referenceWidth\",\"retries\",\"checked\",\"referenceFonts\",\"text\",\"isAvailable\",\"getMeasureContext\",\"weight\",\"fontWeight\",\"available\",\"referenceFont\",\"measureText\",\"check\",\"done\",\"clearInterval\",\"fontSpec\",\"fontFamilies\",\"setInterval\",\"div\",\"heights\",\"measureTextHeight\",\"body\",\"measureTextWidth\",\"canvas_measureAndCacheTextWidth\",\"rotateAtOffset\",\"offsetX\",\"offsetY\",\"resetTransform\",\"drawImage\",\"image\",\"originX\",\"originY\",\"alpha\",\"globalAlpha\",\"setTransform\",\"ImageState\",\"renderer_Layer_extends\",\"renderer_Layer\",\"LayerRenderer\",\"layer_\",\"loadedTileCallback\",\"tiles\",\"createLoadedTileFinder\",\"forEachLoadedTile\",\"getLayer\",\"handleImageChange_\",\"renderIfReadyAndVisible\",\"loadImage\",\"imageState\",\"canvas_Layer_extends\",\"canvas_Layer\",\"CanvasLayerRenderer\",\"renderedResolution\",\"tempTransform_\",\"pixelTransform_\",\"inversePixelTransform_\",\"transformOrigin\",\"clip\",\"halfWidth\",\"halfHeight\",\"topLeft\",\"topRight\",\"bottomRight\",\"bottomLeft\",\"save\",\"beginPath\",\"moveTo\",\"lineTo\",\"clipUnrotated\",\"inverted\",\"dispatchRenderEvent_\",\"preRender\",\"postRender\",\"getRenderTransform\",\"renderPixel\",\"getImageData\",\"err\",\"Uint8Array\",\"TileLayer_extends\",\"TileLayer_CanvasTileLayerRenderer\",\"CanvasTileLayerRenderer\",\"tileLayer\",\"extentChanged\",\"renderedExtent_\",\"renderedRevision\",\"renderedTiles\",\"newTiles_\",\"tmpExtent\",\"tmpTileRange_\",\"zDirection\",\"isDrawableTile\",\"tileState\",\"getTile\",\"setState\",\"getInterimTile\",\"viewCenter\",\"tileSource\",\"sourceRevision\",\"getTileGridForProjection\",\"getZForResolution\",\"tilePixelRatio\",\"getTilePixelRatio\",\"canvasExtent\",\"getTileRangeForExtentAndZ\",\"tilesToDrawByZ\",\"findLoadedTiles\",\"tmpTileRange\",\"uid\",\"inTransition\",\"getAlpha\",\"childTileRange\",\"getTileCoordChildTileRange\",\"covered\",\"forEachTileCoordParentTileRange\",\"canvasScale\",\"clearRect\",\"zs\",\"currentZ\",\"currentTilePixelSize\",\"getTilePixelSize\",\"currentScale\",\"dx_1\",\"dy_1\",\"originTileCoord\",\"getTileCoordForCoordAndZ\",\"originTileExtent\",\"getTileCoordExtent\",\"origin_1\",\"tileGutter\",\"getGutterForProjection\",\"tilesToDraw\",\"tileCoordKey\",\"floatX\",\"nextX\",\"floatY\",\"nextY\",\"drawTileImage\",\"updateUsedTiles\",\"manageTilePyramid\",\"updateCacheSize_\",\"scheduleExpireCache\",\"restore\",\"canvasTransform\",\"gutter\",\"transition\",\"getTileImage\",\"getOpaque\",\"alphaChanged\",\"endTransition\",\"getImage\",\"postRenderFunction\",\"expireCache\",\"tileCache\",\"opt_tileCallback\",\"getTileCoordCenter\",\"useTile\",\"canvas_TileLayer\",\"Tile_extends\",\"layer_Tile\",\"TileLayer\",\"asColorLike\",\"style_Image\",\"ImageStyle\",\"opacity_\",\"rotateWithView_\",\"rotateWithView\",\"scale_\",\"getScale\",\"getRotateWithView\",\"getAnchor\",\"getHitDetectionImage\",\"getImageState\",\"getImageSize\",\"getHitDetectionImageSize\",\"getOrigin\",\"setRotateWithView\",\"setScale\",\"listenImageChange\",\"unlistenImageChange\",\"RegularShape_extends\",\"style_RegularShape\",\"RegularShape\",\"canvas_\",\"hitDetectionCanvas_\",\"fill_\",\"fill\",\"origin_\",\"points\",\"radius_\",\"radius1\",\"radius2_\",\"radius2\",\"stroke_\",\"stroke\",\"size_\",\"imageSize_\",\"hitDetectionImageSize_\",\"getFill\",\"getPoints\",\"getRadius\",\"getRadius2\",\"getStroke\",\"strokeStyle\",\"lineCap\",\"lineJoin\",\"miterLimit\",\"lineDash\",\"lineDashOffset\",\"strokeWidth\",\"getColor\",\"getLineDash\",\"getLineDashOffset\",\"getLineJoin\",\"getLineCap\",\"getMiterLimit\",\"renderOptions\",\"imageSize\",\"draw_\",\"createHitDetectionCanvas_\",\"angle0\",\"radiusC\",\"arc\",\"fillStyle\",\"lineWidth\",\"setLineDash\",\"closePath\",\"drawHitDetectionCanvas_\",\"Circle_extends\",\"Circle\",\"CircleStyle\",\"setRadius\",\"style_Fill\",\"Fill\",\"color_\",\"setColor\",\"style_Stroke\",\"Stroke\",\"lineCap_\",\"lineDash_\",\"lineDashOffset_\",\"lineJoin_\",\"miterLimit_\",\"width_\",\"setLineCap\",\"setLineDashOffset\",\"setLineJoin\",\"setMiterLimit\",\"setWidth\",\"Style\",\"geometryFunction_\",\"defaultGeometryFunction\",\"setGeometry\",\"image_\",\"text_\",\"zIndex_\",\"getText\",\"setRenderer\",\"getGeometryFunction\",\"setFill\",\"setImage\",\"setStroke\",\"setText\",\"defaultStyles\",\"createDefaultStyle\",\"style_Style\",\"BaseVector_extends\",\"BaseVector_Property\",\"BaseVector\",\"BaseVectorLayer\",\"renderBuffer\",\"updateWhileAnimating\",\"updateWhileInteracting\",\"declutter_\",\"declutter\",\"renderBuffer_\",\"style_\",\"styleFunction_\",\"setStyle\",\"updateWhileAnimating_\",\"updateWhileInteracting_\",\"getDeclutter\",\"getRenderBuffer\",\"getRenderOrder\",\"getStyle\",\"getStyleFunction\",\"getUpdateWhileAnimating\",\"getUpdateWhileInteracting\",\"setRenderOrder\",\"renderOrder\",\"styleFunction\",\"styles_1\",\"toFunction\",\"render_VectorContext\",\"VectorContext\",\"drawCustom\",\"drawGeometry\",\"drawCircle\",\"circleGeometry\",\"drawFeature\",\"drawGeometryCollection\",\"geometryCollectionGeometry\",\"drawLineString\",\"lineStringGeometry\",\"drawMultiLineString\",\"multiLineStringGeometry\",\"drawMultiPoint\",\"multiPointGeometry\",\"drawMultiPolygon\",\"multiPolygonGeometry\",\"drawPoint\",\"pointGeometry\",\"drawPolygon\",\"polygonGeometry\",\"drawText\",\"setFillStrokeStyle\",\"setImageStyle\",\"imageStyle\",\"opt_declutterGroup\",\"setTextStyle\",\"textStyle\",\"Instruction\",\"BEGIN_GEOMETRY\",\"BEGIN_PATH\",\"CLOSE_PATH\",\"CUSTOM\",\"DRAW_CHARS\",\"DRAW_IMAGE\",\"END_GEOMETRY\",\"FILL\",\"MOVE_TO_LINE_TO\",\"SET_FILL_STYLE\",\"SET_STROKE_STYLE\",\"STROKE\",\"Instruction_fillInstruction\",\"Instruction_strokeInstruction\",\"beginPathInstruction\",\"closePathInstruction\",\"canvas_Instruction\",\"Builder_extends\",\"Builder\",\"CanvasBuilder\",\"maxLineWidth\",\"beginGeometryInstruction1_\",\"beginGeometryInstruction2_\",\"bufferedMaxExtent_\",\"instructions\",\"tmpCoordinate_\",\"hitDetectionInstructions\",\"applyPixelRatio\",\"dashArray\",\"dash\",\"appendFlatCoordinates\",\"closed\",\"skipFirst\",\"myEnd\",\"getBufferedMaxExtent\",\"lastRel\",\"nextRel\",\"lastXCoord\",\"lastYCoord\",\"nextCoord\",\"skipped\",\"drawCustomCoordinates_\",\"builderEnds\",\"builderEnd\",\"beginGeometry\",\"builderEndss\",\"builderBegin\",\"getEndss\",\"myEnds\",\"endGeometry\",\"finish\",\"reverseHitDetectionInstructions\",\"reverse\",\"instruction\",\"fillStyleColor\",\"strokeStyleColor\",\"strokeStyleLineCap\",\"strokeStyleLineDash\",\"strokeStyleLineDashOffset\",\"strokeStyleLineJoin\",\"strokeStyleWidth\",\"strokeStyleMiterLimit\",\"createFill\",\"fillInstruction\",\"applyStroke\",\"createStroke\",\"updateFillStyle\",\"currentFillStyle\",\"updateStrokeStyle\",\"currentStrokeStyle\",\"currentLineCap\",\"currentLineDash\",\"currentLineDashOffset\",\"currentLineJoin\",\"currentLineWidth\",\"currentMiterLimit\",\"endGeometryInstruction\",\"ImageBuilder_extends\",\"ImageBuilder\",\"CanvasImageBuilder\",\"declutterGroup_\",\"hitDetectionImage_\",\"anchorX_\",\"anchorY_\",\"height_\",\"originX_\",\"originY_\",\"drawCoordinates_\",\"myBegin\",\"declutterGroup\",\"hitDetectionImage\",\"origin\",\"LineStringBuilder_extends\",\"LineStringBuilder\",\"CanvasLineStringBuilder\",\"drawFlatCoordinates_\",\"moveToLineToInstruction\",\"lastStroke\",\"PolygonBuilder_extends\",\"PolygonBuilder\",\"CanvasPolygonBuilder\",\"drawFlatCoordinatess_\",\"numEnds\",\"setFillStrokeStyles_\",\"circleInstruction\",\"matchingChunk\",\"maxAngle\",\"m12\",\"m23\",\"x12\",\"y12\",\"x23\",\"y23\",\"chunkStart\",\"chunkEnd\",\"chunkM\",\"acos\",\"TextPlacement\",\"LINE\",\"TextBuilder_extends\",\"TEXT_ALIGN\",\"middle\",\"hanging\",\"alphabetic\",\"ideographic\",\"bottom\",\"BATCH_CONSTRUCTORS\",\"Default\",\"Image\",\"LineString\",\"Text\",\"CanvasTextBuilder\",\"labels_\",\"textOffsetX_\",\"textOffsetY_\",\"textRotateWithView_\",\"textRotation_\",\"textFillState_\",\"fillStates\",\"textStrokeState_\",\"strokeStates\",\"textState_\",\"textStates\",\"textKey_\",\"fillKey_\",\"strokeKey_\",\"fillState\",\"strokeState\",\"textState\",\"geometryType\",\"placement\",\"textAlign\",\"flatOffset\",\"flatEnd\",\"oo\",\"range\",\"drawChars_\",\"geometryWidths\",\"getFlatMidpoint\",\"getFlatMidpoints\",\"interiorPoints\",\"getFlatInteriorPoints\",\"saveTextStates_\",\"backgroundFill\",\"backgroundStroke\",\"pixelRatio_1\",\"strokeKey\",\"textKey\",\"textBaseline\",\"fillKey\",\"baseline\",\"textScale\",\"textFillStyle\",\"textStrokeStyle\",\"getFont\",\"getOverflow\",\"getMaxAngle\",\"getPlacement\",\"getTextAlign\",\"getTextBaseline\",\"getBackgroundFill\",\"getBackgroundStroke\",\"getPadding\",\"textOffsetX\",\"getOffsetX\",\"textOffsetY\",\"getOffsetY\",\"textRotateWithView\",\"textRotation\",\"canvas_BuilderGroup\",\"BuilderGroup\",\"tolerance_\",\"maxExtent_\",\"resolution_\",\"buildersByZIndex_\",\"addDeclutter\",\"group\",\"builderInstructions\",\"zKey\",\"builders\",\"builderKey\",\"builderInstruction\",\"getBuilder\",\"builderType\",\"zIndexKey\",\"replays\",\"replay\",\"Constructor\",\"BuilderType\",\"DEFAULT\",\"IMAGE\",\"TEXT\",\"lineStringLength\",\"drawTextOnPath\",\"startM\",\"measureAndCacheTextWidth\",\"previousAngle\",\"numChars\",\"segmentM\",\"chunk\",\"chunkLength\",\"char\",\"charAt\",\"charLength\",\"charM\",\"segmentPos\",\"interpolate\",\"unshift\",\"Executor_extends\",\"Executor_tmpExtent\",\"Executor_tmpTransform\",\"Executor_p1\",\"Executor_p2\",\"p3\",\"p4\",\"canvas_Executor\",\"Executor\",\"overlaps\",\"declutterTree\",\"alignFill_\",\"coordinateCache_\",\"renderedTransform_\",\"pixelCoordinates_\",\"viewRotation_\",\"widths_\",\"getTextImage\",\"align\",\"lines\",\"numLines\",\"widths\",\"currentWidth\",\"measureTextWidths\",\"lineHeight\",\"renderWidth\",\"leftRight\",\"strokeText\",\"fillText\",\"replayTextBackground_\",\"p1\",\"p2\",\"strokeInstruction\",\"setStrokeStyle_\",\"replayImage_\",\"snapToPixel\",\"fillStroke\",\"boxW\",\"boxH\",\"boxX\",\"boxY\",\"strokePadding\",\"declutterArgs\",\"repeatSize\",\"renderDeclutter_\",\"groupCount\",\"box\",\"declutterData\",\"drawTextImageWithPointPlacement_\",\"execute_\",\"skippedFeaturesHash\",\"featureCallback\",\"opt_hitExtent\",\"pixelCoordinates\",\"transform1\",\"transform2\",\"dd\",\"prevX\",\"prevY\",\"roundX\",\"roundY\",\"skipFeatures\",\"pendingFill\",\"pendingStroke\",\"lastFillInstruction\",\"lastStrokeInstruction\",\"coordinateCache\",\"viewRotation\",\"batchSize\",\"labelWithAnchor\",\"widthIndex\",\"measurePixelRatio\",\"pixelRatioScale\",\"cachedWidths\",\"pathLength\",\"textLength\",\"cc\",\"chars\",\"execute\",\"executeHitDetection\",\"opt_featureCallback\",\"ExecutorGroup_extends\",\"ORDER\",\"ExecutorGroup_ExecutorGroup\",\"ExecutorGroup\",\"allInstructions\",\"opt_renderBuffer\",\"declutterTree_\",\"overlaps_\",\"executorsByZIndex_\",\"hitDetectionContext_\",\"hitDetectionTransform_\",\"createExecutors_\",\"flatClipCoords\",\"getClipCoords\",\"executors\",\"instructionByZindex\",\"hasExecutors\",\"candidates\",\"declutterReplays\",\"hitExtent\",\"contextSize\",\"declutteredFeatures\",\"mask\",\"circleArrayCache\",\"arraySize\",\"error\",\"fillCircleArrayRowToMiddle\",\"getCircleArray\",\"imageData\",\"i_1\",\"j_1\",\"result_1\",\"executor\",\"opt_builderTypes\",\"opt_declutterReplays\",\"builderTypes\",\"0\",\"canvas_ExecutorGroup\",\"SIMPLIFY_TOLERANCE\",\"GEOMETRY_RENDERERS\",\"builderGroup\",\"imageReplay\",\"textReplay\",\"lineStringReplay\",\"polygonReplay\",\"MultiPoint\",\"MultiLineString\",\"MultiPolygon\",\"GeometryCollection\",\"replayGroup\",\"geometries\",\"getGeometriesArray\",\"geometryRenderer\",\"circleReplay\",\"defaultOrder\",\"feature1\",\"feature2\",\"getSquaredTolerance\",\"getTolerance\",\"renderFeature\",\"renderGeometry\",\"getGeometries\",\"renderFeatureInternal\",\"VectorLayer_extends\",\"canvas_VectorLayer\",\"CanvasVectorLayerRenderer\",\"vectorLayer\",\"rbush_default\",\"dirty_\",\"renderedRevision_\",\"renderedResolution_\",\"renderedRenderOrder_\",\"replayGroup_\",\"replayGroupChanged\",\"handleFontsChanged_\",\"vectorSource\",\"clipExtent\",\"clipped\",\"world\",\"transform_1\",\"transform_2\",\"layer_1\",\"features_1\",\"handleStyleImageChange_\",\"animating\",\"interacting\",\"frameStateExtent\",\"vectorLayerRevision\",\"vectorLayerRenderBuffer\",\"vectorLayerRenderOrder\",\"loadFeatures\",\"dirty\",\"features_2\",\"forEachFeatureInExtent\",\"replayGroupInstructions\",\"executorGroup\",\"getOverlaps\",\"Vector_extends\",\"Vector\",\"VectorLayer\",\"FormatType\",\"ARRAY_BUFFER\",\"XML\",\"featureloader_xhr\",\"url\",\"success\",\"failure\",\"xhr\",\"XMLHttpRequest\",\"open\",\"responseType\",\"onload\",\"status\",\"responseText\",\"responseXML\",\"DOMParser\",\"parseFromString\",\"readFeatures\",\"featureProjection\",\"readProjection\",\"onerror\",\"send\",\"loadFeaturesXhr\",\"dataProjection\",\"addFeatures\",\"loadingstrategy_all\",\"Source_extends\",\"adaptAttributions\",\"attributionLike\",\"source_Source\",\"Source\",\"attributions_\",\"attributionsCollapsible_\",\"attributionsCollapsible\",\"wrapX_\",\"wrapX\",\"refresh\",\"setAttributions\",\"VectorEventType\",\"structs_RBush\",\"RBush\",\"opt_maxEntries\",\"rbush_\",\"items_\",\"extents\",\"getAll\",\"getInExtent\",\"forEach_\",\"forEachInExtent\",\"source_Vector_extends\",\"VectorSourceEvent\",\"opt_feature\",\"source_Vector\",\"VectorSource\",\"loader_\",\"format_\",\"url_\",\"loader\",\"strategy_\",\"strategy\",\"collection\",\"useSpatialIndex\",\"featuresRtree_\",\"loadedExtentsRtree_\",\"nullGeometryFeatures_\",\"idIndex_\",\"undefIdIndex_\",\"featureChangeKeys_\",\"featuresCollection_\",\"addFeaturesInternal\",\"bindFeaturesCollection_\",\"addFeature\",\"addFeatureInternal\",\"featureKey\",\"addToIndex_\",\"setupChangeEvents_\",\"handleFeatureChange_\",\"valid\",\"newFeatures\",\"geometryFeatures\",\"length_1\",\"length_2\",\"length_3\",\"modifyingCollection\",\"removeFeature\",\"opt_fast\",\"featureId\",\"removeFeatureInternal\",\"clearEvent\",\"forEachFeature\",\"forEachFeatureAtCoordinateDirect\",\"forEachFeatureIntersectingExtent\",\"getFeaturesCollection\",\"getFeatures\",\"getFeaturesAtCoordinate\",\"getFeaturesInExtent\",\"getClosestFeatureToCoordinate\",\"opt_filter\",\"closestFeature\",\"previousMinSquaredDistance\",\"minDistance\",\"getFeatureById\",\"getFormat\",\"getUrl\",\"sid\",\"removeFromIdIndex_\",\"hasFeature\",\"loadedExtentsRtree\",\"extentsToLoad\",\"extentToLoad\",\"removeLoadedExtent\",\"removed\",\"setLoader\",\"setUrl\",\"Feature_extends\",\"ol_Feature\",\"Feature\",\"opt_geometryOrProperties\",\"id_\",\"geometryName_\",\"geometryChangeKey_\",\"handleGeometryChanged_\",\"setGeometryName\",\"getGeometryName\",\"handleGeometryChange_\",\"createStyleFunction\",\"setId\",\"format_Feature\",\"FeatureFormat\",\"defaultFeatureProjection\",\"getReadOptions\",\"adaptOptions\",\"readFeature\",\"readGeometry\",\"writeFeature\",\"writeFeatures\",\"writeGeometry\",\"transformGeometryWithOptions\",\"write\",\"transformed\",\"decimals\",\"power_1\",\"JSONFeature_extends\",\"getObject\",\"parse\",\"format_JSONFeature\",\"JSONFeature\",\"readFeatureFromObject\",\"readFeaturesFromObject\",\"readGeometryFromObject\",\"readProjectionFromObject\",\"writeFeatureObject\",\"writeFeaturesObject\",\"writeGeometryObject\",\"GeometryCollection_extends\",\"cloneGeometries\",\"clonedGeometries\",\"geom_GeometryCollection\",\"opt_geometries\",\"geometries_\",\"listenGeometriesChange_\",\"unlistenGeometriesChange_\",\"geometryCollection\",\"setGeometries\",\"simplifiedGeometries\",\"simplified\",\"simplifiedGeometryCollection\",\"setGeometriesArray\",\"interpolatePoint\",\"pointY\",\"cumulativeLengths\",\"haystack\",\"needle\",\"opt_comparator\",\"cmp\",\"comparator\",\"low\",\"high\",\"found\",\"binarySearch\",\"lineStringCoordinateAtM\",\"extrapolate\",\"lo\",\"hi\",\"m0\",\"LineString_extends\",\"geom_LineString\",\"flatMidpoint_\",\"flatMidpointRevision_\",\"appendCoordinate\",\"forEachSegment\",\"getCoordinateAtM\",\"opt_extrapolate\",\"getCoordinateAt\",\"MultiLineString_extends\",\"geom_MultiLineString\",\"lineStrings\",\"lineString\",\"appendLineString\",\"opt_interpolate\",\"lineStringsCoordinateAtM\",\"getLineString\",\"getLineStrings\",\"midpoints\",\"intersectsLineStringArray\",\"MultiPoint_extends\",\"geom_MultiPoint\",\"appendPoint\",\"getPoint\",\"MultiPolygon_extends\",\"geom_MultiPolygon\",\"opt_endss\",\"endss_\",\"flatInteriorPointsRevision_\",\"flatInteriorPoints_\",\"polygons\",\"polygon\",\"appendPolygon\",\"newEndss\",\"multiArrayMaxSquaredDelta\",\"assignClosestMultiArrayPoint\",\"linearRingssContainsXY\",\"linearRingss\",\"center_linearRingss\",\"getInteriorPointsOfMultiArray\",\"getInteriorPoints\",\"linearRingssAreOriented\",\"simplifiedEndss\",\"quantizeMultiArray\",\"getPolygon\",\"prevEnds\",\"getPolygons\",\"intersectsLinearRingMultiArray\",\"deflateMultiCoordinatesArray\",\"lastEnds\",\"GeoJSON_extends\",\"readPointGeometry\",\"readLineStringGeometry\",\"readPolygonGeometry\",\"readMultiPointGeometry\",\"readMultiLineStringGeometry\",\"readMultiPolygonGeometry\",\"readGeometryCollectionGeometry\",\"geoJSON\",\"writePointGeometry\",\"writeLineStringGeometry\",\"rightHanded\",\"writePolygonGeometry\",\"writeMultiPointGeometry\",\"writeMultiLineStringGeometry\",\"writeMultiPolygonGeometry\",\"writeGeometryCollectionGeometry\",\"format_GeoJSON\",\"GeoJSON\",\"geometryName\",\"extractGeometryName_\",\"extractGeometryName\",\"geoJSONFeature\",\"geoJSONFeatures\",\"crs\",\"objects\",\"DEFAULT_FILL_COLOR\",\"style_Text\",\"font_\",\"textAlign_\",\"textBaseline_\",\"maxAngle_\",\"placement_\",\"overflow_\",\"offsetX_\",\"offsetY_\",\"backgroundFill_\",\"backgroundStroke_\",\"padding_\",\"setOverflow\",\"setFont\",\"setMaxAngle\",\"setOffsetX\",\"setOffsetY\",\"setPlacement\",\"setTextAlign\",\"setTextBaseline\",\"setBackgroundFill\",\"setBackgroundStroke\",\"setPadding\",\"ERROR_THRESHOLD\",\"ol_Tile_extends\",\"ol_Tile\",\"Tile\",\"interimTile\",\"transition_\",\"transitionStarts_\",\"refreshInterimChain\",\"getTileCoord\",\"ImageTile_extends\",\"getBlankImage\",\"ctx\",\"fillRect\",\"ol_ImageTile\",\"ImageTile\",\"tileLoadFunction\",\"crossOrigin_\",\"src_\",\"imageListenerKeys_\",\"tileLoadFunction_\",\"unlistenImage_\",\"handleImageError_\",\"handleImageLoad_\",\"naturalWidth\",\"naturalHeight\",\"tilecoord_createOrUpdate\",\"opt_tileCoord\",\"getKeyZXY\",\"tilecoord_getKey\",\"TileCache_extends\",\"ol_TileCache\",\"TileCache\",\"pruneExceptNewestZ\",\"fromKey\",\"enlargeClipPoint\",\"centroidX\",\"centroidY\",\"dX\",\"dY\",\"reproj_render\",\"sourceExtent\",\"targetExtent\",\"triangulation\",\"opt_renderEdges\",\"sourceDataExtent\",\"canvasWidthInUnits\",\"canvasHeightInUnits\",\"stitchContext\",\"stitchScale\",\"xPos\",\"yPos\",\"srcWidth\",\"srcHeight\",\"targetTopLeft\",\"getTriangles\",\"triangle\",\"u0\",\"v0\",\"u1\",\"v1\",\"u2\",\"v2\",\"sourceNumericalShiftX\",\"sourceNumericalShiftY\",\"affineCoefs\",\"maxRow\",\"maxEl\",\"absValue\",\"coef\",\"solveLinearSystem\",\"p0\",\"MAX_SUBDIVISION\",\"reproj_Triangulation\",\"Triangulation\",\"targetProj\",\"maxSourceExtent\",\"errorThreshold\",\"sourceProj_\",\"targetProj_\",\"transformInvCache\",\"transformInv\",\"transformInv_\",\"maxSourceExtent_\",\"errorThresholdSquared_\",\"triangles_\",\"wrapsXInSource_\",\"canWrapXInSource_\",\"sourceWorldWidth_\",\"targetWorldWidth_\",\"destinationTopLeft\",\"destinationTopRight\",\"destinationBottomRight\",\"destinationBottomLeft\",\"sourceTopLeft\",\"sourceTopRight\",\"sourceBottomRight\",\"sourceBottomLeft\",\"addQuad_\",\"leftBound_1\",\"newTriangle\",\"addTriangle_\",\"aSrc\",\"bSrc\",\"cSrc\",\"dSrc\",\"maxSubdivision\",\"sourceQuadExtent\",\"sourceCoverageX\",\"sourceWorldWidth\",\"wrapsX\",\"needsSubdivision\",\"isFinite\",\"centerSrc\",\"bc\",\"bcSrc\",\"da\",\"daSrc\",\"ab\",\"abSrc\",\"cd\",\"cdSrc\",\"calculateSourceExtent\",\"reproj_Tile_extends\",\"reproj_Tile\",\"ReprojTile\",\"sourceTileGrid\",\"targetTileGrid\",\"wrappedTileCoord\",\"getTileFunction\",\"opt_errorThreshold\",\"renderEdges_\",\"gutter_\",\"sourceTileGrid_\",\"targetTileGrid_\",\"wrappedTileCoord_\",\"sourceTiles_\",\"sourcesListenerKeys_\",\"sourceZ_\",\"maxTargetExtent\",\"limitedTargetExtent\",\"sourceProjExtent\",\"targetMetersPerUnit\",\"sourceMetersPerUnit\",\"compensationFactor\",\"calculateSourceResolution\",\"errorThresholdInPixels\",\"triangulation_\",\"sourceRange\",\"srcX\",\"srcY\",\"unlistenSources_\",\"reproject_\",\"getTileSize\",\"leftToLoad_1\",\"sourceListenKey_1\",\"createFromTemplate\",\"template\",\"zRegEx\",\"xRegEx\",\"yRegEx\",\"dashYRegEx\",\"getFullTileRange\",\"createFromTemplates\",\"templates\",\"tileUrlFunctions\",\"hash\",\"createFromTileUrlFunctions\",\"nullTileUrlFunction\",\"tmpTileCoord\",\"tilegrid_TileGrid\",\"TileGrid\",\"opt_strict\",\"every\",\"currentVal\",\"res\",\"origins\",\"origins_\",\"tileSizes_\",\"tileSizes\",\"tileSize_\",\"tileSize\",\"fullTileRanges_\",\"tmpSize_\",\"sizes\",\"calculateTileRanges_\",\"forEachTileCoord\",\"opt_tileRange\",\"tileCoordExtent\",\"getTileRangeExtent\",\"getTileCoordForXYAndZ_\",\"getTileCoordForCoordAndResolution\",\"getTileCoordForXYAndResolution_\",\"reverseIntersectionPolicy\",\"adjustX\",\"adjustY\",\"xFromOrigin\",\"yFromOrigin\",\"tileCoordX\",\"tileCoordY\",\"getTileCoordResolution\",\"fullTileRanges\",\"getForProjection\",\"opt_maxZoom\",\"opt_tileSize\",\"opt_corner\",\"resolutionsFromExtent\",\"createForExtent\",\"extentFromProjection\",\"createForProjection\",\"half\",\"source_Tile_extends\",\"Tile_TileSource\",\"TileSource\",\"opaque_\",\"opaque\",\"tilePixelRatio_\",\"canUseScreen\",\"self\",\"screen\",\"availWidth\",\"availHeight\",\"tmpSize\",\"tileOptions\",\"getTileCacheForProjection\",\"loaded\",\"setKey\",\"getTileGrid\",\"thisProj\",\"getTileCoordForTileUrlFunction\",\"opt_projection\",\"worldsAway\",\"withinExtentAndZ\",\"TileSourceEvent\",\"source_Tile\",\"TileEventType\",\"UrlTile_extends\",\"source_UrlTile\",\"UrlTile\",\"generateTileUrlFunction_\",\"tileUrlFunction\",\"urls\",\"setUrls\",\"tileLoadingKeys_\",\"getTileLoadFunction\",\"getTileUrlFunction\",\"getUrls\",\"setTileLoadFunction\",\"setTileUrlFunction\",\"match\",\"exec\",\"startCharCode\",\"stopCharCode\",\"fromCharCode\",\"stop_1\",\"expandUrl\",\"TileImage_extends\",\"defaultTileLoadFunction\",\"imageTile\",\"source_TileImage\",\"TileImage\",\"tileClass\",\"tileCacheForProjection\",\"tileGridForProjection\",\"reprojectionErrorThreshold_\",\"reprojectionErrorThreshold\",\"renderReprojectionEdges_\",\"usedTileCache\",\"getGutter\",\"projKey\",\"createTile_\",\"urlTileCoord\",\"tileUrl\",\"newTile\",\"getTileInternal\",\"setRenderReprojectionEdges\",\"setTileGridForProjection\",\"tilegrid\",\"proj\",\"XYZ_extends\",\"source_XYZ\",\"xyzOptions\",\"gridOptions\",\"createXYZ\",\"OSM_extends\",\"ATTRIBUTION\",\"source_OSM\",\"OSM\",\"main_map\",\"peopleLayer\",\"searchResultSource\",\"searchResultLayer\",\"main_xhr\",\"json\",\"console\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 16);\\n\",\"'use strict';\\n\\nmodule.exports = rbush;\\nmodule.exports.default = rbush;\\n\\nvar quickselect = require('quickselect');\\n\\nfunction rbush(maxEntries, format) {\\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\\n\\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\\n    this._maxEntries = Math.max(4, maxEntries || 9);\\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\\n\\n    if (format) {\\n        this._initFormat(format);\\n    }\\n\\n    this.clear();\\n}\\n\\nrbush.prototype = {\\n\\n    all: function () {\\n        return this._all(this.data, []);\\n    },\\n\\n    search: function (bbox) {\\n\\n        var node = this.data,\\n            result = [],\\n            toBBox = this.toBBox;\\n\\n        if (!intersects(bbox, node)) return result;\\n\\n        var nodesToSearch = [],\\n            i, len, child, childBBox;\\n\\n        while (node) {\\n            for (i = 0, len = node.children.length; i < len; i++) {\\n\\n                child = node.children[i];\\n                childBBox = node.leaf ? toBBox(child) : child;\\n\\n                if (intersects(bbox, childBBox)) {\\n                    if (node.leaf) result.push(child);\\n                    else if (contains(bbox, childBBox)) this._all(child, result);\\n                    else nodesToSearch.push(child);\\n                }\\n            }\\n            node = nodesToSearch.pop();\\n        }\\n\\n        return result;\\n    },\\n\\n    collides: function (bbox) {\\n\\n        var node = this.data,\\n            toBBox = this.toBBox;\\n\\n        if (!intersects(bbox, node)) return false;\\n\\n        var nodesToSearch = [],\\n            i, len, child, childBBox;\\n\\n        while (node) {\\n            for (i = 0, len = node.children.length; i < len; i++) {\\n\\n                child = node.children[i];\\n                childBBox = node.leaf ? toBBox(child) : child;\\n\\n                if (intersects(bbox, childBBox)) {\\n                    if (node.leaf || contains(bbox, childBBox)) return true;\\n                    nodesToSearch.push(child);\\n                }\\n            }\\n            node = nodesToSearch.pop();\\n        }\\n\\n        return false;\\n    },\\n\\n    load: function (data) {\\n        if (!(data && data.length)) return this;\\n\\n        if (data.length < this._minEntries) {\\n            for (var i = 0, len = data.length; i < len; i++) {\\n                this.insert(data[i]);\\n            }\\n            return this;\\n        }\\n\\n        // recursively build the tree with the given data from scratch using OMT algorithm\\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\\n\\n        if (!this.data.children.length) {\\n            // save as is if tree is empty\\n            this.data = node;\\n\\n        } else if (this.data.height === node.height) {\\n            // split root if trees have the same height\\n            this._splitRoot(this.data, node);\\n\\n        } else {\\n            if (this.data.height < node.height) {\\n                // swap trees if inserted one is bigger\\n                var tmpNode = this.data;\\n                this.data = node;\\n                node = tmpNode;\\n            }\\n\\n            // insert the small tree into the large tree at appropriate level\\n            this._insert(node, this.data.height - node.height - 1, true);\\n        }\\n\\n        return this;\\n    },\\n\\n    insert: function (item) {\\n        if (item) this._insert(item, this.data.height - 1);\\n        return this;\\n    },\\n\\n    clear: function () {\\n        this.data = createNode([]);\\n        return this;\\n    },\\n\\n    remove: function (item, equalsFn) {\\n        if (!item) return this;\\n\\n        var node = this.data,\\n            bbox = this.toBBox(item),\\n            path = [],\\n            indexes = [],\\n            i, parent, index, goingUp;\\n\\n        // depth-first iterative tree traversal\\n        while (node || path.length) {\\n\\n            if (!node) { // go up\\n                node = path.pop();\\n                parent = path[path.length - 1];\\n                i = indexes.pop();\\n                goingUp = true;\\n            }\\n\\n            if (node.leaf) { // check current node\\n                index = findItem(item, node.children, equalsFn);\\n\\n                if (index !== -1) {\\n                    // item found, remove the item and condense tree upwards\\n                    node.children.splice(index, 1);\\n                    path.push(node);\\n                    this._condense(path);\\n                    return this;\\n                }\\n            }\\n\\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\\n                path.push(node);\\n                indexes.push(i);\\n                i = 0;\\n                parent = node;\\n                node = node.children[0];\\n\\n            } else if (parent) { // go right\\n                i++;\\n                node = parent.children[i];\\n                goingUp = false;\\n\\n            } else node = null; // nothing found\\n        }\\n\\n        return this;\\n    },\\n\\n    toBBox: function (item) { return item; },\\n\\n    compareMinX: compareNodeMinX,\\n    compareMinY: compareNodeMinY,\\n\\n    toJSON: function () { return this.data; },\\n\\n    fromJSON: function (data) {\\n        this.data = data;\\n        return this;\\n    },\\n\\n    _all: function (node, result) {\\n        var nodesToSearch = [];\\n        while (node) {\\n            if (node.leaf) result.push.apply(result, node.children);\\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\\n\\n            node = nodesToSearch.pop();\\n        }\\n        return result;\\n    },\\n\\n    _build: function (items, left, right, height) {\\n\\n        var N = right - left + 1,\\n            M = this._maxEntries,\\n            node;\\n\\n        if (N <= M) {\\n            // reached leaf level; return leaf\\n            node = createNode(items.slice(left, right + 1));\\n            calcBBox(node, this.toBBox);\\n            return node;\\n        }\\n\\n        if (!height) {\\n            // target height of the bulk-loaded tree\\n            height = Math.ceil(Math.log(N) / Math.log(M));\\n\\n            // target number of root entries to maximize storage utilization\\n            M = Math.ceil(N / Math.pow(M, height - 1));\\n        }\\n\\n        node = createNode([]);\\n        node.leaf = false;\\n        node.height = height;\\n\\n        // split the items into M mostly square tiles\\n\\n        var N2 = Math.ceil(N / M),\\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\\n            i, j, right2, right3;\\n\\n        multiSelect(items, left, right, N1, this.compareMinX);\\n\\n        for (i = left; i <= right; i += N1) {\\n\\n            right2 = Math.min(i + N1 - 1, right);\\n\\n            multiSelect(items, i, right2, N2, this.compareMinY);\\n\\n            for (j = i; j <= right2; j += N2) {\\n\\n                right3 = Math.min(j + N2 - 1, right2);\\n\\n                // pack each entry recursively\\n                node.children.push(this._build(items, j, right3, height - 1));\\n            }\\n        }\\n\\n        calcBBox(node, this.toBBox);\\n\\n        return node;\\n    },\\n\\n    _chooseSubtree: function (bbox, node, level, path) {\\n\\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\\n\\n        while (true) {\\n            path.push(node);\\n\\n            if (node.leaf || path.length - 1 === level) break;\\n\\n            minArea = minEnlargement = Infinity;\\n\\n            for (i = 0, len = node.children.length; i < len; i++) {\\n                child = node.children[i];\\n                area = bboxArea(child);\\n                enlargement = enlargedArea(bbox, child) - area;\\n\\n                // choose entry with the least area enlargement\\n                if (enlargement < minEnlargement) {\\n                    minEnlargement = enlargement;\\n                    minArea = area < minArea ? area : minArea;\\n                    targetNode = child;\\n\\n                } else if (enlargement === minEnlargement) {\\n                    // otherwise choose one with the smallest area\\n                    if (area < minArea) {\\n                        minArea = area;\\n                        targetNode = child;\\n                    }\\n                }\\n            }\\n\\n            node = targetNode || node.children[0];\\n        }\\n\\n        return node;\\n    },\\n\\n    _insert: function (item, level, isNode) {\\n\\n        var toBBox = this.toBBox,\\n            bbox = isNode ? item : toBBox(item),\\n            insertPath = [];\\n\\n        // find the best node for accommodating the item, saving all nodes along the path too\\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\\n\\n        // put the item into the node\\n        node.children.push(item);\\n        extend(node, bbox);\\n\\n        // split on node overflow; propagate upwards if necessary\\n        while (level >= 0) {\\n            if (insertPath[level].children.length > this._maxEntries) {\\n                this._split(insertPath, level);\\n                level--;\\n            } else break;\\n        }\\n\\n        // adjust bboxes along the insertion path\\n        this._adjustParentBBoxes(bbox, insertPath, level);\\n    },\\n\\n    // split overflowed node into two\\n    _split: function (insertPath, level) {\\n\\n        var node = insertPath[level],\\n            M = node.children.length,\\n            m = this._minEntries;\\n\\n        this._chooseSplitAxis(node, m, M);\\n\\n        var splitIndex = this._chooseSplitIndex(node, m, M);\\n\\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\\n        newNode.height = node.height;\\n        newNode.leaf = node.leaf;\\n\\n        calcBBox(node, this.toBBox);\\n        calcBBox(newNode, this.toBBox);\\n\\n        if (level) insertPath[level - 1].children.push(newNode);\\n        else this._splitRoot(node, newNode);\\n    },\\n\\n    _splitRoot: function (node, newNode) {\\n        // split root node\\n        this.data = createNode([node, newNode]);\\n        this.data.height = node.height + 1;\\n        this.data.leaf = false;\\n        calcBBox(this.data, this.toBBox);\\n    },\\n\\n    _chooseSplitIndex: function (node, m, M) {\\n\\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\\n\\n        minOverlap = minArea = Infinity;\\n\\n        for (i = m; i <= M - m; i++) {\\n            bbox1 = distBBox(node, 0, i, this.toBBox);\\n            bbox2 = distBBox(node, i, M, this.toBBox);\\n\\n            overlap = intersectionArea(bbox1, bbox2);\\n            area = bboxArea(bbox1) + bboxArea(bbox2);\\n\\n            // choose distribution with minimum overlap\\n            if (overlap < minOverlap) {\\n                minOverlap = overlap;\\n                index = i;\\n\\n                minArea = area < minArea ? area : minArea;\\n\\n            } else if (overlap === minOverlap) {\\n                // otherwise choose distribution with minimum area\\n                if (area < minArea) {\\n                    minArea = area;\\n                    index = i;\\n                }\\n            }\\n        }\\n\\n        return index;\\n    },\\n\\n    // sorts node children by the best axis for split\\n    _chooseSplitAxis: function (node, m, M) {\\n\\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\\n\\n        // if total distributions margin value is minimal for x, sort by minX,\\n        // otherwise it's already sorted by minY\\n        if (xMargin < yMargin) node.children.sort(compareMinX);\\n    },\\n\\n    // total margin of all possible split distributions where each node is at least m full\\n    _allDistMargin: function (node, m, M, compare) {\\n\\n        node.children.sort(compare);\\n\\n        var toBBox = this.toBBox,\\n            leftBBox = distBBox(node, 0, m, toBBox),\\n            rightBBox = distBBox(node, M - m, M, toBBox),\\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\\n            i, child;\\n\\n        for (i = m; i < M - m; i++) {\\n            child = node.children[i];\\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\\n            margin += bboxMargin(leftBBox);\\n        }\\n\\n        for (i = M - m - 1; i >= m; i--) {\\n            child = node.children[i];\\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\\n            margin += bboxMargin(rightBBox);\\n        }\\n\\n        return margin;\\n    },\\n\\n    _adjustParentBBoxes: function (bbox, path, level) {\\n        // adjust bboxes along the given tree path\\n        for (var i = level; i >= 0; i--) {\\n            extend(path[i], bbox);\\n        }\\n    },\\n\\n    _condense: function (path) {\\n        // go through the path, removing empty nodes and updating bboxes\\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\\n            if (path[i].children.length === 0) {\\n                if (i > 0) {\\n                    siblings = path[i - 1].children;\\n                    siblings.splice(siblings.indexOf(path[i]), 1);\\n\\n                } else this.clear();\\n\\n            } else calcBBox(path[i], this.toBBox);\\n        }\\n    },\\n\\n    _initFormat: function (format) {\\n        // data format (minX, minY, maxX, maxY accessors)\\n\\n        // uses eval-type function compilation instead of just accepting a toBBox function\\n        // because the algorithms are very sensitive to sorting functions performance,\\n        // so they should be dead simple and without inner calls\\n\\n        var compareArr = ['return a', ' - b', ';'];\\n\\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\\n\\n        this.toBBox = new Function('a',\\n            'return {minX: a' + format[0] +\\n            ', minY: a' + format[1] +\\n            ', maxX: a' + format[2] +\\n            ', maxY: a' + format[3] + '};');\\n    }\\n};\\n\\nfunction findItem(item, items, equalsFn) {\\n    if (!equalsFn) return items.indexOf(item);\\n\\n    for (var i = 0; i < items.length; i++) {\\n        if (equalsFn(item, items[i])) return i;\\n    }\\n    return -1;\\n}\\n\\n// calculate node's bbox from bboxes of its children\\nfunction calcBBox(node, toBBox) {\\n    distBBox(node, 0, node.children.length, toBBox, node);\\n}\\n\\n// min bounding rectangle of node children from k to p-1\\nfunction distBBox(node, k, p, toBBox, destNode) {\\n    if (!destNode) destNode = createNode(null);\\n    destNode.minX = Infinity;\\n    destNode.minY = Infinity;\\n    destNode.maxX = -Infinity;\\n    destNode.maxY = -Infinity;\\n\\n    for (var i = k, child; i < p; i++) {\\n        child = node.children[i];\\n        extend(destNode, node.leaf ? toBBox(child) : child);\\n    }\\n\\n    return destNode;\\n}\\n\\nfunction extend(a, b) {\\n    a.minX = Math.min(a.minX, b.minX);\\n    a.minY = Math.min(a.minY, b.minY);\\n    a.maxX = Math.max(a.maxX, b.maxX);\\n    a.maxY = Math.max(a.maxY, b.maxY);\\n    return a;\\n}\\n\\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\\n\\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\\n\\nfunction enlargedArea(a, b) {\\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\\n}\\n\\nfunction intersectionArea(a, b) {\\n    var minX = Math.max(a.minX, b.minX),\\n        minY = Math.max(a.minY, b.minY),\\n        maxX = Math.min(a.maxX, b.maxX),\\n        maxY = Math.min(a.maxY, b.maxY);\\n\\n    return Math.max(0, maxX - minX) *\\n           Math.max(0, maxY - minY);\\n}\\n\\nfunction contains(a, b) {\\n    return a.minX <= b.minX &&\\n           a.minY <= b.minY &&\\n           b.maxX <= a.maxX &&\\n           b.maxY <= a.maxY;\\n}\\n\\nfunction intersects(a, b) {\\n    return b.minX <= a.maxX &&\\n           b.minY <= a.maxY &&\\n           b.maxX >= a.minX &&\\n           b.maxY >= a.minY;\\n}\\n\\nfunction createNode(children) {\\n    return {\\n        children: children,\\n        height: 1,\\n        leaf: true,\\n        minX: Infinity,\\n        minY: Infinity,\\n        maxX: -Infinity,\\n        maxY: -Infinity\\n    };\\n}\\n\\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\\n// combines selection algorithm with binary divide & conquer approach\\n\\nfunction multiSelect(arr, left, right, n, compare) {\\n    var stack = [left, right],\\n        mid;\\n\\n    while (stack.length) {\\n        right = stack.pop();\\n        left = stack.pop();\\n\\n        if (right - left <= n) continue;\\n\\n        mid = left + Math.ceil((right - left) / n / 2) * n;\\n        quickselect(arr, mid, left, right, compare);\\n\\n        stack.push(left, mid, mid, right);\\n    }\\n}\\n\",\"\\nvar content = require(\\\"!!../css-loader/dist/cjs.js!./ol.css\\\");\\n\\nif(typeof content === 'string') content = [[module.id, content, '']];\\n\\nvar transform;\\nvar insertInto;\\n\\n\\n\\nvar options = {\\\"hmr\\\":true}\\n\\noptions.transform = transform\\noptions.insertInto = undefined;\\n\\nvar update = require(\\\"!../style-loader/lib/addStyles.js\\\")(content, options);\\n\\nif(content.locals) module.exports = content.locals;\\n\\nif(module.hot) {\\n\\tmodule.hot.accept(\\\"!!../css-loader/dist/cjs.js!./ol.css\\\", function() {\\n\\t\\tvar newContent = require(\\\"!!../css-loader/dist/cjs.js!./ol.css\\\");\\n\\n\\t\\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\\n\\n\\t\\tvar locals = (function(a, b) {\\n\\t\\t\\tvar key, idx = 0;\\n\\n\\t\\t\\tfor(key in a) {\\n\\t\\t\\t\\tif(!b || a[key] !== b[key]) return false;\\n\\t\\t\\t\\tidx++;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor(key in b) idx--;\\n\\n\\t\\t\\treturn idx === 0;\\n\\t\\t}(content.locals, newContent.locals));\\n\\n\\t\\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\\n\\n\\t\\tupdate(newContent);\\n\\t});\\n\\n\\tmodule.hot.dispose(function() { update(); });\\n}\",\"exports = module.exports = require(\\\"../css-loader/dist/runtime/api.js\\\")(false);\\n// Module\\nexports.push([module.id, \\\".ol-box {\\\\n  box-sizing: border-box;\\\\n  border-radius: 2px;\\\\n  border: 2px solid blue;\\\\n}\\\\n\\\\n.ol-mouse-position {\\\\n  top: 8px;\\\\n  right: 8px;\\\\n  position: absolute;\\\\n}\\\\n\\\\n.ol-scale-line {\\\\n  background: rgba(0,60,136,0.3);\\\\n  border-radius: 4px;\\\\n  bottom: 8px;\\\\n  left: 8px;\\\\n  padding: 2px;\\\\n  position: absolute;\\\\n}\\\\n.ol-scale-line-inner {\\\\n  border: 1px solid #eee;\\\\n  border-top: none;\\\\n  color: #eee;\\\\n  font-size: 10px;\\\\n  text-align: center;\\\\n  margin: 1px;\\\\n  will-change: contents, width;\\\\n  transition: all 0.25s;\\\\n}\\\\n.ol-scale-bar {\\\\n  position: absolute;\\\\n  bottom: 8px;\\\\n  left: 8px;\\\\n}\\\\n.ol-scale-step-marker {\\\\n  width: 1px;\\\\n  height: 15px;\\\\n  background-color: #000000;\\\\n  float: right;\\\\n  z-Index: 10;\\\\n}\\\\n.ol-scale-step-text {\\\\n  position: absolute;\\\\n  bottom: -5px;\\\\n  font-size: 12px;\\\\n  z-Index: 11;\\\\n  color: #000000;\\\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\\\n}\\\\n.ol-scale-text {\\\\n  position: absolute;\\\\n  font-size: 14px;\\\\n  text-align: center;\\\\n  bottom: 25px;\\\\n  color: #000000;\\\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\\\n}\\\\n.ol-scale-singlebar {\\\\n  position: relative;\\\\n  height: 10px;\\\\n  z-Index: 9;\\\\n  border: 1px solid black;\\\\n}\\\\n\\\\n.ol-overlay-container {\\\\n  will-change: left,right,top,bottom;\\\\n}\\\\n\\\\n.ol-unsupported {\\\\n  display: none;\\\\n}\\\\n.ol-viewport, .ol-unselectable {\\\\n  -webkit-touch-callout: none;\\\\n  -webkit-user-select: none;\\\\n  -moz-user-select: none;\\\\n  -ms-user-select: none;\\\\n  user-select: none;\\\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\\\n}\\\\n.ol-selectable {\\\\n  -webkit-touch-callout: default;\\\\n  -webkit-user-select: text;\\\\n  -moz-user-select: text;\\\\n  -ms-user-select: text;\\\\n  user-select: text;\\\\n}\\\\n.ol-grabbing {\\\\n  cursor: -webkit-grabbing;\\\\n  cursor: -moz-grabbing;\\\\n  cursor: grabbing;\\\\n}\\\\n.ol-grab {\\\\n  cursor: move;\\\\n  cursor: -webkit-grab;\\\\n  cursor: -moz-grab;\\\\n  cursor: grab;\\\\n}\\\\n.ol-control {\\\\n  position: absolute;\\\\n  background-color: rgba(255,255,255,0.4);\\\\n  border-radius: 4px;\\\\n  padding: 2px;\\\\n}\\\\n.ol-control:hover {\\\\n  background-color: rgba(255,255,255,0.6);\\\\n}\\\\n.ol-zoom {\\\\n  top: .5em;\\\\n  left: .5em;\\\\n}\\\\n.ol-rotate {\\\\n  top: .5em;\\\\n  right: .5em;\\\\n  transition: opacity .25s linear, visibility 0s linear;\\\\n}\\\\n.ol-rotate.ol-hidden {\\\\n  opacity: 0;\\\\n  visibility: hidden;\\\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\\\n}\\\\n.ol-zoom-extent {\\\\n  top: 4.643em;\\\\n  left: .5em;\\\\n}\\\\n.ol-full-screen {\\\\n  right: .5em;\\\\n  top: .5em;\\\\n}\\\\n@media print {\\\\n  .ol-control {\\\\n    display: none;\\\\n  }\\\\n}\\\\n\\\\n.ol-control button {\\\\n  display: block;\\\\n  margin: 1px;\\\\n  padding: 0;\\\\n  color: white;\\\\n  font-size: 1.14em;\\\\n  font-weight: bold;\\\\n  text-decoration: none;\\\\n  text-align: center;\\\\n  height: 1.375em;\\\\n  width: 1.375em;\\\\n  line-height: .4em;\\\\n  background-color: rgba(0,60,136,0.5);\\\\n  border: none;\\\\n  border-radius: 2px;\\\\n}\\\\n.ol-control button::-moz-focus-inner {\\\\n  border: none;\\\\n  padding: 0;\\\\n}\\\\n.ol-zoom-extent button {\\\\n  line-height: 1.4em;\\\\n}\\\\n.ol-compass {\\\\n  display: block;\\\\n  font-weight: normal;\\\\n  font-size: 1.2em;\\\\n  will-change: transform;\\\\n}\\\\n.ol-touch .ol-control button {\\\\n  font-size: 1.5em;\\\\n}\\\\n.ol-touch .ol-zoom-extent {\\\\n  top: 5.5em;\\\\n}\\\\n.ol-control button:hover,\\\\n.ol-control button:focus {\\\\n  text-decoration: none;\\\\n  background-color: rgba(0,60,136,0.7);\\\\n}\\\\n.ol-zoom .ol-zoom-in {\\\\n  border-radius: 2px 2px 0 0;\\\\n}\\\\n.ol-zoom .ol-zoom-out {\\\\n  border-radius: 0 0 2px 2px;\\\\n}\\\\n\\\\n\\\\n.ol-attribution {\\\\n  text-align: right;\\\\n  bottom: .5em;\\\\n  right: .5em;\\\\n  max-width: calc(100% - 1.3em);\\\\n}\\\\n\\\\n.ol-attribution ul {\\\\n  margin: 0;\\\\n  padding: 0 .5em;\\\\n  font-size: .7rem;\\\\n  line-height: 1.375em;\\\\n  color: #000;\\\\n  text-shadow: 0 0 2px #fff;\\\\n}\\\\n.ol-attribution li {\\\\n  display: inline;\\\\n  list-style: none;\\\\n  line-height: inherit;\\\\n}\\\\n.ol-attribution li:not(:last-child):after {\\\\n  content: \\\\\\\" \\\\\\\";\\\\n}\\\\n.ol-attribution img {\\\\n  max-height: 2em;\\\\n  max-width: inherit;\\\\n  vertical-align: middle;\\\\n}\\\\n.ol-attribution ul, .ol-attribution button {\\\\n  display: inline-block;\\\\n}\\\\n.ol-attribution.ol-collapsed ul {\\\\n  display: none;\\\\n}\\\\n.ol-attribution:not(.ol-collapsed) {\\\\n  background: rgba(255,255,255,0.8);\\\\n}\\\\n.ol-attribution.ol-uncollapsible {\\\\n  bottom: 0;\\\\n  right: 0;\\\\n  border-radius: 4px 0 0;\\\\n  height: 1.1em;\\\\n  line-height: 1em;\\\\n}\\\\n.ol-attribution.ol-uncollapsible img {\\\\n  margin-top: -.2em;\\\\n  max-height: 1.6em;\\\\n}\\\\n.ol-attribution.ol-uncollapsible button {\\\\n  display: none;\\\\n}\\\\n\\\\n.ol-zoomslider {\\\\n  top: 4.5em;\\\\n  left: .5em;\\\\n  height: 200px;\\\\n}\\\\n.ol-zoomslider button {\\\\n  position: relative;\\\\n  height: 10px;\\\\n}\\\\n\\\\n.ol-touch .ol-zoomslider {\\\\n  top: 5.5em;\\\\n}\\\\n\\\\n.ol-overviewmap {\\\\n  left: 0.5em;\\\\n  bottom: 0.5em;\\\\n}\\\\n.ol-overviewmap.ol-uncollapsible {\\\\n  bottom: 0;\\\\n  left: 0;\\\\n  border-radius: 0 4px 0 0;\\\\n}\\\\n.ol-overviewmap .ol-overviewmap-map,\\\\n.ol-overviewmap button {\\\\n  display: inline-block;\\\\n}\\\\n.ol-overviewmap .ol-overviewmap-map {\\\\n  border: 1px solid #7b98bc;\\\\n  height: 150px;\\\\n  margin: 2px;\\\\n  width: 150px;\\\\n}\\\\n.ol-overviewmap:not(.ol-collapsed) button{\\\\n  bottom: 1px;\\\\n  left: 2px;\\\\n  position: absolute;\\\\n}\\\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\\\n.ol-overviewmap.ol-uncollapsible button {\\\\n  display: none;\\\\n}\\\\n.ol-overviewmap:not(.ol-collapsed) {\\\\n  background: rgba(255,255,255,0.8);\\\\n}\\\\n.ol-overviewmap-box {\\\\n  border: 2px dotted rgba(0,60,136,0.7);\\\\n}\\\\n\\\\n.ol-overviewmap .ol-overviewmap-box:hover {\\\\n  cursor: move;\\\\n}\\\\n\\\", \\\"\\\"]);\\n\\n\",\"\\\"use strict\\\";\\n\\n/*\\n  MIT License http://www.opensource.org/licenses/mit-license.php\\n  Author Tobias Koppers @sokra\\n*/\\n// css base code, injected by the css-loader\\nmodule.exports = function (useSourceMap) {\\n  var list = []; // return the list of modules as css string\\n\\n  list.toString = function toString() {\\n    return this.map(function (item) {\\n      var content = cssWithMappingToString(item, useSourceMap);\\n\\n      if (item[2]) {\\n        return '@media ' + item[2] + '{' + content + '}';\\n      } else {\\n        return content;\\n      }\\n    }).join('');\\n  }; // import a list of modules into the list\\n\\n\\n  list.i = function (modules, mediaQuery) {\\n    if (typeof modules === 'string') {\\n      modules = [[null, modules, '']];\\n    }\\n\\n    var alreadyImportedModules = {};\\n\\n    for (var i = 0; i < this.length; i++) {\\n      var id = this[i][0];\\n\\n      if (id != null) {\\n        alreadyImportedModules[id] = true;\\n      }\\n    }\\n\\n    for (i = 0; i < modules.length; i++) {\\n      var item = modules[i]; // skip already imported module\\n      // this implementation is not 100% perfect for weird media query combinations\\n      // when a module is imported multiple times with different media queries.\\n      // I hope this will never occur (Hey this way we have smaller bundles)\\n\\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\\n        if (mediaQuery && !item[2]) {\\n          item[2] = mediaQuery;\\n        } else if (mediaQuery) {\\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\\n        }\\n\\n        list.push(item);\\n      }\\n    }\\n  };\\n\\n  return list;\\n};\\n\\nfunction cssWithMappingToString(item, useSourceMap) {\\n  var content = item[1] || '';\\n  var cssMapping = item[3];\\n\\n  if (!cssMapping) {\\n    return content;\\n  }\\n\\n  if (useSourceMap && typeof btoa === 'function') {\\n    var sourceMapping = toComment(cssMapping);\\n    var sourceURLs = cssMapping.sources.map(function (source) {\\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\\n    });\\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\\\n');\\n  }\\n\\n  return [content].join('\\\\n');\\n} // Adapted from convert-source-map (MIT)\\n\\n\\nfunction toComment(sourceMap) {\\n  // eslint-disable-next-line no-undef\\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\\n  return '/*# ' + data + ' */';\\n}\",\"/*\\n\\tMIT License http://www.opensource.org/licenses/mit-license.php\\n\\tAuthor Tobias Koppers @sokra\\n*/\\n\\nvar stylesInDom = {};\\n\\nvar\\tmemoize = function (fn) {\\n\\tvar memo;\\n\\n\\treturn function () {\\n\\t\\tif (typeof memo === \\\"undefined\\\") memo = fn.apply(this, arguments);\\n\\t\\treturn memo;\\n\\t};\\n};\\n\\nvar isOldIE = memoize(function () {\\n\\t// Test for IE <= 9 as proposed by Browserhacks\\n\\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\\n\\t// Tests for existence of standard globals is to allow style-loader\\n\\t// to operate correctly into non-standard environments\\n\\t// @see https://github.com/webpack-contrib/style-loader/issues/177\\n\\treturn window && document && document.all && !window.atob;\\n});\\n\\nvar getTarget = function (target, parent) {\\n  if (parent){\\n    return parent.querySelector(target);\\n  }\\n  return document.querySelector(target);\\n};\\n\\nvar getElement = (function (fn) {\\n\\tvar memo = {};\\n\\n\\treturn function(target, parent) {\\n                // If passing function in options, then use it for resolve \\\"head\\\" element.\\n                // Useful for Shadow Root style i.e\\n                // {\\n                //   insertInto: function () { return document.querySelector(\\\"#foo\\\").shadowRoot }\\n                // }\\n                if (typeof target === 'function') {\\n                        return target();\\n                }\\n                if (typeof memo[target] === \\\"undefined\\\") {\\n\\t\\t\\tvar styleTarget = getTarget.call(this, target, parent);\\n\\t\\t\\t// Special case to return head of iframe instead of iframe itself\\n\\t\\t\\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t// This will throw an exception if access to iframe is blocked\\n\\t\\t\\t\\t\\t// due to cross-origin restrictions\\n\\t\\t\\t\\t\\tstyleTarget = styleTarget.contentDocument.head;\\n\\t\\t\\t\\t} catch(e) {\\n\\t\\t\\t\\t\\tstyleTarget = null;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tmemo[target] = styleTarget;\\n\\t\\t}\\n\\t\\treturn memo[target]\\n\\t};\\n})();\\n\\nvar singleton = null;\\nvar\\tsingletonCounter = 0;\\nvar\\tstylesInsertedAtTop = [];\\n\\nvar\\tfixUrls = require(\\\"./urls\\\");\\n\\nmodule.exports = function(list, options) {\\n\\tif (typeof DEBUG !== \\\"undefined\\\" && DEBUG) {\\n\\t\\tif (typeof document !== \\\"object\\\") throw new Error(\\\"The style-loader cannot be used in a non-browser environment\\\");\\n\\t}\\n\\n\\toptions = options || {};\\n\\n\\toptions.attrs = typeof options.attrs === \\\"object\\\" ? options.attrs : {};\\n\\n\\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\\n\\t// tags it will allow on a page\\n\\tif (!options.singleton && typeof options.singleton !== \\\"boolean\\\") options.singleton = isOldIE();\\n\\n\\t// By default, add <style> tags to the <head> element\\n        if (!options.insertInto) options.insertInto = \\\"head\\\";\\n\\n\\t// By default, add <style> tags to the bottom of the target\\n\\tif (!options.insertAt) options.insertAt = \\\"bottom\\\";\\n\\n\\tvar styles = listToStyles(list, options);\\n\\n\\taddStylesToDom(styles, options);\\n\\n\\treturn function update (newList) {\\n\\t\\tvar mayRemove = [];\\n\\n\\t\\tfor (var i = 0; i < styles.length; i++) {\\n\\t\\t\\tvar item = styles[i];\\n\\t\\t\\tvar domStyle = stylesInDom[item.id];\\n\\n\\t\\t\\tdomStyle.refs--;\\n\\t\\t\\tmayRemove.push(domStyle);\\n\\t\\t}\\n\\n\\t\\tif(newList) {\\n\\t\\t\\tvar newStyles = listToStyles(newList, options);\\n\\t\\t\\taddStylesToDom(newStyles, options);\\n\\t\\t}\\n\\n\\t\\tfor (var i = 0; i < mayRemove.length; i++) {\\n\\t\\t\\tvar domStyle = mayRemove[i];\\n\\n\\t\\t\\tif(domStyle.refs === 0) {\\n\\t\\t\\t\\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\\n\\n\\t\\t\\t\\tdelete stylesInDom[domStyle.id];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nfunction addStylesToDom (styles, options) {\\n\\tfor (var i = 0; i < styles.length; i++) {\\n\\t\\tvar item = styles[i];\\n\\t\\tvar domStyle = stylesInDom[item.id];\\n\\n\\t\\tif(domStyle) {\\n\\t\\t\\tdomStyle.refs++;\\n\\n\\t\\t\\tfor(var j = 0; j < domStyle.parts.length; j++) {\\n\\t\\t\\t\\tdomStyle.parts[j](item.parts[j]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor(; j < item.parts.length; j++) {\\n\\t\\t\\t\\tdomStyle.parts.push(addStyle(item.parts[j], options));\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tvar parts = [];\\n\\n\\t\\t\\tfor(var j = 0; j < item.parts.length; j++) {\\n\\t\\t\\t\\tparts.push(addStyle(item.parts[j], options));\\n\\t\\t\\t}\\n\\n\\t\\t\\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction listToStyles (list, options) {\\n\\tvar styles = [];\\n\\tvar newStyles = {};\\n\\n\\tfor (var i = 0; i < list.length; i++) {\\n\\t\\tvar item = list[i];\\n\\t\\tvar id = options.base ? item[0] + options.base : item[0];\\n\\t\\tvar css = item[1];\\n\\t\\tvar media = item[2];\\n\\t\\tvar sourceMap = item[3];\\n\\t\\tvar part = {css: css, media: media, sourceMap: sourceMap};\\n\\n\\t\\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\\n\\t\\telse newStyles[id].parts.push(part);\\n\\t}\\n\\n\\treturn styles;\\n}\\n\\nfunction insertStyleElement (options, style) {\\n\\tvar target = getElement(options.insertInto)\\n\\n\\tif (!target) {\\n\\t\\tthrow new Error(\\\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\\\");\\n\\t}\\n\\n\\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\\n\\n\\tif (options.insertAt === \\\"top\\\") {\\n\\t\\tif (!lastStyleElementInsertedAtTop) {\\n\\t\\t\\ttarget.insertBefore(style, target.firstChild);\\n\\t\\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\\n\\t\\t\\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\\n\\t\\t} else {\\n\\t\\t\\ttarget.appendChild(style);\\n\\t\\t}\\n\\t\\tstylesInsertedAtTop.push(style);\\n\\t} else if (options.insertAt === \\\"bottom\\\") {\\n\\t\\ttarget.appendChild(style);\\n\\t} else if (typeof options.insertAt === \\\"object\\\" && options.insertAt.before) {\\n\\t\\tvar nextSibling = getElement(options.insertAt.before, target);\\n\\t\\ttarget.insertBefore(style, nextSibling);\\n\\t} else {\\n\\t\\tthrow new Error(\\\"[Style Loader]\\\\n\\\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\\\n Must be 'top', 'bottom', or Object.\\\\n (https://github.com/webpack-contrib/style-loader#insertat)\\\\n\\\");\\n\\t}\\n}\\n\\nfunction removeStyleElement (style) {\\n\\tif (style.parentNode === null) return false;\\n\\tstyle.parentNode.removeChild(style);\\n\\n\\tvar idx = stylesInsertedAtTop.indexOf(style);\\n\\tif(idx >= 0) {\\n\\t\\tstylesInsertedAtTop.splice(idx, 1);\\n\\t}\\n}\\n\\nfunction createStyleElement (options) {\\n\\tvar style = document.createElement(\\\"style\\\");\\n\\n\\tif(options.attrs.type === undefined) {\\n\\t\\toptions.attrs.type = \\\"text/css\\\";\\n\\t}\\n\\n\\tif(options.attrs.nonce === undefined) {\\n\\t\\tvar nonce = getNonce();\\n\\t\\tif (nonce) {\\n\\t\\t\\toptions.attrs.nonce = nonce;\\n\\t\\t}\\n\\t}\\n\\n\\taddAttrs(style, options.attrs);\\n\\tinsertStyleElement(options, style);\\n\\n\\treturn style;\\n}\\n\\nfunction createLinkElement (options) {\\n\\tvar link = document.createElement(\\\"link\\\");\\n\\n\\tif(options.attrs.type === undefined) {\\n\\t\\toptions.attrs.type = \\\"text/css\\\";\\n\\t}\\n\\toptions.attrs.rel = \\\"stylesheet\\\";\\n\\n\\taddAttrs(link, options.attrs);\\n\\tinsertStyleElement(options, link);\\n\\n\\treturn link;\\n}\\n\\nfunction addAttrs (el, attrs) {\\n\\tObject.keys(attrs).forEach(function (key) {\\n\\t\\tel.setAttribute(key, attrs[key]);\\n\\t});\\n}\\n\\nfunction getNonce() {\\n\\tif (typeof __webpack_nonce__ === 'undefined') {\\n\\t\\treturn null;\\n\\t}\\n\\n\\treturn __webpack_nonce__;\\n}\\n\\nfunction addStyle (obj, options) {\\n\\tvar style, update, remove, result;\\n\\n\\t// If a transform function was defined, run it on the css\\n\\tif (options.transform && obj.css) {\\n\\t    result = typeof options.transform === 'function'\\n\\t\\t ? options.transform(obj.css) \\n\\t\\t : options.transform.default(obj.css);\\n\\n\\t    if (result) {\\n\\t    \\t// If transform returns a value, use that instead of the original css.\\n\\t    \\t// This allows running runtime transformations on the css.\\n\\t    \\tobj.css = result;\\n\\t    } else {\\n\\t    \\t// If the transform function returns a falsy value, don't add this css.\\n\\t    \\t// This allows conditional loading of css\\n\\t    \\treturn function() {\\n\\t    \\t\\t// noop\\n\\t    \\t};\\n\\t    }\\n\\t}\\n\\n\\tif (options.singleton) {\\n\\t\\tvar styleIndex = singletonCounter++;\\n\\n\\t\\tstyle = singleton || (singleton = createStyleElement(options));\\n\\n\\t\\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\\n\\t\\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\\n\\n\\t} else if (\\n\\t\\tobj.sourceMap &&\\n\\t\\ttypeof URL === \\\"function\\\" &&\\n\\t\\ttypeof URL.createObjectURL === \\\"function\\\" &&\\n\\t\\ttypeof URL.revokeObjectURL === \\\"function\\\" &&\\n\\t\\ttypeof Blob === \\\"function\\\" &&\\n\\t\\ttypeof btoa === \\\"function\\\"\\n\\t) {\\n\\t\\tstyle = createLinkElement(options);\\n\\t\\tupdate = updateLink.bind(null, style, options);\\n\\t\\tremove = function () {\\n\\t\\t\\tremoveStyleElement(style);\\n\\n\\t\\t\\tif(style.href) URL.revokeObjectURL(style.href);\\n\\t\\t};\\n\\t} else {\\n\\t\\tstyle = createStyleElement(options);\\n\\t\\tupdate = applyToTag.bind(null, style);\\n\\t\\tremove = function () {\\n\\t\\t\\tremoveStyleElement(style);\\n\\t\\t};\\n\\t}\\n\\n\\tupdate(obj);\\n\\n\\treturn function updateStyle (newObj) {\\n\\t\\tif (newObj) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\tnewObj.css === obj.css &&\\n\\t\\t\\t\\tnewObj.media === obj.media &&\\n\\t\\t\\t\\tnewObj.sourceMap === obj.sourceMap\\n\\t\\t\\t) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tupdate(obj = newObj);\\n\\t\\t} else {\\n\\t\\t\\tremove();\\n\\t\\t}\\n\\t};\\n}\\n\\nvar replaceText = (function () {\\n\\tvar textStore = [];\\n\\n\\treturn function (index, replacement) {\\n\\t\\ttextStore[index] = replacement;\\n\\n\\t\\treturn textStore.filter(Boolean).join('\\\\n');\\n\\t};\\n})();\\n\\nfunction applyToSingletonTag (style, index, remove, obj) {\\n\\tvar css = remove ? \\\"\\\" : obj.css;\\n\\n\\tif (style.styleSheet) {\\n\\t\\tstyle.styleSheet.cssText = replaceText(index, css);\\n\\t} else {\\n\\t\\tvar cssNode = document.createTextNode(css);\\n\\t\\tvar childNodes = style.childNodes;\\n\\n\\t\\tif (childNodes[index]) style.removeChild(childNodes[index]);\\n\\n\\t\\tif (childNodes.length) {\\n\\t\\t\\tstyle.insertBefore(cssNode, childNodes[index]);\\n\\t\\t} else {\\n\\t\\t\\tstyle.appendChild(cssNode);\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction applyToTag (style, obj) {\\n\\tvar css = obj.css;\\n\\tvar media = obj.media;\\n\\n\\tif(media) {\\n\\t\\tstyle.setAttribute(\\\"media\\\", media)\\n\\t}\\n\\n\\tif(style.styleSheet) {\\n\\t\\tstyle.styleSheet.cssText = css;\\n\\t} else {\\n\\t\\twhile(style.firstChild) {\\n\\t\\t\\tstyle.removeChild(style.firstChild);\\n\\t\\t}\\n\\n\\t\\tstyle.appendChild(document.createTextNode(css));\\n\\t}\\n}\\n\\nfunction updateLink (link, options, obj) {\\n\\tvar css = obj.css;\\n\\tvar sourceMap = obj.sourceMap;\\n\\n\\t/*\\n\\t\\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\\n\\t\\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\\n\\t\\ton by default.  Otherwise default to the convertToAbsoluteUrls option\\n\\t\\tdirectly\\n\\t*/\\n\\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\\n\\n\\tif (options.convertToAbsoluteUrls || autoFixUrls) {\\n\\t\\tcss = fixUrls(css);\\n\\t}\\n\\n\\tif (sourceMap) {\\n\\t\\t// http://stackoverflow.com/a/26603875\\n\\t\\tcss += \\\"\\\\n/*# sourceMappingURL=data:application/json;base64,\\\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \\\" */\\\";\\n\\t}\\n\\n\\tvar blob = new Blob([css], { type: \\\"text/css\\\" });\\n\\n\\tvar oldSrc = link.href;\\n\\n\\tlink.href = URL.createObjectURL(blob);\\n\\n\\tif(oldSrc) URL.revokeObjectURL(oldSrc);\\n}\\n\",\"\\n/**\\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\\n * embed the css on the page. This breaks all relative urls because now they are relative to a\\n * bundle instead of the current page.\\n *\\n * One solution is to only use full urls, but that may be impossible.\\n *\\n * Instead, this function \\\"fixes\\\" the relative urls to be absolute according to the current page location.\\n *\\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\\n *\\n */\\n\\nmodule.exports = function (css) {\\n  // get current location\\n  var location = typeof window !== \\\"undefined\\\" && window.location;\\n\\n  if (!location) {\\n    throw new Error(\\\"fixUrls requires window.location\\\");\\n  }\\n\\n\\t// blank or null?\\n\\tif (!css || typeof css !== \\\"string\\\") {\\n\\t  return css;\\n  }\\n\\n  var baseUrl = location.protocol + \\\"//\\\" + location.host;\\n  var currentDir = baseUrl + location.pathname.replace(/\\\\/[^\\\\/]*$/, \\\"/\\\");\\n\\n\\t// convert each url(...)\\n\\t/*\\n\\tThis regular expression is just a way to recursively match brackets within\\n\\ta string.\\n\\n\\t /url\\\\s*\\\\(  = Match on the word \\\"url\\\" with any whitespace after it and then a parens\\n\\t   (  = Start a capturing group\\n\\t     (?:  = Start a non-capturing group\\n\\t         [^)(]  = Match anything that isn't a parentheses\\n\\t         |  = OR\\n\\t         \\\\(  = Match a start parentheses\\n\\t             (?:  = Start another non-capturing groups\\n\\t                 [^)(]+  = Match anything that isn't a parentheses\\n\\t                 |  = OR\\n\\t                 \\\\(  = Match a start parentheses\\n\\t                     [^)(]*  = Match anything that isn't a parentheses\\n\\t                 \\\\)  = Match a end parentheses\\n\\t             )  = End Group\\n              *\\\\) = Match anything and then a close parens\\n          )  = Close non-capturing group\\n          *  = Match anything\\n       )  = Close capturing group\\n\\t \\\\)  = Match a close parens\\n\\n\\t /gi  = Get all matches, not the first.  Be case insensitive.\\n\\t */\\n\\tvar fixedCss = css.replace(/url\\\\s*\\\\(((?:[^)(]|\\\\((?:[^)(]+|\\\\([^)(]*\\\\))*\\\\))*)\\\\)/gi, function(fullMatch, origUrl) {\\n\\t\\t// strip quotes (if they exist)\\n\\t\\tvar unquotedOrigUrl = origUrl\\n\\t\\t\\t.trim()\\n\\t\\t\\t.replace(/^\\\"(.*)\\\"$/, function(o, $1){ return $1; })\\n\\t\\t\\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\\n\\n\\t\\t// already a full url? no change\\n\\t\\tif (/^(#|data:|http:\\\\/\\\\/|https:\\\\/\\\\/|file:\\\\/\\\\/\\\\/|\\\\s*$)/i.test(unquotedOrigUrl)) {\\n\\t\\t  return fullMatch;\\n\\t\\t}\\n\\n\\t\\t// convert the url to a full url\\n\\t\\tvar newUrl;\\n\\n\\t\\tif (unquotedOrigUrl.indexOf(\\\"//\\\") === 0) {\\n\\t\\t  \\t//TODO: should we add protocol?\\n\\t\\t\\tnewUrl = unquotedOrigUrl;\\n\\t\\t} else if (unquotedOrigUrl.indexOf(\\\"/\\\") === 0) {\\n\\t\\t\\t// path should be relative to the base url\\n\\t\\t\\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\\n\\t\\t} else {\\n\\t\\t\\t// path should be relative to current directory\\n\\t\\t\\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\\\.\\\\//, \\\"\\\"); // Strip leading './'\\n\\t\\t}\\n\\n\\t\\t// send back the fixed url(...)\\n\\t\\treturn \\\"url(\\\" + JSON.stringify(newUrl) + \\\")\\\";\\n\\t});\\n\\n\\t// send back the fixed css\\n\\treturn fixedCss;\\n};\\n\",\"(function (global, factory) {\\n\\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n\\ttypeof define === 'function' && define.amd ? define(factory) :\\n\\t(global.quickselect = factory());\\n}(this, (function () { 'use strict';\\n\\nfunction quickselect(arr, k, left, right, compare) {\\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\\n}\\n\\nfunction quickselectStep(arr, k, left, right, compare) {\\n\\n    while (right > left) {\\n        if (right - left > 600) {\\n            var n = right - left + 1;\\n            var m = k - left + 1;\\n            var z = Math.log(n);\\n            var s = 0.5 * Math.exp(2 * z / 3);\\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\\n            quickselectStep(arr, k, newLeft, newRight, compare);\\n        }\\n\\n        var t = arr[k];\\n        var i = left;\\n        var j = right;\\n\\n        swap(arr, left, k);\\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\\n\\n        while (i < j) {\\n            swap(arr, i, j);\\n            i++;\\n            j--;\\n            while (compare(arr[i], t) < 0) i++;\\n            while (compare(arr[j], t) > 0) j--;\\n        }\\n\\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\\n        else {\\n            j++;\\n            swap(arr, j, right);\\n        }\\n\\n        if (j <= k) left = j + 1;\\n        if (k <= j) right = j - 1;\\n    }\\n}\\n\\nfunction swap(arr, i, j) {\\n    var tmp = arr[i];\\n    arr[i] = arr[j];\\n    arr[j] = tmp;\\n}\\n\\nfunction defaultCompare(a, b) {\\n    return a < b ? -1 : a > b ? 1 : 0;\\n}\\n\\nreturn quickselect;\\n\\n})));\\n\",\"/**\\n * @module ol/util\\n */\\n/**\\n * @return {?} Any return.\\n */\\nexport function abstract() {\\n    return /** @type {?} */ ((function () {\\n        throw new Error('Unimplemented abstract method.');\\n    })());\\n}\\n/**\\n * Counter for getUid.\\n * @type {number}\\n * @private\\n */\\nvar uidCounter_ = 0;\\n/**\\n * Gets a unique ID for an object. This mutates the object so that further calls\\n * with the same object as a parameter returns the same value. Unique IDs are generated\\n * as a strictly increasing sequence. Adapted from goog.getUid.\\n *\\n * @param {Object} obj The object to get the unique ID for.\\n * @return {string} The unique ID for the object.\\n * @function module:ol.getUid\\n * @api\\n */\\nexport function getUid(obj) {\\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\\n}\\n/**\\n * OpenLayers version.\\n * @type {string}\\n */\\nexport var VERSION = '6.0.0-beta.6';\\n//# sourceMappingURL=util.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/AssertionError\\n */\\nimport { VERSION } from './util.js';\\n/**\\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\\n * extended with a `code` property.\\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\\n */\\nvar AssertionError = /** @class */ (function (_super) {\\n    __extends(AssertionError, _super);\\n    /**\\n     * @param {number} code Error code.\\n     */\\n    function AssertionError(code) {\\n        var _this = this;\\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\\n            '/doc/errors/#' + code + ' for details.';\\n        _this = _super.call(this, message) || this;\\n        /**\\n         * Error code. The meaning of the code can be found on\\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\\n         * the version found in the OpenLayers script's header comment if a version\\n         * other than the latest is used).\\n         * @type {number}\\n         * @api\\n         */\\n        _this.code = code;\\n        /**\\n         * @type {string}\\n         */\\n        _this.name = 'AssertionError';\\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\\n        _this.message = message;\\n        return _this;\\n    }\\n    return AssertionError;\\n}(Error));\\nexport default AssertionError;\\n//# sourceMappingURL=AssertionError.js.map\",\"/**\\n * @module ol/CollectionEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when an item is added to the collection.\\n     * @event module:ol/Collection.CollectionEvent#add\\n     * @api\\n     */\\n    ADD: 'add',\\n    /**\\n     * Triggered when an item is removed from the collection.\\n     * @event module:ol/Collection.CollectionEvent#remove\\n     * @api\\n     */\\n    REMOVE: 'remove'\\n};\\n//# sourceMappingURL=CollectionEventType.js.map\",\"/**\\n * @module ol/ObjectEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when a property is changed.\\n     * @event module:ol/Object.ObjectEvent#propertychange\\n     * @api\\n     */\\n    PROPERTYCHANGE: 'propertychange'\\n};\\n//# sourceMappingURL=ObjectEventType.js.map\",\"/**\\n * @module ol/obj\\n */\\n/**\\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\\n * one or more source objects to a target object.\\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\\n *\\n * @param {!Object} target The target object.\\n * @param {...Object} var_sources The source object(s).\\n * @return {!Object} The modified target object.\\n */\\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\\n    if (target === undefined || target === null) {\\n        throw new TypeError('Cannot convert undefined or null to object');\\n    }\\n    var output = Object(target);\\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\\n        var source = arguments[i];\\n        if (source !== undefined && source !== null) {\\n            for (var key in source) {\\n                if (source.hasOwnProperty(key)) {\\n                    output[key] = source[key];\\n                }\\n            }\\n        }\\n    }\\n    return output;\\n};\\n/**\\n * Removes all properties from an object.\\n * @param {Object} object The object to clear.\\n */\\nexport function clear(object) {\\n    for (var property in object) {\\n        delete object[property];\\n    }\\n}\\n/**\\n * Polyfill for Object.values().  Get an array of property values from an object.\\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\\n *\\n * @param {!Object<K,V>} object The object from which to get the values.\\n * @return {!Array<V>} The property values.\\n * @template K,V\\n */\\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\\n    var values = [];\\n    for (var property in object) {\\n        values.push(object[property]);\\n    }\\n    return values;\\n};\\n/**\\n * Determine if an object has any properties.\\n * @param {Object} object The object to check.\\n * @return {boolean} The object is empty.\\n */\\nexport function isEmpty(object) {\\n    var property;\\n    for (property in object) {\\n        return false;\\n    }\\n    return !property;\\n}\\n//# sourceMappingURL=obj.js.map\",\"/**\\n * @module ol/events\\n */\\nimport { clear } from './obj.js';\\n/**\\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\\n * @typedef {Object} EventsKey\\n * @property {Object} [bindTo]\\n * @property {ListenerFunction} [boundListener]\\n * @property {boolean} callOnce\\n * @property {number} [deleteIndex]\\n * @property {ListenerFunction} listener\\n * @property {import(\\\"./events/Target.js\\\").EventTargetLike} target\\n * @property {string} type\\n * @api\\n */\\n/**\\n * Listener function. This function is called with an event object as argument.\\n * When the function returns `false`, event propagation will stop.\\n *\\n * @typedef {function((Event|import(\\\"./events/Event.js\\\").default)): (void|boolean)} ListenerFunction\\n * @api\\n */\\n/**\\n * @param {EventsKey} listenerObj Listener object.\\n * @return {ListenerFunction} Bound listener.\\n */\\nexport function bindListener(listenerObj) {\\n    var boundListener = function (evt) {\\n        var listener = listenerObj.listener;\\n        var bindTo = listenerObj.bindTo || listenerObj.target;\\n        if (listenerObj.callOnce) {\\n            unlistenByKey(listenerObj);\\n        }\\n        return listener.call(bindTo, evt);\\n    };\\n    listenerObj.boundListener = boundListener;\\n    return boundListener;\\n}\\n/**\\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\\n * array.\\n *\\n * @param {!Array<!EventsKey>} listeners Array of listeners.\\n * @param {!Function} listener The listener function.\\n * @param {Object=} opt_this The `this` value inside the listener.\\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\\n *     listener, for {@link module:ol/events~unlistenByKey}.\\n * @return {EventsKey|undefined} The matching listener object.\\n */\\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\\n    var listenerObj;\\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n        listenerObj = listeners[i];\\n        if (listenerObj.listener === listener &&\\n            listenerObj.bindTo === opt_this) {\\n            if (opt_setDeleteIndex) {\\n                listenerObj.deleteIndex = i;\\n            }\\n            return listenerObj;\\n        }\\n    }\\n    return undefined;\\n}\\n/**\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n * @param {string} type Type.\\n * @return {Array<EventsKey>|undefined} Listeners.\\n */\\nexport function getListeners(target, type) {\\n    var listenerMap = getListenerMap(target);\\n    return listenerMap ? listenerMap[type] : undefined;\\n}\\n/**\\n * Get the lookup of listeners.\\n * @param {Object} target Target.\\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\\n * @return {!Object<string, Array<EventsKey>>} Map of\\n *     listeners by event type.\\n */\\nfunction getListenerMap(target, opt_create) {\\n    var listenerMap = target.ol_lm;\\n    if (!listenerMap && opt_create) {\\n        listenerMap = target.ol_lm = {};\\n    }\\n    return listenerMap;\\n}\\n/**\\n * Remove the listener map from a target.\\n * @param {Object} target Target.\\n */\\nfunction removeListenerMap(target) {\\n    delete target.ol_lm;\\n}\\n/**\\n * Clean up all listener objects of the given type.  All properties on the\\n * listener objects will be removed, and if no listeners remain in the listener\\n * map, it will be removed from the target.\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n * @param {string} type Type.\\n */\\nfunction removeListeners(target, type) {\\n    var listeners = getListeners(target, type);\\n    if (listeners) {\\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n            /** @type {import(\\\"./events/Target.js\\\").default} */ (target).\\n                removeEventListener(type, listeners[i].boundListener);\\n            clear(listeners[i]);\\n        }\\n        listeners.length = 0;\\n        var listenerMap = getListenerMap(target);\\n        if (listenerMap) {\\n            delete listenerMap[type];\\n            if (Object.keys(listenerMap).length === 0) {\\n                removeListenerMap(target);\\n            }\\n        }\\n    }\\n}\\n/**\\n * Registers an event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * This function efficiently binds a `listener` to a `this` object, and returns\\n * a key for use with {@link module:ol/events~unlistenByKey}.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\\n * @return {EventsKey} Unique key for the listener.\\n */\\nexport function listen(target, type, listener, opt_this, opt_once) {\\n    var listenerMap = getListenerMap(target, true);\\n    var listeners = listenerMap[type];\\n    if (!listeners) {\\n        listeners = listenerMap[type] = [];\\n    }\\n    var listenerObj = findListener(listeners, listener, opt_this, false);\\n    if (listenerObj) {\\n        if (!opt_once) {\\n            // Turn one-off listener into a permanent one.\\n            listenerObj.callOnce = false;\\n        }\\n    }\\n    else {\\n        listenerObj = {\\n            bindTo: opt_this,\\n            callOnce: !!opt_once,\\n            listener: listener,\\n            target: target,\\n            type: type\\n        };\\n        /** @type {import(\\\"./events/Target.js\\\").default} */ (target).\\n            addEventListener(type, bindListener(listenerObj));\\n        listeners.push(listenerObj);\\n    }\\n    return listenerObj;\\n}\\n/**\\n * Registers a one-off event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * This function efficiently binds a `listener` as self-unregistering listener\\n * to a `this` object, and returns a key for use with\\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\\n * unregistered before it is called.\\n *\\n * When {@link module:ol/events~listen} is called with the same arguments after this\\n * function, the self-unregistering listener will be turned into a permanent\\n * listener.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n * @return {EventsKey} Key for unlistenByKey.\\n */\\nexport function listenOnce(target, type, listener, opt_this) {\\n    return listen(target, type, listener, opt_this, true);\\n}\\n/**\\n * Unregisters an event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * To return a listener, this function needs to be called with the exact same\\n * arguments that were used for a previous {@link module:ol/events~listen} call.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n */\\nexport function unlisten(target, type, listener, opt_this) {\\n    var listeners = getListeners(target, type);\\n    if (listeners) {\\n        var listenerObj = findListener(listeners, listener, opt_this, true);\\n        if (listenerObj) {\\n            unlistenByKey(listenerObj);\\n        }\\n    }\\n}\\n/**\\n * Unregisters event listeners on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * The argument passed to this function is the key returned from\\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\\n *\\n * @param {EventsKey} key The key.\\n */\\nexport function unlistenByKey(key) {\\n    if (key && key.target) {\\n        /** @type {import(\\\"./events/Target.js\\\").default} */ (key.target).\\n            removeEventListener(key.type, key.boundListener);\\n        var listeners = getListeners(key.target, key.type);\\n        if (listeners) {\\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\\n            if (i !== -1) {\\n                listeners.splice(i, 1);\\n            }\\n            if (listeners.length === 0) {\\n                removeListeners(key.target, key.type);\\n            }\\n        }\\n        clear(key);\\n    }\\n}\\n/**\\n * Unregisters all event listeners on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n */\\nexport function unlistenAll(target) {\\n    var listenerMap = getListenerMap(target);\\n    if (listenerMap) {\\n        for (var type in listenerMap) {\\n            removeListeners(target, type);\\n        }\\n    }\\n}\\n//# sourceMappingURL=events.js.map\",\"/**\\n * @module ol/Disposable\\n */\\n/**\\n * @classdesc\\n * Objects that need to clean up after themselves.\\n */\\nvar Disposable = /** @class */ (function () {\\n    function Disposable() {\\n        /**\\n         * The object has already been disposed.\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.disposed_ = false;\\n    }\\n    /**\\n     * Clean up.\\n     */\\n    Disposable.prototype.dispose = function () {\\n        if (!this.disposed_) {\\n            this.disposed_ = true;\\n            this.disposeInternal();\\n        }\\n    };\\n    /**\\n     * Extension point for disposable objects.\\n     * @protected\\n     */\\n    Disposable.prototype.disposeInternal = function () { };\\n    return Disposable;\\n}());\\nexport default Disposable;\\n//# sourceMappingURL=Disposable.js.map\",\"/**\\n * @module ol/functions\\n */\\n/**\\n * Always returns true.\\n * @returns {boolean} true.\\n */\\nexport function TRUE() {\\n    return true;\\n}\\n/**\\n * Always returns false.\\n * @returns {boolean} false.\\n */\\nexport function FALSE() {\\n    return false;\\n}\\n/**\\n * A reusable function, used e.g. as a default for callbacks.\\n *\\n * @return {void} Nothing.\\n */\\nexport function VOID() { }\\n//# sourceMappingURL=functions.js.map\",\"/**\\n * @module ol/events/Event\\n */\\n/**\\n * @classdesc\\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\\n *\\n * This implementation only provides `type` and `target` properties, and\\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\\n * for higher level events defined in the library, and works with\\n * {@link module:ol/events/Target~Target}.\\n */\\nvar Event = /** @class */ (function () {\\n    /**\\n     * @param {string} type Type.\\n     */\\n    function Event(type) {\\n        /**\\n         * @type {boolean}\\n         */\\n        this.propagationStopped;\\n        /**\\n         * The event type.\\n         * @type {string}\\n         * @api\\n         */\\n        this.type = type;\\n        /**\\n         * The event target.\\n         * @type {Object}\\n         * @api\\n         */\\n        this.target = null;\\n    }\\n    /**\\n     * Stop event propagation.\\n     * @api\\n     */\\n    Event.prototype.preventDefault = function () {\\n        this.propagationStopped = true;\\n    };\\n    /**\\n     * Stop event propagation.\\n     * @api\\n     */\\n    Event.prototype.stopPropagation = function () {\\n        this.propagationStopped = true;\\n    };\\n    return Event;\\n}());\\n/**\\n * @param {Event|import(\\\"./Event.js\\\").default} evt Event\\n */\\nexport function stopPropagation(evt) {\\n    evt.stopPropagation();\\n}\\n/**\\n * @param {Event|import(\\\"./Event.js\\\").default} evt Event\\n */\\nexport function preventDefault(evt) {\\n    evt.preventDefault();\\n}\\nexport default Event;\\n//# sourceMappingURL=Event.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/events/Target\\n */\\nimport Disposable from '../Disposable.js';\\nimport { unlistenAll } from '../events.js';\\nimport { VOID } from '../functions.js';\\nimport Event from './Event.js';\\n/**\\n * @typedef {EventTarget|Target} EventTargetLike\\n */\\n/**\\n * @classdesc\\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\\n *\\n * There are two important simplifications compared to the specification:\\n *\\n * 1. The handling of `useCapture` in `addEventListener` and\\n *    `removeEventListener`. There is no real capture model.\\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\\n *    There is no event target hierarchy. When a listener calls\\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\\n *    more listeners after this one will be called. Same as when the listener\\n *    returns false.\\n */\\nvar Target = /** @class */ (function (_super) {\\n    __extends(Target, _super);\\n    function Target() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {!Object<string, number>}\\n         */\\n        _this.pendingRemovals_ = {};\\n        /**\\n         * @private\\n         * @type {!Object<string, number>}\\n         */\\n        _this.dispatching_ = {};\\n        /**\\n         * @private\\n         * @type {!Object<string, Array<import(\\\"../events.js\\\").ListenerFunction>>}\\n         */\\n        _this.listeners_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../events.js\\\").ListenerFunction} listener Listener.\\n     */\\n    Target.prototype.addEventListener = function (type, listener) {\\n        var listeners = this.listeners_[type];\\n        if (!listeners) {\\n            listeners = this.listeners_[type] = [];\\n        }\\n        if (listeners.indexOf(listener) === -1) {\\n            listeners.push(listener);\\n        }\\n    };\\n    /**\\n     * Dispatches an event and calls all listeners listening for events\\n     * of this type. The event parameter can either be a string or an\\n     * Object with a `type` property.\\n     *\\n     * @param {{type: string,\\n     *     target: (EventTargetLike|undefined),\\n     *     propagationStopped: (boolean|undefined)}|\\n     *     import(\\\"./Event.js\\\").default|string} event Event object.\\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\\n     *     event object or if any of the listeners returned false.\\n     * @api\\n     */\\n    Target.prototype.dispatchEvent = function (event) {\\n        var evt = typeof event === 'string' ? new Event(event) : event;\\n        var type = evt.type;\\n        evt.target = this;\\n        var listeners = this.listeners_[type];\\n        var propagate;\\n        if (listeners) {\\n            if (!(type in this.dispatching_)) {\\n                this.dispatching_[type] = 0;\\n                this.pendingRemovals_[type] = 0;\\n            }\\n            ++this.dispatching_[type];\\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\\n                    propagate = false;\\n                    break;\\n                }\\n            }\\n            --this.dispatching_[type];\\n            if (this.dispatching_[type] === 0) {\\n                var pendingRemovals = this.pendingRemovals_[type];\\n                delete this.pendingRemovals_[type];\\n                while (pendingRemovals--) {\\n                    this.removeEventListener(type, VOID);\\n                }\\n                delete this.dispatching_[type];\\n            }\\n            return propagate;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Target.prototype.disposeInternal = function () {\\n        unlistenAll(this);\\n    };\\n    /**\\n     * Get the listeners for a specified event type. Listeners are returned in the\\n     * order that they will be called in.\\n     *\\n     * @param {string} type Type.\\n     * @return {Array<import(\\\"../events.js\\\").ListenerFunction>} Listeners.\\n     */\\n    Target.prototype.getListeners = function (type) {\\n        return this.listeners_[type];\\n    };\\n    /**\\n     * @param {string=} opt_type Type. If not provided,\\n     *     `true` will be returned if this event target has any listeners.\\n     * @return {boolean} Has listeners.\\n     */\\n    Target.prototype.hasListener = function (opt_type) {\\n        return opt_type ?\\n            opt_type in this.listeners_ :\\n            Object.keys(this.listeners_).length > 0;\\n    };\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../events.js\\\").ListenerFunction} listener Listener.\\n     */\\n    Target.prototype.removeEventListener = function (type, listener) {\\n        var listeners = this.listeners_[type];\\n        if (listeners) {\\n            var index = listeners.indexOf(listener);\\n            if (type in this.pendingRemovals_) {\\n                // make listener a no-op, and remove later in #dispatchEvent()\\n                listeners[index] = VOID;\\n                ++this.pendingRemovals_[type];\\n            }\\n            else {\\n                listeners.splice(index, 1);\\n                if (listeners.length === 0) {\\n                    delete this.listeners_[type];\\n                }\\n            }\\n        }\\n    };\\n    return Target;\\n}(Disposable));\\nexport default Target;\\n//# sourceMappingURL=Target.js.map\",\"/**\\n * @module ol/events/EventType\\n */\\n/**\\n * @enum {string}\\n * @const\\n */\\nexport default {\\n    /**\\n     * Generic change event. Triggered when the revision counter is increased.\\n     * @event module:ol/events/Event~Event#change\\n     * @api\\n     */\\n    CHANGE: 'change',\\n    CLEAR: 'clear',\\n    CONTEXTMENU: 'contextmenu',\\n    CLICK: 'click',\\n    DBLCLICK: 'dblclick',\\n    DRAGENTER: 'dragenter',\\n    DRAGOVER: 'dragover',\\n    DROP: 'drop',\\n    ERROR: 'error',\\n    KEYDOWN: 'keydown',\\n    KEYPRESS: 'keypress',\\n    LOAD: 'load',\\n    MOUSEDOWN: 'mousedown',\\n    MOUSEMOVE: 'mousemove',\\n    MOUSEOUT: 'mouseout',\\n    MOUSEUP: 'mouseup',\\n    MOUSEWHEEL: 'mousewheel',\\n    MSPOINTERDOWN: 'MSPointerDown',\\n    RESIZE: 'resize',\\n    TOUCHSTART: 'touchstart',\\n    TOUCHMOVE: 'touchmove',\\n    TOUCHEND: 'touchend',\\n    WHEEL: 'wheel'\\n};\\n//# sourceMappingURL=EventType.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Observable\\n */\\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\\nimport EventTarget from './events/Target.js';\\nimport EventType from './events/EventType.js';\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * An event target providing convenient methods for listener registration\\n * and unregistration. A generic `change` event is always available through\\n * {@link module:ol/Observable~Observable#changed}.\\n *\\n * @fires import(\\\"./events/Event.js\\\").Event\\n * @api\\n */\\nvar Observable = /** @class */ (function (_super) {\\n    __extends(Observable, _super);\\n    function Observable() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.revision_ = 0;\\n        return _this;\\n    }\\n    /**\\n     * Increases the revision counter and dispatches a 'change' event.\\n     * @api\\n     */\\n    Observable.prototype.changed = function () {\\n        ++this.revision_;\\n        this.dispatchEvent(EventType.CHANGE);\\n    };\\n    /**\\n     * Get the version number for this object.  Each time the object is modified,\\n     * its version number will be incremented.\\n     * @return {number} Revision.\\n     * @api\\n     */\\n    Observable.prototype.getRevision = function () {\\n        return this.revision_;\\n    };\\n    /**\\n     * Listen for a certain type of event.\\n     * @param {string|Array<string>} type The event type or array of event types.\\n     * @param {function(?): ?} listener The listener function.\\n     * @return {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} Unique key for the listener. If\\n     *     called with an array of event types as the first argument, the return\\n     *     will be an array of keys.\\n     * @api\\n     */\\n    Observable.prototype.on = function (type, listener) {\\n        if (Array.isArray(type)) {\\n            var len = type.length;\\n            var keys = new Array(len);\\n            for (var i = 0; i < len; ++i) {\\n                keys[i] = listen(this, type[i], listener);\\n            }\\n            return keys;\\n        }\\n        else {\\n            return listen(this, /** @type {string} */ (type), listener);\\n        }\\n    };\\n    /**\\n     * Listen once for a certain type of event.\\n     * @param {string|Array<string>} type The event type or array of event types.\\n     * @param {function(?): ?} listener The listener function.\\n     * @return {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} Unique key for the listener. If\\n     *     called with an array of event types as the first argument, the return\\n     *     will be an array of keys.\\n     * @api\\n     */\\n    Observable.prototype.once = function (type, listener) {\\n        if (Array.isArray(type)) {\\n            var len = type.length;\\n            var keys = new Array(len);\\n            for (var i = 0; i < len; ++i) {\\n                keys[i] = listenOnce(this, type[i], listener);\\n            }\\n            return keys;\\n        }\\n        else {\\n            return listenOnce(this, /** @type {string} */ (type), listener);\\n        }\\n    };\\n    /**\\n     * Unlisten for a certain type of event.\\n     * @param {string|Array<string>} type The event type or array of event types.\\n     * @param {function(?): ?} listener The listener function.\\n     * @api\\n     */\\n    Observable.prototype.un = function (type, listener) {\\n        if (Array.isArray(type)) {\\n            for (var i = 0, ii = type.length; i < ii; ++i) {\\n                unlisten(this, type[i], listener);\\n            }\\n            return;\\n        }\\n        else {\\n            unlisten(this, /** @type {string} */ (type), listener);\\n        }\\n    };\\n    return Observable;\\n}(EventTarget));\\n/**\\n * Removes an event listener using the key returned by `on()` or `once()`.\\n * @param {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} key The key returned by `on()`\\n *     or `once()` (or an array of keys).\\n * @api\\n */\\nexport function unByKey(key) {\\n    if (Array.isArray(key)) {\\n        for (var i = 0, ii = key.length; i < ii; ++i) {\\n            unlistenByKey(key[i]);\\n        }\\n    }\\n    else {\\n        unlistenByKey(/** @type {import(\\\"./events.js\\\").EventsKey} */ (key));\\n    }\\n}\\nexport default Observable;\\n//# sourceMappingURL=Observable.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Object\\n */\\nimport { getUid } from './util.js';\\nimport ObjectEventType from './ObjectEventType.js';\\nimport Observable from './Observable.js';\\nimport Event from './events/Event.js';\\nimport { assign } from './obj.js';\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\\n */\\nvar ObjectEvent = /** @class */ (function (_super) {\\n    __extends(ObjectEvent, _super);\\n    /**\\n     * @param {string} type The event type.\\n     * @param {string} key The property name.\\n     * @param {*} oldValue The old value for `key`.\\n     */\\n    function ObjectEvent(type, key, oldValue) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The name of the property whose value is changing.\\n         * @type {string}\\n         * @api\\n         */\\n        _this.key = key;\\n        /**\\n         * The old value. To get the new value use `e.target.get(e.key)` where\\n         * `e` is the event object.\\n         * @type {*}\\n         * @api\\n         */\\n        _this.oldValue = oldValue;\\n        return _this;\\n    }\\n    return ObjectEvent;\\n}(Event));\\nexport { ObjectEvent };\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Most non-trivial classes inherit from this.\\n *\\n * This extends {@link module:ol/Observable} with observable\\n * properties, where each property is observable as well as the object as a\\n * whole.\\n *\\n * Classes that inherit from this have pre-defined properties, to which you can\\n * add your owns. The pre-defined properties are listed in this documentation as\\n * 'Observable Properties', and have their own accessors; for example,\\n * {@link module:ol/Map~Map} has a `target` property, accessed with\\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\\n * settable. There are also general-purpose accessors `get()` and `set()`. For\\n * example, `get('target')` is equivalent to `getTarget()`.\\n *\\n * The `set` accessors trigger a change event, and you can monitor this by\\n * registering a listener. For example, {@link module:ol/View~View} has a\\n * `center` property, so `view.on('change:center', function(evt) {...});` would\\n * call the function whenever the value of the center property changes. Within\\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\\n * would return the new center.\\n *\\n * You can add your own observable properties with\\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\\n * You can listen for changes on that property value with\\n * `object.on('change:prop', listener)`. You can get a list of all\\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\\n *\\n * Note that the observable properties are separate from standard JS properties.\\n * You can, for example, give your map object a title with\\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\\n * first will be a `hasOwnProperty`; the second will appear in\\n * `getProperties()`. Only the second is observable.\\n *\\n * Properties can be deleted by using the unset method. E.g.\\n * object.unset('foo').\\n *\\n * @fires ObjectEvent\\n * @api\\n */\\nvar BaseObject = /** @class */ (function (_super) {\\n    __extends(BaseObject, _super);\\n    /**\\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\\n     */\\n    function BaseObject(opt_values) {\\n        var _this = _super.call(this) || this;\\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\\n        // the same as the order in which they were created.  This also helps to\\n        // ensure that object properties are always added in the same order, which\\n        // helps many JavaScript engines generate faster code.\\n        getUid(_this);\\n        /**\\n         * @private\\n         * @type {!Object<string, *>}\\n         */\\n        _this.values_ = {};\\n        if (opt_values !== undefined) {\\n            _this.setProperties(opt_values);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Gets a value.\\n     * @param {string} key Key name.\\n     * @return {*} Value.\\n     * @api\\n     */\\n    BaseObject.prototype.get = function (key) {\\n        var value;\\n        if (this.values_.hasOwnProperty(key)) {\\n            value = this.values_[key];\\n        }\\n        return value;\\n    };\\n    /**\\n     * Get a list of object property names.\\n     * @return {Array<string>} List of property names.\\n     * @api\\n     */\\n    BaseObject.prototype.getKeys = function () {\\n        return Object.keys(this.values_);\\n    };\\n    /**\\n     * Get an object of all property names and values.\\n     * @return {Object<string, *>} Object.\\n     * @api\\n     */\\n    BaseObject.prototype.getProperties = function () {\\n        return assign({}, this.values_);\\n    };\\n    /**\\n     * @param {string} key Key name.\\n     * @param {*} oldValue Old value.\\n     */\\n    BaseObject.prototype.notify = function (key, oldValue) {\\n        var eventType;\\n        eventType = getChangeEventType(key);\\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\\n        eventType = ObjectEventType.PROPERTYCHANGE;\\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\\n    };\\n    /**\\n     * Sets a value.\\n     * @param {string} key Key name.\\n     * @param {*} value Value.\\n     * @param {boolean=} opt_silent Update without triggering an event.\\n     * @api\\n     */\\n    BaseObject.prototype.set = function (key, value, opt_silent) {\\n        if (opt_silent) {\\n            this.values_[key] = value;\\n        }\\n        else {\\n            var oldValue = this.values_[key];\\n            this.values_[key] = value;\\n            if (oldValue !== value) {\\n                this.notify(key, oldValue);\\n            }\\n        }\\n    };\\n    /**\\n     * Sets a collection of key-value pairs.  Note that this changes any existing\\n     * properties and adds new ones (it does not remove any existing properties).\\n     * @param {Object<string, *>} values Values.\\n     * @param {boolean=} opt_silent Update without triggering an event.\\n     * @api\\n     */\\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\\n        for (var key in values) {\\n            this.set(key, values[key], opt_silent);\\n        }\\n    };\\n    /**\\n     * Unsets a property.\\n     * @param {string} key Key name.\\n     * @param {boolean=} opt_silent Unset without triggering an event.\\n     * @api\\n     */\\n    BaseObject.prototype.unset = function (key, opt_silent) {\\n        if (key in this.values_) {\\n            var oldValue = this.values_[key];\\n            delete this.values_[key];\\n            if (!opt_silent) {\\n                this.notify(key, oldValue);\\n            }\\n        }\\n    };\\n    return BaseObject;\\n}(Observable));\\n/**\\n * @type {Object<string, string>}\\n */\\nvar changeEventTypeCache = {};\\n/**\\n * @param {string} key Key name.\\n * @return {string} Change name.\\n */\\nexport function getChangeEventType(key) {\\n    return changeEventTypeCache.hasOwnProperty(key) ?\\n        changeEventTypeCache[key] :\\n        (changeEventTypeCache[key] = 'change:' + key);\\n}\\nexport default BaseObject;\\n//# sourceMappingURL=Object.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Collection\\n */\\nimport AssertionError from './AssertionError.js';\\nimport CollectionEventType from './CollectionEventType.js';\\nimport BaseObject from './Object.js';\\nimport Event from './events/Event.js';\\n/**\\n * @enum {string}\\n * @private\\n */\\nvar Property = {\\n    LENGTH: 'length'\\n};\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\\n * type.\\n */\\nvar CollectionEvent = /** @class */ (function (_super) {\\n    __extends(CollectionEvent, _super);\\n    /**\\n     * @param {CollectionEventType} type Type.\\n     * @param {*=} opt_element Element.\\n     * @param {number} opt_index The index of the added or removed element.\\n     */\\n    function CollectionEvent(type, opt_element, opt_index) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The element that is added to or removed from the collection.\\n         * @type {*}\\n         * @api\\n         */\\n        _this.element = opt_element;\\n        /**\\n         * The index of the added or removed element.\\n         * @type {number}\\n         * @api\\n         */\\n        _this.index = opt_index;\\n        return _this;\\n    }\\n    return CollectionEvent;\\n}(Event));\\nexport { CollectionEvent };\\n/**\\n * @typedef {Object} Options\\n * @property {boolean} [unique=false] Disallow the same item from being added to\\n * the collection twice.\\n */\\n/**\\n * @classdesc\\n * An expanded version of standard JS Array, adding convenience methods for\\n * manipulation. Add and remove changes to the Collection trigger a Collection\\n * event. Note that this does not cover changes to the objects _within_ the\\n * Collection; they trigger events on the appropriate object, not on the\\n * Collection as a whole.\\n *\\n * @fires CollectionEvent\\n *\\n * @template T\\n * @api\\n */\\nvar Collection = /** @class */ (function (_super) {\\n    __extends(Collection, _super);\\n    /**\\n     * @param {Array<T>=} opt_array Array.\\n     * @param {Options=} opt_options Collection options.\\n     */\\n    function Collection(opt_array, opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.unique_ = !!options.unique;\\n        /**\\n         * @private\\n         * @type {!Array<T>}\\n         */\\n        _this.array_ = opt_array ? opt_array : [];\\n        if (_this.unique_) {\\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\\n                _this.assertUnique_(_this.array_[i], i);\\n            }\\n        }\\n        _this.updateLength_();\\n        return _this;\\n    }\\n    /**\\n     * Remove all elements from the collection.\\n     * @api\\n     */\\n    Collection.prototype.clear = function () {\\n        while (this.getLength() > 0) {\\n            this.pop();\\n        }\\n    };\\n    /**\\n     * Add elements to the collection.  This pushes each item in the provided array\\n     * to the end of the collection.\\n     * @param {!Array<T>} arr Array.\\n     * @return {Collection<T>} This collection.\\n     * @api\\n     */\\n    Collection.prototype.extend = function (arr) {\\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\\n            this.push(arr[i]);\\n        }\\n        return this;\\n    };\\n    /**\\n     * Iterate over each element, calling the provided callback.\\n     * @param {function(T, number, Array<T>): *} f The function to call\\n     *     for every element. This function takes 3 arguments (the element, the\\n     *     index and the array). The return value is ignored.\\n     * @api\\n     */\\n    Collection.prototype.forEach = function (f) {\\n        var array = this.array_;\\n        for (var i = 0, ii = array.length; i < ii; ++i) {\\n            f(array[i], i, array);\\n        }\\n    };\\n    /**\\n     * Get a reference to the underlying Array object. Warning: if the array\\n     * is mutated, no events will be dispatched by the collection, and the\\n     * collection's \\\"length\\\" property won't be in sync with the actual length\\n     * of the array.\\n     * @return {!Array<T>} Array.\\n     * @api\\n     */\\n    Collection.prototype.getArray = function () {\\n        return this.array_;\\n    };\\n    /**\\n     * Get the element at the provided index.\\n     * @param {number} index Index.\\n     * @return {T} Element.\\n     * @api\\n     */\\n    Collection.prototype.item = function (index) {\\n        return this.array_[index];\\n    };\\n    /**\\n     * Get the length of this collection.\\n     * @return {number} The length of the array.\\n     * @observable\\n     * @api\\n     */\\n    Collection.prototype.getLength = function () {\\n        return this.get(Property.LENGTH);\\n    };\\n    /**\\n     * Insert an element at the provided index.\\n     * @param {number} index Index.\\n     * @param {T} elem Element.\\n     * @api\\n     */\\n    Collection.prototype.insertAt = function (index, elem) {\\n        if (this.unique_) {\\n            this.assertUnique_(elem);\\n        }\\n        this.array_.splice(index, 0, elem);\\n        this.updateLength_();\\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\\n    };\\n    /**\\n     * Remove the last element of the collection and return it.\\n     * Return `undefined` if the collection is empty.\\n     * @return {T|undefined} Element.\\n     * @api\\n     */\\n    Collection.prototype.pop = function () {\\n        return this.removeAt(this.getLength() - 1);\\n    };\\n    /**\\n     * Insert the provided element at the end of the collection.\\n     * @param {T} elem Element.\\n     * @return {number} New length of the collection.\\n     * @api\\n     */\\n    Collection.prototype.push = function (elem) {\\n        if (this.unique_) {\\n            this.assertUnique_(elem);\\n        }\\n        var n = this.getLength();\\n        this.insertAt(n, elem);\\n        return this.getLength();\\n    };\\n    /**\\n     * Remove the first occurrence of an element from the collection.\\n     * @param {T} elem Element.\\n     * @return {T|undefined} The removed element or undefined if none found.\\n     * @api\\n     */\\n    Collection.prototype.remove = function (elem) {\\n        var arr = this.array_;\\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\\n            if (arr[i] === elem) {\\n                return this.removeAt(i);\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * Remove the element at the provided index and return it.\\n     * Return `undefined` if the collection does not contain this index.\\n     * @param {number} index Index.\\n     * @return {T|undefined} Value.\\n     * @api\\n     */\\n    Collection.prototype.removeAt = function (index) {\\n        var prev = this.array_[index];\\n        this.array_.splice(index, 1);\\n        this.updateLength_();\\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\\n        return prev;\\n    };\\n    /**\\n     * Set the element at the provided index.\\n     * @param {number} index Index.\\n     * @param {T} elem Element.\\n     * @api\\n     */\\n    Collection.prototype.setAt = function (index, elem) {\\n        var n = this.getLength();\\n        if (index < n) {\\n            if (this.unique_) {\\n                this.assertUnique_(elem, index);\\n            }\\n            var prev = this.array_[index];\\n            this.array_[index] = elem;\\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\\n        }\\n        else {\\n            for (var j = n; j < index; ++j) {\\n                this.insertAt(j, undefined);\\n            }\\n            this.insertAt(index, elem);\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    Collection.prototype.updateLength_ = function () {\\n        this.set(Property.LENGTH, this.array_.length);\\n    };\\n    /**\\n     * @private\\n     * @param {T} elem Element.\\n     * @param {number=} opt_except Optional index to ignore.\\n     */\\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\\n            if (this.array_[i] === elem && i !== opt_except) {\\n                throw new AssertionError(58);\\n            }\\n        }\\n    };\\n    return Collection;\\n}(BaseObject));\\nexport default Collection;\\n//# sourceMappingURL=Collection.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapEvent\\n */\\nimport Event from './events/Event.js';\\n/**\\n * @classdesc\\n * Events emitted as map events are instances of this type.\\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\\n */\\nvar MapEvent = /** @class */ (function (_super) {\\n    __extends(MapEvent, _super);\\n    /**\\n     * @param {string} type Event type.\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map Map.\\n     * @param {?import(\\\"./PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     */\\n    function MapEvent(type, map, opt_frameState) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The map where the event occurred.\\n         * @type {import(\\\"./PluggableMap.js\\\").default}\\n         * @api\\n         */\\n        _this.map = map;\\n        /**\\n         * The frame state at the time of the event.\\n         * @type {?import(\\\"./PluggableMap.js\\\").FrameState}\\n         * @api\\n         */\\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\\n        return _this;\\n    }\\n    return MapEvent;\\n}(Event));\\nexport default MapEvent;\\n//# sourceMappingURL=MapEvent.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapBrowserEvent\\n */\\nimport MapEvent from './MapEvent.js';\\n/**\\n * @classdesc\\n * Events emitted as map browser events are instances of this type.\\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\\n */\\nvar MapBrowserEvent = /** @class */ (function (_super) {\\n    __extends(MapBrowserEvent, _super);\\n    /**\\n     * @param {string} type Event type.\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map Map.\\n     * @param {Event} browserEvent Browser event.\\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\\n     * @param {?import(\\\"./PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     */\\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\\n        var _this = _super.call(this, type, map, opt_frameState) || this;\\n        /**\\n         * The original browser event.\\n         * @const\\n         * @type {Event}\\n         * @api\\n         */\\n        _this.originalEvent = browserEvent;\\n        /**\\n         * The map pixel relative to the viewport corresponding to the original browser event.\\n         * @type {import(\\\"./pixel.js\\\").Pixel}\\n         * @api\\n         */\\n        _this.pixel = map.getEventPixel(browserEvent);\\n        /**\\n         * The coordinate in view projection corresponding to the original browser event.\\n         * @type {import(\\\"./coordinate.js\\\").Coordinate}\\n         * @api\\n         */\\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\\n        /**\\n         * Indicates if the map is currently being dragged. Only set for\\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\\n         *\\n         * @type {boolean}\\n         * @api\\n         */\\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\\n        return _this;\\n    }\\n    /**\\n     * Prevents the default browser action.\\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\\n     * @override\\n     * @api\\n     */\\n    MapBrowserEvent.prototype.preventDefault = function () {\\n        _super.prototype.preventDefault.call(this);\\n        this.originalEvent.preventDefault();\\n    };\\n    /**\\n     * Prevents further propagation of the current event.\\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\\n     * @override\\n     * @api\\n     */\\n    MapBrowserEvent.prototype.stopPropagation = function () {\\n        _super.prototype.stopPropagation.call(this);\\n        this.originalEvent.stopPropagation();\\n    };\\n    return MapBrowserEvent;\\n}(MapEvent));\\nexport default MapBrowserEvent;\\n//# sourceMappingURL=MapBrowserEvent.js.map\",\"/**\\n * @module ol/has\\n */\\nvar ua = typeof navigator !== 'undefined' ?\\n    navigator.userAgent.toLowerCase() : '';\\n/**\\n * User agent string says we are dealing with Firefox as browser.\\n * @type {boolean}\\n */\\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\\n/**\\n * User agent string says we are dealing with Safari as browser.\\n * @type {boolean}\\n */\\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\\n/**\\n * User agent string says we are dealing with a WebKit engine.\\n * @type {boolean}\\n */\\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\\n/**\\n * User agent string says we are dealing with a Mac as platform.\\n * @type {boolean}\\n */\\nexport var MAC = ua.indexOf('macintosh') !== -1;\\n/**\\n * The ratio between physical pixels and device-independent pixels\\n * (dips) on the device (`window.devicePixelRatio`).\\n * @const\\n * @type {number}\\n * @api\\n */\\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\\n/**\\n * Is HTML5 geolocation supported in the current browser?\\n * @const\\n * @type {boolean}\\n * @api\\n */\\nexport var GEOLOCATION = 'geolocation' in navigator;\\n/**\\n * True if browser supports touch events.\\n * @const\\n * @type {boolean}\\n * @api\\n */\\nexport var TOUCH = 'ontouchstart' in window;\\n/**\\n * True if browser supports pointer events.\\n * @const\\n * @type {boolean}\\n */\\nexport var POINTER = 'PointerEvent' in window;\\n/**\\n * True if browser supports ms pointer events (IE 10).\\n * @const\\n * @type {boolean}\\n */\\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\\nexport { HAS as WEBGL } from './webgl.js';\\n//# sourceMappingURL=has.js.map\",\"/**\\n * @module ol/MapBrowserEventType\\n */\\nimport EventType from './events/EventType.js';\\n/**\\n * Constants for event names.\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * A true single click with no dragging and no double click. Note that this\\n     * event is delayed by 250 ms to ensure that it is not a double click.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\\n     * @api\\n     */\\n    SINGLECLICK: 'singleclick',\\n    /**\\n     * A click with no dragging. A double click will fire two of this.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\\n     * @api\\n     */\\n    CLICK: EventType.CLICK,\\n    /**\\n     * A true double click, with no dragging.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\\n     * @api\\n     */\\n    DBLCLICK: EventType.DBLCLICK,\\n    /**\\n     * Triggered when a pointer is dragged.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\\n     * @api\\n     */\\n    POINTERDRAG: 'pointerdrag',\\n    /**\\n     * Triggered when a pointer is moved. Note that on touch devices this is\\n     * triggered when the map is panned, so is not the same as mousemove.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\\n     * @api\\n     */\\n    POINTERMOVE: 'pointermove',\\n    POINTERDOWN: 'pointerdown',\\n    POINTERUP: 'pointerup',\\n    POINTEROVER: 'pointerover',\\n    POINTEROUT: 'pointerout',\\n    POINTERENTER: 'pointerenter',\\n    POINTERLEAVE: 'pointerleave',\\n    POINTERCANCEL: 'pointercancel'\\n};\\n//# sourceMappingURL=MapBrowserEventType.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapBrowserPointerEvent\\n */\\nimport MapBrowserEvent from './MapBrowserEvent.js';\\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\\n    __extends(MapBrowserPointerEvent, _super);\\n    /**\\n     * @param {string} type Event type.\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map Map.\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer event.\\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\\n     * @param {?import(\\\"./PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     */\\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\\n        /**\\n         * @const\\n         * @type {import(\\\"./pointer/PointerEvent.js\\\").default}\\n         */\\n        _this.pointerEvent = pointerEvent;\\n        return _this;\\n    }\\n    return MapBrowserPointerEvent;\\n}(MapBrowserEvent));\\nexport default MapBrowserPointerEvent;\\n//# sourceMappingURL=MapBrowserPointerEvent.js.map\",\"/**\\n * @module ol/pointer/EventType\\n */\\n/**\\n * Constants for event names.\\n * @enum {string}\\n */\\nexport default {\\n    POINTERMOVE: 'pointermove',\\n    POINTERDOWN: 'pointerdown',\\n    POINTERUP: 'pointerup',\\n    POINTEROVER: 'pointerover',\\n    POINTEROUT: 'pointerout',\\n    POINTERENTER: 'pointerenter',\\n    POINTERLEAVE: 'pointerleave',\\n    POINTERCANCEL: 'pointercancel'\\n};\\n//# sourceMappingURL=EventType.js.map\",\"/**\\n * @module ol/pointer/EventSource\\n */\\nvar EventSource = /** @class */ (function () {\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\\n     */\\n    function EventSource(dispatcher, mapping) {\\n        /**\\n         * @type {import(\\\"./PointerEventHandler.js\\\").default}\\n         */\\n        this.dispatcher = dispatcher;\\n        /**\\n         * @private\\n         * @const\\n         * @type {!Object<string, function(Event): void>}\\n         */\\n        this.mapping_ = mapping;\\n    }\\n    /**\\n     * List of events supported by this source.\\n     * @return {Array<string>} Event names\\n     */\\n    EventSource.prototype.getEvents = function () {\\n        return Object.keys(this.mapping_);\\n    };\\n    /**\\n     * Returns the handler that should handle a given event type.\\n     * @param {string} eventType The event type.\\n     * @return {function(Event)} Handler\\n     */\\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\\n        return this.mapping_[eventType];\\n    };\\n    return EventSource;\\n}());\\nexport default EventSource;\\n//# sourceMappingURL=EventSource.js.map\",\"/**\\n * @module ol/pointer/MouseSource\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport EventSource from './EventSource.js';\\n/**\\n * @type {number}\\n */\\nexport var POINTER_ID = 1;\\n/**\\n * @type {string}\\n */\\nexport var POINTER_TYPE = 'mouse';\\n/**\\n * Radius around touchend that swallows mouse events.\\n *\\n * @type {number}\\n */\\nvar DEDUP_DIST = 25;\\n/**\\n * Handler for `mousedown`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mousedown(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        // TODO(dfreedman) workaround for some elements not sending mouseup\\n        // http://crbug/149091\\n        if (POINTER_ID.toString() in this.pointerMap) {\\n            this.cancel(inEvent);\\n        }\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\\n        this.dispatcher.down(e, inEvent);\\n    }\\n}\\n/**\\n * Handler for `mousemove`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mousemove(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.move(e, inEvent);\\n    }\\n}\\n/**\\n * Handler for `mouseup`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mouseup(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var p = this.pointerMap[POINTER_ID.toString()];\\n        if (p && p.button === inEvent.button) {\\n            var e = prepareEvent(inEvent, this.dispatcher);\\n            this.dispatcher.up(e, inEvent);\\n            this.cleanupMouse();\\n        }\\n    }\\n}\\n/**\\n * Handler for `mouseover`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mouseover(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.enterOver(e, inEvent);\\n    }\\n}\\n/**\\n * Handler for `mouseout`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mouseout(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.leaveOut(e, inEvent);\\n    }\\n}\\nvar MouseSource = /** @class */ (function (_super) {\\n    __extends(MouseSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     */\\n    function MouseSource(dispatcher) {\\n        var _this = this;\\n        var mapping = {\\n            'mousedown': mousedown,\\n            'mousemove': mousemove,\\n            'mouseup': mouseup,\\n            'mouseover': mouseover,\\n            'mouseout': mouseout\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        /**\\n         * @const\\n         * @type {!Object<string, Event|Object>}\\n         */\\n        _this.pointerMap = dispatcher.pointerMap;\\n        /**\\n         * @const\\n         * @type {Array<import(\\\"../pixel.js\\\").Pixel>}\\n         */\\n        _this.lastTouches = [];\\n        return _this;\\n    }\\n    /**\\n     * Detect if a mouse event was simulated from a touch by\\n     * checking if previously there was a touch event at the\\n     * same position.\\n     *\\n     * FIXME - Known problem with the native Android browser on\\n     * Samsung GT-I9100 (Android 4.1.2):\\n     * In case the page is scrolled, this function does not work\\n     * correctly when a canvas is used (WebGL or canvas renderer).\\n     * Mouse listeners on canvas elements (for this browser), create\\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\\n     * when a div is used, there is only one event). For the 'bad' one,\\n     * clientX/clientY and also pageX/pageY are wrong when the page\\n     * is scrolled. Because of that, this function can not detect if\\n     * the events were simulated from a touch event. As result, a\\n     * pointer event at a wrong position is dispatched, which confuses\\n     * the map interactions.\\n     * It is unclear, how one can get the correct position for the event\\n     * or detect that the positions are invalid.\\n     *\\n     * @private\\n     * @param {MouseEvent} inEvent The in event.\\n     * @return {boolean} True, if the event was generated by a touch.\\n     */\\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\\n        var lts = this.lastTouches;\\n        var x = inEvent.clientX;\\n        var y = inEvent.clientY;\\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\\n            // simulated mouse events will be swallowed near a primary touchend\\n            var dx = Math.abs(x - t[0]);\\n            var dy = Math.abs(y - t[1]);\\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * Dispatches a `pointercancel` event.\\n     *\\n     * @param {Event} inEvent The in event.\\n     */\\n    MouseSource.prototype.cancel = function (inEvent) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.cancel(e, inEvent);\\n        this.cleanupMouse();\\n    };\\n    /**\\n     * Remove the mouse from the list of active pointers.\\n     */\\n    MouseSource.prototype.cleanupMouse = function () {\\n        delete this.pointerMap[POINTER_ID.toString()];\\n    };\\n    return MouseSource;\\n}(EventSource));\\n/**\\n * Creates a copy of the original event that will be used\\n * for the fake pointer event.\\n *\\n * @param {Event} inEvent The in event.\\n * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n * @return {Object} The copied event.\\n */\\nexport function prepareEvent(inEvent, dispatcher) {\\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\\n    // forward mouse preventDefault\\n    var pd = e.preventDefault;\\n    e.preventDefault = function () {\\n        inEvent.preventDefault();\\n        pd();\\n    };\\n    e.pointerId = POINTER_ID;\\n    e.isPrimary = true;\\n    e.pointerType = POINTER_TYPE;\\n    return e;\\n}\\nexport default MouseSource;\\n//# sourceMappingURL=MouseSource.js.map\",\"/**\\n * @module ol/pointer/MsSource\\n */\\n// Based on https://github.com/Polymer/PointerEvents\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport EventSource from './EventSource.js';\\n/**\\n * @const\\n * @type {Array<string>}\\n */\\nvar POINTER_TYPES = [\\n    '',\\n    'unavailable',\\n    'touch',\\n    'pen',\\n    'mouse'\\n];\\n/**\\n * Handler for `msPointerDown`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerDown(inEvent) {\\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.down(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerMove`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerMove(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.move(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerUp`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerUp(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.up(e, inEvent);\\n    this.cleanup(inEvent.pointerId);\\n}\\n/**\\n * Handler for `msPointerOut`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerOut(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.leaveOut(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerOver`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerOver(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.enterOver(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerCancel`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerCancel(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.cancel(e, inEvent);\\n    this.cleanup(inEvent.pointerId);\\n}\\n/**\\n * Handler for `msLostPointerCapture`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msLostPointerCapture(inEvent) {\\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\\n    this.dispatcher.dispatchEvent(e);\\n}\\n/**\\n * Handler for `msGotPointerCapture`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msGotPointerCapture(inEvent) {\\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\\n    this.dispatcher.dispatchEvent(e);\\n}\\nvar MsSource = /** @class */ (function (_super) {\\n    __extends(MsSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     */\\n    function MsSource(dispatcher) {\\n        var _this = this;\\n        var mapping = {\\n            'MSPointerDown': msPointerDown,\\n            'MSPointerMove': msPointerMove,\\n            'MSPointerUp': msPointerUp,\\n            'MSPointerOut': msPointerOut,\\n            'MSPointerOver': msPointerOver,\\n            'MSPointerCancel': msPointerCancel,\\n            'MSGotPointerCapture': msGotPointerCapture,\\n            'MSLostPointerCapture': msLostPointerCapture\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        /**\\n         * @const\\n         * @type {!Object<string, MSPointerEvent|Object>}\\n         */\\n        _this.pointerMap = dispatcher.pointerMap;\\n        return _this;\\n    }\\n    /**\\n     * Creates a copy of the original event that will be used\\n     * for the fake pointer event.\\n     *\\n     * @private\\n     * @param {MSPointerEvent} inEvent The in event.\\n     * @return {Object} The copied event.\\n     */\\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\\n        /** @type {MSPointerEvent|Object} */\\n        var e = inEvent;\\n        if (typeof inEvent.pointerType === 'number') {\\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\\n        }\\n        return e;\\n    };\\n    /**\\n     * Remove this pointer from the list of active pointers.\\n     * @param {number} pointerId Pointer identifier.\\n     */\\n    MsSource.prototype.cleanup = function (pointerId) {\\n        delete this.pointerMap[pointerId.toString()];\\n    };\\n    return MsSource;\\n}(EventSource));\\nexport default MsSource;\\n//# sourceMappingURL=MsSource.js.map\",\"/**\\n * @module ol/pointer/NativeSource\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport EventSource from './EventSource.js';\\n/**\\n * Handler for `pointerdown`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerDown(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointermove`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerMove(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointerup`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerUp(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointerout`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerOut(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointerover`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerOver(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointercancel`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerCancel(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `lostpointercapture`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction lostPointerCapture(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `gotpointercapture`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction gotPointerCapture(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\nvar NativeSource = /** @class */ (function (_super) {\\n    __extends(NativeSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     */\\n    function NativeSource(dispatcher) {\\n        var _this = this;\\n        var mapping = {\\n            'pointerdown': pointerDown,\\n            'pointermove': pointerMove,\\n            'pointerup': pointerUp,\\n            'pointerout': pointerOut,\\n            'pointerover': pointerOver,\\n            'pointercancel': pointerCancel,\\n            'gotpointercapture': gotPointerCapture,\\n            'lostpointercapture': lostPointerCapture\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        return _this;\\n    }\\n    return NativeSource;\\n}(EventSource));\\nexport default NativeSource;\\n//# sourceMappingURL=NativeSource.js.map\",\"/**\\n * @module ol/pointer/PointerEvent\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport _Event from '../events/Event.js';\\n/**\\n * Is the `buttons` property supported?\\n * @type {boolean}\\n */\\nvar HAS_BUTTONS = false;\\nvar PointerEvent = /** @class */ (function (_super) {\\n    __extends(PointerEvent, _super);\\n    /**\\n     * A class for pointer events.\\n     *\\n     * This class is used as an abstraction for mouse events,\\n     * touch events and even native pointer events.\\n     *\\n     * @param {string} type The type of the event to create.\\n     * @param {Event} originalEvent The event.\\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\\n     *    initial event properties.\\n     */\\n    function PointerEvent(type, originalEvent, opt_eventDict) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * @const\\n         * @type {Event}\\n         */\\n        _this.originalEvent = originalEvent;\\n        var eventDict = opt_eventDict ? opt_eventDict : {};\\n        /**\\n         * @type {number}\\n         */\\n        _this.buttons = getButtons(eventDict);\\n        /**\\n         * @type {number}\\n         */\\n        _this.pressure = getPressure(eventDict, _this.buttons);\\n        // MouseEvent related properties\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\\n        /**\\n         * @type {Object}\\n         */\\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\\n        /**\\n         * @type {number}\\n         */\\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\\n        /**\\n         * @type {number}\\n         */\\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\\n        /**\\n         * @type {number}\\n         */\\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\\n        /**\\n         * @type {Node}\\n         */\\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\\n            eventDict['relatedTarget'] : null;\\n        // PointerEvent related properties\\n        /**\\n         * @const\\n         * @type {number}\\n         */\\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\\n        /**\\n         * @type {string}\\n         */\\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\\n        /**\\n         * @type {number}\\n         */\\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\\n        // keep the semantics of preventDefault\\n        if (originalEvent.preventDefault) {\\n            _this.preventDefault = function () {\\n                originalEvent.preventDefault();\\n            };\\n        }\\n        return _this;\\n    }\\n    return PointerEvent;\\n}(_Event));\\n/**\\n * @param {Object<string, ?>} eventDict The event dictionary.\\n * @return {number} Button indicator.\\n */\\nfunction getButtons(eventDict) {\\n    // According to the w3c spec,\\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\\n    // left mouse button depressed.\\n    //\\n    // As of now, the only way to distinguish between the two states of\\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\\n    // no mouse button is held.\\n    //\\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\\n    // but initMouseEvent does not expose an argument with which to set\\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\\n    // of app developers.\\n    //\\n    // The only way to propagate the correct state of MouseEvent.which and\\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\\n    // is to call initMouseEvent with a buttonArg value of -1.\\n    //\\n    // This is fixed with DOM Level 4's use of buttons\\n    var buttons;\\n    if (eventDict.buttons || HAS_BUTTONS) {\\n        buttons = eventDict.buttons;\\n    }\\n    else {\\n        switch (eventDict.which) {\\n            case 1:\\n                buttons = 1;\\n                break;\\n            case 2:\\n                buttons = 4;\\n                break;\\n            case 3:\\n                buttons = 2;\\n                break;\\n            default: buttons = 0;\\n        }\\n    }\\n    return buttons;\\n}\\n/**\\n * @param {Object<string, ?>} eventDict The event dictionary.\\n * @param {number} buttons Button indicator.\\n * @return {number} The pressure.\\n */\\nfunction getPressure(eventDict, buttons) {\\n    // Spec requires that pointers without pressure specified use 0.5 for down\\n    // state and 0 for up state.\\n    var pressure = 0;\\n    if (eventDict.pressure) {\\n        pressure = eventDict.pressure;\\n    }\\n    else {\\n        pressure = buttons ? 0.5 : 0;\\n    }\\n    return pressure;\\n}\\n/**\\n * Checks if the `buttons` property is supported.\\n */\\n(function () {\\n    try {\\n        var ev = new MouseEvent('click', { buttons: 1 });\\n        HAS_BUTTONS = ev.buttons === 1;\\n    }\\n    catch (e) {\\n        // pass\\n    }\\n})();\\nexport default PointerEvent;\\n//# sourceMappingURL=PointerEvent.js.map\",\"/**\\n * @module ol/array\\n */\\n/**\\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\\n * https://github.com/darkskyapp/binary-search\\n *\\n * @param {Array<*>} haystack Items to search through.\\n * @param {*} needle The item to look for.\\n * @param {Function=} opt_comparator Comparator function.\\n * @return {number} The index of the item if found, -1 if not.\\n */\\nexport function binarySearch(haystack, needle, opt_comparator) {\\n    var mid, cmp;\\n    var comparator = opt_comparator || numberSafeCompareFunction;\\n    var low = 0;\\n    var high = haystack.length;\\n    var found = false;\\n    while (low < high) {\\n        /* Note that \\\"(low + high) >>> 1\\\" may overflow, and results in a typecast\\n         * to double (which gives the wrong results). */\\n        mid = low + (high - low >> 1);\\n        cmp = +comparator(haystack[mid], needle);\\n        if (cmp < 0.0) { /* Too low. */\\n            low = mid + 1;\\n        }\\n        else { /* Key found or too high */\\n            high = mid;\\n            found = !cmp;\\n        }\\n    }\\n    /* Key not found. */\\n    return found ? low : ~low;\\n}\\n/**\\n * Compare function for array sort that is safe for numbers.\\n * @param {*} a The first object to be compared.\\n * @param {*} b The second object to be compared.\\n * @return {number} A negative number, zero, or a positive number as the first\\n *     argument is less than, equal to, or greater than the second.\\n */\\nexport function numberSafeCompareFunction(a, b) {\\n    return a > b ? 1 : a < b ? -1 : 0;\\n}\\n/**\\n * Whether the array contains the given object.\\n * @param {Array<*>} arr The array to test for the presence of the element.\\n * @param {*} obj The object for which to test.\\n * @return {boolean} The object is in the array.\\n */\\nexport function includes(arr, obj) {\\n    return arr.indexOf(obj) >= 0;\\n}\\n/**\\n * @param {Array<number>} arr Array.\\n * @param {number} target Target.\\n * @param {number} direction 0 means return the nearest, > 0\\n *    means return the largest nearest, < 0 means return the\\n *    smallest nearest.\\n * @return {number} Index.\\n */\\nexport function linearFindNearest(arr, target, direction) {\\n    var n = arr.length;\\n    if (arr[0] <= target) {\\n        return 0;\\n    }\\n    else if (target <= arr[n - 1]) {\\n        return n - 1;\\n    }\\n    else {\\n        var i = void 0;\\n        if (direction > 0) {\\n            for (i = 1; i < n; ++i) {\\n                if (arr[i] < target) {\\n                    return i - 1;\\n                }\\n            }\\n        }\\n        else if (direction < 0) {\\n            for (i = 1; i < n; ++i) {\\n                if (arr[i] <= target) {\\n                    return i;\\n                }\\n            }\\n        }\\n        else {\\n            for (i = 1; i < n; ++i) {\\n                if (arr[i] == target) {\\n                    return i;\\n                }\\n                else if (arr[i] < target) {\\n                    if (arr[i - 1] - target < target - arr[i]) {\\n                        return i - 1;\\n                    }\\n                    else {\\n                        return i;\\n                    }\\n                }\\n            }\\n        }\\n        return n - 1;\\n    }\\n}\\n/**\\n * @param {Array<*>} arr Array.\\n * @param {number} begin Begin index.\\n * @param {number} end End index.\\n */\\nexport function reverseSubArray(arr, begin, end) {\\n    while (begin < end) {\\n        var tmp = arr[begin];\\n        arr[begin] = arr[end];\\n        arr[end] = tmp;\\n        ++begin;\\n        --end;\\n    }\\n}\\n/**\\n * @param {Array<VALUE>} arr The array to modify.\\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\\n * @template VALUE\\n */\\nexport function extend(arr, data) {\\n    var extension = Array.isArray(data) ? data : [data];\\n    var length = extension.length;\\n    for (var i = 0; i < length; i++) {\\n        arr[arr.length] = extension[i];\\n    }\\n}\\n/**\\n * @param {Array<VALUE>} arr The array to modify.\\n * @param {VALUE} obj The element to remove.\\n * @template VALUE\\n * @return {boolean} If the element was removed.\\n */\\nexport function remove(arr, obj) {\\n    var i = arr.indexOf(obj);\\n    var found = i > -1;\\n    if (found) {\\n        arr.splice(i, 1);\\n    }\\n    return found;\\n}\\n/**\\n * @param {Array<VALUE>} arr The array to search in.\\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\\n * @template VALUE\\n * @return {VALUE|null} The element found or null.\\n */\\nexport function find(arr, func) {\\n    var length = arr.length >>> 0;\\n    var value;\\n    for (var i = 0; i < length; i++) {\\n        value = arr[i];\\n        if (func(value, i, arr)) {\\n            return value;\\n        }\\n    }\\n    return null;\\n}\\n/**\\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\\n * @return {boolean} Whether the two arrays are equal.\\n */\\nexport function equals(arr1, arr2) {\\n    var len1 = arr1.length;\\n    if (len1 !== arr2.length) {\\n        return false;\\n    }\\n    for (var i = 0; i < len1; i++) {\\n        if (arr1[i] !== arr2[i]) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * Sort the passed array such that the relative order of equal elements is preverved.\\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\\n * @param {Array<*>} arr The array to sort (modifies original).\\n * @param {!function(*, *): number} compareFnc Comparison function.\\n * @api\\n */\\nexport function stableSort(arr, compareFnc) {\\n    var length = arr.length;\\n    var tmp = Array(arr.length);\\n    var i;\\n    for (i = 0; i < length; i++) {\\n        tmp[i] = { index: i, value: arr[i] };\\n    }\\n    tmp.sort(function (a, b) {\\n        return compareFnc(a.value, b.value) || a.index - b.index;\\n    });\\n    for (i = 0; i < arr.length; i++) {\\n        arr[i] = tmp[i].value;\\n    }\\n}\\n/**\\n * @param {Array<*>} arr The array to search in.\\n * @param {Function} func Comparison function.\\n * @return {number} Return index.\\n */\\nexport function findIndex(arr, func) {\\n    var index;\\n    var found = !arr.every(function (el, idx) {\\n        index = idx;\\n        return !func(el, idx, arr);\\n    });\\n    return found ? index : -1;\\n}\\n/**\\n * @param {Array<*>} arr The array to test.\\n * @param {Function=} opt_func Comparison function.\\n * @param {boolean=} opt_strict Strictly sorted (default false).\\n * @return {boolean} Return index.\\n */\\nexport function isSorted(arr, opt_func, opt_strict) {\\n    var compare = opt_func || numberSafeCompareFunction;\\n    return arr.every(function (currentVal, index) {\\n        if (index === 0) {\\n            return true;\\n        }\\n        var res = compare(arr[index - 1], currentVal);\\n        return !(res > 0 || opt_strict && res === 0);\\n    });\\n}\\n//# sourceMappingURL=array.js.map\",\"/**\\n * @module ol/pointer/TouchSource\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport { remove } from '../array.js';\\nimport EventSource from './EventSource.js';\\nimport { POINTER_ID } from './MouseSource.js';\\n/**\\n * @type {number}\\n */\\nvar CLICK_COUNT_TIMEOUT = 200;\\n/**\\n * @type {string}\\n */\\nvar POINTER_TYPE = 'touch';\\n/**\\n * Handler for `touchstart`, triggers `pointerover`,\\n * `pointerenter` and `pointerdown` events.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The in event.\\n */\\nfunction touchstart(inEvent) {\\n    this.vacuumTouches_(inEvent);\\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\\n    this.dedupSynthMouse_(inEvent);\\n    this.clickCount_++;\\n    this.processTouches_(inEvent, this.overDown_);\\n}\\n/**\\n * Handler for `touchmove`.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The in event.\\n */\\nfunction touchmove(inEvent) {\\n    this.processTouches_(inEvent, this.moveOverOut_);\\n}\\n/**\\n * Handler for `touchend`, triggers `pointerup`,\\n * `pointerout` and `pointerleave` events.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The event.\\n */\\nfunction touchend(inEvent) {\\n    this.dedupSynthMouse_(inEvent);\\n    this.processTouches_(inEvent, this.upOut_);\\n}\\n/**\\n * Handler for `touchcancel`, triggers `pointercancel`,\\n * `pointerout` and `pointerleave` events.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The in event.\\n */\\nfunction touchcancel(inEvent) {\\n    this.processTouches_(inEvent, this.cancelOut_);\\n}\\nvar TouchSource = /** @class */ (function (_super) {\\n    __extends(TouchSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher The event handler.\\n     * @param {import(\\\"./MouseSource.js\\\").default} mouseSource Mouse source.\\n     */\\n    function TouchSource(dispatcher, mouseSource) {\\n        var _this = this;\\n        var mapping = {\\n            'touchstart': touchstart,\\n            'touchmove': touchmove,\\n            'touchend': touchend,\\n            'touchcancel': touchcancel\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        /**\\n         * @const\\n         * @type {!Object<string, Event|Object>}\\n         */\\n        _this.pointerMap = dispatcher.pointerMap;\\n        /**\\n         * @const\\n         * @type {import(\\\"./MouseSource.js\\\").default}\\n         */\\n        _this.mouseSource = mouseSource;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.firstTouchId_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.clickCount_ = 0;\\n        /**\\n         * @private\\n         * @type {?}\\n         */\\n        _this.resetId_;\\n        /**\\n         * Mouse event timeout: This should be long enough to\\n         * ignore compat mouse events made by touch.\\n         * @private\\n         * @type {number}\\n         */\\n        _this.dedupTimeout_ = 2500;\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     * @param {Touch} inTouch The in touch.\\n     * @return {boolean} True, if this is the primary touch.\\n     */\\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\\n        return this.firstTouchId_ === inTouch.identifier;\\n    };\\n    /**\\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\\n     * @param {Touch} inTouch The in touch.\\n     * @private\\n     */\\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\\n        var count = Object.keys(this.pointerMap).length;\\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\\n            this.firstTouchId_ = inTouch.identifier;\\n            this.cancelResetClickCount_();\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {PointerEvent} inPointer The in pointer object.\\n     */\\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\\n        if (inPointer.isPrimary) {\\n            this.firstTouchId_ = undefined;\\n            this.resetClickCount_();\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    TouchSource.prototype.resetClickCount_ = function () {\\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\\n    };\\n    /**\\n     * @private\\n     */\\n    TouchSource.prototype.resetClickCountHandler_ = function () {\\n        this.clickCount_ = 0;\\n        this.resetId_ = undefined;\\n    };\\n    /**\\n     * @private\\n     */\\n    TouchSource.prototype.cancelResetClickCount_ = function () {\\n        if (this.resetId_ !== undefined) {\\n            clearTimeout(this.resetId_);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent Browser event\\n     * @param {Touch} inTouch Touch event\\n     * @return {PointerEvent} A pointer object.\\n     */\\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\\n        // Spec specifies that pointerId 1 is reserved for Mouse.\\n        // Touch identifiers can start at 0.\\n        // Add 2 to the touch identifier for compatibility.\\n        e.pointerId = inTouch.identifier + 2;\\n        // TODO: check if this is necessary?\\n        //e.target = findTarget(e);\\n        e.bubbles = true;\\n        e.cancelable = true;\\n        e.detail = this.clickCount_;\\n        e.button = 0;\\n        e.buttons = 1;\\n        e.width = inTouch.radiusX || 0;\\n        e.height = inTouch.radiusY || 0;\\n        e.pressure = inTouch.force || 0.5;\\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\\n        e.pointerType = POINTER_TYPE;\\n        // make sure that the properties that are different for\\n        // each `Touch` object are not copied from the BrowserEvent object\\n        e.clientX = inTouch.clientX;\\n        e.clientY = inTouch.clientY;\\n        e.screenX = inTouch.screenX;\\n        e.screenY = inTouch.screenY;\\n        return e;\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} inEvent Touch event\\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\\n     */\\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\\n        var count = touches.length;\\n        function preventDefault() {\\n            inEvent.preventDefault();\\n        }\\n        for (var i = 0; i < count; ++i) {\\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\\n            // forward touch preventDefaults\\n            pointer.preventDefault = preventDefault;\\n            inFunction.call(this, inEvent, pointer);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {TouchList} touchList The touch list.\\n     * @param {number} searchId Search identifier.\\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\\n     */\\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\\n        var l = touchList.length;\\n        for (var i = 0; i < l; i++) {\\n            var touch = touchList[i];\\n            if (touch.identifier === searchId) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * In some instances, a touchstart can happen without a touchend. This\\n     * leaves the pointermap in a broken state.\\n     * Therefore, on every touchstart, we remove the touches that did not fire a\\n     * touchend event.\\n     * To keep state globally consistent, we fire a pointercancel for\\n     * this \\\"abandoned\\\" touch\\n     *\\n     * @private\\n     * @param {TouchEvent} inEvent The in event.\\n     */\\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\\n        var touchList = inEvent.touches;\\n        // pointerMap.getCount() should be < touchList.length here,\\n        // as the touchstart has not been processed yet.\\n        var keys = Object.keys(this.pointerMap);\\n        var count = keys.length;\\n        if (count >= touchList.length) {\\n            var d = [];\\n            for (var i = 0; i < count; ++i) {\\n                var key = Number(keys[i]);\\n                var value = this.pointerMap[key];\\n                // Never remove pointerId == 1, which is mouse.\\n                // Touch identifiers are 2 smaller than their pointerId, which is the\\n                // index in pointermap.\\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\\n                    d.push(value.out);\\n                }\\n            }\\n            for (var i = 0; i < d.length; ++i) {\\n                this.cancelOut_(inEvent, d[i]);\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent The event.\\n     * @param {PointerEvent} inPointer The in pointer object.\\n     */\\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\\n        this.pointerMap[inPointer.pointerId] = {\\n            target: inPointer.target,\\n            out: inPointer,\\n            outTarget: inPointer.target\\n        };\\n        this.dispatcher.over(inPointer, browserEvent);\\n        this.dispatcher.enter(inPointer, browserEvent);\\n        this.dispatcher.down(inPointer, browserEvent);\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent The event.\\n     * @param {PointerEvent} inPointer The in pointer.\\n     */\\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\\n        var event = inPointer;\\n        var pointer = this.pointerMap[event.pointerId];\\n        // a finger drifted off the screen, ignore it\\n        if (!pointer) {\\n            return;\\n        }\\n        var outEvent = pointer.out;\\n        var outTarget = pointer.outTarget;\\n        this.dispatcher.move(event, browserEvent);\\n        if (outEvent && outTarget !== event.target) {\\n            outEvent.relatedTarget = event.target;\\n            /** @type {Object} */ (event).relatedTarget = outTarget;\\n            // recover from retargeting by shadow\\n            outEvent.target = outTarget;\\n            if (event.target) {\\n                this.dispatcher.leaveOut(outEvent, browserEvent);\\n                this.dispatcher.enterOver(event, browserEvent);\\n            }\\n            else {\\n                // clean up case when finger leaves the screen\\n                /** @type {Object} */ (event).target = outTarget;\\n                /** @type {Object} */ (event).relatedTarget = null;\\n                this.cancelOut_(browserEvent, event);\\n            }\\n        }\\n        pointer.out = event;\\n        pointer.outTarget = event.target;\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent An event.\\n     * @param {PointerEvent} inPointer The inPointer object.\\n     */\\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\\n        this.dispatcher.up(inPointer, browserEvent);\\n        this.dispatcher.out(inPointer, browserEvent);\\n        this.dispatcher.leave(inPointer, browserEvent);\\n        this.cleanUpPointer_(inPointer);\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent The event.\\n     * @param {PointerEvent} inPointer The in pointer.\\n     */\\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\\n        this.dispatcher.cancel(inPointer, browserEvent);\\n        this.dispatcher.out(inPointer, browserEvent);\\n        this.dispatcher.leave(inPointer, browserEvent);\\n        this.cleanUpPointer_(inPointer);\\n    };\\n    /**\\n     * @private\\n     * @param {PointerEvent} inPointer The inPointer object.\\n     */\\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\\n        delete this.pointerMap[inPointer.pointerId];\\n        this.removePrimaryPointer_(inPointer);\\n    };\\n    /**\\n     * Prevent synth mouse events from creating pointer events.\\n     *\\n     * @private\\n     * @param {TouchEvent} inEvent The in event.\\n     */\\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\\n        var lts = this.mouseSource.lastTouches;\\n        var t = inEvent.changedTouches[0];\\n        // only the primary finger will synth mouse events\\n        if (this.isPrimaryTouch_(t)) {\\n            // remember x/y of last touch\\n            var lt_1 = [t.clientX, t.clientY];\\n            lts.push(lt_1);\\n            setTimeout(function () {\\n                // remove touch after timeout\\n                remove(lts, lt_1);\\n            }, this.dedupTimeout_);\\n        }\\n    };\\n    return TouchSource;\\n}(EventSource));\\nexport default TouchSource;\\n//# sourceMappingURL=TouchSource.js.map\",\"/**\\n * @module ol/pointer/PointerEventHandler\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport { listen, unlisten } from '../events.js';\\nimport EventTarget from '../events/Target.js';\\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\\nimport PointerEventType from './EventType.js';\\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\\nimport MsSource from './MsSource.js';\\nimport NativeSource from './NativeSource.js';\\nimport PointerEvent from './PointerEvent.js';\\nimport TouchSource from './TouchSource.js';\\n/**\\n * Properties to copy when cloning an event, with default values.\\n * @type {Array<Array>}\\n */\\nvar CLONE_PROPS = [\\n    // MouseEvent\\n    ['bubbles', false],\\n    ['cancelable', false],\\n    ['view', null],\\n    ['detail', null],\\n    ['screenX', 0],\\n    ['screenY', 0],\\n    ['clientX', 0],\\n    ['clientY', 0],\\n    ['ctrlKey', false],\\n    ['altKey', false],\\n    ['shiftKey', false],\\n    ['metaKey', false],\\n    ['button', 0],\\n    ['relatedTarget', null],\\n    // DOM Level 3\\n    ['buttons', 0],\\n    // PointerEvent\\n    ['pointerId', 0],\\n    ['width', 0],\\n    ['height', 0],\\n    ['pressure', 0],\\n    ['tiltX', 0],\\n    ['tiltY', 0],\\n    ['pointerType', ''],\\n    ['hwTimestamp', 0],\\n    ['isPrimary', false],\\n    // event instance\\n    ['type', ''],\\n    ['target', null],\\n    ['currentTarget', null],\\n    ['which', 0]\\n];\\nvar PointerEventHandler = /** @class */ (function (_super) {\\n    __extends(PointerEventHandler, _super);\\n    /**\\n     * @param {Element|HTMLDocument} element Viewport element.\\n     */\\n    function PointerEventHandler(element) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @const\\n         * @private\\n         * @type {Element|HTMLDocument}\\n         */\\n        _this.element_ = element;\\n        /**\\n         * @const\\n         * @type {!Object<string, Event|Object>}\\n         */\\n        _this.pointerMap = {};\\n        /**\\n         * @type {Object<string, function(Event): void>}\\n         * @private\\n         */\\n        _this.eventMap_ = {};\\n        /**\\n         * @type {Array<import(\\\"./EventSource.js\\\").default>}\\n         * @private\\n         */\\n        _this.eventSourceList_ = [];\\n        _this.registerSources();\\n        return _this;\\n    }\\n    /**\\n     * Set up the event sources (mouse, touch and native pointers)\\n     * that generate pointer events.\\n     */\\n    PointerEventHandler.prototype.registerSources = function () {\\n        if (POINTER) {\\n            this.registerSource('native', new NativeSource(this));\\n        }\\n        else if (MSPOINTER) {\\n            this.registerSource('ms', new MsSource(this));\\n        }\\n        else {\\n            var mouseSource = new MouseSource(this);\\n            this.registerSource('mouse', mouseSource);\\n            if (TOUCH) {\\n                this.registerSource('touch', new TouchSource(this, mouseSource));\\n            }\\n        }\\n        // register events on the viewport element\\n        this.register_();\\n    };\\n    /**\\n     * Add a new event source that will generate pointer events.\\n     *\\n     * @param {string} name A name for the event source\\n     * @param {import(\\\"./EventSource.js\\\").default} source The source event.\\n     */\\n    PointerEventHandler.prototype.registerSource = function (name, source) {\\n        var s = source;\\n        var newEvents = s.getEvents();\\n        if (newEvents) {\\n            newEvents.forEach(function (e) {\\n                var handler = s.getHandlerForEvent(e);\\n                if (handler) {\\n                    this.eventMap_[e] = handler.bind(s);\\n                }\\n            }.bind(this));\\n            this.eventSourceList_.push(s);\\n        }\\n    };\\n    /**\\n     * Set up the events for all registered event sources.\\n     * @private\\n     */\\n    PointerEventHandler.prototype.register_ = function () {\\n        var l = this.eventSourceList_.length;\\n        for (var i = 0; i < l; i++) {\\n            var eventSource = this.eventSourceList_[i];\\n            this.addEvents_(eventSource.getEvents());\\n        }\\n    };\\n    /**\\n     * Remove all registered events.\\n     * @private\\n     */\\n    PointerEventHandler.prototype.unregister_ = function () {\\n        var l = this.eventSourceList_.length;\\n        for (var i = 0; i < l; i++) {\\n            var eventSource = this.eventSourceList_[i];\\n            this.removeEvents_(eventSource.getEvents());\\n        }\\n    };\\n    /**\\n     * Calls the right handler for a new event.\\n     * @private\\n     * @param {Event} inEvent Browser event.\\n     */\\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\\n        var type = inEvent.type;\\n        var handler = this.eventMap_[type];\\n        if (handler) {\\n            handler(inEvent);\\n        }\\n    };\\n    /**\\n     * Setup listeners for the given events.\\n     * @private\\n     * @param {Array<string>} events List of events.\\n     */\\n    PointerEventHandler.prototype.addEvents_ = function (events) {\\n        events.forEach(function (eventName) {\\n            listen(this.element_, eventName, this.eventHandler_, this);\\n        }.bind(this));\\n    };\\n    /**\\n     * Unregister listeners for the given events.\\n     * @private\\n     * @param {Array<string>} events List of events.\\n     */\\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\\n        events.forEach(function (e) {\\n            unlisten(this.element_, e, this.eventHandler_, this);\\n        }.bind(this));\\n    };\\n    /**\\n     * Returns a snapshot of inEvent, with writable properties.\\n     *\\n     * @param {Event} event Browser event.\\n     * @param {Event|Touch} inEvent An event that contains\\n     *    properties to copy.\\n     * @return {Object} An object containing shallow copies of\\n     *    `inEvent`'s properties.\\n     */\\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\\n        var eventCopy = {};\\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\\n            var p = CLONE_PROPS[i][0];\\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\\n        }\\n        return eventCopy;\\n    };\\n    // EVENTS\\n    /**\\n     * Triggers a 'pointerdown' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.down = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointermove' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.move = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerup' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.up = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerenter' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.enter = function (data, event) {\\n        data.bubbles = false;\\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerleave' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.leave = function (data, event) {\\n        data.bubbles = false;\\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerover' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.over = function (data, event) {\\n        data.bubbles = true;\\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerout' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.out = function (data, event) {\\n        data.bubbles = true;\\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointercancel' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.cancel = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\\n    };\\n    /**\\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\\n        this.out(data, event);\\n        if (!this.contains_(data.target, data.relatedTarget)) {\\n            this.leave(data, event);\\n        }\\n    };\\n    /**\\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.enterOver = function (data, event) {\\n        this.over(data, event);\\n        if (!this.contains_(data.target, data.relatedTarget)) {\\n            this.enter(data, event);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {Element} container The container element.\\n     * @param {Element} contained The contained element.\\n     * @return {boolean} Returns true if the container element\\n     *   contains the other element.\\n     */\\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\\n        if (!container || !contained) {\\n            return false;\\n        }\\n        return container.contains(contained);\\n    };\\n    // EVENT CREATION AND TRACKING\\n    /**\\n     * Creates a new Event of type `inType`, based on the information in\\n     * `data`.\\n     *\\n     * @param {string} inType A string representing the type of event to create.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     * @return {PointerEvent} A PointerEvent of type `inType`.\\n     */\\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\\n        return new PointerEvent(inType, event, data);\\n    };\\n    /**\\n     * Make and dispatch an event in one call.\\n     * @param {string} inType A string representing the type of event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\\n        var e = this.makeEvent(inType, data, event);\\n        this.dispatchEvent(e);\\n    };\\n    /**\\n     * Creates a pointer event from a native pointer event\\n     * and dispatches this event.\\n     * @param {Event} event A platform event with a target.\\n     */\\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\\n        var e = this.makeEvent(event.type, event, event);\\n        this.dispatchEvent(e);\\n    };\\n    /**\\n     * Wrap a native mouse event into a pointer event.\\n     * This proxy method is required for the legacy IE support.\\n     * @param {string} eventType The pointer event type.\\n     * @param {Event} event The event.\\n     * @return {PointerEvent} The wrapped event.\\n     */\\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\\n        return pointerEvent;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PointerEventHandler.prototype.disposeInternal = function () {\\n        this.unregister_();\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    return PointerEventHandler;\\n}(EventTarget));\\nexport default PointerEventHandler;\\n//# sourceMappingURL=PointerEventHandler.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapBrowserEventHandler\\n */\\nimport { DEVICE_PIXEL_RATIO } from './has.js';\\nimport MapBrowserEventType from './MapBrowserEventType.js';\\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\\nimport { listen, unlistenByKey } from './events.js';\\nimport EventTarget from './events/Target.js';\\nimport PointerEventType from './pointer/EventType.js';\\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\\n    __extends(MapBrowserEventHandler, _super);\\n    /**\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map The map with the viewport to listen to events on.\\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\\n     */\\n    function MapBrowserEventHandler(map, moveTolerance) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * This is the element that we will listen to the real events on.\\n         * @type {import(\\\"./PluggableMap.js\\\").default}\\n         * @private\\n         */\\n        _this.map_ = map;\\n        /**\\n         * @type {any}\\n         * @private\\n         */\\n        _this.clickTimeoutId_;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.dragging_ = false;\\n        /**\\n         * @type {!Array<import(\\\"./events.js\\\").EventsKey>}\\n         * @private\\n         */\\n        _this.dragListenerKeys_ = [];\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.moveTolerance_ = moveTolerance ?\\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\\n        /**\\n         * The most recent \\\"down\\\" type event (or null if none have occurred).\\n         * Set on pointerdown.\\n         * @type {import(\\\"./pointer/PointerEvent.js\\\").default}\\n         * @private\\n         */\\n        _this.down_ = null;\\n        var element = _this.map_.getViewport();\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.activePointers_ = 0;\\n        /**\\n         * @type {!Object<number, boolean>}\\n         * @private\\n         */\\n        _this.trackedTouches_ = {};\\n        /**\\n         * Event handler which generates pointer events for\\n         * the viewport element.\\n         *\\n         * @type {PointerEventHandler}\\n         * @private\\n         */\\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\\n        /**\\n         * Event handler which generates pointer events for\\n         * the document (used when dragging).\\n         *\\n         * @type {PointerEventHandler}\\n         * @private\\n         */\\n        _this.documentPointerEventHandler_ = null;\\n        /**\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         * @private\\n         */\\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\\n        /**\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         * @private\\n         */\\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\\n        return _this;\\n    }\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\\n        this.dispatchEvent(newEvent);\\n        if (this.clickTimeoutId_ !== undefined) {\\n            // double-click\\n            clearTimeout(this.clickTimeoutId_);\\n            this.clickTimeoutId_ = undefined;\\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\\n            this.dispatchEvent(newEvent);\\n        }\\n        else {\\n            // click\\n            this.clickTimeoutId_ = setTimeout(function () {\\n                this.clickTimeoutId_ = undefined;\\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\\n                this.dispatchEvent(newEvent);\\n            }.bind(this), 250);\\n        }\\n    };\\n    /**\\n     * Keeps track on how many pointers are currently active.\\n     *\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\\n        var event = pointerEvent;\\n        if (event.type == MapBrowserEventType.POINTERUP ||\\n            event.type == MapBrowserEventType.POINTERCANCEL) {\\n            delete this.trackedTouches_[event.pointerId];\\n        }\\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\\n            this.trackedTouches_[event.pointerId] = true;\\n        }\\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\\n        this.updateActivePointers_(pointerEvent);\\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\\n        this.dispatchEvent(newEvent);\\n        // We emulate click events on left mouse button click, touch contact, and pen\\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\\n        // to 0).\\n        // See http://www.w3.org/TR/pointerevents/#button-states\\n        // We only fire click, singleclick, and doubleclick if nobody has called\\n        // event.stopPropagation() or event.preventDefault().\\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\\n            this.emulateClick_(this.down_);\\n        }\\n        if (this.activePointers_ === 0) {\\n            this.dragListenerKeys_.forEach(unlistenByKey);\\n            this.dragListenerKeys_.length = 0;\\n            this.dragging_ = false;\\n            this.down_ = null;\\n            this.documentPointerEventHandler_.dispose();\\n            this.documentPointerEventHandler_ = null;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @return {boolean} If the left mouse button was pressed.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\\n        return pointerEvent.button === 0;\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\\n        this.updateActivePointers_(pointerEvent);\\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\\n        this.dispatchEvent(newEvent);\\n        this.down_ = pointerEvent;\\n        if (this.dragListenerKeys_.length === 0) {\\n            /* Set up a pointer event handler on the `document`,\\n             * which is required when the pointer is moved outside\\n             * the viewport when dragging.\\n             */\\n            this.documentPointerEventHandler_ =\\n                new PointerEventHandler(document);\\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \\n            /* Note that the listener for `pointercancel is set up on\\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\\n             * the `pointerup` and `pointermove` listeners.\\n             *\\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\\n             * issues `pointercancel` events, when there was no `touchend` for a\\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\\n             * But `documentPointerEventHandler_` doesn't know about the first\\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\\n             * only registered there.\\n             */\\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\\n        // Between pointerdown and pointerup, pointermove events are triggered.\\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\\n        // moved a significant distance.\\n        if (this.isMoving_(pointerEvent)) {\\n            this.dragging_ = true;\\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\\n            this.dispatchEvent(newEvent);\\n        }\\n        // Some native android browser triggers mousemove events during small period\\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\\n        // https://code.google.com/p/android/issues/detail?id=19827\\n        // ex: Galaxy Tab P3110 + Android 4.1.1\\n        pointerEvent.preventDefault();\\n    };\\n    /**\\n     * Wrap and relay a pointer event.  Note that this requires that the type\\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @return {boolean} Is moving.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\\n        return this.dragging_ ||\\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\\n        if (this.relayedListenerKey_) {\\n            unlistenByKey(this.relayedListenerKey_);\\n            this.relayedListenerKey_ = null;\\n        }\\n        if (this.pointerdownListenerKey_) {\\n            unlistenByKey(this.pointerdownListenerKey_);\\n            this.pointerdownListenerKey_ = null;\\n        }\\n        this.dragListenerKeys_.forEach(unlistenByKey);\\n        this.dragListenerKeys_.length = 0;\\n        if (this.documentPointerEventHandler_) {\\n            this.documentPointerEventHandler_.dispose();\\n            this.documentPointerEventHandler_ = null;\\n        }\\n        if (this.pointerEventHandler_) {\\n            this.pointerEventHandler_.dispose();\\n            this.pointerEventHandler_ = null;\\n        }\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    return MapBrowserEventHandler;\\n}(EventTarget));\\nexport default MapBrowserEventHandler;\\n//# sourceMappingURL=MapBrowserEventHandler.js.map\",\"/**\\n * @module ol/MapEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered after a map frame is rendered.\\n     * @event module:ol/MapEvent~MapEvent#postrender\\n     * @api\\n     */\\n    POSTRENDER: 'postrender',\\n    /**\\n     * Triggered when the map starts moving.\\n     * @event module:ol/MapEvent~MapEvent#movestart\\n     * @api\\n     */\\n    MOVESTART: 'movestart',\\n    /**\\n     * Triggered after the map is moved.\\n     * @event module:ol/MapEvent~MapEvent#moveend\\n     * @api\\n     */\\n    MOVEEND: 'moveend'\\n};\\n//# sourceMappingURL=MapEventType.js.map\",\"/**\\n * @module ol/MapProperty\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    LAYERGROUP: 'layergroup',\\n    SIZE: 'size',\\n    TARGET: 'target',\\n    VIEW: 'view'\\n};\\n//# sourceMappingURL=MapProperty.js.map\",\"/**\\n * @module ol/render/EventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered before a layer is rendered.\\n     * @event module:ol/render/Event~RenderEvent#prerender\\n     * @api\\n     */\\n    PRERENDER: 'prerender',\\n    /**\\n     * Triggered after a layer is rendered.\\n     * @event module:ol/render/Event~RenderEvent#postrender\\n     * @api\\n     */\\n    POSTRENDER: 'postrender',\\n    /**\\n     * Triggered before layers are rendered.\\n     * @event module:ol/render/Event~RenderEvent#precompose\\n     * @api\\n     */\\n    PRECOMPOSE: 'precompose',\\n    /**\\n     * Triggered after all layers are rendered.\\n     * @event module:ol/render/Event~RenderEvent#postcompose\\n     * @api\\n     */\\n    POSTCOMPOSE: 'postcompose',\\n    /**\\n     * Triggered when rendering is complete, i.e. all sources and tiles have\\n     * finished loading for the current viewport, and all tiles are faded in.\\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\\n     * @api\\n     */\\n    RENDERCOMPLETE: 'rendercomplete'\\n};\\n//# sourceMappingURL=EventType.js.map\",\"/**\\n * @module ol/TileState\\n */\\n/**\\n * @enum {number}\\n */\\nexport default {\\n    IDLE: 0,\\n    LOADING: 1,\\n    LOADED: 2,\\n    /**\\n     * Indicates that tile loading failed\\n     * @type {number}\\n     */\\n    ERROR: 3,\\n    EMPTY: 4,\\n    ABORT: 5\\n};\\n//# sourceMappingURL=TileState.js.map\",\"/**\\n * @module ol/asserts\\n */\\nimport AssertionError from './AssertionError.js';\\n/**\\n * @param {*} assertion Assertion we expected to be truthy.\\n * @param {number} errorCode Error code.\\n */\\nexport function assert(assertion, errorCode) {\\n    if (!assertion) {\\n        throw new AssertionError(errorCode);\\n    }\\n}\\n//# sourceMappingURL=asserts.js.map\",\"/**\\n * @module ol/structs/PriorityQueue\\n */\\nimport { assert } from '../asserts.js';\\nimport { clear } from '../obj.js';\\n/**\\n * @type {number}\\n */\\nexport var DROP = Infinity;\\n/**\\n * @classdesc\\n * Priority queue.\\n *\\n * The implementation is inspired from the Closure Library's Heap class and\\n * Python's heapq module.\\n *\\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\\n *\\n * @template T\\n */\\nvar PriorityQueue = /** @class */ (function () {\\n    /**\\n     * @param {function(T): number} priorityFunction Priority function.\\n     * @param {function(T): string} keyFunction Key function.\\n     */\\n    function PriorityQueue(priorityFunction, keyFunction) {\\n        /**\\n         * @type {function(T): number}\\n         * @private\\n         */\\n        this.priorityFunction_ = priorityFunction;\\n        /**\\n         * @type {function(T): string}\\n         * @private\\n         */\\n        this.keyFunction_ = keyFunction;\\n        /**\\n         * @type {Array<T>}\\n         * @private\\n         */\\n        this.elements_ = [];\\n        /**\\n         * @type {Array<number>}\\n         * @private\\n         */\\n        this.priorities_ = [];\\n        /**\\n         * @type {!Object<string, boolean>}\\n         * @private\\n         */\\n        this.queuedElements_ = {};\\n    }\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    PriorityQueue.prototype.clear = function () {\\n        this.elements_.length = 0;\\n        this.priorities_.length = 0;\\n        clear(this.queuedElements_);\\n    };\\n    /**\\n     * Remove and return the highest-priority element. O(log N).\\n     * @return {T} Element.\\n     */\\n    PriorityQueue.prototype.dequeue = function () {\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var element = elements[0];\\n        if (elements.length == 1) {\\n            elements.length = 0;\\n            priorities.length = 0;\\n        }\\n        else {\\n            elements[0] = elements.pop();\\n            priorities[0] = priorities.pop();\\n            this.siftUp_(0);\\n        }\\n        var elementKey = this.keyFunction_(element);\\n        delete this.queuedElements_[elementKey];\\n        return element;\\n    };\\n    /**\\n     * Enqueue an element. O(log N).\\n     * @param {T} element Element.\\n     * @return {boolean} The element was added to the queue.\\n     */\\n    PriorityQueue.prototype.enqueue = function (element) {\\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\\n        var priority = this.priorityFunction_(element);\\n        if (priority != DROP) {\\n            this.elements_.push(element);\\n            this.priorities_.push(priority);\\n            this.queuedElements_[this.keyFunction_(element)] = true;\\n            this.siftDown_(0, this.elements_.length - 1);\\n            return true;\\n        }\\n        return false;\\n    };\\n    /**\\n     * @return {number} Count.\\n     */\\n    PriorityQueue.prototype.getCount = function () {\\n        return this.elements_.length;\\n    };\\n    /**\\n     * Gets the index of the left child of the node at the given index.\\n     * @param {number} index The index of the node to get the left child for.\\n     * @return {number} The index of the left child.\\n     * @private\\n     */\\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\\n        return index * 2 + 1;\\n    };\\n    /**\\n     * Gets the index of the right child of the node at the given index.\\n     * @param {number} index The index of the node to get the right child for.\\n     * @return {number} The index of the right child.\\n     * @private\\n     */\\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\\n        return index * 2 + 2;\\n    };\\n    /**\\n     * Gets the index of the parent of the node at the given index.\\n     * @param {number} index The index of the node to get the parent for.\\n     * @return {number} The index of the parent.\\n     * @private\\n     */\\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\\n        return (index - 1) >> 1;\\n    };\\n    /**\\n     * Make this a heap. O(N).\\n     * @private\\n     */\\n    PriorityQueue.prototype.heapify_ = function () {\\n        var i;\\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\\n            this.siftUp_(i);\\n        }\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    PriorityQueue.prototype.isEmpty = function () {\\n        return this.elements_.length === 0;\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @return {boolean} Is key queued.\\n     */\\n    PriorityQueue.prototype.isKeyQueued = function (key) {\\n        return key in this.queuedElements_;\\n    };\\n    /**\\n     * @param {T} element Element.\\n     * @return {boolean} Is queued.\\n     */\\n    PriorityQueue.prototype.isQueued = function (element) {\\n        return this.isKeyQueued(this.keyFunction_(element));\\n    };\\n    /**\\n     * @param {number} index The index of the node to move down.\\n     * @private\\n     */\\n    PriorityQueue.prototype.siftUp_ = function (index) {\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var count = elements.length;\\n        var element = elements[index];\\n        var priority = priorities[index];\\n        var startIndex = index;\\n        while (index < (count >> 1)) {\\n            var lIndex = this.getLeftChildIndex_(index);\\n            var rIndex = this.getRightChildIndex_(index);\\n            var smallerChildIndex = rIndex < count &&\\n                priorities[rIndex] < priorities[lIndex] ?\\n                rIndex : lIndex;\\n            elements[index] = elements[smallerChildIndex];\\n            priorities[index] = priorities[smallerChildIndex];\\n            index = smallerChildIndex;\\n        }\\n        elements[index] = element;\\n        priorities[index] = priority;\\n        this.siftDown_(startIndex, index);\\n    };\\n    /**\\n     * @param {number} startIndex The index of the root.\\n     * @param {number} index The index of the node to move up.\\n     * @private\\n     */\\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var element = elements[index];\\n        var priority = priorities[index];\\n        while (index > startIndex) {\\n            var parentIndex = this.getParentIndex_(index);\\n            if (priorities[parentIndex] > priority) {\\n                elements[index] = elements[parentIndex];\\n                priorities[index] = priorities[parentIndex];\\n                index = parentIndex;\\n            }\\n            else {\\n                break;\\n            }\\n        }\\n        elements[index] = element;\\n        priorities[index] = priority;\\n    };\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    PriorityQueue.prototype.reprioritize = function () {\\n        var priorityFunction = this.priorityFunction_;\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var index = 0;\\n        var n = elements.length;\\n        var element, i, priority;\\n        for (i = 0; i < n; ++i) {\\n            element = elements[i];\\n            priority = priorityFunction(element);\\n            if (priority == DROP) {\\n                delete this.queuedElements_[this.keyFunction_(element)];\\n            }\\n            else {\\n                priorities[index] = priority;\\n                elements[index++] = element;\\n            }\\n        }\\n        elements.length = index;\\n        priorities.length = index;\\n        this.heapify_();\\n    };\\n    return PriorityQueue;\\n}());\\nexport default PriorityQueue;\\n//# sourceMappingURL=PriorityQueue.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/TileQueue\\n */\\nimport TileState from './TileState.js';\\nimport { listen, unlisten } from './events.js';\\nimport EventType from './events/EventType.js';\\nimport PriorityQueue from './structs/PriorityQueue.js';\\n/**\\n * @typedef {function(import(\\\"./Tile.js\\\").default, string, import(\\\"./coordinate.js\\\").Coordinate, number): number} PriorityFunction\\n */\\nvar TileQueue = /** @class */ (function (_super) {\\n    __extends(TileQueue, _super);\\n    /**\\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\\n     */\\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\\n        var _this = _super.call(this, \\n        /**\\n         * @param {Array} element Element.\\n         * @return {number} Priority.\\n         */\\n        function (element) {\\n            return tilePriorityFunction.apply(null, element);\\n        }, \\n        /**\\n         * @param {Array} element Element.\\n         * @return {string} Key.\\n         */\\n        function (element) {\\n            return ( /** @type {import(\\\"./Tile.js\\\").default} */(element[0]).getKey());\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {function(): ?}\\n         */\\n        _this.tileChangeCallback_ = tileChangeCallback;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.tilesLoading_ = 0;\\n        /**\\n         * @private\\n         * @type {!Object<string,boolean>}\\n         */\\n        _this.tilesLoadingKeys_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    TileQueue.prototype.enqueue = function (element) {\\n        var added = _super.prototype.enqueue.call(this, element);\\n        if (added) {\\n            var tile = element[0];\\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\\n        }\\n        return added;\\n    };\\n    /**\\n     * @return {number} Number of tiles loading.\\n     */\\n    TileQueue.prototype.getTilesLoading = function () {\\n        return this.tilesLoading_;\\n    };\\n    /**\\n     * @param {import(\\\"./events/Event.js\\\").default} event Event.\\n     * @protected\\n     */\\n    TileQueue.prototype.handleTileChange = function (event) {\\n        var tile = /** @type {import(\\\"./Tile.js\\\").default} */ (event.target);\\n        var state = tile.getState();\\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\\n            state === TileState.EMPTY || state === TileState.ABORT) {\\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\\n            var tileKey = tile.getKey();\\n            if (tileKey in this.tilesLoadingKeys_) {\\n                delete this.tilesLoadingKeys_[tileKey];\\n                --this.tilesLoading_;\\n            }\\n            this.tileChangeCallback_();\\n        }\\n    };\\n    /**\\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\\n     */\\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\\n        var newLoads = 0;\\n        var abortedTiles = false;\\n        var state, tile, tileKey;\\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\\n            this.getCount() > 0) {\\n            tile = /** @type {import(\\\"./Tile.js\\\").default} */ (this.dequeue()[0]);\\n            tileKey = tile.getKey();\\n            state = tile.getState();\\n            if (state === TileState.ABORT) {\\n                abortedTiles = true;\\n            }\\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\\n                this.tilesLoadingKeys_[tileKey] = true;\\n                ++this.tilesLoading_;\\n                ++newLoads;\\n                tile.load();\\n            }\\n        }\\n        if (newLoads === 0 && abortedTiles) {\\n            // Do not stop the render loop when all wanted tiles were aborted due to\\n            // a small, saturated tile cache.\\n            this.tileChangeCallback_();\\n        }\\n    };\\n    return TileQueue;\\n}(PriorityQueue));\\nexport default TileQueue;\\n//# sourceMappingURL=TileQueue.js.map\",\"/**\\n * @module ol/tilegrid/common\\n */\\n/**\\n * Default maximum zoom for default tile grids.\\n * @type {number}\\n */\\nexport var DEFAULT_MAX_ZOOM = 42;\\n/**\\n * Default tile size.\\n * @type {number}\\n */\\nexport var DEFAULT_TILE_SIZE = 256;\\n//# sourceMappingURL=common.js.map\",\"/**\\n * @module ol/math\\n */\\nimport { assert } from './asserts.js';\\n/**\\n * Takes a number and clamps it to within the provided bounds.\\n * @param {number} value The input number.\\n * @param {number} min The minimum value to return.\\n * @param {number} max The maximum value to return.\\n * @return {number} The input number if it is within bounds, or the nearest\\n *     number within the bounds.\\n */\\nexport function clamp(value, min, max) {\\n    return Math.min(Math.max(value, min), max);\\n}\\n/**\\n * Return the hyperbolic cosine of a given number. The method will use the\\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\\n * cosine will be calculated via the reference implementation of the Mozilla\\n * developer network.\\n *\\n * @param {number} x X.\\n * @return {number} Hyperbolic cosine of x.\\n */\\nexport var cosh = (function () {\\n    // Wrapped in a iife, to save the overhead of checking for the native\\n    // implementation on every invocation.\\n    var cosh;\\n    if ('cosh' in Math) {\\n        // The environment supports the native Math.cosh function, use it…\\n        cosh = Math.cosh;\\n    }\\n    else {\\n        // … else, use the reference implementation of MDN:\\n        cosh = function (x) {\\n            var y = /** @type {Math} */ (Math).exp(x);\\n            return (y + 1 / y) / 2;\\n        };\\n    }\\n    return cosh;\\n}());\\n/**\\n * @param {number} x X.\\n * @return {number} The smallest power of two greater than or equal to x.\\n */\\nexport function roundUpToPowerOfTwo(x) {\\n    assert(0 < x, 29); // `x` must be greater than `0`\\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\\n}\\n/**\\n * Returns the square of the closest distance between the point (x, y) and the\\n * line segment (x1, y1) to (x2, y2).\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {number} x1 X1.\\n * @param {number} y1 Y1.\\n * @param {number} x2 X2.\\n * @param {number} y2 Y2.\\n * @return {number} Squared distance.\\n */\\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\\n    var dx = x2 - x1;\\n    var dy = y2 - y1;\\n    if (dx !== 0 || dy !== 0) {\\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\\n        if (t > 1) {\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n        else if (t > 0) {\\n            x1 += dx * t;\\n            y1 += dy * t;\\n        }\\n    }\\n    return squaredDistance(x, y, x1, y1);\\n}\\n/**\\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\\n * @param {number} x1 X1.\\n * @param {number} y1 Y1.\\n * @param {number} x2 X2.\\n * @param {number} y2 Y2.\\n * @return {number} Squared distance.\\n */\\nexport function squaredDistance(x1, y1, x2, y2) {\\n    var dx = x2 - x1;\\n    var dy = y2 - y1;\\n    return dx * dx + dy * dy;\\n}\\n/**\\n * Solves system of linear equations using Gaussian elimination method.\\n *\\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\\n *                                     in row-major order.\\n * @return {Array<number>} The resulting vector.\\n */\\nexport function solveLinearSystem(mat) {\\n    var n = mat.length;\\n    for (var i = 0; i < n; i++) {\\n        // Find max in the i-th column (ignoring i - 1 first rows)\\n        var maxRow = i;\\n        var maxEl = Math.abs(mat[i][i]);\\n        for (var r = i + 1; r < n; r++) {\\n            var absValue = Math.abs(mat[r][i]);\\n            if (absValue > maxEl) {\\n                maxEl = absValue;\\n                maxRow = r;\\n            }\\n        }\\n        if (maxEl === 0) {\\n            return null; // matrix is singular\\n        }\\n        // Swap max row with i-th (current) row\\n        var tmp = mat[maxRow];\\n        mat[maxRow] = mat[i];\\n        mat[i] = tmp;\\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\\n        for (var j = i + 1; j < n; j++) {\\n            var coef = -mat[j][i] / mat[i][i];\\n            for (var k = i; k < n + 1; k++) {\\n                if (i == k) {\\n                    mat[j][k] = 0;\\n                }\\n                else {\\n                    mat[j][k] += coef * mat[i][k];\\n                }\\n            }\\n        }\\n    }\\n    // Solve Ax=b for upper triangular matrix A (mat)\\n    var x = new Array(n);\\n    for (var l = n - 1; l >= 0; l--) {\\n        x[l] = mat[l][n] / mat[l][l];\\n        for (var m = l - 1; m >= 0; m--) {\\n            mat[m][n] -= mat[m][l] * x[l];\\n        }\\n    }\\n    return x;\\n}\\n/**\\n * Converts radians to to degrees.\\n *\\n * @param {number} angleInRadians Angle in radians.\\n * @return {number} Angle in degrees.\\n */\\nexport function toDegrees(angleInRadians) {\\n    return angleInRadians * 180 / Math.PI;\\n}\\n/**\\n * Converts degrees to radians.\\n *\\n * @param {number} angleInDegrees Angle in degrees.\\n * @return {number} Angle in radians.\\n */\\nexport function toRadians(angleInDegrees) {\\n    return angleInDegrees * Math.PI / 180;\\n}\\n/**\\n * Returns the modulo of a / b, depending on the sign of b.\\n *\\n * @param {number} a Dividend.\\n * @param {number} b Divisor.\\n * @return {number} Modulo.\\n */\\nexport function modulo(a, b) {\\n    var r = a % b;\\n    return r * b < 0 ? r + b : r;\\n}\\n/**\\n * Calculates the linearly interpolated value of x between a and b.\\n *\\n * @param {number} a Number\\n * @param {number} b Number\\n * @param {number} x Value to be interpolated.\\n * @return {number} Interpolated value.\\n */\\nexport function lerp(a, b, x) {\\n    return a + x * (b - a);\\n}\\n//# sourceMappingURL=math.js.map\",\"/**\\n * @module ol/centerconstraint\\n */\\nimport { clamp } from './math.js';\\n/**\\n * @typedef {function((import(\\\"./coordinate.js\\\").Coordinate|undefined), number, import(\\\"./size.js\\\").Size, boolean=): (import(\\\"./coordinate.js\\\").Coordinate|undefined)} Type\\n */\\n/**\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\\n * (only during interaction and animation).\\n * @return {Type} The constraint.\\n */\\nexport function createExtent(extent, onlyCenter, smooth) {\\n    return (\\n    /**\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate|undefined} center Center.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size; unused if `onlyCenter` was specified.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center.\\n     */\\n    function (center, resolution, size, opt_isMoving) {\\n        if (center) {\\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\\n            var minX = extent[0] + viewWidth / 2;\\n            var maxX = extent[2] - viewWidth / 2;\\n            var minY = extent[1] + viewHeight / 2;\\n            var maxY = extent[3] - viewHeight / 2;\\n            // note: when zooming out of bounds, min and max values for x and y may\\n            // end up inverted (min > max); this has to be accounted for\\n            if (minX > maxX) {\\n                minX = maxX = (maxX + minX) / 2;\\n            }\\n            if (minY > maxY) {\\n                minY = maxY = (maxY + minY) / 2;\\n            }\\n            var x = clamp(center[0], minX, maxX);\\n            var y = clamp(center[1], minY, maxY);\\n            var ratio = 30 * resolution;\\n            // during an interaction, allow some overscroll\\n            if (opt_isMoving && smooth) {\\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\\n            }\\n            return [x, y];\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate=} center Center.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center.\\n */\\nexport function none(center) {\\n    return center;\\n}\\n//# sourceMappingURL=centerconstraint.js.map\",\"/**\\n * @module ol/extent/Corner\\n */\\n/**\\n * Extent corner.\\n * @enum {string}\\n */\\nexport default {\\n    BOTTOM_LEFT: 'bottom-left',\\n    BOTTOM_RIGHT: 'bottom-right',\\n    TOP_LEFT: 'top-left',\\n    TOP_RIGHT: 'top-right'\\n};\\n//# sourceMappingURL=Corner.js.map\",\"/**\\n * @module ol/extent/Relationship\\n */\\n/**\\n * Relationship to an extent.\\n * @enum {number}\\n */\\nexport default {\\n    UNKNOWN: 0,\\n    INTERSECTING: 1,\\n    ABOVE: 2,\\n    RIGHT: 4,\\n    BELOW: 8,\\n    LEFT: 16\\n};\\n//# sourceMappingURL=Relationship.js.map\",\"/**\\n * @module ol/extent\\n */\\nimport { assert } from './asserts.js';\\nimport Corner from './extent/Corner.js';\\nimport Relationship from './extent/Relationship.js';\\n/**\\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\\n * @typedef {Array<number>} Extent\\n * @api\\n */\\n/**\\n * Build an extent that includes all given coordinates.\\n *\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @return {Extent} Bounding extent.\\n * @api\\n */\\nexport function boundingExtent(coordinates) {\\n    var extent = createEmpty();\\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n        extendCoordinate(extent, coordinates[i]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Array<number>} xs Xs.\\n * @param {Array<number>} ys Ys.\\n * @param {Extent=} opt_extent Destination extent.\\n * @private\\n * @return {Extent} Extent.\\n */\\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\\n    var minX = Math.min.apply(null, xs);\\n    var minY = Math.min.apply(null, ys);\\n    var maxX = Math.max.apply(null, xs);\\n    var maxY = Math.max.apply(null, ys);\\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n}\\n/**\\n * Return extent increased by the provided value.\\n * @param {Extent} extent Extent.\\n * @param {number} value The amount by which the extent should be buffered.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n * @api\\n */\\nexport function buffer(extent, value, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = extent[0] - value;\\n        opt_extent[1] = extent[1] - value;\\n        opt_extent[2] = extent[2] + value;\\n        opt_extent[3] = extent[3] + value;\\n        return opt_extent;\\n    }\\n    else {\\n        return [\\n            extent[0] - value,\\n            extent[1] - value,\\n            extent[2] + value,\\n            extent[3] + value\\n        ];\\n    }\\n}\\n/**\\n * Creates a clone of an extent.\\n *\\n * @param {Extent} extent Extent to clone.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} The clone.\\n */\\nexport function clone(extent, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = extent[0];\\n        opt_extent[1] = extent[1];\\n        opt_extent[2] = extent[2];\\n        opt_extent[3] = extent[3];\\n        return opt_extent;\\n    }\\n    else {\\n        return extent.slice();\\n    }\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {number} Closest squared distance.\\n */\\nexport function closestSquaredDistanceXY(extent, x, y) {\\n    var dx, dy;\\n    if (x < extent[0]) {\\n        dx = extent[0] - x;\\n    }\\n    else if (extent[2] < x) {\\n        dx = x - extent[2];\\n    }\\n    else {\\n        dx = 0;\\n    }\\n    if (y < extent[1]) {\\n        dy = extent[1] - y;\\n    }\\n    else if (extent[3] < y) {\\n        dy = y - extent[3];\\n    }\\n    else {\\n        dy = 0;\\n    }\\n    return dx * dx + dy * dy;\\n}\\n/**\\n * Check if the passed coordinate is contained or on the edge of the extent.\\n *\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @return {boolean} The coordinate is contained in the extent.\\n * @api\\n */\\nexport function containsCoordinate(extent, coordinate) {\\n    return containsXY(extent, coordinate[0], coordinate[1]);\\n}\\n/**\\n * Check if one extent contains another.\\n *\\n * An extent is deemed contained if it lies completely within the other extent,\\n * including if they share one or more edges.\\n *\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {boolean} The second extent is contained by or on the edge of the\\n *     first.\\n * @api\\n */\\nexport function containsExtent(extent1, extent2) {\\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\\n}\\n/**\\n * Check if the passed coordinate is contained or on the edge of the extent.\\n *\\n * @param {Extent} extent Extent.\\n * @param {number} x X coordinate.\\n * @param {number} y Y coordinate.\\n * @return {boolean} The x, y values are contained in the extent.\\n * @api\\n */\\nexport function containsXY(extent, x, y) {\\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\\n}\\n/**\\n * Get the relationship between a coordinate and extent.\\n * @param {Extent} extent The extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate The coordinate.\\n * @return {Relationship} The relationship (bitwise compare with\\n *     import(\\\"./extent/Relationship.js\\\").Relationship).\\n */\\nexport function coordinateRelationship(extent, coordinate) {\\n    var minX = extent[0];\\n    var minY = extent[1];\\n    var maxX = extent[2];\\n    var maxY = extent[3];\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    var relationship = Relationship.UNKNOWN;\\n    if (x < minX) {\\n        relationship = relationship | Relationship.LEFT;\\n    }\\n    else if (x > maxX) {\\n        relationship = relationship | Relationship.RIGHT;\\n    }\\n    if (y < minY) {\\n        relationship = relationship | Relationship.BELOW;\\n    }\\n    else if (y > maxY) {\\n        relationship = relationship | Relationship.ABOVE;\\n    }\\n    if (relationship === Relationship.UNKNOWN) {\\n        relationship = Relationship.INTERSECTING;\\n    }\\n    return relationship;\\n}\\n/**\\n * Create an empty extent.\\n * @return {Extent} Empty extent.\\n * @api\\n */\\nexport function createEmpty() {\\n    return [Infinity, Infinity, -Infinity, -Infinity];\\n}\\n/**\\n * Create a new extent or update the provided extent.\\n * @param {number} minX Minimum X.\\n * @param {number} minY Minimum Y.\\n * @param {number} maxX Maximum X.\\n * @param {number} maxY Maximum Y.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = minX;\\n        opt_extent[1] = minY;\\n        opt_extent[2] = maxX;\\n        opt_extent[3] = maxY;\\n        return opt_extent;\\n    }\\n    else {\\n        return [minX, minY, maxX, maxY];\\n    }\\n}\\n/**\\n * Create a new empty extent or make the provided one empty.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateEmpty(opt_extent) {\\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\\n}\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    return createOrUpdate(x, y, x, y, opt_extent);\\n}\\n/**\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\\n    var extent = createOrUpdateEmpty(opt_extent);\\n    return extendCoordinates(extent, coordinates);\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\\n    var extent = createOrUpdateEmpty(opt_extent);\\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\\n}\\n/**\\n * @param {Array<Array<import(\\\"./coordinate.js\\\").Coordinate>>} rings Rings.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromRings(rings, opt_extent) {\\n    var extent = createOrUpdateEmpty(opt_extent);\\n    return extendRings(extent, rings);\\n}\\n/**\\n * Determine if two extents are equivalent.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {boolean} The two extents are equivalent.\\n * @api\\n */\\nexport function equals(extent1, extent2) {\\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\\n}\\n/**\\n * Modify an extent to include another extent.\\n * @param {Extent} extent1 The extent to be modified.\\n * @param {Extent} extent2 The extent that will be included in the first.\\n * @return {Extent} A reference to the first (extended) extent.\\n * @api\\n */\\nexport function extend(extent1, extent2) {\\n    if (extent2[0] < extent1[0]) {\\n        extent1[0] = extent2[0];\\n    }\\n    if (extent2[2] > extent1[2]) {\\n        extent1[2] = extent2[2];\\n    }\\n    if (extent2[1] < extent1[1]) {\\n        extent1[1] = extent2[1];\\n    }\\n    if (extent2[3] > extent1[3]) {\\n        extent1[3] = extent2[3];\\n    }\\n    return extent1;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n */\\nexport function extendCoordinate(extent, coordinate) {\\n    if (coordinate[0] < extent[0]) {\\n        extent[0] = coordinate[0];\\n    }\\n    if (coordinate[0] > extent[2]) {\\n        extent[2] = coordinate[0];\\n    }\\n    if (coordinate[1] < extent[1]) {\\n        extent[1] = coordinate[1];\\n    }\\n    if (coordinate[1] > extent[3]) {\\n        extent[3] = coordinate[1];\\n    }\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @return {Extent} Extent.\\n */\\nexport function extendCoordinates(extent, coordinates) {\\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n        extendCoordinate(extent, coordinates[i]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {Extent} Extent.\\n */\\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\\n    for (; offset < end; offset += stride) {\\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<Array<import(\\\"./coordinate.js\\\").Coordinate>>} rings Rings.\\n * @return {Extent} Extent.\\n */\\nexport function extendRings(extent, rings) {\\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\\n        extendCoordinates(extent, rings[i]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} x X.\\n * @param {number} y Y.\\n */\\nexport function extendXY(extent, x, y) {\\n    extent[0] = Math.min(extent[0], x);\\n    extent[1] = Math.min(extent[1], y);\\n    extent[2] = Math.max(extent[2], x);\\n    extent[3] = Math.max(extent[3], y);\\n}\\n/**\\n * This function calls `callback` for each corner of the extent. If the\\n * callback returns a truthy value the function returns that value\\n * immediately. Otherwise the function returns `false`.\\n * @param {Extent} extent Extent.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): S} callback Callback.\\n * @return {S|boolean} Value.\\n * @template S\\n */\\nexport function forEachCorner(extent, callback) {\\n    var val;\\n    val = callback(getBottomLeft(extent));\\n    if (val) {\\n        return val;\\n    }\\n    val = callback(getBottomRight(extent));\\n    if (val) {\\n        return val;\\n    }\\n    val = callback(getTopRight(extent));\\n    if (val) {\\n        return val;\\n    }\\n    val = callback(getTopLeft(extent));\\n    if (val) {\\n        return val;\\n    }\\n    return false;\\n}\\n/**\\n * Get the size of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Area.\\n * @api\\n */\\nexport function getArea(extent) {\\n    var area = 0;\\n    if (!isEmpty(extent)) {\\n        area = getWidth(extent) * getHeight(extent);\\n    }\\n    return area;\\n}\\n/**\\n * Get the bottom left coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Bottom left coordinate.\\n * @api\\n */\\nexport function getBottomLeft(extent) {\\n    return [extent[0], extent[1]];\\n}\\n/**\\n * Get the bottom right coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Bottom right coordinate.\\n * @api\\n */\\nexport function getBottomRight(extent) {\\n    return [extent[2], extent[1]];\\n}\\n/**\\n * Get the center coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Center.\\n * @api\\n */\\nexport function getCenter(extent) {\\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\\n}\\n/**\\n * Get a corner coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @param {Corner} corner Corner.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Corner coordinate.\\n */\\nexport function getCorner(extent, corner) {\\n    var coordinate;\\n    if (corner === Corner.BOTTOM_LEFT) {\\n        coordinate = getBottomLeft(extent);\\n    }\\n    else if (corner === Corner.BOTTOM_RIGHT) {\\n        coordinate = getBottomRight(extent);\\n    }\\n    else if (corner === Corner.TOP_LEFT) {\\n        coordinate = getTopLeft(extent);\\n    }\\n    else if (corner === Corner.TOP_RIGHT) {\\n        coordinate = getTopRight(extent);\\n    }\\n    else {\\n        assert(false, 13); // Invalid corner\\n    }\\n    return coordinate;\\n}\\n/**\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {number} Enlarged area.\\n */\\nexport function getEnlargedArea(extent1, extent2) {\\n    var minX = Math.min(extent1[0], extent2[0]);\\n    var minY = Math.min(extent1[1], extent2[1]);\\n    var maxX = Math.max(extent1[2], extent2[2]);\\n    var maxY = Math.max(extent1[3], extent2[3]);\\n    return (maxX - minX) * (maxY - minY);\\n}\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} center Center.\\n * @param {number} resolution Resolution.\\n * @param {number} rotation Rotation.\\n * @param {import(\\\"./size.js\\\").Size} size Size.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n */\\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\\n    var dx = resolution * size[0] / 2;\\n    var dy = resolution * size[1] / 2;\\n    var cosRotation = Math.cos(rotation);\\n    var sinRotation = Math.sin(rotation);\\n    var xCos = dx * cosRotation;\\n    var xSin = dx * sinRotation;\\n    var yCos = dy * cosRotation;\\n    var ySin = dy * sinRotation;\\n    var x = center[0];\\n    var y = center[1];\\n    var x0 = x - xCos + ySin;\\n    var x1 = x - xCos - ySin;\\n    var x2 = x + xCos - ySin;\\n    var x3 = x + xCos + ySin;\\n    var y0 = y - xSin - yCos;\\n    var y1 = y - xSin + yCos;\\n    var y2 = y + xSin + yCos;\\n    var y3 = y + xSin - yCos;\\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\\n}\\n/**\\n * Get the height of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Height.\\n * @api\\n */\\nexport function getHeight(extent) {\\n    return extent[3] - extent[1];\\n}\\n/**\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {number} Intersection area.\\n */\\nexport function getIntersectionArea(extent1, extent2) {\\n    var intersection = getIntersection(extent1, extent2);\\n    return getArea(intersection);\\n}\\n/**\\n * Get the intersection of two extents.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\\n * @return {Extent} Intersecting extent.\\n * @api\\n */\\nexport function getIntersection(extent1, extent2, opt_extent) {\\n    var intersection = opt_extent ? opt_extent : createEmpty();\\n    if (intersects(extent1, extent2)) {\\n        if (extent1[0] > extent2[0]) {\\n            intersection[0] = extent1[0];\\n        }\\n        else {\\n            intersection[0] = extent2[0];\\n        }\\n        if (extent1[1] > extent2[1]) {\\n            intersection[1] = extent1[1];\\n        }\\n        else {\\n            intersection[1] = extent2[1];\\n        }\\n        if (extent1[2] < extent2[2]) {\\n            intersection[2] = extent1[2];\\n        }\\n        else {\\n            intersection[2] = extent2[2];\\n        }\\n        if (extent1[3] < extent2[3]) {\\n            intersection[3] = extent1[3];\\n        }\\n        else {\\n            intersection[3] = extent2[3];\\n        }\\n    }\\n    else {\\n        createOrUpdateEmpty(intersection);\\n    }\\n    return intersection;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @return {number} Margin.\\n */\\nexport function getMargin(extent) {\\n    return getWidth(extent) + getHeight(extent);\\n}\\n/**\\n * Get the size (width, height) of an extent.\\n * @param {Extent} extent The extent.\\n * @return {import(\\\"./size.js\\\").Size} The extent size.\\n * @api\\n */\\nexport function getSize(extent) {\\n    return [extent[2] - extent[0], extent[3] - extent[1]];\\n}\\n/**\\n * Get the top left coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Top left coordinate.\\n * @api\\n */\\nexport function getTopLeft(extent) {\\n    return [extent[0], extent[3]];\\n}\\n/**\\n * Get the top right coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Top right coordinate.\\n * @api\\n */\\nexport function getTopRight(extent) {\\n    return [extent[2], extent[3]];\\n}\\n/**\\n * Get the width of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Width.\\n * @api\\n */\\nexport function getWidth(extent) {\\n    return extent[2] - extent[0];\\n}\\n/**\\n * Determine if one extent intersects another.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent.\\n * @return {boolean} The two extents intersect.\\n * @api\\n */\\nexport function intersects(extent1, extent2) {\\n    return extent1[0] <= extent2[2] &&\\n        extent1[2] >= extent2[0] &&\\n        extent1[1] <= extent2[3] &&\\n        extent1[3] >= extent2[1];\\n}\\n/**\\n * Determine if an extent is empty.\\n * @param {Extent} extent Extent.\\n * @return {boolean} Is empty.\\n * @api\\n */\\nexport function isEmpty(extent) {\\n    return extent[2] < extent[0] || extent[3] < extent[1];\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function returnOrUpdate(extent, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = extent[0];\\n        opt_extent[1] = extent[1];\\n        opt_extent[2] = extent[2];\\n        opt_extent[3] = extent[3];\\n        return opt_extent;\\n    }\\n    else {\\n        return extent;\\n    }\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} value Value.\\n */\\nexport function scaleFromCenter(extent, value) {\\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\\n    extent[0] -= deltaX;\\n    extent[2] += deltaX;\\n    extent[1] -= deltaY;\\n    extent[3] += deltaY;\\n}\\n/**\\n * Determine if the segment between two coordinates intersects (crosses,\\n * touches, or is contained by) the provided extent.\\n * @param {Extent} extent The extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} start Segment start coordinate.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} end Segment end coordinate.\\n * @return {boolean} The segment intersects the extent.\\n */\\nexport function intersectsSegment(extent, start, end) {\\n    var intersects = false;\\n    var startRel = coordinateRelationship(extent, start);\\n    var endRel = coordinateRelationship(extent, end);\\n    if (startRel === Relationship.INTERSECTING ||\\n        endRel === Relationship.INTERSECTING) {\\n        intersects = true;\\n    }\\n    else {\\n        var minX = extent[0];\\n        var minY = extent[1];\\n        var maxX = extent[2];\\n        var maxY = extent[3];\\n        var startX = start[0];\\n        var startY = start[1];\\n        var endX = end[0];\\n        var endY = end[1];\\n        var slope = (endY - startY) / (endX - startX);\\n        var x = void 0, y = void 0;\\n        if (!!(endRel & Relationship.ABOVE) &&\\n            !(startRel & Relationship.ABOVE)) {\\n            // potentially intersects top\\n            x = endX - ((endY - maxY) / slope);\\n            intersects = x >= minX && x <= maxX;\\n        }\\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\\n            !(startRel & Relationship.RIGHT)) {\\n            // potentially intersects right\\n            y = endY - ((endX - maxX) * slope);\\n            intersects = y >= minY && y <= maxY;\\n        }\\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\\n            !(startRel & Relationship.BELOW)) {\\n            // potentially intersects bottom\\n            x = endX - ((endY - minY) / slope);\\n            intersects = x >= minX && x <= maxX;\\n        }\\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\\n            !(startRel & Relationship.LEFT)) {\\n            // potentially intersects left\\n            y = endY - ((endX - minX) * slope);\\n            intersects = y >= minY && y <= maxY;\\n        }\\n    }\\n    return intersects;\\n}\\n/**\\n * Apply a transform function to the extent.\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./proj.js\\\").TransformFunction} transformFn Transform function.\\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n * @api\\n */\\nexport function applyTransform(extent, transformFn, opt_extent) {\\n    var coordinates = [\\n        extent[0], extent[1],\\n        extent[0], extent[3],\\n        extent[2], extent[1],\\n        extent[2], extent[3]\\n    ];\\n    transformFn(coordinates, coordinates, 2);\\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\\n    return _boundingExtentXYs(xs, ys, opt_extent);\\n}\\n//# sourceMappingURL=extent.js.map\",\"/**\\n * @module ol/resolutionconstraint\\n */\\nimport { linearFindNearest } from './array.js';\\nimport { getHeight, getWidth } from './extent';\\nimport { clamp } from './math';\\n/**\\n * @typedef {function((number|undefined), number, import(\\\"./size.js\\\").Size, boolean=): (number|undefined)} Type\\n */\\n/**\\n * Returns a modified resolution taking into acocunt the viewport size and maximum\\n * allowed extent.\\n * @param {number} resolution Resolution\\n * @param {import(\\\"./extent.js\\\").Extent=} maxExtent Maximum allowed extent.\\n * @param {import(\\\"./size.js\\\").Size} viewportSize Viewport size.\\n * @return {number} Capped resolution.\\n */\\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\\n    return Math.min(resolution, Math.min(xResolution, yResolution));\\n}\\n/**\\n * Returns a modified resolution to be between maxResolution and minResolution while\\n * still allowing the value to be slightly out of bounds.\\n * Note: the computation is based on the logarithm function (ln):\\n *  - at 1, ln(x) is 0\\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\\n * The final result is clamped to prevent getting too far away from bounds.\\n * @param {number} resolution Resolution.\\n * @param {number} maxResolution Max resolution.\\n * @param {number} minResolution Min resolution.\\n * @return {number} Smoothed resolution.\\n */\\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\\n    var result = Math.min(resolution, maxResolution);\\n    var ratio = 50;\\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\\n    if (minResolution) {\\n        result = Math.max(result, minResolution);\\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\\n    }\\n    return clamp(result, minResolution / 2, maxResolution * 2);\\n}\\n/**\\n * @param {Array<number>} resolutions Resolutions.\\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\\n * @param {import(\\\"./extent.js\\\").Extent=} opt_maxExtent Maximum allowed extent.\\n * @return {Type} Zoom function.\\n */\\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\\n    return (\\n    /**\\n     * @param {number|undefined} resolution Resolution.\\n     * @param {number} direction Direction.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Resolution.\\n     */\\n    function (resolution, direction, size, opt_isMoving) {\\n        if (resolution !== undefined) {\\n            var maxResolution = resolutions[0];\\n            var minResolution = resolutions[resolutions.length - 1];\\n            var cappedMaxRes = opt_maxExtent ?\\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\\n                maxResolution;\\n            // during interacting or animating, allow intermediary values\\n            if (opt_isMoving) {\\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\\n                if (!smooth) {\\n                    return clamp(resolution, minResolution, cappedMaxRes);\\n                }\\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\\n            }\\n            var capped = Math.min(cappedMaxRes, resolution);\\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\\n            return resolutions[z];\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {number} power Power.\\n * @param {number} maxResolution Maximum resolution.\\n * @param {number=} opt_minResolution Minimum resolution.\\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\\n * @param {import(\\\"./extent.js\\\").Extent=} opt_maxExtent Maximum allowed extent.\\n * @return {Type} Zoom function.\\n */\\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\\n    return (\\n    /**\\n     * @param {number|undefined} resolution Resolution.\\n     * @param {number} direction Direction.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Resolution.\\n     */\\n    function (resolution, direction, size, opt_isMoving) {\\n        if (resolution !== undefined) {\\n            var cappedMaxRes = opt_maxExtent ?\\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\\n                maxResolution;\\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\\n            // during interacting or animating, allow intermediary values\\n            if (opt_isMoving) {\\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\\n                if (!smooth) {\\n                    return clamp(resolution, minResolution, cappedMaxRes);\\n                }\\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\\n            }\\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\\n            var capped = Math.min(cappedMaxRes, resolution);\\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\\n            return clamp(newResolution, minResolution, cappedMaxRes);\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {number} maxResolution Max resolution.\\n * @param {number} minResolution Min resolution.\\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\\n * @param {import(\\\"./extent.js\\\").Extent=} opt_maxExtent Maximum allowed extent.\\n * @return {Type} Zoom function.\\n */\\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\\n    return (\\n    /**\\n     * @param {number|undefined} resolution Resolution.\\n     * @param {number} direction Direction.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Resolution.\\n     */\\n    function (resolution, direction, size, opt_isMoving) {\\n        if (resolution !== undefined) {\\n            var cappedMaxRes = opt_maxExtent ?\\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\\n                maxResolution;\\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\\n            if (!smooth || !opt_isMoving) {\\n                return clamp(resolution, minResolution, cappedMaxRes);\\n            }\\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n//# sourceMappingURL=resolutionconstraint.js.map\",\"/**\\n * @module ol/rotationconstraint\\n */\\nimport { toRadians } from './math.js';\\n/**\\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\\n */\\n/**\\n * @param {number|undefined} rotation Rotation.\\n * @return {number|undefined} Rotation.\\n */\\nexport function disable(rotation) {\\n    if (rotation !== undefined) {\\n        return 0;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {number|undefined} rotation Rotation.\\n * @return {number|undefined} Rotation.\\n */\\nexport function none(rotation) {\\n    if (rotation !== undefined) {\\n        return rotation;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {number} n N.\\n * @return {Type} Rotation constraint.\\n */\\nexport function createSnapToN(n) {\\n    var theta = 2 * Math.PI / n;\\n    return (\\n    /**\\n     * @param {number|undefined} rotation Rotation.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Rotation.\\n     */\\n    function (rotation, opt_isMoving) {\\n        if (opt_isMoving) {\\n            return rotation;\\n        }\\n        if (rotation !== undefined) {\\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\\n            return rotation;\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {number=} opt_tolerance Tolerance.\\n * @return {Type} Rotation constraint.\\n */\\nexport function createSnapToZero(opt_tolerance) {\\n    var tolerance = opt_tolerance || toRadians(5);\\n    return (\\n    /**\\n     * @param {number|undefined} rotation Rotation.\\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Rotation.\\n     */\\n    function (rotation, opt_isMoving) {\\n        if (opt_isMoving) {\\n            return rotation;\\n        }\\n        if (rotation !== undefined) {\\n            if (Math.abs(rotation) <= tolerance) {\\n                return 0;\\n            }\\n            else {\\n                return rotation;\\n            }\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n//# sourceMappingURL=rotationconstraint.js.map\",\"/**\\n * @module ol/ViewHint\\n */\\n/**\\n * @enum {number}\\n */\\nexport default {\\n    ANIMATING: 0,\\n    INTERACTING: 1\\n};\\n//# sourceMappingURL=ViewHint.js.map\",\"/**\\n * @module ol/ViewProperty\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    CENTER: 'center',\\n    RESOLUTION: 'resolution',\\n    ROTATION: 'rotation'\\n};\\n//# sourceMappingURL=ViewProperty.js.map\",\"/**\\n * @module ol/coordinate\\n */\\nimport { modulo } from './math.js';\\nimport { padNumber } from './string.js';\\n/**\\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\\n * @typedef {Array<number>} Coordinate\\n * @api\\n */\\n/**\\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\\n * transforms it into a `{string}`.\\n *\\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\\n * @api\\n */\\n/**\\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\\n * by the function.\\n *\\n * Example:\\n *\\n *     import {add} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     add(coord, [-2, 4]);\\n *     // coord is now [5.85, 51.983333]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {Coordinate} delta Delta.\\n * @return {Coordinate} The input coordinate adjusted by\\n * the given delta.\\n * @api\\n */\\nexport function add(coordinate, delta) {\\n    coordinate[0] += +delta[0];\\n    coordinate[1] += +delta[1];\\n    return coordinate;\\n}\\n/**\\n * Calculates the point closest to the passed coordinate on the passed circle.\\n *\\n * @param {Coordinate} coordinate The coordinate.\\n * @param {import(\\\"./geom/Circle.js\\\").default} circle The circle.\\n * @return {Coordinate} Closest point on the circumference.\\n */\\nexport function closestOnCircle(coordinate, circle) {\\n    var r = circle.getRadius();\\n    var center = circle.getCenter();\\n    var x0 = center[0];\\n    var y0 = center[1];\\n    var x1 = coordinate[0];\\n    var y1 = coordinate[1];\\n    var dx = x1 - x0;\\n    var dy = y1 - y0;\\n    if (dx === 0 && dy === 0) {\\n        dx = 1;\\n    }\\n    var d = Math.sqrt(dx * dx + dy * dy);\\n    var x = x0 + r * dx / d;\\n    var y = y0 + r * dy / d;\\n    return [x, y];\\n}\\n/**\\n * Calculates the point closest to the passed coordinate on the passed segment.\\n * This is the foot of the perpendicular of the coordinate to the segment when\\n * the foot is on the segment, or the closest segment coordinate when the foot\\n * is outside the segment.\\n *\\n * @param {Coordinate} coordinate The coordinate.\\n * @param {Array<Coordinate>} segment The two coordinates\\n * of the segment.\\n * @return {Coordinate} The foot of the perpendicular of\\n * the coordinate to the segment.\\n */\\nexport function closestOnSegment(coordinate, segment) {\\n    var x0 = coordinate[0];\\n    var y0 = coordinate[1];\\n    var start = segment[0];\\n    var end = segment[1];\\n    var x1 = start[0];\\n    var y1 = start[1];\\n    var x2 = end[0];\\n    var y2 = end[1];\\n    var dx = x2 - x1;\\n    var dy = y2 - y1;\\n    var along = (dx === 0 && dy === 0) ? 0 :\\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\\n    var x, y;\\n    if (along <= 0) {\\n        x = x1;\\n        y = y1;\\n    }\\n    else if (along >= 1) {\\n        x = x2;\\n        y = y2;\\n    }\\n    else {\\n        x = x1 + along * dx;\\n        y = y1 + along * dy;\\n    }\\n    return [x, y];\\n}\\n/**\\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\\n * used to format\\n * a {Coordinate} to a string.\\n *\\n * Example without specifying the fractional digits:\\n *\\n *     import {createStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var stringifyFunc = createStringXY();\\n *     var out = stringifyFunc(coord);\\n *     // out is now '8, 48'\\n *\\n * Example with explicitly specifying 2 fractional digits:\\n *\\n *     import {createStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var stringifyFunc = createStringXY(2);\\n *     var out = stringifyFunc(coord);\\n *     // out is now '7.85, 47.98'\\n *\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {CoordinateFormat} Coordinate format.\\n * @api\\n */\\nexport function createStringXY(opt_fractionDigits) {\\n    return (\\n    /**\\n     * @param {Coordinate} coordinate Coordinate.\\n     * @return {string} String XY.\\n     */\\n    function (coordinate) {\\n        return toStringXY(coordinate, opt_fractionDigits);\\n    });\\n}\\n/**\\n * @param {string} hemispheres Hemispheres.\\n * @param {number} degrees Degrees.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} String.\\n */\\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\\n    var x = Math.abs(3600 * normalizedDegrees);\\n    var dflPrecision = opt_fractionDigits || 0;\\n    var precision = Math.pow(10, dflPrecision);\\n    var deg = Math.floor(x / 3600);\\n    var min = Math.floor((x - deg * 3600) / 60);\\n    var sec = x - (deg * 3600) - (min * 60);\\n    sec = Math.ceil(sec * precision) / precision;\\n    if (sec >= 60) {\\n        sec = 0;\\n        min += 1;\\n    }\\n    if (min >= 60) {\\n        min = 0;\\n        deg += 1;\\n    }\\n    return deg + '\\\\u00b0 ' + padNumber(min, 2) + '\\\\u2032 ' +\\n        padNumber(sec, 2, dflPrecision) + '\\\\u2033' +\\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\\n}\\n/**\\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\\n * using the given string template. The strings `{x}` and `{y}` in the template\\n * will be replaced with the first and second coordinate values respectively.\\n *\\n * Example without specifying the fractional digits:\\n *\\n *     import {format} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var template = 'Coordinate is ({x}|{y}).';\\n *     var out = format(coord, template);\\n *     // out is now 'Coordinate is (8|48).'\\n *\\n * Example explicitly specifying the fractional digits:\\n *\\n *     import {format} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var template = 'Coordinate is ({x}|{y}).';\\n *     var out = format(coord, template, 2);\\n *     // out is now 'Coordinate is (7.85|47.98).'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {string} template A template string with `{x}` and `{y}` placeholders\\n *     that will be replaced by first and second coordinate values.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} Formatted coordinate.\\n * @api\\n */\\nexport function format(coordinate, template, opt_fractionDigits) {\\n    if (coordinate) {\\n        return template\\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\\n    }\\n    else {\\n        return '';\\n    }\\n}\\n/**\\n * @param {Coordinate} coordinate1 First coordinate.\\n * @param {Coordinate} coordinate2 Second coordinate.\\n * @return {boolean} The two coordinates are equal.\\n */\\nexport function equals(coordinate1, coordinate2) {\\n    var equals = true;\\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\\n        if (coordinate1[i] != coordinate2[i]) {\\n            equals = false;\\n            break;\\n        }\\n    }\\n    return equals;\\n}\\n/**\\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\\n * returned by the function.\\n *\\n * Example:\\n *\\n *     import {rotate} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var rotateRadians = Math.PI / 2; // 90 degrees\\n *     rotate(coord, rotateRadians);\\n *     // coord is now [-47.983333, 7.85]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number} angle Angle in radian.\\n * @return {Coordinate} Coordinate.\\n * @api\\n */\\nexport function rotate(coordinate, angle) {\\n    var cosAngle = Math.cos(angle);\\n    var sinAngle = Math.sin(angle);\\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\\n    coordinate[0] = x;\\n    coordinate[1] = y;\\n    return coordinate;\\n}\\n/**\\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\\n * by the function.\\n *\\n * Example:\\n *\\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var scale = 1.2;\\n *     scaleCoordinate(coord, scale);\\n *     // coord is now [9.42, 57.5799996]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number} scale Scale factor.\\n * @return {Coordinate} Coordinate.\\n */\\nexport function scale(coordinate, scale) {\\n    coordinate[0] *= scale;\\n    coordinate[1] *= scale;\\n    return coordinate;\\n}\\n/**\\n * @param {Coordinate} coord1 First coordinate.\\n * @param {Coordinate} coord2 Second coordinate.\\n * @return {number} Squared distance between coord1 and coord2.\\n */\\nexport function squaredDistance(coord1, coord2) {\\n    var dx = coord1[0] - coord2[0];\\n    var dy = coord1[1] - coord2[1];\\n    return dx * dx + dy * dy;\\n}\\n/**\\n * @param {Coordinate} coord1 First coordinate.\\n * @param {Coordinate} coord2 Second coordinate.\\n * @return {number} Distance between coord1 and coord2.\\n */\\nexport function distance(coord1, coord2) {\\n    return Math.sqrt(squaredDistance(coord1, coord2));\\n}\\n/**\\n * Calculate the squared distance from a coordinate to a line segment.\\n *\\n * @param {Coordinate} coordinate Coordinate of the point.\\n * @param {Array<Coordinate>} segment Line segment (2\\n * coordinates).\\n * @return {number} Squared distance from the point to the line segment.\\n */\\nexport function squaredDistanceToSegment(coordinate, segment) {\\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\\n}\\n/**\\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\\n * seconds.\\n *\\n * Example without specifying fractional digits:\\n *\\n *     import {toStringHDMS} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringHDMS(coord);\\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\\n *\\n * Example explicitly specifying 1 fractional digit:\\n *\\n *     import {toStringHDMS} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringHDMS(coord, 1);\\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} Hemisphere, degrees, minutes and seconds.\\n * @api\\n */\\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\\n    if (coordinate) {\\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\\n    }\\n    else {\\n        return '';\\n    }\\n}\\n/**\\n * Format a coordinate as a comma delimited string.\\n *\\n * Example without specifying fractional digits:\\n *\\n *     import {toStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringXY(coord);\\n *     // out is now '8, 48'\\n *\\n * Example explicitly specifying 1 fractional digit:\\n *\\n *     import {toStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringXY(coord, 1);\\n *     // out is now '7.8, 48.0'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} XY.\\n * @api\\n */\\nexport function toStringXY(coordinate, opt_fractionDigits) {\\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\\n}\\n//# sourceMappingURL=coordinate.js.map\",\"/**\\n * @module ol/easing\\n */\\n/**\\n * Start slow and speed up.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function easeIn(t) {\\n    return Math.pow(t, 3);\\n}\\n/**\\n * Start fast and slow down.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function easeOut(t) {\\n    return 1 - easeIn(1 - t);\\n}\\n/**\\n * Start slow, speed up, and then slow down again.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function inAndOut(t) {\\n    return 3 * t * t - 2 * t * t * t;\\n}\\n/**\\n * Maintain a constant speed over time.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function linear(t) {\\n    return t;\\n}\\n/**\\n * Start slow, speed up, and at the very end slow down again.  This has the\\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\\n * slowdown is delayed.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function upAndDown(t) {\\n    if (t < 0.5) {\\n        return inAndOut(2 * t);\\n    }\\n    else {\\n        return 1 - inAndOut(2 * (t - 0.5));\\n    }\\n}\\n//# sourceMappingURL=easing.js.map\",\"/**\\n * @module ol/geom/GeometryType\\n */\\n/**\\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\\n * `'GeometryCollection'`, `'Circle'`.\\n * @enum {string}\\n */\\nexport default {\\n    POINT: 'Point',\\n    LINE_STRING: 'LineString',\\n    LINEAR_RING: 'LinearRing',\\n    POLYGON: 'Polygon',\\n    MULTI_POINT: 'MultiPoint',\\n    MULTI_LINE_STRING: 'MultiLineString',\\n    MULTI_POLYGON: 'MultiPolygon',\\n    GEOMETRY_COLLECTION: 'GeometryCollection',\\n    CIRCLE: 'Circle'\\n};\\n//# sourceMappingURL=GeometryType.js.map\",\"/**\\n * @module ol/geom/GeometryLayout\\n */\\n/**\\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\\n * @enum {string}\\n */\\nexport default {\\n    XY: 'XY',\\n    XYZ: 'XYZ',\\n    XYM: 'XYM',\\n    XYZM: 'XYZM'\\n};\\n//# sourceMappingURL=GeometryLayout.js.map\",\"/**\\n * @module ol/geom/flat/transform\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        var x = flatCoordinates[j];\\n        var y = flatCoordinates[j + 1];\\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} angle Angle.\\n * @param {Array<number>} anchor Rotation anchor point.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var cos = Math.cos(angle);\\n    var sin = Math.sin(angle);\\n    var anchorX = anchor[0];\\n    var anchorY = anchor[1];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        var deltaX = flatCoordinates[j] - anchorX;\\n        var deltaY = flatCoordinates[j + 1] - anchorY;\\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\\n        for (var k = j + 2; k < j + stride; ++k) {\\n            dest[i++] = flatCoordinates[k];\\n        }\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n/**\\n * Scale the coordinates.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} sx Scale factor in the x-direction.\\n * @param {number} sy Scale factor in the y-direction.\\n * @param {Array<number>} anchor Scale anchor point.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var anchorX = anchor[0];\\n    var anchorY = anchor[1];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        var deltaX = flatCoordinates[j] - anchorX;\\n        var deltaY = flatCoordinates[j + 1] - anchorY;\\n        dest[i++] = anchorX + sx * deltaX;\\n        dest[i++] = anchorY + sy * deltaY;\\n        for (var k = j + 2; k < j + stride; ++k) {\\n            dest[i++] = flatCoordinates[k];\\n        }\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} deltaX Delta X.\\n * @param {number} deltaY Delta Y.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        dest[i++] = flatCoordinates[j] + deltaX;\\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\\n        for (var k = j + 2; k < j + stride; ++k) {\\n            dest[i++] = flatCoordinates[k];\\n        }\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n//# sourceMappingURL=transform.js.map\",\"/**\\n * @license\\n * Latitude/longitude spherical geodesy formulae taken from\\n * http://www.movable-type.co.uk/scripts/latlong.html\\n * Licensed under CC-BY-3.0.\\n */\\n/**\\n * @module ol/sphere\\n */\\nimport { toRadians, toDegrees } from './math.js';\\nimport GeometryType from './geom/GeometryType.js';\\n/**\\n * Object literal with options for the {@link getLength} or {@link getArea}\\n * functions.\\n * @typedef {Object} SphereMetricOptions\\n * @property {import(\\\"./proj.js\\\").ProjectionLike} [projection='EPSG:3857']\\n * Projection of the  geometry.  By default, the geometry is assumed to be in\\n * Web Mercator.\\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\\n * earth is used (Clarke 1866 Authalic Sphere).\\n */\\n/**\\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\\n * @type {number}\\n */\\nexport var DEFAULT_RADIUS = 6371008.8;\\n/**\\n * Get the great circle distance (in meters) between two geographic coordinates.\\n * @param {Array} c1 Starting coordinate.\\n * @param {Array} c2 Ending coordinate.\\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\\n *     mean radius using the WGS84 ellipsoid.\\n * @return {number} The great circle distance between the points (in meters).\\n * @api\\n */\\nexport function getDistance(c1, c2, opt_radius) {\\n    var radius = opt_radius || DEFAULT_RADIUS;\\n    var lat1 = toRadians(c1[1]);\\n    var lat2 = toRadians(c2[1]);\\n    var deltaLatBy2 = (lat2 - lat1) / 2;\\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\\n            Math.cos(lat1) * Math.cos(lat2);\\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\\n}\\n/**\\n * Get the cumulative great circle length of linestring coordinates (geographic).\\n * @param {Array} coordinates Linestring coordinates.\\n * @param {number} radius The sphere radius to use.\\n * @return {number} The length (in meters).\\n */\\nfunction getLengthInternal(coordinates, radius) {\\n    var length = 0;\\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\\n    }\\n    return length;\\n}\\n/**\\n * Get the spherical length of a geometry.  This length is the sum of the\\n * great circle distances between coordinates.  For polygons, the length is\\n * the sum of all rings.  For points, the length is zero.  For multi-part\\n * geometries, the length is the sum of the length of each part.\\n * @param {import(\\\"./geom/Geometry.js\\\").default} geometry A geometry.\\n * @param {SphereMetricOptions=} opt_options Options for the\\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\\n * You can change this by providing a `projection` option.\\n * @return {number} The spherical length (in meters).\\n * @api\\n */\\nexport function getLength(geometry, opt_options) {\\n    var options = opt_options || {};\\n    var radius = options.radius || DEFAULT_RADIUS;\\n    var projection = options.projection || 'EPSG:3857';\\n    var type = geometry.getType();\\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\\n    }\\n    var length = 0;\\n    var coordinates, coords, i, ii, j, jj;\\n    switch (type) {\\n        case GeometryType.POINT:\\n        case GeometryType.MULTI_POINT: {\\n            break;\\n        }\\n        case GeometryType.LINE_STRING:\\n        case GeometryType.LINEAR_RING: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            length = getLengthInternal(coordinates, radius);\\n            break;\\n        }\\n        case GeometryType.MULTI_LINE_STRING:\\n        case GeometryType.POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n                length += getLengthInternal(coordinates[i], radius);\\n            }\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coords = coordinates[i];\\n                for (j = 0, jj = coords.length; j < jj; ++j) {\\n                    length += getLengthInternal(coords[j], radius);\\n                }\\n            }\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            var geometries = /** @type {import(\\\"./geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\\n                length += getLength(geometries[i], opt_options);\\n            }\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported geometry type: ' + type);\\n        }\\n    }\\n    return length;\\n}\\n/**\\n * Returns the spherical area for a list of coordinates.\\n *\\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\\n * Robert. G. Chamberlain and William H. Duquette, \\\"Some Algorithms for\\n * Polygons on a Sphere\\\", JPL Publication 07-03, Jet Propulsion\\n * Laboratory, Pasadena, CA, June 2007\\n *\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates List of coordinates of a linear\\n * ring. If the ring is oriented clockwise, the area will be positive,\\n * otherwise it will be negative.\\n * @param {number} radius The sphere radius.\\n * @return {number} Area (in square meters).\\n */\\nfunction getAreaInternal(coordinates, radius) {\\n    var area = 0;\\n    var len = coordinates.length;\\n    var x1 = coordinates[len - 1][0];\\n    var y1 = coordinates[len - 1][1];\\n    for (var i = 0; i < len; i++) {\\n        var x2 = coordinates[i][0];\\n        var y2 = coordinates[i][1];\\n        area += toRadians(x2 - x1) *\\n            (2 + Math.sin(toRadians(y1)) +\\n                Math.sin(toRadians(y2)));\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return area * radius * radius / 2.0;\\n}\\n/**\\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\\n * that polygon edges are segments of great circles on a sphere.\\n * @param {import(\\\"./geom/Geometry.js\\\").default} geometry A geometry.\\n * @param {SphereMetricOptions=} opt_options Options for the area\\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\\n *     You can change this by providing a `projection` option.\\n * @return {number} The spherical area (in square meters).\\n * @api\\n */\\nexport function getArea(geometry, opt_options) {\\n    var options = opt_options || {};\\n    var radius = options.radius || DEFAULT_RADIUS;\\n    var projection = options.projection || 'EPSG:3857';\\n    var type = geometry.getType();\\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\\n    }\\n    var area = 0;\\n    var coordinates, coords, i, ii, j, jj;\\n    switch (type) {\\n        case GeometryType.POINT:\\n        case GeometryType.MULTI_POINT:\\n        case GeometryType.LINE_STRING:\\n        case GeometryType.MULTI_LINE_STRING:\\n        case GeometryType.LINEAR_RING: {\\n            break;\\n        }\\n        case GeometryType.POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/Polygon.js\\\").default} */ (geometry).getCoordinates();\\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\\n            }\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coords = coordinates[i];\\n                area += Math.abs(getAreaInternal(coords[0], radius));\\n                for (j = 1, jj = coords.length; j < jj; ++j) {\\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\\n                }\\n            }\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            var geometries = /** @type {import(\\\"./geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\\n                area += getArea(geometries[i], opt_options);\\n            }\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported geometry type: ' + type);\\n        }\\n    }\\n    return area;\\n}\\n/**\\n * Returns the coordinate at the given distance and bearing from `c1`.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\\n * @param {number} distance The great-circle distance between the origin\\n *     point and the target point.\\n * @param {number} bearing The bearing (in radians).\\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\\n *     mean radius using the WGS84 ellipsoid.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} The target point.\\n */\\nexport function offset(c1, distance, bearing, opt_radius) {\\n    var radius = opt_radius || DEFAULT_RADIUS;\\n    var lat1 = toRadians(c1[1]);\\n    var lon1 = toRadians(c1[0]);\\n    var dByR = distance / radius;\\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\\n    return [toDegrees(lon), toDegrees(lat)];\\n}\\n//# sourceMappingURL=sphere.js.map\",\"/**\\n * @module ol/proj/Units\\n */\\n/**\\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\\n * `'us-ft'`.\\n * @enum {string}\\n */\\nvar Units = {\\n    DEGREES: 'degrees',\\n    FEET: 'ft',\\n    METERS: 'm',\\n    PIXELS: 'pixels',\\n    TILE_PIXELS: 'tile-pixels',\\n    USFEET: 'us-ft'\\n};\\n/**\\n * Meters per unit lookup table.\\n * @const\\n * @type {Object<Units, number>}\\n * @api\\n */\\nexport var METERS_PER_UNIT = {};\\n// use the radius of the Normal sphere\\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\\nMETERS_PER_UNIT[Units.METERS] = 1;\\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\\nexport default Units;\\n//# sourceMappingURL=Units.js.map\",\"/**\\n * @module ol/proj/Projection\\n */\\nimport { METERS_PER_UNIT } from './Units.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\\n * @property {import(\\\"./Units.js\\\").default|string} [units] Units. Required unless a\\n * proj4 projection is defined for `code`.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The validity extent for the SRS.\\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\\n * lookup table.\\n * @property {import(\\\"../extent.js\\\").Extent} [worldExtent] The world extent for the SRS.\\n * @property {function(number, import(\\\"../coordinate.js\\\").Coordinate):number} [getPointResolution]\\n * Function to determine resolution at a point. The function is called with a\\n * `{number}` view resolution and an `{import(\\\"../coordinate.js\\\").Coordinate}` as arguments, and returns\\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\\n * the default {@link module:ol/proj#getPointResolution} function will be used.\\n */\\n/**\\n * @classdesc\\n * Projection definition class. One of these is created for each projection\\n * supported in the application and stored in the {@link module:ol/proj} namespace.\\n * You can use these in applications, but this is not required, as API params\\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\\n * code will suffice.\\n *\\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\\n * projection.\\n *\\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\\n * with the following aliases:\\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\\n *     urn:x-ogc:def:crs:EPSG:4326\\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\\n *\\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\\n * be added using `proj4.defs()`. After all required projection definitions are\\n * added, call the {@link module:ol/proj/proj4~register} function.\\n *\\n * @api\\n */\\nvar Projection = /** @class */ (function () {\\n    /**\\n     * @param {Options} options Projection options.\\n     */\\n    function Projection(options) {\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        this.code_ = options.code;\\n        /**\\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\\n         * tile.\\n         * @private\\n         * @type {import(\\\"./Units.js\\\").default}\\n         */\\n        this.units_ = /** @type {import(\\\"./Units.js\\\").default} */ (options.units);\\n        /**\\n         * Validity extent of the projection in projected coordinates. For projections\\n         * with `TILE_PIXELS` units, this is the extent of the tile in\\n         * tile pixel space.\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        this.extent_ = options.extent !== undefined ? options.extent : null;\\n        /**\\n         * Extent of the world in EPSG:4326. For projections with\\n         * `TILE_PIXELS` units, this is the extent of the tile in\\n         * projected coordinate space.\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        this.worldExtent_ = options.worldExtent !== undefined ?\\n            options.worldExtent : null;\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\\n            options.axisOrientation : 'enu';\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.global_ = options.global !== undefined ? options.global : false;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.canWrapX_ = !!(this.global_ && this.extent_);\\n        /**\\n         * @private\\n         * @type {function(number, import(\\\"../coordinate.js\\\").Coordinate):number|undefined}\\n         */\\n        this.getPointResolutionFunc_ = options.getPointResolution;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        this.defaultTileGrid_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.metersPerUnit_ = options.metersPerUnit;\\n    }\\n    /**\\n     * @return {boolean} The projection is suitable for wrapping the x-axis\\n     */\\n    Projection.prototype.canWrapX = function () {\\n        return this.canWrapX_;\\n    };\\n    /**\\n     * Get the code for this projection, e.g. 'EPSG:4326'.\\n     * @return {string} Code.\\n     * @api\\n     */\\n    Projection.prototype.getCode = function () {\\n        return this.code_;\\n    };\\n    /**\\n     * Get the validity extent for this projection.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    Projection.prototype.getExtent = function () {\\n        return this.extent_;\\n    };\\n    /**\\n     * Get the units of this projection.\\n     * @return {import(\\\"./Units.js\\\").default} Units.\\n     * @api\\n     */\\n    Projection.prototype.getUnits = function () {\\n        return this.units_;\\n    };\\n    /**\\n     * Get the amount of meters per unit of this projection.  If the projection is\\n     * not configured with `metersPerUnit` or a units identifier, the return is\\n     * `undefined`.\\n     * @return {number|undefined} Meters.\\n     * @api\\n     */\\n    Projection.prototype.getMetersPerUnit = function () {\\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\\n    };\\n    /**\\n     * Get the world extent for this projection.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    Projection.prototype.getWorldExtent = function () {\\n        return this.worldExtent_;\\n    };\\n    /**\\n     * Get the axis orientation of this projection.\\n     * Example values are:\\n     * enu - the default easting, northing, elevation.\\n     * neu - northing, easting, up - useful for \\\"lat/long\\\" geographic coordinates,\\n     *     or south orientated transverse mercator.\\n     * wnu - westing, northing, up - some planetary coordinate systems have\\n     *     \\\"west positive\\\" coordinate systems\\n     * @return {string} Axis orientation.\\n     * @api\\n     */\\n    Projection.prototype.getAxisOrientation = function () {\\n        return this.axisOrientation_;\\n    };\\n    /**\\n     * Is this projection a global projection which spans the whole world?\\n     * @return {boolean} Whether the projection is global.\\n     * @api\\n     */\\n    Projection.prototype.isGlobal = function () {\\n        return this.global_;\\n    };\\n    /**\\n     * Set if the projection is a global projection which spans the whole world\\n     * @param {boolean} global Whether the projection is global.\\n     * @api\\n     */\\n    Projection.prototype.setGlobal = function (global) {\\n        this.global_ = global;\\n        this.canWrapX_ = !!(global && this.extent_);\\n    };\\n    /**\\n     * @return {import(\\\"../tilegrid/TileGrid.js\\\").default} The default tile grid.\\n     */\\n    Projection.prototype.getDefaultTileGrid = function () {\\n        return this.defaultTileGrid_;\\n    };\\n    /**\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} tileGrid The default tile grid.\\n     */\\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\\n        this.defaultTileGrid_ = tileGrid;\\n    };\\n    /**\\n     * Set the validity extent for this projection.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @api\\n     */\\n    Projection.prototype.setExtent = function (extent) {\\n        this.extent_ = extent;\\n        this.canWrapX_ = !!(this.global_ && extent);\\n    };\\n    /**\\n     * Set the world extent for this projection.\\n     * @param {import(\\\"../extent.js\\\").Extent} worldExtent World extent\\n     *     [minlon, minlat, maxlon, maxlat].\\n     * @api\\n     */\\n    Projection.prototype.setWorldExtent = function (worldExtent) {\\n        this.worldExtent_ = worldExtent;\\n    };\\n    /**\\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\\n     * for this projection.\\n     * @param {function(number, import(\\\"../coordinate.js\\\").Coordinate):number} func Function\\n     * @api\\n     */\\n    Projection.prototype.setGetPointResolution = function (func) {\\n        this.getPointResolutionFunc_ = func;\\n    };\\n    /**\\n     * Get the custom point resolution function for this projection (if set).\\n     * @return {function(number, import(\\\"../coordinate.js\\\").Coordinate):number|undefined} The custom point\\n     * resolution function (if set).\\n     */\\n    Projection.prototype.getPointResolutionFunc = function () {\\n        return this.getPointResolutionFunc_;\\n    };\\n    return Projection;\\n}());\\nexport default Projection;\\n//# sourceMappingURL=Projection.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/proj/epsg3857\\n */\\nimport { cosh } from '../math.js';\\nimport Projection from './Projection.js';\\nimport Units from './Units.js';\\n/**\\n * Radius of WGS84 sphere\\n *\\n * @const\\n * @type {number}\\n */\\nexport var RADIUS = 6378137;\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var HALF_SIZE = Math.PI * RADIUS;\\n/**\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var EXTENT = [\\n    -HALF_SIZE, -HALF_SIZE,\\n    HALF_SIZE, HALF_SIZE\\n];\\n/**\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\\n/**\\n * @classdesc\\n * Projection object for web/spherical Mercator (EPSG:3857).\\n */\\nvar EPSG3857Projection = /** @class */ (function (_super) {\\n    __extends(EPSG3857Projection, _super);\\n    /**\\n     * @param {string} code Code.\\n     */\\n    function EPSG3857Projection(code) {\\n        return _super.call(this, {\\n            code: code,\\n            units: Units.METERS,\\n            extent: EXTENT,\\n            global: true,\\n            worldExtent: WORLD_EXTENT,\\n            getPointResolution: function (resolution, point) {\\n                return resolution / cosh(point[1] / RADIUS);\\n            }\\n        }) || this;\\n    }\\n    return EPSG3857Projection;\\n}(Projection));\\n/**\\n * Projections equal to EPSG:3857.\\n *\\n * @const\\n * @type {Array<import(\\\"./Projection.js\\\").default>}\\n */\\nexport var PROJECTIONS = [\\n    new EPSG3857Projection('EPSG:3857'),\\n    new EPSG3857Projection('EPSG:102100'),\\n    new EPSG3857Projection('EPSG:102113'),\\n    new EPSG3857Projection('EPSG:900913'),\\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\\n];\\n/**\\n * Transformation from EPSG:4326 to EPSG:3857.\\n *\\n * @param {Array<number>} input Input array of coordinate values.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension (default is `2`).\\n * @return {Array<number>} Output array of coordinate values.\\n */\\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\\n    var length = input.length;\\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\\n    var output = opt_output;\\n    if (output === undefined) {\\n        if (dimension > 2) {\\n            // preserve values beyond second dimension\\n            output = input.slice();\\n        }\\n        else {\\n            output = new Array(length);\\n        }\\n    }\\n    var halfSize = HALF_SIZE;\\n    for (var i = 0; i < length; i += dimension) {\\n        output[i] = halfSize * input[i] / 180;\\n        var y = RADIUS *\\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\\n        if (y > halfSize) {\\n            y = halfSize;\\n        }\\n        else if (y < -halfSize) {\\n            y = -halfSize;\\n        }\\n        output[i + 1] = y;\\n    }\\n    return output;\\n}\\n/**\\n * Transformation from EPSG:3857 to EPSG:4326.\\n *\\n * @param {Array<number>} input Input array of coordinate values.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension (default is `2`).\\n * @return {Array<number>} Output array of coordinate values.\\n */\\nexport function toEPSG4326(input, opt_output, opt_dimension) {\\n    var length = input.length;\\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\\n    var output = opt_output;\\n    if (output === undefined) {\\n        if (dimension > 2) {\\n            // preserve values beyond second dimension\\n            output = input.slice();\\n        }\\n        else {\\n            output = new Array(length);\\n        }\\n    }\\n    for (var i = 0; i < length; i += dimension) {\\n        output[i] = 180 * input[i] / HALF_SIZE;\\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\\n    }\\n    return output;\\n}\\n//# sourceMappingURL=epsg3857.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/proj/epsg4326\\n */\\nimport Projection from './Projection.js';\\nimport Units from './Units.js';\\n/**\\n * Semi-major radius of the WGS84 ellipsoid.\\n *\\n * @const\\n * @type {number}\\n */\\nexport var RADIUS = 6378137;\\n/**\\n * Extent of the EPSG:4326 projection which is the whole world.\\n *\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var EXTENT = [-180, -90, 180, 90];\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\\n/**\\n * @classdesc\\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\\n *\\n * Note that OpenLayers does not strictly comply with the EPSG definition.\\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\\n */\\nvar EPSG4326Projection = /** @class */ (function (_super) {\\n    __extends(EPSG4326Projection, _super);\\n    /**\\n     * @param {string} code Code.\\n     * @param {string=} opt_axisOrientation Axis orientation.\\n     */\\n    function EPSG4326Projection(code, opt_axisOrientation) {\\n        return _super.call(this, {\\n            code: code,\\n            units: Units.DEGREES,\\n            extent: EXTENT,\\n            axisOrientation: opt_axisOrientation,\\n            global: true,\\n            metersPerUnit: METERS_PER_UNIT,\\n            worldExtent: EXTENT\\n        }) || this;\\n    }\\n    return EPSG4326Projection;\\n}(Projection));\\n/**\\n * Projections equal to EPSG:4326.\\n *\\n * @const\\n * @type {Array<import(\\\"./Projection.js\\\").default>}\\n */\\nexport var PROJECTIONS = [\\n    new EPSG4326Projection('CRS:84'),\\n    new EPSG4326Projection('EPSG:4326', 'neu'),\\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\\n];\\n//# sourceMappingURL=epsg4326.js.map\",\"/**\\n * @module ol/proj/projections\\n */\\n/**\\n * @type {Object<string, import(\\\"./Projection.js\\\").default>}\\n */\\nvar cache = {};\\n/**\\n * Clear the projections cache.\\n */\\nexport function clear() {\\n    cache = {};\\n}\\n/**\\n * Get a cached projection by code.\\n * @param {string} code The code for the projection.\\n * @return {import(\\\"./Projection.js\\\").default} The projection (if cached).\\n */\\nexport function get(code) {\\n    return cache[code] || null;\\n}\\n/**\\n * Add a projection to the cache.\\n * @param {string} code The projection code.\\n * @param {import(\\\"./Projection.js\\\").default} projection The projection to cache.\\n */\\nexport function add(code, projection) {\\n    cache[code] = projection;\\n}\\n//# sourceMappingURL=projections.js.map\",\"/**\\n * @module ol/proj/transforms\\n */\\nimport { isEmpty } from '../obj.js';\\n/**\\n * @private\\n * @type {!Object<string, Object<string, import(\\\"../proj.js\\\").TransformFunction>>}\\n */\\nvar transforms = {};\\n/**\\n * Clear the transform cache.\\n */\\nexport function clear() {\\n    transforms = {};\\n}\\n/**\\n * Registers a conversion function to convert coordinates from the source\\n * projection to the destination projection.\\n *\\n * @param {import(\\\"./Projection.js\\\").default} source Source.\\n * @param {import(\\\"./Projection.js\\\").default} destination Destination.\\n * @param {import(\\\"../proj.js\\\").TransformFunction} transformFn Transform.\\n */\\nexport function add(source, destination, transformFn) {\\n    var sourceCode = source.getCode();\\n    var destinationCode = destination.getCode();\\n    if (!(sourceCode in transforms)) {\\n        transforms[sourceCode] = {};\\n    }\\n    transforms[sourceCode][destinationCode] = transformFn;\\n}\\n/**\\n * Unregisters the conversion function to convert coordinates from the source\\n * projection to the destination projection.  This method is used to clean up\\n * cached transforms during testing.\\n *\\n * @param {import(\\\"./Projection.js\\\").default} source Source projection.\\n * @param {import(\\\"./Projection.js\\\").default} destination Destination projection.\\n * @return {import(\\\"../proj.js\\\").TransformFunction} transformFn The unregistered transform.\\n */\\nexport function remove(source, destination) {\\n    var sourceCode = source.getCode();\\n    var destinationCode = destination.getCode();\\n    var transform = transforms[sourceCode][destinationCode];\\n    delete transforms[sourceCode][destinationCode];\\n    if (isEmpty(transforms[sourceCode])) {\\n        delete transforms[sourceCode];\\n    }\\n    return transform;\\n}\\n/**\\n * Get a transform given a source code and a destination code.\\n * @param {string} sourceCode The code for the source projection.\\n * @param {string} destinationCode The code for the destination projection.\\n * @return {import(\\\"../proj.js\\\").TransformFunction|undefined} The transform function (if found).\\n */\\nexport function get(sourceCode, destinationCode) {\\n    var transform;\\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\\n        transform = transforms[sourceCode][destinationCode];\\n    }\\n    return transform;\\n}\\n//# sourceMappingURL=transforms.js.map\",\"/**\\n * @module ol/proj\\n */\\n/**\\n * The ol/proj module stores:\\n * * a list of {@link module:ol/proj/Projection}\\n * objects, one for each projection supported by the application\\n * * a list of transform functions needed to convert coordinates in one projection\\n * into another.\\n *\\n * The static functions are the methods used to maintain these.\\n * Each transform function can handle not only simple coordinate pairs, but also\\n * large arrays of coordinates such as vector geometries.\\n *\\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\\n * for example by Bing Maps or OpenStreetMap), together with the relevant\\n * transform functions.\\n *\\n * Additional transforms may be added by using the http://proj4js.org/\\n * library (version 2.2 or later). You can use the full build supplied by\\n * Proj4js, or create a custom build to support those projections you need; see\\n * the Proj4js website for how to do this. You also need the Proj4js definitions\\n * for the required projections. These definitions can be obtained from\\n * https://epsg.io/, and are a JS function, so can be loaded in a script\\n * tag (as in the examples) or pasted into your application.\\n *\\n * After all required projection definitions are added to proj4's registry (by\\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\\n * package. Existing transforms are not changed by this function. See\\n * examples/wms-image-custom-proj for an example of this.\\n *\\n * Additional projection definitions can be registered with `proj4.defs()` any\\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\\n * know in advance what projections are needed, you can initially load minimal\\n * support and then load whichever are requested.\\n *\\n * Note that Proj4js does not support projection extents. If you want to add\\n * one for creating default tile grids, you can add it after the Projection\\n * object has been created with `setExtent`, for example,\\n * `get('EPSG:1234').setExtent(extent)`.\\n *\\n * In addition to Proj4js support, any transform functions can be added with\\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\\n * examples/wms-custom-proj for an example of this.\\n *\\n * Note that if no transforms are needed and you only need to define the\\n * projection, just add a {@link module:ol/proj/Projection} with\\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\\n * this.\\n */\\nimport { getDistance } from './sphere.js';\\nimport { applyTransform } from './extent.js';\\nimport { modulo } from './math.js';\\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\\nimport Projection from './proj/Projection.js';\\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\\nimport * as projections from './proj/projections.js';\\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\\n/**\\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\\n * string or undefined.\\n * @typedef {Projection|string|undefined} ProjectionLike\\n * @api\\n */\\n/**\\n * A transform function accepts an array of input coordinate values, an optional\\n * output array, and an optional dimension (default should be 2).  The function\\n * transforms the input coordinate values, populates the output array, and\\n * returns the output array.\\n *\\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\\n * @api\\n */\\nexport { METERS_PER_UNIT };\\nexport { Projection };\\n/**\\n * @param {Array<number>} input Input coordinate array.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension.\\n * @return {Array<number>} Output coordinate array (new array, same coordinate\\n *     values).\\n */\\nexport function cloneTransform(input, opt_output, opt_dimension) {\\n    var output;\\n    if (opt_output !== undefined) {\\n        for (var i = 0, ii = input.length; i < ii; ++i) {\\n            opt_output[i] = input[i];\\n        }\\n        output = opt_output;\\n    }\\n    else {\\n        output = input.slice();\\n    }\\n    return output;\\n}\\n/**\\n * @param {Array<number>} input Input coordinate array.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension.\\n * @return {Array<number>} Input coordinate array (same array as input).\\n */\\nexport function identityTransform(input, opt_output, opt_dimension) {\\n    if (opt_output !== undefined && input !== opt_output) {\\n        for (var i = 0, ii = input.length; i < ii; ++i) {\\n            opt_output[i] = input[i];\\n        }\\n        input = opt_output;\\n    }\\n    return input;\\n}\\n/**\\n * Add a Projection object to the list of supported projections that can be\\n * looked up by their code.\\n *\\n * @param {Projection} projection Projection instance.\\n * @api\\n */\\nexport function addProjection(projection) {\\n    projections.add(projection.getCode(), projection);\\n    addTransformFunc(projection, projection, cloneTransform);\\n}\\n/**\\n * @param {Array<Projection>} projections Projections.\\n */\\nexport function addProjections(projections) {\\n    projections.forEach(addProjection);\\n}\\n/**\\n * Fetches a Projection object for the code specified.\\n *\\n * @param {ProjectionLike} projectionLike Either a code string which is\\n *     a combination of authority and identifier such as \\\"EPSG:4326\\\", or an\\n *     existing projection object, or undefined.\\n * @return {Projection} Projection object, or null if not in list.\\n * @api\\n */\\nexport function get(projectionLike) {\\n    return typeof projectionLike === 'string' ?\\n        projections.get(/** @type {string} */ (projectionLike)) :\\n        ( /** @type {Projection} */(projectionLike) || null);\\n}\\n/**\\n * Get the resolution of the point in degrees or distance units.\\n * For projections with degrees as the unit this will simply return the\\n * provided resolution. For other projections the point resolution is\\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\\n * measuring its width and height on the normal sphere,\\n * and taking the average of the width and height.\\n * A custom function can be provided for a specific projection, either\\n * by setting the `getPointResolution` option in the\\n * {@link module:ol/proj/Projection~Projection} constructor or by using\\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\\n * projection object.\\n * @param {ProjectionLike} projection The projection.\\n * @param {number} resolution Nominal resolution in projection units.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} point Point to find adjusted resolution at.\\n * @param {Units=} opt_units Units to get the point resolution in.\\n * Default is the projection's units.\\n * @return {number} Point resolution.\\n * @api\\n */\\nexport function getPointResolution(projection, resolution, point, opt_units) {\\n    projection = get(projection);\\n    var pointResolution;\\n    var getter = projection.getPointResolutionFunc();\\n    if (getter) {\\n        pointResolution = getter(resolution, point);\\n        if (opt_units && opt_units !== projection.getUnits()) {\\n            var metersPerUnit = projection.getMetersPerUnit();\\n            if (metersPerUnit) {\\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\\n            }\\n        }\\n    }\\n    else {\\n        var units = projection.getUnits();\\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\\n            pointResolution = resolution;\\n        }\\n        else {\\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\\n            // measuring its width and height on the normal sphere, and taking the\\n            // average of the width and height.\\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\\n            var vertices = [\\n                point[0] - resolution / 2, point[1],\\n                point[0] + resolution / 2, point[1],\\n                point[0], point[1] - resolution / 2,\\n                point[0], point[1] + resolution / 2\\n            ];\\n            vertices = toEPSG4326_1(vertices, vertices, 2);\\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\\n            pointResolution = (width + height) / 2;\\n            var metersPerUnit = opt_units ?\\n                METERS_PER_UNIT[opt_units] :\\n                projection.getMetersPerUnit();\\n            if (metersPerUnit !== undefined) {\\n                pointResolution /= metersPerUnit;\\n            }\\n        }\\n    }\\n    return pointResolution;\\n}\\n/**\\n * Registers transformation functions that don't alter coordinates. Those allow\\n * to transform between projections with equal meaning.\\n *\\n * @param {Array<Projection>} projections Projections.\\n * @api\\n */\\nexport function addEquivalentProjections(projections) {\\n    addProjections(projections);\\n    projections.forEach(function (source) {\\n        projections.forEach(function (destination) {\\n            if (source !== destination) {\\n                addTransformFunc(source, destination, cloneTransform);\\n            }\\n        });\\n    });\\n}\\n/**\\n * Registers transformation functions to convert coordinates in any projection\\n * in projection1 to any projection in projection2.\\n *\\n * @param {Array<Projection>} projections1 Projections with equal\\n *     meaning.\\n * @param {Array<Projection>} projections2 Projections with equal\\n *     meaning.\\n * @param {TransformFunction} forwardTransform Transformation from any\\n *   projection in projection1 to any projection in projection2.\\n * @param {TransformFunction} inverseTransform Transform from any projection\\n *   in projection2 to any projection in projection1..\\n */\\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\\n    projections1.forEach(function (projection1) {\\n        projections2.forEach(function (projection2) {\\n            addTransformFunc(projection1, projection2, forwardTransform);\\n            addTransformFunc(projection2, projection1, inverseTransform);\\n        });\\n    });\\n}\\n/**\\n * Clear all cached projections and transforms.\\n */\\nexport function clearAllProjections() {\\n    projections.clear();\\n    clearTransformFuncs();\\n}\\n/**\\n * @param {Projection|string|undefined} projection Projection.\\n * @param {string} defaultCode Default code.\\n * @return {Projection} Projection.\\n */\\nexport function createProjection(projection, defaultCode) {\\n    if (!projection) {\\n        return get(defaultCode);\\n    }\\n    else if (typeof projection === 'string') {\\n        return get(projection);\\n    }\\n    else {\\n        return (\\n        /** @type {Projection} */ (projection));\\n    }\\n}\\n/**\\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\\n * function.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} coordTransform Coordinate\\n *     transform.\\n * @return {TransformFunction} Transform function.\\n */\\nexport function createTransformFromCoordinateTransform(coordTransform) {\\n    return (\\n    /**\\n     * @param {Array<number>} input Input.\\n     * @param {Array<number>=} opt_output Output.\\n     * @param {number=} opt_dimension Dimension.\\n     * @return {Array<number>} Output.\\n     */\\n    function (input, opt_output, opt_dimension) {\\n        var length = input.length;\\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\\n        var output = opt_output !== undefined ? opt_output : new Array(length);\\n        for (var i = 0; i < length; i += dimension) {\\n            var point = coordTransform([input[i], input[i + 1]]);\\n            output[i] = point[0];\\n            output[i + 1] = point[1];\\n            for (var j = dimension - 1; j >= 2; --j) {\\n                output[i + j] = input[i + j];\\n            }\\n        }\\n        return output;\\n    });\\n}\\n/**\\n * Registers coordinate transform functions to convert coordinates between the\\n * source projection and the destination projection.\\n * The forward and inverse functions convert coordinate pairs; this function\\n * converts these into the functions used internally which also handle\\n * extents and coordinate arrays.\\n *\\n * @param {ProjectionLike} source Source projection.\\n * @param {ProjectionLike} destination Destination projection.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} forward The forward transform\\n *     function (that is, from the source projection to the destination\\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\\n *     the transformed {@link module:ol/coordinate~Coordinate}.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} inverse The inverse transform\\n *     function (that is, from the destination projection to the source\\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\\n *     the transformed {@link module:ol/coordinate~Coordinate}.\\n * @api\\n */\\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\\n    var sourceProj = get(source);\\n    var destProj = get(destination);\\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\\n}\\n/**\\n * Transforms a coordinate from longitude/latitude to a different projection.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\\n *     an array with longitude as 1st and latitude as 2nd element.\\n * @param {ProjectionLike=} opt_projection Target projection. The\\n *     default is Web Mercator, i.e. 'EPSG:3857'.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate projected to the target projection.\\n * @api\\n */\\nexport function fromLonLat(coordinate, opt_projection) {\\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\\n}\\n/**\\n * Transforms a coordinate to longitude/latitude.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Projected coordinate.\\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate as longitude and latitude, i.e. an array\\n *     with longitude as 1st and latitude as 2nd element.\\n * @api\\n */\\nexport function toLonLat(coordinate, opt_projection) {\\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\\n    var lon = lonLat[0];\\n    if (lon < -180 || lon > 180) {\\n        lonLat[0] = modulo(lon + 180, 360) - 180;\\n    }\\n    return lonLat;\\n}\\n/**\\n * Checks if two projections are the same, that is every coordinate in one\\n * projection does represent the same geographic point as the same coordinate in\\n * the other projection.\\n *\\n * @param {Projection} projection1 Projection 1.\\n * @param {Projection} projection2 Projection 2.\\n * @return {boolean} Equivalent.\\n * @api\\n */\\nexport function equivalent(projection1, projection2) {\\n    if (projection1 === projection2) {\\n        return true;\\n    }\\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\\n    if (projection1.getCode() === projection2.getCode()) {\\n        return equalUnits;\\n    }\\n    else {\\n        var transformFunc = getTransformFromProjections(projection1, projection2);\\n        return transformFunc === cloneTransform && equalUnits;\\n    }\\n}\\n/**\\n * Searches in the list of transform functions for the function for converting\\n * coordinates from the source projection to the destination projection.\\n *\\n * @param {Projection} sourceProjection Source Projection object.\\n * @param {Projection} destinationProjection Destination Projection\\n *     object.\\n * @return {TransformFunction} Transform function.\\n */\\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\\n    var sourceCode = sourceProjection.getCode();\\n    var destinationCode = destinationProjection.getCode();\\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\\n    if (!transformFunc) {\\n        transformFunc = identityTransform;\\n    }\\n    return transformFunc;\\n}\\n/**\\n * Given the projection-like objects, searches for a transformation\\n * function to convert a coordinates array from the source projection to the\\n * destination projection.\\n *\\n * @param {ProjectionLike} source Source.\\n * @param {ProjectionLike} destination Destination.\\n * @return {TransformFunction} Transform function.\\n * @api\\n */\\nexport function getTransform(source, destination) {\\n    var sourceProjection = get(source);\\n    var destinationProjection = get(destination);\\n    return getTransformFromProjections(sourceProjection, destinationProjection);\\n}\\n/**\\n * Transforms a coordinate from source projection to destination projection.\\n * This returns a new coordinate (and does not modify the original).\\n *\\n * See {@link module:ol/proj~transformExtent} for extent transformation.\\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\\n * subclasses for geometry transforms.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {ProjectionLike} source Source projection-like.\\n * @param {ProjectionLike} destination Destination projection-like.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate.\\n * @api\\n */\\nexport function transform(coordinate, source, destination) {\\n    var transformFunc = getTransform(source, destination);\\n    return transformFunc(coordinate, undefined, coordinate.length);\\n}\\n/**\\n * Transforms an extent from source projection to destination projection.  This\\n * returns a new extent (and does not modify the original).\\n *\\n * @param {import(\\\"./extent.js\\\").Extent} extent The extent to transform.\\n * @param {ProjectionLike} source Source projection-like.\\n * @param {ProjectionLike} destination Destination projection-like.\\n * @return {import(\\\"./extent.js\\\").Extent} The transformed extent.\\n * @api\\n */\\nexport function transformExtent(extent, source, destination) {\\n    var transformFunc = getTransform(source, destination);\\n    return applyTransform(extent, transformFunc);\\n}\\n/**\\n * Transforms the given point to the destination projection.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} point Point.\\n * @param {Projection} sourceProjection Source projection.\\n * @param {Projection} destinationProjection Destination projection.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Point.\\n */\\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\\n    return transformFunc(point);\\n}\\n/**\\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\\n * by when this module is executed and should only need to be called again after\\n * `clearAllProjections()` is called (e.g. in tests).\\n */\\nexport function addCommon() {\\n    // Add transformations that don't alter coordinates to convert within set of\\n    // projections with equal meaning.\\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\\n    // coordinates and back.\\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\\n}\\naddCommon();\\n//# sourceMappingURL=proj.js.map\",\"/**\\n * @module ol/transform\\n */\\nimport { assert } from './asserts.js';\\n/**\\n * An array representing an affine 2d transformation for use with\\n * {@link module:ol/transform} functions. The array has 6 elements.\\n * @typedef {!Array<number>} Transform\\n */\\n/**\\n * Collection of affine 2d transformation functions. The functions work on an\\n * array of 6 elements. The element order is compatible with the [SVGMatrix\\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\\n * a subset (elements a to f) of a 3×3 matrix:\\n * ```\\n * [ a c e ]\\n * [ b d f ]\\n * [ 0 0 1 ]\\n * ```\\n */\\n/**\\n * @private\\n * @type {Transform}\\n */\\nvar tmp_ = new Array(6);\\n/**\\n * Create an identity transform.\\n * @return {!Transform} Identity transform.\\n */\\nexport function create() {\\n    return [1, 0, 0, 1, 0, 0];\\n}\\n/**\\n * Resets the given transform to an identity transform.\\n * @param {!Transform} transform Transform.\\n * @return {!Transform} Transform.\\n */\\nexport function reset(transform) {\\n    return set(transform, 1, 0, 0, 1, 0, 0);\\n}\\n/**\\n * Multiply the underlying matrices of two transforms and return the result in\\n * the first transform.\\n * @param {!Transform} transform1 Transform parameters of matrix 1.\\n * @param {!Transform} transform2 Transform parameters of matrix 2.\\n * @return {!Transform} transform1 multiplied with transform2.\\n */\\nexport function multiply(transform1, transform2) {\\n    var a1 = transform1[0];\\n    var b1 = transform1[1];\\n    var c1 = transform1[2];\\n    var d1 = transform1[3];\\n    var e1 = transform1[4];\\n    var f1 = transform1[5];\\n    var a2 = transform2[0];\\n    var b2 = transform2[1];\\n    var c2 = transform2[2];\\n    var d2 = transform2[3];\\n    var e2 = transform2[4];\\n    var f2 = transform2[5];\\n    transform1[0] = a1 * a2 + c1 * b2;\\n    transform1[1] = b1 * a2 + d1 * b2;\\n    transform1[2] = a1 * c2 + c1 * d2;\\n    transform1[3] = b1 * c2 + d1 * d2;\\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\\n    return transform1;\\n}\\n/**\\n * Set the transform components a-f on a given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} a The a component of the transform.\\n * @param {number} b The b component of the transform.\\n * @param {number} c The c component of the transform.\\n * @param {number} d The d component of the transform.\\n * @param {number} e The e component of the transform.\\n * @param {number} f The f component of the transform.\\n * @return {!Transform} Matrix with transform applied.\\n */\\nexport function set(transform, a, b, c, d, e, f) {\\n    transform[0] = a;\\n    transform[1] = b;\\n    transform[2] = c;\\n    transform[3] = d;\\n    transform[4] = e;\\n    transform[5] = f;\\n    return transform;\\n}\\n/**\\n * Set transform on one matrix from another matrix.\\n * @param {!Transform} transform1 Matrix to set transform to.\\n * @param {!Transform} transform2 Matrix to set transform from.\\n * @return {!Transform} transform1 with transform from transform2 applied.\\n */\\nexport function setFromArray(transform1, transform2) {\\n    transform1[0] = transform2[0];\\n    transform1[1] = transform2[1];\\n    transform1[2] = transform2[2];\\n    transform1[3] = transform2[3];\\n    transform1[4] = transform2[4];\\n    transform1[5] = transform2[5];\\n    return transform1;\\n}\\n/**\\n * Transforms the given coordinate with the given transform returning the\\n * resulting, transformed coordinate. The coordinate will be modified in-place.\\n *\\n * @param {Transform} transform The transformation.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate|import(\\\"./pixel.js\\\").Pixel} coordinate The coordinate to transform.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate|import(\\\"./pixel.js\\\").Pixel} return coordinate so that operations can be\\n *     chained together.\\n */\\nexport function apply(transform, coordinate) {\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\\n    return coordinate;\\n}\\n/**\\n * Applies rotation to the given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} angle Angle in radians.\\n * @return {!Transform} The rotated transform.\\n */\\nexport function rotate(transform, angle) {\\n    var cos = Math.cos(angle);\\n    var sin = Math.sin(angle);\\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\\n}\\n/**\\n * Applies scale to a given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} x Scale factor x.\\n * @param {number} y Scale factor y.\\n * @return {!Transform} The scaled transform.\\n */\\nexport function scale(transform, x, y) {\\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\\n}\\n/**\\n * Creates a scale transform.\\n * @param {!Transform} target Transform to overwrite.\\n * @param {number} x Scale factor x.\\n * @param {number} y Scale factor y.\\n * @return {!Transform} The scale transform.\\n */\\nexport function makeScale(target, x, y) {\\n    return set(target, x, 0, 0, y, 0, 0);\\n}\\n/**\\n * Applies translation to the given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} dx Translation x.\\n * @param {number} dy Translation y.\\n * @return {!Transform} The translated transform.\\n */\\nexport function translate(transform, dx, dy) {\\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\\n}\\n/**\\n * Creates a composite transform given an initial translation, scale, rotation, and\\n * final translation (in that order only, not commutative).\\n * @param {!Transform} transform The transform (will be modified in place).\\n * @param {number} dx1 Initial translation x.\\n * @param {number} dy1 Initial translation y.\\n * @param {number} sx Scale factor x.\\n * @param {number} sy Scale factor y.\\n * @param {number} angle Rotation (in counter-clockwise radians).\\n * @param {number} dx2 Final translation x.\\n * @param {number} dy2 Final translation y.\\n * @return {!Transform} The composite transform.\\n */\\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\\n    var sin = Math.sin(angle);\\n    var cos = Math.cos(angle);\\n    transform[0] = sx * cos;\\n    transform[1] = sy * sin;\\n    transform[2] = -sx * sin;\\n    transform[3] = sy * cos;\\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\\n    return transform;\\n}\\n/**\\n * Invert the given transform.\\n * @param {!Transform} source The source transform to invert.\\n * @return {!Transform} The inverted (source) transform.\\n */\\nexport function invert(source) {\\n    return makeInverse(source, source);\\n}\\n/**\\n * Invert the given transform.\\n * @param {!Transform} target Transform to be set as the inverse of\\n *     the source transform.\\n * @param {!Transform} source The source transform to invert.\\n * @return {!Transform} The inverted (target) transform.\\n */\\nexport function makeInverse(target, source) {\\n    var det = determinant(source);\\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\\n    var a = source[0];\\n    var b = source[1];\\n    var c = source[2];\\n    var d = source[3];\\n    var e = source[4];\\n    var f = source[5];\\n    target[0] = d / det;\\n    target[1] = -b / det;\\n    target[2] = -c / det;\\n    target[3] = a / det;\\n    target[4] = (c * f - d * e) / det;\\n    target[5] = -(a * f - b * e) / det;\\n    return target;\\n}\\n/**\\n * Returns the determinant of the given matrix.\\n * @param {!Transform} mat Matrix.\\n * @return {number} Determinant.\\n */\\nexport function determinant(mat) {\\n    return mat[0] * mat[3] - mat[1] * mat[2];\\n}\\n/**\\n * A string version of the transform.  This can be used\\n * for CSS transforms.\\n * @param {!Transform} mat Matrix.\\n * @return {string} The transform as a string.\\n */\\nexport function toString(mat) {\\n    return 'matrix(' + mat.join(', ') + ')';\\n}\\n//# sourceMappingURL=transform.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/Geometry\\n */\\nimport { abstract } from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\\nimport { transform2D } from './flat/transform.js';\\nimport { get as getProjection, getTransform } from '../proj.js';\\nimport Units from '../proj/Units.js';\\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\\n/**\\n * @type {import(\\\"../transform.js\\\").Transform}\\n */\\nvar tmpTransform = createTransform();\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for vector geometries.\\n *\\n * To get notified of changes to the geometry, register a listener for the\\n * generic `change` event on your geometry instance.\\n *\\n * @abstract\\n * @api\\n */\\nvar Geometry = /** @class */ (function (_super) {\\n    __extends(Geometry, _super);\\n    function Geometry() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        _this.extent_ = createEmpty();\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.extentRevision_ = -1;\\n        /**\\n         * @protected\\n         * @type {Object<string, Geometry>}\\n         */\\n        _this.simplifiedGeometryCache = {};\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.simplifiedGeometryRevision = 0;\\n        return _this;\\n    }\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @abstract\\n     * @return {!Geometry} Clone.\\n     */\\n    Geometry.prototype.clone = function () {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} closestPoint Closest point.\\n     * @param {number} minSquaredDistance Minimum squared distance.\\n     * @return {number} Minimum squared distance.\\n     */\\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        return abstract();\\n    };\\n    /**\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @return {boolean} Contains (x, y).\\n     */\\n    Geometry.prototype.containsXY = function (x, y) {\\n        var coord = this.getClosestPoint([x, y]);\\n        return coord[0] === x && coord[1] === y;\\n    };\\n    /**\\n     * Return the closest point of the geometry to the passed point as\\n     * {@link module:ol/coordinate~Coordinate coordinate}.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} point Point.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_closestPoint Closest point.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Closest point.\\n     * @api\\n     */\\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\\n        return closestPoint;\\n    };\\n    /**\\n     * Returns true if this geometry includes the specified coordinate. If the\\n     * coordinate is on the boundary of the geometry, returns false.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @return {boolean} Contains coordinate.\\n     * @api\\n     */\\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\\n        return this.containsXY(coordinate[0], coordinate[1]);\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @protected\\n     * @return {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     */\\n    Geometry.prototype.computeExtent = function (extent) {\\n        return abstract();\\n    };\\n    /**\\n     * Get the extent of the geometry.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Extent.\\n     * @return {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @api\\n     */\\n    Geometry.prototype.getExtent = function (opt_extent) {\\n        if (this.extentRevision_ != this.getRevision()) {\\n            this.extent_ = this.computeExtent(this.extent_);\\n            this.extentRevision_ = this.getRevision();\\n        }\\n        return returnOrUpdate(this.extent_, opt_extent);\\n    };\\n    /**\\n     * Rotate the geometry around a given coordinate. This modifies the geometry\\n     * coordinates in place.\\n     * @abstract\\n     * @param {number} angle Rotation angle in radians.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} anchor The rotation center.\\n     * @api\\n     */\\n    Geometry.prototype.rotate = function (angle, anchor) {\\n        abstract();\\n    };\\n    /**\\n     * Scale the geometry (with an optional origin).  This modifies the geometry\\n     * coordinates in place.\\n     * @abstract\\n     * @param {number} sx The scaling factor in the x-direction.\\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\\n     *     sx).\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_anchor The scale origin (defaults to the center\\n     *     of the geometry extent).\\n     * @api\\n     */\\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\\n        abstract();\\n    };\\n    /**\\n     * Create a simplified version of this geometry.  For linestrings, this uses\\n     * the the {@link\\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\\n     * simplification is used to preserve topology.\\n     * @param {number} tolerance The tolerance distance for simplification.\\n     * @return {Geometry} A new, simplified version of the original geometry.\\n     * @api\\n     */\\n    Geometry.prototype.simplify = function (tolerance) {\\n        return this.getSimplifiedGeometry(tolerance * tolerance);\\n    };\\n    /**\\n     * Create a simplified version of this geometry using the Douglas Peucker\\n     * algorithm.\\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\\n     * @abstract\\n     * @param {number} squaredTolerance Squared tolerance.\\n     * @return {Geometry} Simplified geometry.\\n     */\\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\\n        return abstract();\\n    };\\n    /**\\n     * Get the type of this geometry.\\n     * @abstract\\n     * @return {import(\\\"./GeometryType.js\\\").default} Geometry type.\\n     */\\n    Geometry.prototype.getType = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Apply a transform function to each coordinate of the geometry.\\n     * The geometry is modified in place.\\n     * If you do not want the geometry modified in place, first `clone()` it and\\n     * then use this function on the clone.\\n     * @abstract\\n     * @param {import(\\\"../proj.js\\\").TransformFunction} transformFn Transform.\\n     */\\n    Geometry.prototype.applyTransform = function (transformFn) {\\n        abstract();\\n    };\\n    /**\\n     * Test if the geometry and the passed extent intersect.\\n     * @abstract\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @return {boolean} `true` if the geometry and the extent intersect.\\n     */\\n    Geometry.prototype.intersectsExtent = function (extent) {\\n        return abstract();\\n    };\\n    /**\\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\\n     * instead you want a new geometry, first `clone()` this geometry.\\n     * @abstract\\n     * @param {number} deltaX Delta X.\\n     * @param {number} deltaY Delta Y.\\n     * @api\\n     */\\n    Geometry.prototype.translate = function (deltaX, deltaY) {\\n        abstract();\\n    };\\n    /**\\n     * Transform each coordinate of the geometry from one coordinate reference\\n     * system to another. The geometry is modified in place.\\n     * For example, a line will be transformed to a line and a circle to a circle.\\n     * If you do not want the geometry modified in place, first `clone()` it and\\n     * then use this function on the clone.\\n     *\\n     * @param {import(\\\"../proj.js\\\").ProjectionLike} source The current projection.  Can be a\\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\\n     * @param {import(\\\"../proj.js\\\").ProjectionLike} destination The desired projection.  Can be a\\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\\n     * @return {Geometry} This geometry.  Note that original geometry is\\n     *     modified in place.\\n     * @api\\n     */\\n    Geometry.prototype.transform = function (source, destination) {\\n        /** @type {import(\\\"../proj/Projection.js\\\").default} */\\n        var sourceProj = getProjection(source);\\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\\n            function (inCoordinates, outCoordinates, stride) {\\n                var pixelExtent = sourceProj.getExtent();\\n                var projectedExtent = sourceProj.getWorldExtent();\\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\\n            } :\\n            getTransform(sourceProj, destination);\\n        this.applyTransform(transformFn);\\n        return this;\\n    };\\n    return Geometry;\\n}(BaseObject));\\nexport default Geometry;\\n//# sourceMappingURL=Geometry.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/SimpleGeometry\\n */\\nimport { abstract } from '../util.js';\\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\\nimport Geometry from './Geometry.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\\nimport { clear } from '../obj.js';\\n/**\\n * @classdesc\\n * Abstract base class; only used for creating subclasses; do not instantiate\\n * in apps, as cannot be rendered.\\n *\\n * @abstract\\n * @api\\n */\\nvar SimpleGeometry = /** @class */ (function (_super) {\\n    __extends(SimpleGeometry, _super);\\n    function SimpleGeometry() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @protected\\n         * @type {GeometryLayout}\\n         */\\n        _this.layout = GeometryLayout.XY;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.stride = 2;\\n        /**\\n         * @protected\\n         * @type {Array<number>}\\n         */\\n        _this.flatCoordinates = null;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    SimpleGeometry.prototype.computeExtent = function (extent) {\\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\\n    };\\n    /**\\n     * @abstract\\n     * @return {Array<*>} Coordinates.\\n     */\\n    SimpleGeometry.prototype.getCoordinates = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Return the first coordinate of the geometry.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} First coordinate.\\n     * @api\\n     */\\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\\n        return this.flatCoordinates.slice(0, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Flat coordinates.\\n     */\\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\\n        return this.flatCoordinates;\\n    };\\n    /**\\n     * Return the last coordinate of the geometry.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Last point.\\n     * @api\\n     */\\n    SimpleGeometry.prototype.getLastCoordinate = function () {\\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\\n    };\\n    /**\\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\\n     * @return {GeometryLayout} Layout.\\n     * @api\\n     */\\n    SimpleGeometry.prototype.getLayout = function () {\\n        return this.layout;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\\n            clear(this.simplifiedGeometryCache);\\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n            this.simplifiedGeometryRevision = this.getRevision();\\n        }\\n        // If squaredTolerance is negative or if we know that simplification will not\\n        // have any effect then just return this.\\n        if (squaredTolerance < 0 ||\\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\\n            return this;\\n        }\\n        var key = squaredTolerance.toString();\\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\\n            return this.simplifiedGeometryCache[key];\\n        }\\n        else {\\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\\n                return simplifiedGeometry;\\n            }\\n            else {\\n                // Simplification did not actually remove any coordinates.  We now know\\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\\n                // than or equal to the current squaredTolerance will also not have any\\n                // effect.  This allows us to short circuit simplification (saving CPU\\n                // cycles) and prevents the cache of simplified geometries from filling\\n                // up with useless identical copies of this geometry (saving memory).\\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\\n                return this;\\n            }\\n        }\\n    };\\n    /**\\n     * @param {number} squaredTolerance Squared tolerance.\\n     * @return {SimpleGeometry} Simplified geometry.\\n     * @protected\\n     */\\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        return this;\\n    };\\n    /**\\n     * @return {number} Stride.\\n     */\\n    SimpleGeometry.prototype.getStride = function () {\\n        return this.stride;\\n    };\\n    /**\\n     * @param {GeometryLayout} layout Layout.\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     */\\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\\n        this.stride = getStrideForLayout(layout);\\n        this.layout = layout;\\n        this.flatCoordinates = flatCoordinates;\\n    };\\n    /**\\n     * @abstract\\n     * @param {!Array<*>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     */\\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        abstract();\\n    };\\n    /**\\n     * @param {GeometryLayout|undefined} layout Layout.\\n     * @param {Array<*>} coordinates Coordinates.\\n     * @param {number} nesting Nesting.\\n     * @protected\\n     */\\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\\n        /** @type {number} */\\n        var stride;\\n        if (layout) {\\n            stride = getStrideForLayout(layout);\\n        }\\n        else {\\n            for (var i = 0; i < nesting; ++i) {\\n                if (coordinates.length === 0) {\\n                    this.layout = GeometryLayout.XY;\\n                    this.stride = 2;\\n                    return;\\n                }\\n                else {\\n                    coordinates = /** @type {Array} */ (coordinates[0]);\\n                }\\n            }\\n            stride = coordinates.length;\\n            layout = getLayoutForStride(stride);\\n        }\\n        this.layout = layout;\\n        this.stride = stride;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\\n        if (this.flatCoordinates) {\\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\\n        var flatCoordinates = this.getFlatCoordinates();\\n        if (flatCoordinates) {\\n            var stride = this.getStride();\\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\\n        var sy = opt_sy;\\n        if (sy === undefined) {\\n            sy = sx;\\n        }\\n        var anchor = opt_anchor;\\n        if (!anchor) {\\n            anchor = getCenter(this.getExtent());\\n        }\\n        var flatCoordinates = this.getFlatCoordinates();\\n        if (flatCoordinates) {\\n            var stride = this.getStride();\\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\\n        var flatCoordinates = this.getFlatCoordinates();\\n        if (flatCoordinates) {\\n            var stride = this.getStride();\\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\\n            this.changed();\\n        }\\n    };\\n    return SimpleGeometry;\\n}(Geometry));\\n/**\\n * @param {number} stride Stride.\\n * @return {GeometryLayout} layout Layout.\\n */\\nfunction getLayoutForStride(stride) {\\n    var layout;\\n    if (stride == 2) {\\n        layout = GeometryLayout.XY;\\n    }\\n    else if (stride == 3) {\\n        layout = GeometryLayout.XYZ;\\n    }\\n    else if (stride == 4) {\\n        layout = GeometryLayout.XYZM;\\n    }\\n    return (\\n    /** @type {GeometryLayout} */ (layout));\\n}\\n/**\\n * @param {GeometryLayout} layout Layout.\\n * @return {number} Stride.\\n */\\nexport function getStrideForLayout(layout) {\\n    var stride;\\n    if (layout == GeometryLayout.XY) {\\n        stride = 2;\\n    }\\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\\n        stride = 3;\\n    }\\n    else if (layout == GeometryLayout.XYZM) {\\n        stride = 4;\\n    }\\n    return /** @type {number} */ (stride);\\n}\\n/**\\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\\n * @param {import(\\\"../transform.js\\\").Transform} transform Transform.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed flat coordinates.\\n */\\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\\n    if (!flatCoordinates) {\\n        return null;\\n    }\\n    else {\\n        var stride = simpleGeometry.getStride();\\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\\n    }\\n}\\nexport default SimpleGeometry;\\n//# sourceMappingURL=SimpleGeometry.js.map\",\"/**\\n * @module ol/geom/flat/area\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {number} Area.\\n */\\nexport function linearRing(flatCoordinates, offset, end, stride) {\\n    var twiceArea = 0;\\n    var x1 = flatCoordinates[end - stride];\\n    var y1 = flatCoordinates[end - stride + 1];\\n    for (; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        twiceArea += y1 * x2 - x1 * y2;\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return twiceArea / 2;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @return {number} Area.\\n */\\nexport function linearRings(flatCoordinates, offset, ends, stride) {\\n    var area = 0;\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        area += linearRing(flatCoordinates, offset, end, stride);\\n        offset = end;\\n    }\\n    return area;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @return {number} Area.\\n */\\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\\n    var area = 0;\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        area += linearRings(flatCoordinates, offset, ends, stride);\\n        offset = ends[ends.length - 1];\\n    }\\n    return area;\\n}\\n//# sourceMappingURL=area.js.map\",\"/**\\n * @module ol/geom/flat/closest\\n */\\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\\n/**\\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\\n * dimensions are linearly interpolated.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset1 Offset 1.\\n * @param {number} offset2 Offset 2.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n */\\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\\n    var x1 = flatCoordinates[offset1];\\n    var y1 = flatCoordinates[offset1 + 1];\\n    var dx = flatCoordinates[offset2] - x1;\\n    var dy = flatCoordinates[offset2 + 1] - y1;\\n    var offset;\\n    if (dx === 0 && dy === 0) {\\n        offset = offset1;\\n    }\\n    else {\\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\\n        if (t > 1) {\\n            offset = offset2;\\n        }\\n        else if (t > 0) {\\n            for (var i = 0; i < stride; ++i) {\\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\\n            }\\n            closestPoint.length = stride;\\n            return;\\n        }\\n        else {\\n            offset = offset1;\\n        }\\n    }\\n    for (var i = 0; i < stride; ++i) {\\n        closestPoint[i] = flatCoordinates[offset + i];\\n    }\\n    closestPoint.length = stride;\\n}\\n/**\\n * Return the squared of the largest distance between any pair of consecutive\\n * coordinates.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} max Max squared delta.\\n * @return {number} Max squared delta.\\n */\\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    for (offset += stride; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\\n        if (squaredDelta > max) {\\n            max = squaredDelta;\\n        }\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return max;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} max Max squared delta.\\n * @return {number} Max squared delta.\\n */\\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\\n        offset = end;\\n    }\\n    return max;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} max Max squared delta.\\n * @return {number} Max squared delta.\\n */\\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\\n        offset = ends[ends.length - 1];\\n    }\\n    return max;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} maxDelta Max delta.\\n * @param {boolean} isRing Is ring.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n * @param {number} minSquaredDistance Minimum squared distance.\\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\\n * @return {number} Minimum squared distance.\\n */\\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\\n    if (offset == end) {\\n        return minSquaredDistance;\\n    }\\n    var i, squaredDistance;\\n    if (maxDelta === 0) {\\n        // All points are identical, so just test the first point.\\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            for (i = 0; i < stride; ++i) {\\n                closestPoint[i] = flatCoordinates[offset + i];\\n            }\\n            closestPoint.length = stride;\\n            return squaredDistance;\\n        }\\n        else {\\n            return minSquaredDistance;\\n        }\\n    }\\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\\n    var index = offset + stride;\\n    while (index < end) {\\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            minSquaredDistance = squaredDistance;\\n            for (i = 0; i < stride; ++i) {\\n                closestPoint[i] = tmpPoint[i];\\n            }\\n            closestPoint.length = stride;\\n            index += stride;\\n        }\\n        else {\\n            // Skip ahead multiple points, because we know that all the skipped\\n            // points cannot be any closer than the closest point we have found so\\n            // far.  We know this because we know how close the current point is, how\\n            // close the closest point we have found so far is, and the maximum\\n            // distance between consecutive points.  For example, if we're currently\\n            // at distance 10, the best we've found so far is 3, and that the maximum\\n            // distance between consecutive points is 2, then we'll need to skip at\\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\\n            // always advance at least one point, to avoid an infinite loop.\\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\\n        }\\n    }\\n    if (isRing) {\\n        // Check the closing segment.\\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            minSquaredDistance = squaredDistance;\\n            for (i = 0; i < stride; ++i) {\\n                closestPoint[i] = tmpPoint[i];\\n            }\\n            closestPoint.length = stride;\\n        }\\n    }\\n    return minSquaredDistance;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} maxDelta Max delta.\\n * @param {boolean} isRing Is ring.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n * @param {number} minSquaredDistance Minimum squared distance.\\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\\n * @return {number} Minimum squared distance.\\n */\\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\\n        offset = end;\\n    }\\n    return minSquaredDistance;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} maxDelta Max delta.\\n * @param {boolean} isRing Is ring.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n * @param {number} minSquaredDistance Minimum squared distance.\\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\\n * @return {number} Minimum squared distance.\\n */\\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\\n        offset = ends[ends.length - 1];\\n    }\\n    return minSquaredDistance;\\n}\\n//# sourceMappingURL=closest.js.map\",\"/**\\n * @module ol/geom/flat/deflate\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {import(\\\"../../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {number} stride Stride.\\n * @return {number} offset Offset.\\n */\\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\\n        flatCoordinates[offset++] = coordinate[i];\\n    }\\n    return offset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<import(\\\"../../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @param {number} stride Stride.\\n * @return {number} offset Offset.\\n */\\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n        var coordinate = coordinates[i];\\n        for (var j = 0; j < stride; ++j) {\\n            flatCoordinates[offset++] = coordinate[j];\\n        }\\n    }\\n    return offset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>} coordinatess Coordinatess.\\n * @param {number} stride Stride.\\n * @param {Array<number>=} opt_ends Ends.\\n * @return {Array<number>} Ends.\\n */\\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\\n    var ends = opt_ends ? opt_ends : [];\\n    var i = 0;\\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\\n        ends[i++] = end;\\n        offset = end;\\n    }\\n    ends.length = i;\\n    return ends;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>} coordinatesss Coordinatesss.\\n * @param {number} stride Stride.\\n * @param {Array<Array<number>>=} opt_endss Endss.\\n * @return {Array<Array<number>>} Endss.\\n */\\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\\n    var endss = opt_endss ? opt_endss : [];\\n    var i = 0;\\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\\n        endss[i++] = ends;\\n        offset = ends[ends.length - 1];\\n    }\\n    endss.length = i;\\n    return endss;\\n}\\n//# sourceMappingURL=deflate.js.map\",\"/**\\n * @module ol/geom/flat/inflate\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {Array<import(\\\"../../coordinate.js\\\").Coordinate>=} opt_coordinates Coordinates.\\n * @return {Array<import(\\\"../../coordinate.js\\\").Coordinate>} Coordinates.\\n */\\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\\n    }\\n    coordinates.length = i;\\n    return coordinates;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>=} opt_coordinatess Coordinatess.\\n * @return {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>} Coordinatess.\\n */\\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\\n    var i = 0;\\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\\n        var end = ends[j];\\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\\n        offset = end;\\n    }\\n    coordinatess.length = i;\\n    return coordinatess;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>=} opt_coordinatesss\\n *     Coordinatesss.\\n * @return {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>} Coordinatesss.\\n */\\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\\n    var i = 0;\\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\\n        var ends = endss[j];\\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\\n        offset = ends[ends.length - 1];\\n    }\\n    coordinatesss.length = i;\\n    return coordinatesss;\\n}\\n//# sourceMappingURL=inflate.js.map\",\"/**\\n * @module ol/geom/flat/simplify\\n */\\n// Based on simplify-js https://github.com/mourner/simplify-js\\n// Copyright (c) 2012, Vladimir Agafonkin\\n// All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are met:\\n//\\n//    1. Redistributions of source code must retain the above copyright notice,\\n//       this list of conditions and the following disclaimer.\\n//\\n//    2. Redistributions in binary form must reproduce the above copyright\\n//       notice, this list of conditions and the following disclaimer in the\\n//       documentation and/or other materials provided with the distribution.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n// POSSIBILITY OF SUCH DAMAGE.\\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {boolean} highQuality Highest quality.\\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @return {Array<number>} Simplified line string.\\n */\\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\\n        opt_simplifiedFlatCoordinates : [];\\n    if (!highQuality) {\\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n        flatCoordinates = simplifiedFlatCoordinates;\\n        offset = 0;\\n        stride = 2;\\n    }\\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n    return simplifiedFlatCoordinates;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @return {number} Simplified offset.\\n */\\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\\n    var n = (end - offset) / stride;\\n    if (n < 3) {\\n        for (; offset < end; offset += stride) {\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset];\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + 1];\\n        }\\n        return simplifiedOffset;\\n    }\\n    /** @type {Array<number>} */\\n    var markers = new Array(n);\\n    markers[0] = 1;\\n    markers[n - 1] = 1;\\n    /** @type {Array<number>} */\\n    var stack = [offset, end - stride];\\n    var index = 0;\\n    while (stack.length > 0) {\\n        var last = stack.pop();\\n        var first = stack.pop();\\n        var maxSquaredDistance = 0;\\n        var x1 = flatCoordinates[first];\\n        var y1 = flatCoordinates[first + 1];\\n        var x2 = flatCoordinates[last];\\n        var y2 = flatCoordinates[last + 1];\\n        for (var i = first + stride; i < last; i += stride) {\\n            var x = flatCoordinates[i];\\n            var y = flatCoordinates[i + 1];\\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\\n            if (squaredDistance_1 > maxSquaredDistance) {\\n                index = i;\\n                maxSquaredDistance = squaredDistance_1;\\n            }\\n        }\\n        if (maxSquaredDistance > squaredTolerance) {\\n            markers[(index - offset) / stride] = 1;\\n            if (first + stride < index) {\\n                stack.push(first, index);\\n            }\\n            if (index + stride < last) {\\n                stack.push(index, last);\\n            }\\n        }\\n    }\\n    for (var i = 0; i < n; ++i) {\\n        if (markers[i]) {\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + i * stride];\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + i * stride + 1];\\n        }\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<number>} simplifiedEnds Simplified ends.\\n * @return {number} Simplified offset.\\n */\\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\\n        simplifiedEnds.push(simplifiedOffset);\\n        offset = end;\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\\n * @return {number} Simplified offset.\\n */\\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        var simplifiedEnds = [];\\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\\n        simplifiedEndss.push(simplifiedEnds);\\n        offset = ends[ends.length - 1];\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @return {number} Simplified offset.\\n */\\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\\n    if (end <= offset + stride) {\\n        // zero or one point, no simplification possible, so copy and return\\n        for (; offset < end; offset += stride) {\\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + 1];\\n        }\\n        return simplifiedOffset;\\n    }\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    // copy first point\\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\\n    var x2 = x1;\\n    var y2 = y1;\\n    for (offset += stride; offset < end; offset += stride) {\\n        x2 = flatCoordinates[offset];\\n        y2 = flatCoordinates[offset + 1];\\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\\n            // copy point at offset\\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n    }\\n    if (x2 != x1 || y2 != y1) {\\n        // copy last point\\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {number} value Value.\\n * @param {number} tolerance Tolerance.\\n * @return {number} Rounded value.\\n */\\nexport function snap(value, tolerance) {\\n    return tolerance * Math.round(value / tolerance);\\n}\\n/**\\n * Simplifies a line string using an algorithm designed by Tim Schaub.\\n * Coordinates are snapped to the nearest value in a virtual grid and\\n * consecutive duplicate coordinates are discarded.  This effectively preserves\\n * topology as the simplification of any subsection of a line string is\\n * independent of the rest of the line string.  This means that, for examples,\\n * the common edge between two polygons will be simplified to the same line\\n * string independently in both polygons.  This implementation uses a single\\n * pass over the coordinates and eliminates intermediate collinear points.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} tolerance Tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @return {number} Simplified offset.\\n */\\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\\n    // do nothing if the line is empty\\n    if (offset == end) {\\n        return simplifiedOffset;\\n    }\\n    // snap the first coordinate (P1)\\n    var x1 = snap(flatCoordinates[offset], tolerance);\\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\\n    offset += stride;\\n    // add the first coordinate to the output\\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\\n    // find the next coordinate that does not snap to the same value as the first\\n    // coordinate (P2)\\n    var x2, y2;\\n    do {\\n        x2 = snap(flatCoordinates[offset], tolerance);\\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\\n        offset += stride;\\n        if (offset == end) {\\n            // all coordinates snap to the same value, the line collapses to a point\\n            // push the last snapped value anyway to ensure that the output contains\\n            // at least two points\\n            // FIXME should we really return at least two points anyway?\\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n            return simplifiedOffset;\\n        }\\n    } while (x2 == x1 && y2 == y1);\\n    while (offset < end) {\\n        // snap the next coordinate (P3)\\n        var x3 = snap(flatCoordinates[offset], tolerance);\\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\\n        offset += stride;\\n        // skip P3 if it is equal to P2\\n        if (x3 == x2 && y3 == y2) {\\n            continue;\\n        }\\n        // calculate the delta between P1 and P2\\n        var dx1 = x2 - x1;\\n        var dy1 = y2 - y1;\\n        // calculate the delta between P3 and P1\\n        var dx2 = x3 - x1;\\n        var dy2 = y3 - y1;\\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\\n        // P1 in the same direction then P2 is on the straight line between P1 and\\n        // P3\\n        if ((dx1 * dy2 == dy1 * dx2) &&\\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\\n            // discard P2 and set P2 = P3\\n            x2 = x3;\\n            y2 = y3;\\n            continue;\\n        }\\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\\n        // and continue with P1 = P2 and P2 = P3\\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n        x1 = x2;\\n        y1 = y2;\\n        x2 = x3;\\n        y2 = y3;\\n    }\\n    // add the last point (P2)\\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} tolerance Tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<number>} simplifiedEnds Simplified ends.\\n * @return {number} Simplified offset.\\n */\\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\\n        simplifiedEnds.push(simplifiedOffset);\\n        offset = end;\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} tolerance Tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\\n * @return {number} Simplified offset.\\n */\\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        var simplifiedEnds = [];\\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\\n        simplifiedEndss.push(simplifiedEnds);\\n        offset = ends[ends.length - 1];\\n    }\\n    return simplifiedOffset;\\n}\\n//# sourceMappingURL=simplify.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/LinearRing\\n */\\nimport { closestSquaredDistanceXY } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { linearRing as linearRingArea } from './flat/area.js';\\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\\nimport { deflateCoordinates } from './flat/deflate.js';\\nimport { inflateCoordinates } from './flat/inflate.js';\\nimport { douglasPeucker } from './flat/simplify.js';\\n/**\\n * @classdesc\\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\\n * on its own.\\n *\\n * @api\\n */\\nvar LinearRing = /** @class */ (function (_super) {\\n    __extends(LinearRing, _super);\\n    /**\\n     * @param {Array<import(\\\"../coordinate.js\\\").Coordinate>|Array<number>} coordinates Coordinates.\\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     */\\n    function LinearRing(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<import(\\\"../coordinate.js\\\").Coordinate>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!LinearRing} Clone.\\n     * @override\\n     * @api\\n     */\\n    LinearRing.prototype.clone = function () {\\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * Return the area of the linear ring on projected plane.\\n     * @return {number} Area (on projected plane).\\n     * @api\\n     */\\n    LinearRing.prototype.getArea = function () {\\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * Return the coordinates of the linear ring.\\n     * @return {Array<import(\\\"../coordinate.js\\\").Coordinate>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    LinearRing.prototype.getCoordinates = function () {\\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    LinearRing.prototype.getType = function () {\\n        return GeometryType.LINEAR_RING;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LinearRing.prototype.intersectsExtent = function (extent) {\\n        return false;\\n    };\\n    /**\\n     * Set the coordinates of the linear ring.\\n     * @param {!Array<import(\\\"../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 1);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return LinearRing;\\n}(SimpleGeometry));\\nexport default LinearRing;\\n//# sourceMappingURL=LinearRing.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/Point\\n */\\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\\nimport GeometryType from './GeometryType.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { deflateCoordinate } from './flat/deflate.js';\\nimport { squaredDistance as squaredDx } from '../math.js';\\n/**\\n * @classdesc\\n * Point geometry.\\n *\\n * @api\\n */\\nvar Point = /** @class */ (function (_super) {\\n    __extends(Point, _super);\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinates Coordinates.\\n     * @param {import(\\\"./GeometryLayout.js\\\").default=} opt_layout Layout.\\n     */\\n    function Point(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        _this.setCoordinates(coordinates, opt_layout);\\n        return _this;\\n    }\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!Point} Clone.\\n     * @override\\n     * @api\\n     */\\n    Point.prototype.clone = function () {\\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\\n        return point;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        var flatCoordinates = this.flatCoordinates;\\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            var stride = this.stride;\\n            for (var i = 0; i < stride; ++i) {\\n                closestPoint[i] = flatCoordinates[i];\\n            }\\n            closestPoint.length = stride;\\n            return squaredDistance;\\n        }\\n        else {\\n            return minSquaredDistance;\\n        }\\n    };\\n    /**\\n     * Return the coordinate of the point.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    Point.prototype.getCoordinates = function () {\\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Point.prototype.computeExtent = function (extent) {\\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Point.prototype.getType = function () {\\n        return GeometryType.POINT;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Point.prototype.intersectsExtent = function (extent) {\\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 0);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return Point;\\n}(SimpleGeometry));\\nexport default Point;\\n//# sourceMappingURL=Point.js.map\",\"/**\\n * @module ol/geom/flat/contains\\n */\\nimport { forEachCorner } from '../../extent.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} Contains extent.\\n */\\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\\n    var outside = forEachCorner(extent, \\n    /**\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @return {boolean} Contains (x, y).\\n     */\\n    function (coordinate) {\\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\\n    });\\n    return !outside;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {boolean} Contains (x, y).\\n */\\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\\n    // http://geomalgorithms.com/a03-_inclusion.html\\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\\n    // This code may be freely used and modified for any purpose\\n    // providing that this copyright notice is included with it.\\n    // SoftSurfer makes no warranty for this code, and cannot be held\\n    // liable for any real or imagined damage resulting from its use.\\n    // Users of this code must verify correctness for their application.\\n    var wn = 0;\\n    var x1 = flatCoordinates[end - stride];\\n    var y1 = flatCoordinates[end - stride + 1];\\n    for (; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        if (y1 <= y) {\\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\\n                wn++;\\n            }\\n        }\\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\\n            wn--;\\n        }\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return wn !== 0;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {boolean} Contains (x, y).\\n */\\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\\n    if (ends.length === 0) {\\n        return false;\\n    }\\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\\n        return false;\\n    }\\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {boolean} Contains (x, y).\\n */\\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\\n    if (endss.length === 0) {\\n        return false;\\n    }\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\\n            return true;\\n        }\\n        offset = ends[ends.length - 1];\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=contains.js.map\",\"/**\\n * @module ol/geom/flat/interiorpoint\\n */\\nimport { numberSafeCompareFunction } from '../../array.js';\\nimport { linearRingsContainsXY } from './contains.js';\\n/**\\n * Calculates a point that is likely to lie in the interior of the linear rings.\\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {Array<number>} flatCenters Flat centers.\\n * @param {number} flatCentersOffset Flat center offset.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\\n * length of the horizontal intersection that the point belongs to.\\n */\\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\\n    var i, ii, x, x1, x2, y1, y2;\\n    var y = flatCenters[flatCentersOffset + 1];\\n    /** @type {Array<number>} */\\n    var intersections = [];\\n    // Calculate intersections with the horizontal line\\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\\n        var end = ends[r];\\n        x1 = flatCoordinates[end - stride];\\n        y1 = flatCoordinates[end - stride + 1];\\n        for (i = offset; i < end; i += stride) {\\n            x2 = flatCoordinates[i];\\n            y2 = flatCoordinates[i + 1];\\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                intersections.push(x);\\n            }\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n    }\\n    // Find the longest segment of the horizontal line that has its center point\\n    // inside the linear ring.\\n    var pointX = NaN;\\n    var maxSegmentLength = -Infinity;\\n    intersections.sort(numberSafeCompareFunction);\\n    x1 = intersections[0];\\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\\n        x2 = intersections[i];\\n        var segmentLength = Math.abs(x2 - x1);\\n        if (segmentLength > maxSegmentLength) {\\n            x = (x1 + x2) / 2;\\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\\n                pointX = x;\\n                maxSegmentLength = segmentLength;\\n            }\\n        }\\n        x1 = x2;\\n    }\\n    if (isNaN(pointX)) {\\n        // There is no horizontal line that has its center point inside the linear\\n        // ring.  Use the center of the the linear ring's extent.\\n        pointX = flatCenters[flatCentersOffset];\\n    }\\n    if (opt_dest) {\\n        opt_dest.push(pointX, y, maxSegmentLength);\\n        return opt_dest;\\n    }\\n    else {\\n        return [pointX, y, maxSegmentLength];\\n    }\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {Array<number>} flatCenters Flat centers.\\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\\n * length of the horizontal intersection that the point belongs to.\\n */\\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\\n    var interiorPoints = [];\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\\n        offset = ends[ends.length - 1];\\n    }\\n    return interiorPoints;\\n}\\n//# sourceMappingURL=interiorpoint.js.map\",\"/**\\n * @module ol/geom/flat/segments\\n */\\n/**\\n * This function calls `callback` for each segment of the flat coordinates\\n * array. If the callback returns a truthy value the function returns that\\n * value immediately. Otherwise the function returns `false`.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {function(import(\\\"../../coordinate.js\\\").Coordinate, import(\\\"../../coordinate.js\\\").Coordinate): T} callback Function\\n *     called for each segment.\\n * @return {T|boolean} Value.\\n * @template T\\n */\\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\\n    var point2 = [];\\n    var ret;\\n    for (; (offset + stride) < end; offset += stride) {\\n        point2[0] = flatCoordinates[offset + stride];\\n        point2[1] = flatCoordinates[offset + stride + 1];\\n        ret = callback(point1, point2);\\n        if (ret) {\\n            return ret;\\n        }\\n        point1[0] = point2[0];\\n        point1[1] = point2[1];\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=segments.js.map\",\"/**\\n * @module ol/geom/flat/intersectsextent\\n */\\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\\nimport { forEach as forEachSegment } from './segments.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\\n    if (!intersects(extent, coordinatesExtent)) {\\n        return false;\\n    }\\n    if (containsExtent(extent, coordinatesExtent)) {\\n        return true;\\n    }\\n    if (coordinatesExtent[0] >= extent[0] &&\\n        coordinatesExtent[2] <= extent[2]) {\\n        return true;\\n    }\\n    if (coordinatesExtent[1] >= extent[1] &&\\n        coordinatesExtent[3] <= extent[3]) {\\n        return true;\\n    }\\n    return forEachSegment(flatCoordinates, offset, end, stride, \\n    /**\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} point1 Start point.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} point2 End point.\\n     * @return {boolean} `true` if the segment and the extent intersect,\\n     *     `false` otherwise.\\n     */\\n    function (point1, point2) {\\n        return intersectsSegment(extent, point1, point2);\\n    });\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\\n            return true;\\n        }\\n        offset = ends[i];\\n    }\\n    return false;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\\n        return true;\\n    }\\n    return false;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\\n        return false;\\n    }\\n    if (ends.length === 1) {\\n        return true;\\n    }\\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\\n                return false;\\n            }\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\\n            return true;\\n        }\\n        offset = ends[ends.length - 1];\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=intersectsextent.js.map\",\"/**\\n * @module ol/geom/flat/reverse\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n */\\nexport function coordinates(flatCoordinates, offset, end, stride) {\\n    while (offset < end - stride) {\\n        for (var i = 0; i < stride; ++i) {\\n            var tmp = flatCoordinates[offset + i];\\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\\n            flatCoordinates[end - stride + i] = tmp;\\n        }\\n        offset += stride;\\n        end -= stride;\\n    }\\n}\\n//# sourceMappingURL=reverse.js.map\",\"/**\\n * @module ol/geom/flat/orient\\n */\\nimport { coordinates as reverseCoordinates } from './reverse.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {boolean} Is clockwise.\\n */\\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\\n    // http://tinyurl.com/clockwise-method\\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\\n    var edge = 0;\\n    var x1 = flatCoordinates[end - stride];\\n    var y1 = flatCoordinates[end - stride + 1];\\n    for (; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        edge += (x2 - x1) * (y2 + y1);\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return edge > 0;\\n}\\n/**\\n * Determines if linear rings are oriented.  By default, left-hand orientation\\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\\n * To test for right-hand orientation, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Array of end indexes.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Test for right-hand orientation\\n *     (counter-clockwise exterior ring and clockwise interior rings).\\n * @return {boolean} Rings are correctly oriented.\\n */\\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\\n    var right = opt_right !== undefined ? opt_right : false;\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\\n        if (i === 0) {\\n            if ((right && isClockwise) || (!right && !isClockwise)) {\\n                return false;\\n            }\\n        }\\n        else {\\n            if ((right && !isClockwise) || (!right && isClockwise)) {\\n                return false;\\n            }\\n        }\\n        offset = end;\\n    }\\n    return true;\\n}\\n/**\\n * Determines if linear rings are oriented.  By default, left-hand orientation\\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\\n * To test for right-hand orientation, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Array of array of end indexes.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Test for right-hand orientation\\n *     (counter-clockwise exterior ring and clockwise interior rings).\\n * @return {boolean} Rings are correctly oriented.\\n */\\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\\n            return false;\\n        }\\n        if (ends.length) {\\n            offset = ends[ends.length - 1];\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * Orient coordinates in a flat array of linear rings.  By default, rings\\n * are oriented following the left-hand rule (clockwise for exterior and\\n * counter-clockwise for interior rings).  To orient according to the\\n * right-hand rule, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\\n * @return {number} End.\\n */\\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\\n    var right = opt_right !== undefined ? opt_right : false;\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\\n        var reverse = i === 0 ?\\n            (right && isClockwise) || (!right && !isClockwise) :\\n            (right && !isClockwise) || (!right && isClockwise);\\n        if (reverse) {\\n            reverseCoordinates(flatCoordinates, offset, end, stride);\\n        }\\n        offset = end;\\n    }\\n    return offset;\\n}\\n/**\\n * Orient coordinates in a flat array of linear rings.  By default, rings\\n * are oriented following the left-hand rule (clockwise for exterior and\\n * counter-clockwise for interior rings).  To orient according to the\\n * right-hand rule, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Array of array of end indexes.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\\n * @return {number} End.\\n */\\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\\n    }\\n    return offset;\\n}\\n//# sourceMappingURL=orient.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/Polygon\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport LinearRing from './LinearRing.js';\\nimport Point from './Point.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { offset as sphereOffset } from '../sphere.js';\\nimport { linearRings as linearRingsArea } from './flat/area.js';\\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\\nimport { linearRingsContainsXY } from './flat/contains.js';\\nimport { deflateCoordinatesArray } from './flat/deflate.js';\\nimport { inflateCoordinatesArray } from './flat/inflate.js';\\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\\nimport { quantizeArray } from './flat/simplify.js';\\nimport { modulo } from '../math.js';\\n/**\\n * @classdesc\\n * Polygon geometry.\\n *\\n * @api\\n */\\nvar Polygon = /** @class */ (function (_super) {\\n    __extends(Polygon, _super);\\n    /**\\n     * @param {!Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>|!Array<number>} coordinates\\n     *     Array of linear rings that define the polygon. The first linear ring of the\\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\\n     *     an array of vertices' coordinates where the first coordinate and the last are\\n     *     equivalent. (For internal use, flat coordinates in combination with\\n     *     `opt_layout` and `opt_ends` are also accepted.)\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\\n     */\\n    function Polygon(coordinates, opt_layout, opt_ends) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Array<number>}\\n         * @private\\n         */\\n        _this.ends_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.flatInteriorPointRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.flatInteriorPoint_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.orientedRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.orientedFlatCoordinates_ = null;\\n        if (opt_layout !== undefined && opt_ends) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n            _this.ends_ = opt_ends;\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed linear ring to this polygon.\\n     * @param {LinearRing} linearRing Linear ring.\\n     * @api\\n     */\\n    Polygon.prototype.appendLinearRing = function (linearRing) {\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\\n        }\\n        else {\\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\\n        }\\n        this.ends_.push(this.flatCoordinates.length);\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!Polygon} Clone.\\n     * @override\\n     * @api\\n     */\\n    Polygon.prototype.clone = function () {\\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Polygon.prototype.containsXY = function (x, y) {\\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\\n    };\\n    /**\\n     * Return the area of the polygon on projected plane.\\n     * @return {number} Area (on projected plane).\\n     * @api\\n     */\\n    Polygon.prototype.getArea = function () {\\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\\n    };\\n    /**\\n     * Get the coordinate array for this geometry.  This array has the structure\\n     * of a GeoJSON coordinate array for polygons.\\n     *\\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\\n     *     If `false`, coordinates will be oriented according to the left-hand rule\\n     *     (clockwise for exterior and counter-clockwise for interior rings).\\n     *     By default, coordinate orientation will depend on how the geometry was\\n     *     constructed.\\n     * @return {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    Polygon.prototype.getCoordinates = function (opt_right) {\\n        var flatCoordinates;\\n        if (opt_right !== undefined) {\\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\\n        }\\n        else {\\n            flatCoordinates = this.flatCoordinates;\\n        }\\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Ends.\\n     */\\n    Polygon.prototype.getEnds = function () {\\n        return this.ends_;\\n    };\\n    /**\\n     * @return {Array<number>} Interior point.\\n     */\\n    Polygon.prototype.getFlatInteriorPoint = function () {\\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\\n            var flatCenter = getCenter(this.getExtent());\\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\\n            this.flatInteriorPointRevision_ = this.getRevision();\\n        }\\n        return this.flatInteriorPoint_;\\n    };\\n    /**\\n     * Return an interior point of the polygon.\\n     * @return {Point} Interior point as XYM coordinate, where M is the\\n     * length of the horizontal intersection that the point belongs to.\\n     * @api\\n     */\\n    Polygon.prototype.getInteriorPoint = function () {\\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\\n    };\\n    /**\\n     * Return the number of rings of the polygon,  this includes the exterior\\n     * ring and any interior rings.\\n     *\\n     * @return {number} Number of rings.\\n     * @api\\n     */\\n    Polygon.prototype.getLinearRingCount = function () {\\n        return this.ends_.length;\\n    };\\n    /**\\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\\n     * given index is out of range.\\n     * The exterior linear ring is available at index `0` and the interior rings\\n     * at index `1` and beyond.\\n     *\\n     * @param {number} index Index.\\n     * @return {LinearRing} Linear ring.\\n     * @api\\n     */\\n    Polygon.prototype.getLinearRing = function (index) {\\n        if (index < 0 || this.ends_.length <= index) {\\n            return null;\\n        }\\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\\n    };\\n    /**\\n     * Return the linear rings of the polygon.\\n     * @return {Array<LinearRing>} Linear rings.\\n     * @api\\n     */\\n    Polygon.prototype.getLinearRings = function () {\\n        var layout = this.layout;\\n        var flatCoordinates = this.flatCoordinates;\\n        var ends = this.ends_;\\n        var linearRings = [];\\n        var offset = 0;\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            var end = ends[i];\\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\\n            linearRings.push(linearRing);\\n            offset = end;\\n        }\\n        return linearRings;\\n    };\\n    /**\\n     * @return {Array<number>} Oriented flat coordinates.\\n     */\\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\\n        if (this.orientedRevision_ != this.getRevision()) {\\n            var flatCoordinates = this.flatCoordinates;\\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\\n                this.orientedFlatCoordinates_ = flatCoordinates;\\n            }\\n            else {\\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\\n                this.orientedFlatCoordinates_.length =\\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\\n            }\\n            this.orientedRevision_ = this.getRevision();\\n        }\\n        return this.orientedFlatCoordinates_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        var simplifiedEnds = [];\\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Polygon.prototype.getType = function () {\\n        return GeometryType.POLYGON;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Polygon.prototype.intersectsExtent = function (extent) {\\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\\n    };\\n    /**\\n     * Set the coordinates of the polygon.\\n     * @param {!Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 2);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\\n        this.changed();\\n    };\\n    return Polygon;\\n}(SimpleGeometry));\\nexport default Polygon;\\n/**\\n * Create an approximation of a circle on the surface of a sphere.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate} center Center (`[lon, lat]` in degrees).\\n * @param {number} radius The great-circle distance from the center to\\n *     the polygon vertices.\\n * @param {number=} opt_n Optional number of vertices for the resulting\\n *     polygon. Default is `32`.\\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\\n *     the Earth's mean radius using the WGS84 ellipsoid).\\n * @return {Polygon} The \\\"circular\\\" polygon.\\n * @api\\n */\\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\\n    var n = opt_n ? opt_n : 32;\\n    /** @type {Array<number>} */\\n    var flatCoordinates = [];\\n    for (var i = 0; i < n; ++i) {\\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\\n    }\\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\\n}\\n/**\\n * Create a polygon from an extent. The layout used is `XY`.\\n * @param {import(\\\"../extent.js\\\").Extent} extent The extent.\\n * @return {Polygon} The polygon.\\n * @api\\n */\\nexport function fromExtent(extent) {\\n    var minX = extent[0];\\n    var minY = extent[1];\\n    var maxX = extent[2];\\n    var maxY = extent[3];\\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\\n}\\n/**\\n * Create a regular polygon from a circle.\\n * @param {import(\\\"./Circle.js\\\").default} circle Circle geometry.\\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\\n *     radians. Default is 0.\\n * @return {Polygon} Polygon geometry.\\n * @api\\n */\\nexport function fromCircle(circle, opt_sides, opt_angle) {\\n    var sides = opt_sides ? opt_sides : 32;\\n    var stride = circle.getStride();\\n    var layout = circle.getLayout();\\n    var center = circle.getCenter();\\n    var arrayLength = stride * (sides + 1);\\n    var flatCoordinates = new Array(arrayLength);\\n    for (var i = 0; i < arrayLength; i += stride) {\\n        flatCoordinates[i] = 0;\\n        flatCoordinates[i + 1] = 0;\\n        for (var j = 2; j < stride; j++) {\\n            flatCoordinates[i + j] = center[j];\\n        }\\n    }\\n    var ends = [flatCoordinates.length];\\n    var polygon = new Polygon(flatCoordinates, layout, ends);\\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\\n    return polygon;\\n}\\n/**\\n * Modify the coordinates of a polygon to make it a regular polygon.\\n * @param {Polygon} polygon Polygon geometry.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate} center Center of the regular polygon.\\n * @param {number} radius Radius of the regular polygon.\\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\\n *     radians. Default is 0.\\n */\\nexport function makeRegular(polygon, center, radius, opt_angle) {\\n    var flatCoordinates = polygon.getFlatCoordinates();\\n    var stride = polygon.getStride();\\n    var sides = flatCoordinates.length / stride - 1;\\n    var startAngle = opt_angle ? opt_angle : 0;\\n    for (var i = 0; i <= sides; ++i) {\\n        var offset = i * stride;\\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\\n    }\\n    polygon.changed();\\n}\\n//# sourceMappingURL=Polygon.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/View\\n */\\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\\nimport { getUid } from './util.js';\\nimport { VOID } from './functions.js';\\nimport { createExtent, none as centerNone } from './centerconstraint.js';\\nimport BaseObject from './Object.js';\\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\\nimport ViewHint from './ViewHint.js';\\nimport ViewProperty from './ViewProperty.js';\\nimport { linearFindNearest } from './array.js';\\nimport { assert } from './asserts.js';\\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\\nimport { inAndOut } from './easing.js';\\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\\nimport GeometryType from './geom/GeometryType.js';\\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\\nimport { clamp, modulo } from './math.js';\\nimport { assign } from './obj.js';\\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\\nimport Units from './proj/Units.js';\\nimport { equals } from './coordinate';\\nimport { easeOut } from './easing';\\nimport { createMinMaxResolution } from './resolutionconstraint';\\n/**\\n * An animation configuration\\n *\\n * @typedef {Object} Animation\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [sourceCenter]\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [targetCenter]\\n * @property {number} [sourceResolution]\\n * @property {number} [targetResolution]\\n * @property {number} [sourceRotation]\\n * @property {number} [targetRotation]\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [anchor]\\n * @property {number} start\\n * @property {number} duration\\n * @property {boolean} complete\\n * @property {function(number):number} easing\\n * @property {function(boolean)} callback\\n */\\n/**\\n * @typedef {Object} Constraints\\n * @property {import(\\\"./centerconstraint.js\\\").Type} center\\n * @property {import(\\\"./resolutionconstraint.js\\\").Type} resolution\\n * @property {import(\\\"./rotationconstraint.js\\\").Type} rotation\\n */\\n/**\\n * @typedef {Object} FitOptions\\n * @property {import(\\\"./size.js\\\").Size} [size] The size in pixels of the box to fit\\n * the extent into. Default is the current size of the first map in the DOM that\\n * uses this view, or `[100, 100]` if no such map is found.\\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\\n * cleared inside the view. Values in the array are top, right, bottom and left\\n * padding.\\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\\n * get the nearest extent instead of the closest that actually fits the view.\\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\\n * `minResolution` is given, this property is ignored.\\n * @property {number} [duration] The duration of the animation in milliseconds.\\n * By default, there is no animation to the target extent.\\n * @property {function(number):number} [easing] The easing function used during\\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\\n * The function will be called for each frame with a number representing a\\n * fraction of the animation's duration.  The function should return a number\\n * between 0 and 1 representing the progress toward the destination state.\\n * @property {function(boolean)} [callback] Function called when the view is in\\n * its final position. The callback will be called with `true` if the animation\\n * series completed on its own or `false` if it was cancelled.\\n */\\n/**\\n * @typedef {Object} ViewOptions\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [center] The initial center for\\n * the view. The coordinate system for the center is specified with the\\n * `projection` option. Layer sources will not be fetched if this is not set,\\n * but the center can be set later with {@link #setCenter}.\\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\\n * `false` means no constraint. `true` means no constraint, but snap to zero\\n * near zero. A number constrains the rotation to that number of values. For\\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\\n * @property {boolean} [enableRotation=true] Enable rotation.\\n * If `false`, a rotation constraint that always sets the rotation to zero is\\n * used. The `constrainRotation` option has no effect if `enableRotation` is\\n * `false`.\\n * @property {import(\\\"./extent.js\\\").Extent} [extent] The extent that constrains the\\n * view, in other words, nothing outside of this extent can be visible on the map.\\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\\n * constraint will only apply to the view center and not the whole extent.\\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\\n * of the given `extent`.\\n * @property {number} [maxResolution] The maximum resolution used to determine\\n * the resolution constraint. It is used together with `minResolution` (or\\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\\n * that the projection's validity extent fits in a 256x256 px tile. If the\\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\\n * to `40075016.68557849 / 256 = 156543.03392804097`.\\n * @property {number} [minResolution] The minimum resolution used to determine\\n * the resolution constraint.  It is used together with `maxResolution` (or\\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\\n * (the default) then `minResolution` defaults to\\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\\n * resolution constraint. It is used together with `minZoom` (or\\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\\n * provided, it is given precedence over `maxZoom`.\\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\\n * resolution constraint. It is used together with `maxZoom` (or\\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\\n * provided, it is given precedence over `minZoom`.\\n * @property {boolean} [multiWorld=false] No more than one world is visible.\\n * @property {boolean} [constrainResolution=false] If true, the view will always\\n * animate to the closest zoom level after an interaction; false means\\n * intermediary zoom levels are allowed.\\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\\n * the given resolution or zoom bounds.\\n * @property {import(\\\"./proj.js\\\").ProjectionLike} [projection='EPSG:3857'] The\\n * projection. The default is Spherical Mercator.\\n * @property {number} [resolution] The initial resolution for the view. The\\n * units are `projection` units per pixel (e.g. meters per pixel). An\\n * alternative to setting this is to set `zoom`. Layer sources will not be\\n * fetched if neither this nor `zoom` are defined, but they can be set later\\n * with {@link #setZoom} or {@link #setResolution}.\\n * @property {Array<number>} [resolutions] Resolutions to determine the\\n * resolution constraint. If set the `maxResolution`, `minResolution`,\\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\\n * @property {number} [rotation=0] The initial rotation for the view in radians\\n * (positive rotation clockwise, 0 means North).\\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\\n * level used to calculate the initial resolution for the view.\\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\\n * corresponding resolution.\\n */\\n/**\\n * @typedef {Object} AnimationOptions\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [center] The center of the view at the end of\\n * the animation.\\n * @property {number} [zoom] The zoom level of the view at the end of the\\n * animation. This takes precedence over `resolution`.\\n * @property {number} [resolution] The resolution of the view at the end\\n * of the animation.  If `zoom` is also provided, this option will be ignored.\\n * @property {number} [rotation] The rotation of the view at the end of\\n * the animation.\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [anchor] Optional anchor to remain fixed\\n * during a rotation or resolution animation.\\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\\n * @property {function(number):number} [easing] The easing function used\\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\\n * The function will be called for each frame with a number representing a\\n * fraction of the animation's duration.  The function should return a number\\n * between 0 and 1 representing the progress toward the destination state.\\n */\\n/**\\n * @typedef {Object} State\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} center\\n * @property {import(\\\"./proj/Projection.js\\\").default} projection\\n * @property {number} resolution\\n * @property {number} rotation\\n * @property {number} zoom\\n */\\n/**\\n * Default min zoom level for the map view.\\n * @type {number}\\n */\\nvar DEFAULT_MIN_ZOOM = 0;\\n/**\\n * @classdesc\\n * A View object represents a simple 2D view of the map.\\n *\\n * This is the object to act upon to change the center, resolution,\\n * and rotation of the map.\\n *\\n * ### The view states\\n *\\n * An View is determined by three states: `center`, `resolution`,\\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\\n * `getCenter` and `setCenter` for the `center` state.\\n *\\n * The `zoom` state is actually not saved on the view: all computations\\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\\n * methods are available, as well as `getResolutionForZoom` and\\n * `getZoomForResolution` to switch from one system to the other.\\n *\\n * A View has a `projection`. The projection determines the\\n * coordinate system of the center, and its units determine the units of the\\n * resolution (projection units per pixel). The default projection is\\n * Spherical Mercator (EPSG:3857).\\n *\\n * ### The constraints\\n *\\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\\n * states of the view, but any constraint defined in the constructor will\\n * be applied along the way.\\n *\\n * A View object can have a *resolution constraint*, a *rotation constraint*\\n * and a *center constraint*.\\n *\\n * The *resolution constraint* typically restricts min/max values and\\n * snaps to specific resolutions. It is determined by the following\\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\\n * If `resolutions` is set, the other three options are ignored. See\\n * documentation for each option for more information. By default, the view\\n * only has a min/max restriction and allow intermediary zoom levels when\\n * pinch-zooming for example.\\n *\\n * The *rotation constraint* snaps to specific angles. It is determined\\n * by the following options: `enableRotation` and `constrainRotation`.\\n * By default the rotation value is snapped to zero when approaching the\\n * horizontal.\\n *\\n * The *center constraint* is determined by the `extent` option. By\\n * default the view center is not constrained at all.\\n *\\n * ### Changing the view state\\n *\\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\\n * `setRotation` are subject to the above mentioned constraints. As such, it\\n * may sometimes not be possible to know in advance the resulting state of the\\n * View. For example, calling `setResolution(10)` does not guarantee that\\n * `getResolution()` will return `10`.\\n *\\n * A consequence of this is that, when applying a delta on the view state, one\\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\\n * rather than the corresponding setters. This will let view do its internal\\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\\n * argument which allows specifying an origin for the transformation.\\n *\\n * ### Interacting with the view\\n *\\n * View constraints are usually only applied when the view is *at rest*, meaning that\\n * no interaction or animation is ongoing. As such, if the user puts the view in a\\n * state that is not equivalent to a constrained one (e.g. rotating the view when\\n * the snap angle is 0), an animation will be triggered at the interaction end to\\n * put back the view to a stable state;\\n *\\n * @api\\n */\\nvar View = /** @class */ (function (_super) {\\n    __extends(View, _super);\\n    /**\\n     * @param {ViewOptions=} opt_options View options.\\n     */\\n    function View(opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = assign({}, opt_options);\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.hints_ = [0, 0];\\n        /**\\n         * @private\\n         * @type {Array<Array<Animation>>}\\n         */\\n        _this.animations_ = [];\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.updateAnimationKey_;\\n        /**\\n         * @private\\n         * @const\\n         * @type {import(\\\"./proj/Projection.js\\\").default}\\n         */\\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\\n        /**\\n         * @private\\n         * @type {import(\\\"./coordinate.js\\\").Coordinate|undefined}\\n         */\\n        _this.targetCenter_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.targetResolution_;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.targetRotation_;\\n        _this.applyOptions_(options);\\n        return _this;\\n    }\\n    /**\\n     * Set up the view with the given options.\\n     * @param {ViewOptions} options View options.\\n     */\\n    View.prototype.applyOptions_ = function (options) {\\n        /**\\n         * @type {Object<string, *>}\\n         */\\n        var properties = {};\\n        var resolutionConstraintInfo = createResolutionConstraint(options);\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\\n        /**\\n         * @private\\n         * @type {Array<number>|undefined}\\n         */\\n        this.resolutions_ = options.resolutions;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\\n        var centerConstraint = createCenterConstraint(options);\\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\\n        var rotationConstraint = createRotationConstraint(options);\\n        /**\\n         * @private\\n         * @type {Constraints}\\n         */\\n        this.constraints_ = {\\n            center: centerConstraint,\\n            resolution: resolutionConstraint,\\n            rotation: rotationConstraint\\n        };\\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\\n        this.setCenter(options.center !== undefined ? options.center : null);\\n        if (options.resolution !== undefined) {\\n            this.setResolution(options.resolution);\\n        }\\n        else if (options.zoom !== undefined) {\\n            this.setZoom(options.zoom);\\n        }\\n        this.resolveConstraints(0);\\n        this.setProperties(properties);\\n        /**\\n         * @private\\n         * @type {ViewOptions}\\n         */\\n        this.options_ = options;\\n    };\\n    /**\\n     * Get an updated version of the view options used to construct the view.  The\\n     * current resolution (or zoom), center, and rotation are applied to any stored\\n     * options.  The provided options can be used to apply new min/max zoom or\\n     * resolution limits.\\n     * @param {ViewOptions} newOptions New options to be applied.\\n     * @return {ViewOptions} New options updated with the current view state.\\n     */\\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\\n        var options = assign({}, this.options_);\\n        // preserve resolution (or zoom)\\n        if (options.resolution !== undefined) {\\n            options.resolution = this.getResolution();\\n        }\\n        else {\\n            options.zoom = this.getZoom();\\n        }\\n        // preserve center\\n        options.center = this.getCenter();\\n        // preserve rotation\\n        options.rotation = this.getRotation();\\n        return assign({}, options, newOptions);\\n    };\\n    /**\\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\\n     * can be animated for smooth transitions between view states.  For example,\\n     * to animate the view to a new zoom level:\\n     *\\n     *     view.animate({zoom: view.getZoom() + 1});\\n     *\\n     * By default, the animation lasts one second and uses in-and-out easing.  You\\n     * can customize this behavior by including `duration` (in milliseconds) and\\n     * `easing` options (see {@link module:ol/easing}).\\n     *\\n     * To chain together multiple animations, call the method with multiple\\n     * animation objects.  For example, to first zoom and then pan:\\n     *\\n     *     view.animate({zoom: 10}, {center: [0, 0]});\\n     *\\n     * If you provide a function as the last argument to the animate method, it\\n     * will get called at the end of an animation series.  The callback will be\\n     * called with `true` if the animation series completed on its own or `false`\\n     * if it was cancelled.\\n     *\\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\\n     * (or another method that calls one of these).\\n     *\\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\\n     *     options.  Multiple animations can be run in series by passing multiple\\n     *     options objects.  To run multiple animations in parallel, call the method\\n     *     multiple times.  An optional callback can be provided as a final\\n     *     argument.  The callback will be called with a boolean indicating whether\\n     *     the animation completed without being cancelled.\\n     * @api\\n     */\\n    View.prototype.animate = function (var_args) {\\n        if (this.isDef() && !this.getAnimating()) {\\n            this.resolveConstraints(0);\\n        }\\n        this.animate_.apply(this, arguments);\\n    };\\n    /**\\n     * @private\\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\\n     */\\n    View.prototype.animate_ = function (var_args) {\\n        var animationCount = arguments.length;\\n        var callback;\\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\\n            callback = arguments[animationCount - 1];\\n            --animationCount;\\n        }\\n        if (!this.isDef()) {\\n            // if view properties are not yet set, shortcut to the final state\\n            var state = arguments[animationCount - 1];\\n            if (state.center) {\\n                this.setCenter(state.center);\\n            }\\n            if (state.zoom !== undefined) {\\n                this.setZoom(state.zoom);\\n            }\\n            if (state.rotation !== undefined) {\\n                this.setRotation(state.rotation);\\n            }\\n            if (callback) {\\n                animationCallback(callback, true);\\n            }\\n            return;\\n        }\\n        var start = Date.now();\\n        var center = this.targetCenter_.slice();\\n        var resolution = this.targetResolution_;\\n        var rotation = this.targetRotation_;\\n        var series = [];\\n        for (var i = 0; i < animationCount; ++i) {\\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\\n            var animation = {\\n                start: start,\\n                complete: false,\\n                anchor: options.anchor,\\n                duration: options.duration !== undefined ? options.duration : 1000,\\n                easing: options.easing || inAndOut,\\n                callback: callback\\n            };\\n            if (options.center) {\\n                animation.sourceCenter = center;\\n                animation.targetCenter = options.center.slice();\\n                center = animation.targetCenter;\\n            }\\n            if (options.zoom !== undefined) {\\n                animation.sourceResolution = resolution;\\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\\n                resolution = animation.targetResolution;\\n            }\\n            else if (options.resolution) {\\n                animation.sourceResolution = resolution;\\n                animation.targetResolution = options.resolution;\\n                resolution = animation.targetResolution;\\n            }\\n            if (options.rotation !== undefined) {\\n                animation.sourceRotation = rotation;\\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\\n                animation.targetRotation = rotation + delta;\\n                rotation = animation.targetRotation;\\n            }\\n            // check if animation is a no-op\\n            if (isNoopAnimation(animation)) {\\n                animation.complete = true;\\n                // we still push it onto the series for callback handling\\n            }\\n            else {\\n                start += animation.duration;\\n            }\\n            series.push(animation);\\n        }\\n        this.animations_.push(series);\\n        this.setHint(ViewHint.ANIMATING, 1);\\n        this.updateAnimations_();\\n    };\\n    /**\\n     * Determine if the view is being animated.\\n     * @return {boolean} The view is being animated.\\n     * @api\\n     */\\n    View.prototype.getAnimating = function () {\\n        return this.hints_[ViewHint.ANIMATING] > 0;\\n    };\\n    /**\\n     * Determine if the user is interacting with the view, such as panning or zooming.\\n     * @return {boolean} The view is being interacted with.\\n     * @api\\n     */\\n    View.prototype.getInteracting = function () {\\n        return this.hints_[ViewHint.INTERACTING] > 0;\\n    };\\n    /**\\n     * Cancel any ongoing animations.\\n     * @api\\n     */\\n    View.prototype.cancelAnimations = function () {\\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\\n            var series = this.animations_[i];\\n            if (series[0].callback) {\\n                animationCallback(series[0].callback, false);\\n            }\\n        }\\n        this.animations_.length = 0;\\n    };\\n    /**\\n     * Update all animations.\\n     */\\n    View.prototype.updateAnimations_ = function () {\\n        if (this.updateAnimationKey_ !== undefined) {\\n            cancelAnimationFrame(this.updateAnimationKey_);\\n            this.updateAnimationKey_ = undefined;\\n        }\\n        if (!this.getAnimating()) {\\n            return;\\n        }\\n        var now = Date.now();\\n        var more = false;\\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\\n            var series = this.animations_[i];\\n            var seriesComplete = true;\\n            for (var j = 0, jj = series.length; j < jj; ++j) {\\n                var animation = series[j];\\n                if (animation.complete) {\\n                    continue;\\n                }\\n                var elapsed = now - animation.start;\\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\\n                if (fraction >= 1) {\\n                    animation.complete = true;\\n                    fraction = 1;\\n                }\\n                else {\\n                    seriesComplete = false;\\n                }\\n                var progress = animation.easing(fraction);\\n                if (animation.sourceCenter) {\\n                    var x0 = animation.sourceCenter[0];\\n                    var y0 = animation.sourceCenter[1];\\n                    var x1 = animation.targetCenter[0];\\n                    var y1 = animation.targetCenter[1];\\n                    var x = x0 + progress * (x1 - x0);\\n                    var y = y0 + progress * (y1 - y0);\\n                    this.targetCenter_ = [x, y];\\n                }\\n                if (animation.sourceResolution && animation.targetResolution) {\\n                    var resolution = progress === 1 ?\\n                        animation.targetResolution :\\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\\n                    if (animation.anchor) {\\n                        var size = this.getSizeFromViewport_(this.getRotation());\\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\\n                    }\\n                    this.targetResolution_ = resolution;\\n                    this.applyTargetState_(true);\\n                }\\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\\n                    var rotation = progress === 1 ?\\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\\n                    if (animation.anchor) {\\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\\n                    }\\n                    this.targetRotation_ = rotation;\\n                }\\n                this.applyTargetState_(true);\\n                more = true;\\n                if (!animation.complete) {\\n                    break;\\n                }\\n            }\\n            if (seriesComplete) {\\n                this.animations_[i] = null;\\n                this.setHint(ViewHint.ANIMATING, -1);\\n                var callback = series[0].callback;\\n                if (callback) {\\n                    animationCallback(callback, true);\\n                }\\n            }\\n        }\\n        // prune completed series\\n        this.animations_ = this.animations_.filter(Boolean);\\n        if (more && this.updateAnimationKey_ === undefined) {\\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\\n        }\\n    };\\n    /**\\n     * @param {number} rotation Target rotation.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} anchor Rotation anchor.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center for rotation and anchor.\\n     */\\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\\n        var center;\\n        var currentCenter = this.getCenter();\\n        if (currentCenter !== undefined) {\\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\\n            rotateCoordinate(center, rotation - this.getRotation());\\n            addCoordinate(center, anchor);\\n        }\\n        return center;\\n    };\\n    /**\\n     * @param {number} resolution Target resolution.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} anchor Zoom anchor.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center for resolution and anchor.\\n     */\\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\\n        var center;\\n        var currentCenter = this.getCenter();\\n        var currentResolution = this.getResolution();\\n        if (currentCenter !== undefined && currentResolution !== undefined) {\\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\\n            center = [x, y];\\n        }\\n        return center;\\n    };\\n    /**\\n     * @private\\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\\n     * @return {import(\\\"./size.js\\\").Size} Viewport size or `[100, 100]` when no viewport is found.\\n     */\\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\\n        var size = [100, 100];\\n        var selector = '.ol-viewport[data-view=\\\"' + getUid(this) + '\\\"]';\\n        var element = document.querySelector(selector);\\n        if (element) {\\n            var metrics = getComputedStyle(element);\\n            size[0] = parseInt(metrics.width, 10);\\n            size[1] = parseInt(metrics.height, 10);\\n        }\\n        if (opt_rotation) {\\n            var w = size[0];\\n            var h = size[1];\\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\\n        }\\n        return size;\\n    };\\n    /**\\n     * Get the view center.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} The center of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.getCenter = function () {\\n        return (\\n        /** @type {import(\\\"./coordinate.js\\\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\\n    };\\n    /**\\n     * @return {Constraints} Constraints.\\n     */\\n    View.prototype.getConstraints = function () {\\n        return this.constraints_;\\n    };\\n    /**\\n     * @param {Array<number>=} opt_hints Destination array.\\n     * @return {Array<number>} Hint.\\n     */\\n    View.prototype.getHints = function (opt_hints) {\\n        if (opt_hints !== undefined) {\\n            opt_hints[0] = this.hints_[0];\\n            opt_hints[1] = this.hints_[1];\\n            return opt_hints;\\n        }\\n        else {\\n            return this.hints_.slice();\\n        }\\n    };\\n    /**\\n     * Calculate the extent for the current view state and the passed size.\\n     * The size is the pixel dimensions of the box into which the calculated extent\\n     * should fit. In most cases you want to get the extent of the entire map,\\n     * that is `map.getSize()`.\\n     * @param {import(\\\"./size.js\\\").Size=} opt_size Box pixel size. If not provided, the size of the\\n     * first map that uses this view will be used.\\n     * @return {import(\\\"./extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    View.prototype.calculateExtent = function (opt_size) {\\n        var size = opt_size || this.getSizeFromViewport_();\\n        var center = /** @type {!import(\\\"./coordinate.js\\\").Coordinate} */ (this.getCenter());\\n        assert(center, 1); // The view center is not defined\\n        var resolution = /** @type {!number} */ (this.getResolution());\\n        assert(resolution !== undefined, 2); // The view resolution is not defined\\n        var rotation = /** @type {!number} */ (this.getRotation());\\n        assert(rotation !== undefined, 3); // The view rotation is not defined\\n        return getForViewAndSize(center, resolution, rotation, size);\\n    };\\n    /**\\n     * Get the maximum resolution of the view.\\n     * @return {number} The maximum resolution of the view.\\n     * @api\\n     */\\n    View.prototype.getMaxResolution = function () {\\n        return this.maxResolution_;\\n    };\\n    /**\\n     * Get the minimum resolution of the view.\\n     * @return {number} The minimum resolution of the view.\\n     * @api\\n     */\\n    View.prototype.getMinResolution = function () {\\n        return this.minResolution_;\\n    };\\n    /**\\n     * Get the maximum zoom level for the view.\\n     * @return {number} The maximum zoom level.\\n     * @api\\n     */\\n    View.prototype.getMaxZoom = function () {\\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\\n    };\\n    /**\\n     * Set a new maximum zoom level for the view.\\n     * @param {number} zoom The maximum zoom level.\\n     * @api\\n     */\\n    View.prototype.setMaxZoom = function (zoom) {\\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\\n    };\\n    /**\\n     * Get the minimum zoom level for the view.\\n     * @return {number} The minimum zoom level.\\n     * @api\\n     */\\n    View.prototype.getMinZoom = function () {\\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\\n    };\\n    /**\\n     * Set a new minimum zoom level for the view.\\n     * @param {number} zoom The minimum zoom level.\\n     * @api\\n     */\\n    View.prototype.setMinZoom = function (zoom) {\\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\\n    };\\n    /**\\n     * Set whether the view shoud allow intermediary zoom levels.\\n     * @param {boolean} enabled Whether the resolution is constrained.\\n     * @api\\n     */\\n    View.prototype.setConstrainResolution = function (enabled) {\\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\\n    };\\n    /**\\n     * Get the view projection.\\n     * @return {import(\\\"./proj/Projection.js\\\").default} The projection of the view.\\n     * @api\\n     */\\n    View.prototype.getProjection = function () {\\n        return this.projection_;\\n    };\\n    /**\\n     * Get the view resolution.\\n     * @return {number|undefined} The resolution of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.getResolution = function () {\\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\\n    };\\n    /**\\n     * Get the resolutions for the view. This returns the array of resolutions\\n     * passed to the constructor of the View, or undefined if none were given.\\n     * @return {Array<number>|undefined} The resolutions of the view.\\n     * @api\\n     */\\n    View.prototype.getResolutions = function () {\\n        return this.resolutions_;\\n    };\\n    /**\\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\\n     * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n     * @param {import(\\\"./size.js\\\").Size=} opt_size Box pixel size.\\n     * @return {number} The resolution at which the provided extent will render at\\n     *     the given size.\\n     * @api\\n     */\\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\\n        var size = opt_size || this.getSizeFromViewport_();\\n        var xResolution = getWidth(extent) / size[0];\\n        var yResolution = getHeight(extent) / size[1];\\n        return Math.max(xResolution, yResolution);\\n    };\\n    /**\\n     * Return a function that returns a value between 0 and 1 for a\\n     * resolution. Exponential scaling is assumed.\\n     * @param {number=} opt_power Power.\\n     * @return {function(number): number} Resolution for value function.\\n     */\\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\\n        var power = opt_power || 2;\\n        var maxResolution = this.maxResolution_;\\n        var minResolution = this.minResolution_;\\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\\n        return (\\n        /**\\n         * @param {number} value Value.\\n         * @return {number} Resolution.\\n         */\\n        function (value) {\\n            var resolution = maxResolution / Math.pow(power, value * max);\\n            return resolution;\\n        });\\n    };\\n    /**\\n     * Get the view rotation.\\n     * @return {number} The rotation of the view in radians.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.getRotation = function () {\\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\\n    };\\n    /**\\n     * Return a function that returns a resolution for a value between\\n     * 0 and 1. Exponential scaling is assumed.\\n     * @param {number=} opt_power Power.\\n     * @return {function(number): number} Value for resolution function.\\n     */\\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\\n        var power = opt_power || 2;\\n        var maxResolution = this.maxResolution_;\\n        var minResolution = this.minResolution_;\\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\\n        return (\\n        /**\\n         * @param {number} resolution Resolution.\\n         * @return {number} Value.\\n         */\\n        function (resolution) {\\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\\n            return value;\\n        });\\n    };\\n    /**\\n     * @param {number} pixelRatio Pixel ratio for center rounding.\\n     * @return {State} View state.\\n     */\\n    View.prototype.getState = function (pixelRatio) {\\n        var center = /** @type {import(\\\"./coordinate.js\\\").Coordinate} */ (this.getCenter());\\n        var projection = this.getProjection();\\n        var resolution = /** @type {number} */ (this.getResolution());\\n        var rotation = this.getRotation();\\n        return {\\n            center: center.slice(0),\\n            projection: projection !== undefined ? projection : null,\\n            resolution: resolution,\\n            rotation: rotation,\\n            zoom: this.getZoom()\\n        };\\n    };\\n    /**\\n     * Get the current zoom level. This method may return non-integer zoom levels\\n     * if the view does not constrain the resolution, or if an interaction or\\n     * animation is underway.\\n     * @return {number|undefined} Zoom.\\n     * @api\\n     */\\n    View.prototype.getZoom = function () {\\n        var zoom;\\n        var resolution = this.getResolution();\\n        if (resolution !== undefined) {\\n            zoom = this.getZoomForResolution(resolution);\\n        }\\n        return zoom;\\n    };\\n    /**\\n     * Get the zoom level for a resolution.\\n     * @param {number} resolution The resolution.\\n     * @return {number|undefined} The zoom level for the provided resolution.\\n     * @api\\n     */\\n    View.prototype.getZoomForResolution = function (resolution) {\\n        var offset = this.minZoom_ || 0;\\n        var max, zoomFactor;\\n        if (this.resolutions_) {\\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\\n            offset = nearest;\\n            max = this.resolutions_[nearest];\\n            if (nearest == this.resolutions_.length - 1) {\\n                zoomFactor = 2;\\n            }\\n            else {\\n                zoomFactor = max / this.resolutions_[nearest + 1];\\n            }\\n        }\\n        else {\\n            max = this.maxResolution_;\\n            zoomFactor = this.zoomFactor_;\\n        }\\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\\n    };\\n    /**\\n     * Get the resolution for a zoom level.\\n     * @param {number} zoom Zoom level.\\n     * @return {number} The view resolution for the provided zoom level.\\n     * @api\\n     */\\n    View.prototype.getResolutionForZoom = function (zoom) {\\n        if (this.resolutions_) {\\n            if (this.resolutions_.length <= 1) {\\n                return 0;\\n            }\\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\\n        }\\n        else {\\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\\n        }\\n    };\\n    /**\\n     * Fit the given geometry or extent based on the given map size and border.\\n     * The size is pixel dimensions of the box to fit the extent into.\\n     * In most cases you will want to use the map size, that is `map.getSize()`.\\n     * Takes care of the map angle.\\n     * @param {import(\\\"./geom/SimpleGeometry.js\\\").default|import(\\\"./extent.js\\\").Extent} geometryOrExtent The geometry or\\n     *     extent to fit the view to.\\n     * @param {FitOptions=} opt_options Options.\\n     * @api\\n     */\\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\\n        var options = opt_options || {};\\n        var size = options.size;\\n        if (!size) {\\n            size = this.getSizeFromViewport_();\\n        }\\n        /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */\\n        var geometry;\\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\\n        if (Array.isArray(geometryOrExtent)) {\\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\\n            geometry = polygonFromExtent(geometryOrExtent);\\n        }\\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\\n            geometryOrExtent = geometryOrExtent.getExtent();\\n            geometry = polygonFromExtent(geometryOrExtent);\\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\\n        }\\n        else {\\n            geometry = geometryOrExtent;\\n        }\\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\\n        var nearest = options.nearest !== undefined ? options.nearest : false;\\n        var minResolution;\\n        if (options.minResolution !== undefined) {\\n            minResolution = options.minResolution;\\n        }\\n        else if (options.maxZoom !== undefined) {\\n            minResolution = this.getResolutionForZoom(options.maxZoom);\\n        }\\n        else {\\n            minResolution = 0;\\n        }\\n        var coords = geometry.getFlatCoordinates();\\n        // calculate rotated extent\\n        var rotation = this.getRotation();\\n        var cosAngle = Math.cos(-rotation);\\n        var sinAngle = Math.sin(-rotation);\\n        var minRotX = +Infinity;\\n        var minRotY = +Infinity;\\n        var maxRotX = -Infinity;\\n        var maxRotY = -Infinity;\\n        var stride = geometry.getStride();\\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\\n            minRotX = Math.min(minRotX, rotX);\\n            minRotY = Math.min(minRotY, rotY);\\n            maxRotX = Math.max(maxRotX, rotX);\\n            maxRotY = Math.max(maxRotY, rotY);\\n        }\\n        // calculate resolution\\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\\n        resolution = isNaN(resolution) ? minResolution :\\n            Math.max(resolution, minResolution);\\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\\n        // calculate center\\n        sinAngle = -sinAngle; // go back to original rotation\\n        var centerRotX = (minRotX + maxRotX) / 2;\\n        var centerRotY = (minRotY + maxRotY) / 2;\\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\\n        var center = [centerX, centerY];\\n        var callback = options.callback ? options.callback : VOID;\\n        if (options.duration !== undefined) {\\n            this.animate_({\\n                resolution: resolution,\\n                center: this.getConstrainedCenter(center, resolution),\\n                duration: options.duration,\\n                easing: options.easing\\n            }, callback);\\n        }\\n        else {\\n            this.targetResolution_ = resolution;\\n            this.targetCenter_ = center;\\n            this.applyTargetState_(false, true);\\n            animationCallback(callback, true);\\n        }\\n    };\\n    /**\\n     * Center on coordinate and view position.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"./size.js\\\").Size} size Box pixel size.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} position Position on the view to center on.\\n     * @api\\n     */\\n    View.prototype.centerOn = function (coordinate, size, position) {\\n        // calculate rotated position\\n        var rotation = this.getRotation();\\n        var cosAngle = Math.cos(-rotation);\\n        var sinAngle = Math.sin(-rotation);\\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\\n        var resolution = this.getResolution();\\n        rotX += (size[0] / 2 - position[0]) * resolution;\\n        rotY += (position[1] - size[1] / 2) * resolution;\\n        // go back to original angle\\n        sinAngle = -sinAngle; // go back to original rotation\\n        var centerX = rotX * cosAngle - rotY * sinAngle;\\n        var centerY = rotY * cosAngle + rotX * sinAngle;\\n        this.setCenter([centerX, centerY]);\\n    };\\n    /**\\n     * @return {boolean} Is defined.\\n     */\\n    View.prototype.isDef = function () {\\n        return !!this.getCenter() && this.getResolution() !== undefined;\\n    };\\n    /**\\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} deltaCoordinates Relative value to add.\\n     * @api\\n     */\\n    View.prototype.adjustCenter = function (deltaCoordinates) {\\n        var center = this.targetCenter_;\\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\\n    };\\n    /**\\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\\n     * constraint will apply.\\n     * @param {number} ratio The ratio to apply on the view resolution.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\\n        var isMoving = this.getAnimating() || this.getInteracting();\\n        var size = this.getSizeFromViewport_(this.getRotation());\\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\\n        if (opt_anchor !== undefined) {\\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\\n        }\\n        this.targetResolution_ *= ratio;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\\n     * constraint will apply.\\n     * @param {number} delta Relative value to add to the zoom level.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     * @api\\n     */\\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\\n    };\\n    /**\\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\\n     * constraint will apply.\\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The rotation center.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\\n        var isMoving = this.getAnimating() || this.getInteracting();\\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\\n        if (opt_anchor !== undefined) {\\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\\n        }\\n        this.targetRotation_ += delta;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Set the center of the current view. Any extent constraint will apply.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate|undefined} center The center of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.setCenter = function (center) {\\n        this.targetCenter_ = center;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * @param {ViewHint} hint Hint.\\n     * @param {number} delta Delta.\\n     * @return {number} New value.\\n     */\\n    View.prototype.setHint = function (hint, delta) {\\n        this.hints_[hint] += delta;\\n        this.changed();\\n        return this.hints_[hint];\\n    };\\n    /**\\n     * Set the resolution for this view. Any resolution constraint will apply.\\n     * @param {number|undefined} resolution The resolution of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.setResolution = function (resolution) {\\n        this.targetResolution_ = resolution;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Set the rotation for this view. Any rotation constraint will apply.\\n     * @param {number} rotation The rotation of the view in radians.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.setRotation = function (rotation) {\\n        this.targetRotation_ = rotation;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\\n     * @param {number} zoom Zoom level.\\n     * @api\\n     */\\n    View.prototype.setZoom = function (zoom) {\\n        this.setResolution(this.getResolutionForZoom(zoom));\\n    };\\n    /**\\n     * Recompute rotation/resolution/center based on target values.\\n     * Note: we have to compute rotation first, then resolution and center considering that\\n     * parameters can influence one another in case a view extent constraint is present.\\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\\n     * @private\\n     */\\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\\n        // compute rotation\\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\\n        var size = this.getSizeFromViewport_(newRotation);\\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\\n            this.set(ViewProperty.ROTATION, newRotation);\\n        }\\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\\n            this.set(ViewProperty.RESOLUTION, newResolution);\\n        }\\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\\n            this.set(ViewProperty.CENTER, newCenter);\\n        }\\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\\n            this.cancelAnimations();\\n        }\\n    };\\n    /**\\n     * If any constraints need to be applied, an animation will be triggered.\\n     * This is typically done on interaction end.\\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\\n     * without animation.\\n     * @param {number=} opt_duration The animation duration in ms.\\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     */\\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\\n        var duration = opt_duration !== undefined ? opt_duration : 200;\\n        var direction = opt_resolutionDirection || 0;\\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\\n        var size = this.getSizeFromViewport_(newRotation);\\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\\n        if (duration === 0) {\\n            this.targetResolution_ = newResolution;\\n            this.targetRotation_ = newRotation;\\n            this.targetCenter_ = newCenter;\\n            this.applyTargetState_();\\n            return;\\n        }\\n        if (this.getResolution() !== newResolution ||\\n            this.getRotation() !== newRotation ||\\n            !this.getCenter() ||\\n            !equals(this.getCenter(), newCenter)) {\\n            if (this.getAnimating()) {\\n                this.cancelAnimations();\\n            }\\n            this.animate_({\\n                rotation: newRotation,\\n                center: newCenter,\\n                resolution: newResolution,\\n                duration: duration,\\n                easing: easeOut,\\n                anchor: opt_anchor\\n            });\\n        }\\n    };\\n    /**\\n     * Notify the View that an interaction has started.\\n     * The view state will be resolved to a stable one if needed\\n     * (depending on its constraints).\\n     * @api\\n     */\\n    View.prototype.beginInteraction = function () {\\n        this.resolveConstraints(0);\\n        this.setHint(ViewHint.INTERACTING, 1);\\n    };\\n    /**\\n     * Notify the View that an interaction has ended. The view state will be resolved\\n     * to a stable one if needed (depending on its constraints).\\n     * @param {number=} opt_duration Animation duration in ms.\\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     * @api\\n     */\\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\\n        this.setHint(ViewHint.INTERACTING, -1);\\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\\n    };\\n    /**\\n     * Get a valid position for the view center according to the current constraints.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate|undefined} targetCenter Target center position.\\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\\n     * This is useful to guess a valid center position at a different zoom level.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Valid center position.\\n     */\\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\\n        var size = this.getSizeFromViewport_(this.getRotation());\\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\\n    };\\n    /**\\n     * Get a valid zoom level according to the current view constraints.\\n     * @param {number|undefined} targetZoom Target zoom.\\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\\n     * the nearest available value.\\n     * @return {number|undefined} Valid zoom level.\\n     */\\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\\n        var targetRes = this.getResolutionForZoom(targetZoom);\\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\\n    };\\n    /**\\n     * Get a valid resolution according to the current view constraints.\\n     * @param {number|undefined} targetResolution Target resolution.\\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\\n     * the nearest available value.\\n     * @return {number|undefined} Valid resolution.\\n     */\\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\\n        var direction = opt_direction || 0;\\n        var size = this.getSizeFromViewport_(this.getRotation());\\n        return this.constraints_.resolution(targetResolution, direction, size);\\n    };\\n    return View;\\n}(BaseObject));\\n/**\\n * @param {Function} callback Callback.\\n * @param {*} returnValue Return value.\\n */\\nfunction animationCallback(callback, returnValue) {\\n    setTimeout(function () {\\n        callback(returnValue);\\n    }, 0);\\n}\\n/**\\n * @param {ViewOptions} options View options.\\n * @return {import(\\\"./centerconstraint.js\\\").Type} The constraint.\\n */\\nexport function createCenterConstraint(options) {\\n    if (options.extent !== undefined) {\\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\\n    }\\n    else {\\n        return centerNone;\\n    }\\n}\\n/**\\n * @param {ViewOptions} options View options.\\n * @return {{constraint: import(\\\"./resolutionconstraint.js\\\").Type, maxResolution: number,\\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\\n */\\nexport function createResolutionConstraint(options) {\\n    var resolutionConstraint;\\n    var maxResolution;\\n    var minResolution;\\n    // TODO: move these to be ol constants\\n    // see https://github.com/openlayers/openlayers/issues/2076\\n    var defaultMaxZoom = 28;\\n    var defaultZoomFactor = 2;\\n    var minZoom = options.minZoom !== undefined ?\\n        options.minZoom : DEFAULT_MIN_ZOOM;\\n    var maxZoom = options.maxZoom !== undefined ?\\n        options.maxZoom : defaultMaxZoom;\\n    var zoomFactor = options.zoomFactor !== undefined ?\\n        options.zoomFactor : defaultZoomFactor;\\n    var multiWorld = options.multiWorld !== undefined ?\\n        options.multiWorld : false;\\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\\n    if (options.resolutions !== undefined) {\\n        var resolutions = options.resolutions;\\n        maxResolution = resolutions[minZoom];\\n        minResolution = resolutions[maxZoom] !== undefined ?\\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\\n        if (options.constrainResolution) {\\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\\n        }\\n        else {\\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\\n        }\\n    }\\n    else {\\n        // calculate the default min and max resolution\\n        var projection = createProjection(options.projection, 'EPSG:3857');\\n        var extent = projection.getExtent();\\n        var size = !extent ?\\n            // use an extent that can fit the whole world if need be\\n            360 * METERS_PER_UNIT[Units.DEGREES] /\\n                projection.getMetersPerUnit() :\\n            Math.max(getWidth(extent), getHeight(extent));\\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\\n        // user provided maxResolution takes precedence\\n        maxResolution = options.maxResolution;\\n        if (maxResolution !== undefined) {\\n            minZoom = 0;\\n        }\\n        else {\\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\\n        }\\n        // user provided minResolution takes precedence\\n        minResolution = options.minResolution;\\n        if (minResolution === undefined) {\\n            if (options.maxZoom !== undefined) {\\n                if (options.maxResolution !== undefined) {\\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\\n                }\\n                else {\\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\\n                }\\n            }\\n            else {\\n                minResolution = defaultMinResolution;\\n            }\\n        }\\n        // given discrete zoom levels, minResolution may be different than provided\\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\\n        if (options.constrainResolution) {\\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\\n        }\\n        else {\\n            var constrainOnlyCenter = options.constrainOnlyCenter;\\n            var extent_1 = options.extent;\\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\\n                constrainOnlyCenter = false;\\n                extent_1 = projection.getExtent();\\n            }\\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\\n        }\\n    }\\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\\n}\\n/**\\n * @param {ViewOptions} options View options.\\n * @return {import(\\\"./rotationconstraint.js\\\").Type} Rotation constraint.\\n */\\nexport function createRotationConstraint(options) {\\n    var enableRotation = options.enableRotation !== undefined ?\\n        options.enableRotation : true;\\n    if (enableRotation) {\\n        var constrainRotation = options.constrainRotation;\\n        if (constrainRotation === undefined || constrainRotation === true) {\\n            return createSnapToZero();\\n        }\\n        else if (constrainRotation === false) {\\n            return rotationNone;\\n        }\\n        else if (typeof constrainRotation === 'number') {\\n            return createSnapToN(constrainRotation);\\n        }\\n        else {\\n            return rotationNone;\\n        }\\n    }\\n    else {\\n        return disable;\\n    }\\n}\\n/**\\n * Determine if an animation involves no view change.\\n * @param {Animation} animation The animation.\\n * @return {boolean} The animation involves no view change.\\n */\\nexport function isNoopAnimation(animation) {\\n    if (animation.sourceCenter && animation.targetCenter) {\\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\\n            return false;\\n        }\\n    }\\n    if (animation.sourceResolution !== animation.targetResolution) {\\n        return false;\\n    }\\n    if (animation.sourceRotation !== animation.targetRotation) {\\n        return false;\\n    }\\n    return true;\\n}\\nexport default View;\\n//# sourceMappingURL=View.js.map\",\"/**\\n * @module ol/dom\\n */\\n/**\\n * Create an html canvas element and returns its 2d context.\\n * @param {number=} opt_width Canvas width.\\n * @param {number=} opt_height Canvas height.\\n * @return {CanvasRenderingContext2D} The context.\\n */\\nexport function createCanvasContext2D(opt_width, opt_height) {\\n    var canvas = document.createElement('canvas');\\n    if (opt_width) {\\n        canvas.width = opt_width;\\n    }\\n    if (opt_height) {\\n        canvas.height = opt_height;\\n    }\\n    return canvas.getContext('2d');\\n}\\n/**\\n * Get the current computed width for the given element including margin,\\n * padding and border.\\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\\n * @param {!HTMLElement} element Element.\\n * @return {number} The width.\\n */\\nexport function outerWidth(element) {\\n    var width = element.offsetWidth;\\n    var style = getComputedStyle(element);\\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\\n    return width;\\n}\\n/**\\n * Get the current computed height for the given element including margin,\\n * padding and border.\\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\\n * @param {!HTMLElement} element Element.\\n * @return {number} The height.\\n */\\nexport function outerHeight(element) {\\n    var height = element.offsetHeight;\\n    var style = getComputedStyle(element);\\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\\n    return height;\\n}\\n/**\\n * @param {Node} newNode Node to replace old node\\n * @param {Node} oldNode The node to be replaced\\n */\\nexport function replaceNode(newNode, oldNode) {\\n    var parent = oldNode.parentNode;\\n    if (parent) {\\n        parent.replaceChild(newNode, oldNode);\\n    }\\n}\\n/**\\n * @param {Node} node The node to remove.\\n * @returns {Node} The node that was removed or null.\\n */\\nexport function removeNode(node) {\\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\\n}\\n/**\\n * @param {Node} node The node to remove the children from.\\n */\\nexport function removeChildren(node) {\\n    while (node.lastChild) {\\n        node.removeChild(node.lastChild);\\n    }\\n}\\n/**\\n * Transform the children of a parent node so they match the\\n * provided list of children.  This function aims to efficiently\\n * remove, add, and reorder child nodes while maintaining a simple\\n * implementation (it is not guaranteed to minimize DOM operations).\\n * @param {Node} node The parent node whose children need reworking.\\n * @param {Array<Node>} children The desired children.\\n */\\nexport function replaceChildren(node, children) {\\n    var oldChildren = node.childNodes;\\n    for (var i = 0; true; ++i) {\\n        var oldChild = oldChildren[i];\\n        var newChild = children[i];\\n        // check if our work is done\\n        if (!oldChild && !newChild) {\\n            break;\\n        }\\n        // check if children match\\n        if (oldChild === newChild) {\\n            continue;\\n        }\\n        // check if a new child needs to be added\\n        if (!oldChild) {\\n            node.appendChild(newChild);\\n            continue;\\n        }\\n        // check if an old child needs to be removed\\n        if (!newChild) {\\n            node.removeChild(oldChild);\\n            --i;\\n            continue;\\n        }\\n        // reorder\\n        node.insertBefore(newChild, oldChild);\\n    }\\n}\\n//# sourceMappingURL=dom.js.map\",\"/**\\n * @module ol/layer/Property\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    OPACITY: 'opacity',\\n    VISIBLE: 'visible',\\n    EXTENT: 'extent',\\n    Z_INDEX: 'zIndex',\\n    MAX_RESOLUTION: 'maxResolution',\\n    MIN_RESOLUTION: 'minResolution',\\n    SOURCE: 'source'\\n};\\n//# sourceMappingURL=Property.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Base\\n */\\nimport { abstract } from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport LayerProperty from './Property.js';\\nimport { clamp } from '../math.js';\\nimport { assign } from '../obj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\\n * the options is set as a {@link module:ol/Object} property on the layer object, so\\n * is observable, and has get/set accessors.\\n *\\n * @api\\n */\\nvar BaseLayer = /** @class */ (function (_super) {\\n    __extends(BaseLayer, _super);\\n    /**\\n     * @param {Options} options Layer options.\\n     */\\n    function BaseLayer(options) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Object<string, *>}\\n         */\\n        var properties = assign({}, options);\\n        properties[LayerProperty.OPACITY] =\\n            options.opacity !== undefined ? options.opacity : 1;\\n        properties[LayerProperty.VISIBLE] =\\n            options.visible !== undefined ? options.visible : true;\\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\\n        properties[LayerProperty.MAX_RESOLUTION] =\\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\\n        properties[LayerProperty.MIN_RESOLUTION] =\\n            options.minResolution !== undefined ? options.minResolution : 0;\\n        /**\\n         * @type {string}\\n         * @private\\n         */\\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\\n        delete properties.className;\\n        _this.setProperties(properties);\\n        /**\\n         * @type {import(\\\"./Layer.js\\\").State}\\n         * @private\\n         */\\n        _this.state_ = null;\\n        return _this;\\n    }\\n    /**\\n     * @return {string} CSS class name.\\n     */\\n    BaseLayer.prototype.getClassName = function () {\\n        return this.className_;\\n    };\\n    /**\\n     * @return {import(\\\"./Layer.js\\\").State} Layer state.\\n     */\\n    BaseLayer.prototype.getLayerState = function () {\\n        /** @type {import(\\\"./Layer.js\\\").State} */\\n        var state = this.state_ || /** @type {?} */ ({\\n            layer: this,\\n            managed: true\\n        });\\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\\n        state.sourceState = this.getSourceState();\\n        state.visible = this.getVisible();\\n        state.extent = this.getExtent();\\n        state.zIndex = this.getZIndex() || 0;\\n        state.maxResolution = this.getMaxResolution();\\n        state.minResolution = Math.max(this.getMinResolution(), 0);\\n        this.state_ = state;\\n        return state;\\n    };\\n    /**\\n     * @abstract\\n     * @param {Array<import(\\\"./Layer.js\\\").default>=} opt_array Array of layers (to be\\n     *     modified in place).\\n     * @return {Array<import(\\\"./Layer.js\\\").default>} Array of layers.\\n     */\\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {Array<import(\\\"./Layer.js\\\").State>=} opt_states Optional list of layer\\n     *     states (to be modified in place).\\n     * @return {Array<import(\\\"./Layer.js\\\").State>} List of layer states.\\n     */\\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\\n        return abstract();\\n    };\\n    /**\\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\\n     * will be visible regardless of extent.\\n     * @return {import(\\\"../extent.js\\\").Extent|undefined} The layer extent.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getExtent = function () {\\n        return (\\n        /** @type {import(\\\"../extent.js\\\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\\n    };\\n    /**\\n     * Return the maximum resolution of the layer.\\n     * @return {number} The maximum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getMaxResolution = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\\n    };\\n    /**\\n     * Return the minimum resolution of the layer.\\n     * @return {number} The minimum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getMinResolution = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\\n    };\\n    /**\\n     * Return the opacity of the layer (between 0 and 1).\\n     * @return {number} The opacity of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getOpacity = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"../source/State.js\\\").default} Source state.\\n     */\\n    BaseLayer.prototype.getSourceState = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Return the visibility of the layer (`true` or `false`).\\n     * @return {boolean} The visibility of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getVisible = function () {\\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\\n    };\\n    /**\\n     * Return the Z-index of the layer, which is used to order layers before\\n     * rendering. The default Z-index is 0.\\n     * @return {number} The Z-index of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getZIndex = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\\n    };\\n    /**\\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\\n     * will be visible at all extents.\\n     * @param {import(\\\"../extent.js\\\").Extent|undefined} extent The extent of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setExtent = function (extent) {\\n        this.set(LayerProperty.EXTENT, extent);\\n    };\\n    /**\\n     * Set the maximum resolution at which the layer is visible.\\n     * @param {number} maxResolution The maximum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\\n    };\\n    /**\\n     * Set the minimum resolution at which the layer is visible.\\n     * @param {number} minResolution The minimum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\\n    };\\n    /**\\n     * Set the opacity of the layer, allowed values range from 0 to 1.\\n     * @param {number} opacity The opacity of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setOpacity = function (opacity) {\\n        this.set(LayerProperty.OPACITY, opacity);\\n    };\\n    /**\\n     * Set the visibility of the layer (`true` or `false`).\\n     * @param {boolean} visible The visibility of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setVisible = function (visible) {\\n        this.set(LayerProperty.VISIBLE, visible);\\n    };\\n    /**\\n     * Set Z-index of the layer, which is used to order layers before rendering.\\n     * The default Z-index is 0.\\n     * @param {number} zindex The z-index of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setZIndex = function (zindex) {\\n        this.set(LayerProperty.Z_INDEX, zindex);\\n    };\\n    return BaseLayer;\\n}(BaseObject));\\nexport default BaseLayer;\\n//# sourceMappingURL=Base.js.map\",\"/**\\n * @module ol/source/State\\n */\\n/**\\n * @enum {string}\\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\\n */\\nexport default {\\n    UNDEFINED: 'undefined',\\n    LOADING: 'loading',\\n    READY: 'ready',\\n    ERROR: 'error'\\n};\\n//# sourceMappingURL=State.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Group\\n */\\nimport { getUid } from '../util.js';\\nimport Collection from '../Collection.js';\\nimport CollectionEventType from '../CollectionEventType.js';\\nimport { getChangeEventType } from '../Object.js';\\nimport ObjectEventType from '../ObjectEventType.js';\\nimport { assert } from '../asserts.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getIntersection } from '../extent.js';\\nimport BaseLayer from './Base.js';\\nimport { assign, clear } from '../obj.js';\\nimport SourceState from '../source/State.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {Array<import(\\\"./Base.js\\\").default>|import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} [layers] Child layers.\\n */\\n/**\\n * @enum {string}\\n * @private\\n */\\nvar Property = {\\n    LAYERS: 'layers'\\n};\\n/**\\n * @classdesc\\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\\n *\\n * A generic `change` event is triggered when the group/Collection changes.\\n *\\n * @api\\n */\\nvar LayerGroup = /** @class */ (function (_super) {\\n    __extends(LayerGroup, _super);\\n    /**\\n     * @param {Options=} opt_options Layer options.\\n     */\\n    function LayerGroup(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        var baseOptions = /** @type {Options} */ (assign({}, options));\\n        delete baseOptions.layers;\\n        var layers = options.layers;\\n        _this = _super.call(this, baseOptions) || this;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.layersListenerKeys_ = [];\\n        /**\\n         * @private\\n         * @type {Object<string, Array<import(\\\"../events.js\\\").EventsKey>>}\\n         */\\n        _this.listenerKeys_ = {};\\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\\n        if (layers) {\\n            if (Array.isArray(layers)) {\\n                layers = new Collection(layers.slice(), { unique: true });\\n            }\\n            else {\\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\\n            }\\n        }\\n        else {\\n            layers = new Collection(undefined, { unique: true });\\n        }\\n        _this.setLayers(layers);\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayerChange_ = function () {\\n        this.changed();\\n    };\\n    /**\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayersChanged_ = function () {\\n        this.layersListenerKeys_.forEach(unlistenByKey);\\n        this.layersListenerKeys_.length = 0;\\n        var layers = this.getLayers();\\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\\n        for (var id in this.listenerKeys_) {\\n            this.listenerKeys_[id].forEach(unlistenByKey);\\n        }\\n        clear(this.listenerKeys_);\\n        var layersArray = layers.getArray();\\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\\n            var layer = layersArray[i];\\n            this.listenerKeys_[getUid(layer)] = [\\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\\n            ];\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @param {import(\\\"../Collection.js\\\").CollectionEvent} collectionEvent CollectionEvent.\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\\n        var layer = /** @type {import(\\\"./Base.js\\\").default} */ (collectionEvent.element);\\n        this.listenerKeys_[getUid(layer)] = [\\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\\n        ];\\n        this.changed();\\n    };\\n    /**\\n     * @param {import(\\\"../Collection.js\\\").CollectionEvent} collectionEvent CollectionEvent.\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\\n        var layer = /** @type {import(\\\"./Base.js\\\").default} */ (collectionEvent.element);\\n        var key = getUid(layer);\\n        this.listenerKeys_[key].forEach(unlistenByKey);\\n        delete this.listenerKeys_[key];\\n        this.changed();\\n    };\\n    /**\\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\\n     * in this group.\\n     * @return {!import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} Collection of\\n     *   {@link module:ol/layer/Base layers} that are part of this group.\\n     * @observable\\n     * @api\\n     */\\n    LayerGroup.prototype.getLayers = function () {\\n        return (\\n        /** @type {!import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} */ (this.get(Property.LAYERS)));\\n    };\\n    /**\\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\\n     * in this group.\\n     * @param {!import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} layers Collection of\\n     *   {@link module:ol/layer/Base layers} that are part of this group.\\n     * @observable\\n     * @api\\n     */\\n    LayerGroup.prototype.setLayers = function (layers) {\\n        this.set(Property.LAYERS, layers);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\\n        var array = opt_array !== undefined ? opt_array : [];\\n        this.getLayers().forEach(function (layer) {\\n            layer.getLayersArray(array);\\n        });\\n        return array;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\\n        var states = opt_states !== undefined ? opt_states : [];\\n        var pos = states.length;\\n        this.getLayers().forEach(function (layer) {\\n            layer.getLayerStatesArray(states);\\n        });\\n        var ownLayerState = this.getLayerState();\\n        for (var i = pos, ii = states.length; i < ii; i++) {\\n            var layerState = states[i];\\n            layerState.opacity *= ownLayerState.opacity;\\n            layerState.visible = layerState.visible && ownLayerState.visible;\\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\\n            if (ownLayerState.extent !== undefined) {\\n                if (layerState.extent !== undefined) {\\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\\n                }\\n                else {\\n                    layerState.extent = ownLayerState.extent;\\n                }\\n            }\\n        }\\n        return states;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LayerGroup.prototype.getSourceState = function () {\\n        return SourceState.READY;\\n    };\\n    return LayerGroup;\\n}(BaseLayer));\\nexport default LayerGroup;\\n//# sourceMappingURL=Group.js.map\",\"/**\\n * @module ol/size\\n */\\n/**\\n * An array of numbers representing a size: `[width, height]`.\\n * @typedef {Array<number>} Size\\n * @api\\n */\\n/**\\n * Returns a buffered size.\\n * @param {Size} size Size.\\n * @param {number} num The amount by which to buffer.\\n * @param {Size=} opt_size Optional reusable size array.\\n * @return {Size} The buffered size.\\n */\\nexport function buffer(size, num, opt_size) {\\n    if (opt_size === undefined) {\\n        opt_size = [0, 0];\\n    }\\n    opt_size[0] = size[0] + 2 * num;\\n    opt_size[1] = size[1] + 2 * num;\\n    return opt_size;\\n}\\n/**\\n * Determines if a size has a positive area.\\n * @param {Size} size The size to test.\\n * @return {boolean} The size has a positive area.\\n */\\nexport function hasArea(size) {\\n    return size[0] > 0 && size[1] > 0;\\n}\\n/**\\n * Returns a size scaled by a ratio. The result will be an array of integers.\\n * @param {Size} size Size.\\n * @param {number} ratio Ratio.\\n * @param {Size=} opt_size Optional reusable size array.\\n * @return {Size} The scaled size.\\n */\\nexport function scale(size, ratio, opt_size) {\\n    if (opt_size === undefined) {\\n        opt_size = [0, 0];\\n    }\\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\\n    return opt_size;\\n}\\n/**\\n * Returns an `Size` array for the passed in number (meaning: square) or\\n * `Size` array.\\n * (meaning: non-square),\\n * @param {number|Size} size Width and height.\\n * @param {Size=} opt_size Optional reusable size array.\\n * @return {Size} Size.\\n * @api\\n */\\nexport function toSize(size, opt_size) {\\n    if (Array.isArray(size)) {\\n        return size;\\n    }\\n    else {\\n        if (opt_size === undefined) {\\n            opt_size = [size, size];\\n        }\\n        else {\\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\\n        }\\n        return opt_size;\\n    }\\n}\\n//# sourceMappingURL=size.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/PluggableMap\\n */\\nimport { getUid } from './util.js';\\nimport Collection from './Collection.js';\\nimport CollectionEventType from './CollectionEventType.js';\\nimport MapBrowserEvent from './MapBrowserEvent.js';\\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\\nimport MapBrowserEventType from './MapBrowserEventType.js';\\nimport MapEvent from './MapEvent.js';\\nimport MapEventType from './MapEventType.js';\\nimport MapProperty from './MapProperty.js';\\nimport RenderEventType from './render/EventType.js';\\nimport BaseObject, { getChangeEventType } from './Object.js';\\nimport ObjectEventType from './ObjectEventType.js';\\nimport TileQueue from './TileQueue.js';\\nimport View from './View.js';\\nimport ViewHint from './ViewHint.js';\\nimport { assert } from './asserts.js';\\nimport { removeNode } from './dom.js';\\nimport { listen, unlistenByKey, unlisten } from './events.js';\\nimport EventType from './events/EventType.js';\\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\\nimport { TRUE } from './functions.js';\\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\\nimport LayerGroup from './layer/Group.js';\\nimport { hasArea } from './size.js';\\nimport { DROP } from './structs/PriorityQueue.js';\\nimport { create as createTransform, apply as applyTransform } from './transform.js';\\n/**\\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\\n * be used in applications.\\n * @typedef {Object} FrameState\\n * @property {number} pixelRatio The pixel ratio of the frame.\\n * @property {number} time The time when rendering of the frame was requested.\\n * @property {import(\\\"./View.js\\\").State} viewState The state of the current view.\\n * @property {boolean} animate\\n * @property {import(\\\"./transform.js\\\").Transform} coordinateToPixelTransform\\n * @property {null|import(\\\"./extent.js\\\").Extent} extent\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} focus\\n * @property {number} index\\n * @property {Array<import(\\\"./layer/Layer.js\\\").State>} layerStatesArray\\n * @property {import(\\\"./transform.js\\\").Transform} pixelToCoordinateTransform\\n * @property {Array<PostRenderFunction>} postRenderFunctions\\n * @property {import(\\\"./size.js\\\").Size} size\\n * @property {!Object<string, boolean>} skippedFeatureUids\\n * @property {TileQueue} tileQueue\\n * @property {!Object<string, Object<string, boolean>>} usedTiles\\n * @property {Array<number>} viewHints\\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\\n */\\n/**\\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\\n */\\n/**\\n * @typedef {Object} AtPixelOptions\\n * @property {undefined|function(import(\\\"./layer/Layer.js\\\").default): boolean} [layerFilter] Layer filter\\n * function. The filter function will receive one argument, the\\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\\n * Only layers which are visible and for which this function returns `true`\\n * will be tested for features. By default, all visible layers will be tested.\\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\\n * inside the radius around the given position will be checked for features.\\n */\\n/**\\n * @typedef {Object} MapOptionsInternal\\n * @property {Collection<import(\\\"./control/Control.js\\\").default>} [controls]\\n * @property {Collection<import(\\\"./interaction/Interaction.js\\\").default>} [interactions]\\n * @property {HTMLElement|Document} keyboardEventTarget\\n * @property {Collection<import(\\\"./Overlay.js\\\").default>} overlays\\n * @property {Object<string, *>} values\\n */\\n/**\\n * Object literal with config options for the map.\\n * @typedef {Object} MapOptions\\n * @property {Collection<import(\\\"./control/Control.js\\\").default>|Array<import(\\\"./control/Control.js\\\").default>} [controls]\\n * Controls initially added to the map. If not specified,\\n * {@link module:ol/control~defaults} is used.\\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\\n * physical pixels and device-independent pixels (dips) on the device.\\n * @property {Collection<import(\\\"./interaction/Interaction.js\\\").default>|Array<import(\\\"./interaction/Interaction.js\\\").default>} [interactions]\\n * Interactions that are initially added to the map. If not specified,\\n * {@link module:ol/interaction~defaults} is used.\\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\\n * listen to keyboard events on. This determines when the `KeyboardPan` and\\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\\n * `document` the keyboard interactions will always trigger. If this option is\\n * not specified, the element the library listens to keyboard events on is the\\n * map target (i.e. the user-provided div for the map). If this is not\\n * `document`, the target element needs to be focused for key events to be\\n * emitted, requiring that the target element has a `tabindex` attribute.\\n * @property {Array<import(\\\"./layer/Base.js\\\").default>|Collection<import(\\\"./layer/Base.js\\\").default>|LayerGroup} [layers]\\n * Layers. If this is not defined, a map with no layers will be rendered. Note\\n * that layers are rendered in the order supplied, so if you want, for example,\\n * a vector layer to appear on top of a tile layer, it must come after the tile\\n * layer.\\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\\n * simultaneously.\\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\\n * cursor must move to be detected as a map move event instead of a click.\\n * Increasing this value can make it easier to click on the map.\\n * @property {Collection<import(\\\"./Overlay.js\\\").default>|Array<import(\\\"./Overlay.js\\\").default>} [overlays]\\n * Overlays initially added to the map. By default, no overlays are added.\\n * @property {HTMLElement|string} [target] The container for the map, either the\\n * element itself or the `id` of the element. If not specified at construction\\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\\n * rendered.\\n * @property {View} [view] The map's view.  No layer sources will be\\n * fetched unless this is specified at construction time or through\\n * {@link module:ol/Map~Map#setView}.\\n */\\n/**\\n * @fires import(\\\"./MapBrowserEvent.js\\\").MapBrowserEvent\\n * @fires import(\\\"./MapEvent.js\\\").MapEvent\\n * @fires import(\\\"./render/Event.js\\\").default#precompose\\n * @fires import(\\\"./render/Event.js\\\").default#postcompose\\n * @fires import(\\\"./render/Event.js\\\").default#rendercomplete\\n * @api\\n */\\nvar PluggableMap = /** @class */ (function (_super) {\\n    __extends(PluggableMap, _super);\\n    /**\\n     * @param {MapOptions} options Map options.\\n     */\\n    function PluggableMap(options) {\\n        var _this = _super.call(this) || this;\\n        var optionsInternal = createOptionsInternal(options);\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.animationDelayKey_;\\n        /**\\n         * @private\\n         */\\n        _this.animationDelay_ = function () {\\n            this.animationDelayKey_ = undefined;\\n            this.renderFrame_(Date.now());\\n        }.bind(_this);\\n        /**\\n         * @private\\n         * @type {import(\\\"./transform.js\\\").Transform}\\n         */\\n        _this.coordinateToPixelTransform_ = createTransform();\\n        /**\\n         * @private\\n         * @type {import(\\\"./transform.js\\\").Transform}\\n         */\\n        _this.pixelToCoordinateTransform_ = createTransform();\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.frameIndex_ = 0;\\n        /**\\n         * @private\\n         * @type {?FrameState}\\n         */\\n        _this.frameState_ = null;\\n        /**\\n         * The extent at the previous 'moveend' event.\\n         * @private\\n         * @type {import(\\\"./extent.js\\\").Extent}\\n         */\\n        _this.previousExtent_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         */\\n        _this.viewPropertyListenerKey_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         */\\n        _this.viewChangeListenerKey_ = null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"./events.js\\\").EventsKey>}\\n         */\\n        _this.layerGroupPropertyListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {!HTMLElement}\\n         */\\n        _this.viewport_ = document.createElement('div');\\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\\n        _this.viewport_.style.position = 'relative';\\n        _this.viewport_.style.overflow = 'hidden';\\n        _this.viewport_.style.width = '100%';\\n        _this.viewport_.style.height = '100%';\\n        // prevent page zoom on IE >= 10 browsers\\n        _this.viewport_.style.msTouchAction = 'none';\\n        _this.viewport_.style.touchAction = 'none';\\n        /**\\n         * @private\\n         * @type {!HTMLElement}\\n         */\\n        _this.overlayContainer_ = document.createElement('div');\\n        _this.overlayContainer_.style.position = 'absolute';\\n        _this.overlayContainer_.style.zIndex = '0';\\n        _this.overlayContainer_.style.width = '100%';\\n        _this.overlayContainer_.style.height = '100%';\\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\\n        _this.viewport_.appendChild(_this.overlayContainer_);\\n        /**\\n         * @private\\n         * @type {!HTMLElement}\\n         */\\n        _this.overlayContainerStopEvent_ = document.createElement('div');\\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\\n        _this.overlayContainerStopEvent_.style.width = '100%';\\n        _this.overlayContainerStopEvent_.style.height = '100%';\\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\\n        /**\\n         * @private\\n         * @type {MapBrowserEventHandler}\\n         */\\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\\n        for (var key in MapBrowserEventType) {\\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\\n        }\\n        /**\\n         * @private\\n         * @type {HTMLElement|Document}\\n         */\\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"./events.js\\\").EventsKey>}\\n         */\\n        _this.keyHandlerKeys_ = null;\\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\\n        /**\\n         * @type {Collection<import(\\\"./control/Control.js\\\").default>}\\n         * @protected\\n         */\\n        _this.controls = optionsInternal.controls || new Collection();\\n        /**\\n         * @type {Collection<import(\\\"./interaction/Interaction.js\\\").default>}\\n         * @protected\\n         */\\n        _this.interactions = optionsInternal.interactions || new Collection();\\n        /**\\n         * @type {Collection<import(\\\"./Overlay.js\\\").default>}\\n         * @private\\n         */\\n        _this.overlays_ = optionsInternal.overlays;\\n        /**\\n         * A lookup of overlays by id.\\n         * @private\\n         * @type {Object<string, import(\\\"./Overlay.js\\\").default>}\\n         */\\n        _this.overlayIdIndex_ = {};\\n        /**\\n         * @type {import(\\\"./renderer/Map.js\\\").default}\\n         * @private\\n         */\\n        _this.renderer_ = _this.createRenderer();\\n        /**\\n         * @type {function(Event): void|undefined}\\n         * @private\\n         */\\n        _this.handleResize_;\\n        /**\\n         * @private\\n         * @type {import(\\\"./coordinate.js\\\").Coordinate}\\n         */\\n        _this.focus_ = null;\\n        /**\\n         * @private\\n         * @type {!Array<PostRenderFunction>}\\n         */\\n        _this.postRenderFunctions_ = [];\\n        /**\\n         * @private\\n         * @type {TileQueue}\\n         */\\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\\n        /**\\n         * Uids of features to skip at rendering time.\\n         * @type {Object<string, boolean>}\\n         * @private\\n         */\\n        _this.skippedFeatureUids_ = {};\\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\\n        // setProperties will trigger the rendering of the map if the map\\n        // is \\\"defined\\\" already.\\n        _this.setProperties(optionsInternal.values);\\n        _this.controls.forEach(\\n        /**\\n         * @param {import(\\\"./control/Control.js\\\").default} control Control.\\n         * @this {PluggableMap}\\n         */\\n        (function (control) {\\n            control.setMap(this);\\n        }).bind(_this));\\n        listen(_this.controls, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(this);\\n        }, _this);\\n        listen(_this.controls, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(null);\\n        }, _this);\\n        _this.interactions.forEach(\\n        /**\\n         * @param {import(\\\"./interaction/Interaction.js\\\").default} interaction Interaction.\\n         * @this {PluggableMap}\\n         */\\n        (function (interaction) {\\n            interaction.setMap(this);\\n        }).bind(_this));\\n        listen(_this.interactions, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(this);\\n        }, _this);\\n        listen(_this.interactions, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(null);\\n        }, _this);\\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\\n        listen(_this.overlays_, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            this.addOverlayInternal_(/** @type {import(\\\"./Overlay.js\\\").default} */ (event.element));\\n        }, _this);\\n        listen(_this.overlays_, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            var overlay = /** @type {import(\\\"./Overlay.js\\\").default} */ (event.element);\\n            var id = overlay.getId();\\n            if (id !== undefined) {\\n                delete this.overlayIdIndex_[id.toString()];\\n            }\\n            event.element.setMap(null);\\n        }, _this);\\n        return _this;\\n    }\\n    /**\\n     * @abstract\\n     * @return {import(\\\"./renderer/Map.js\\\").default} The map renderer\\n     */\\n    PluggableMap.prototype.createRenderer = function () {\\n        throw new Error('Use a map type that has a createRenderer method');\\n    };\\n    /**\\n     * Add the given control to the map.\\n     * @param {import(\\\"./control/Control.js\\\").default} control Control.\\n     * @api\\n     */\\n    PluggableMap.prototype.addControl = function (control) {\\n        this.getControls().push(control);\\n    };\\n    /**\\n     * Add the given interaction to the map. If you want to add an interaction\\n     * at another point of the collection use `getInteraction()` and the methods\\n     * available on {@link module:ol/Collection~Collection}. This can be used to\\n     * stop the event propagation from the handleEvent function. The interactions\\n     * get to handle the events in the reverse order of this collection.\\n     * @param {import(\\\"./interaction/Interaction.js\\\").default} interaction Interaction to add.\\n     * @api\\n     */\\n    PluggableMap.prototype.addInteraction = function (interaction) {\\n        this.getInteractions().push(interaction);\\n    };\\n    /**\\n     * Adds the given layer to the top of this map. If you want to add a layer\\n     * elsewhere in the stack, use `getLayers()` and the methods available on\\n     * {@link module:ol/Collection~Collection}.\\n     * @param {import(\\\"./layer/Base.js\\\").default} layer Layer.\\n     * @api\\n     */\\n    PluggableMap.prototype.addLayer = function (layer) {\\n        var layers = this.getLayerGroup().getLayers();\\n        layers.push(layer);\\n    };\\n    /**\\n     * Add the given overlay to the map.\\n     * @param {import(\\\"./Overlay.js\\\").default} overlay Overlay.\\n     * @api\\n     */\\n    PluggableMap.prototype.addOverlay = function (overlay) {\\n        this.getOverlays().push(overlay);\\n    };\\n    /**\\n     * This deals with map's overlay collection changes.\\n     * @param {import(\\\"./Overlay.js\\\").default} overlay Overlay.\\n     * @private\\n     */\\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\\n        var id = overlay.getId();\\n        if (id !== undefined) {\\n            this.overlayIdIndex_[id.toString()] = overlay;\\n        }\\n        overlay.setMap(this);\\n    };\\n    /**\\n     *\\n     * @inheritDoc\\n     */\\n    PluggableMap.prototype.disposeInternal = function () {\\n        this.mapBrowserEventHandler_.dispose();\\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\\n        if (this.handleResize_ !== undefined) {\\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\\n            this.handleResize_ = undefined;\\n        }\\n        if (this.animationDelayKey_) {\\n            cancelAnimationFrame(this.animationDelayKey_);\\n            this.animationDelayKey_ = undefined;\\n        }\\n        this.setTarget(null);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Detect features that intersect a pixel on the viewport, and execute a\\n     * callback with each intersecting feature. Layers included in the detection can\\n     * be configured through the `layerFilter` option in `opt_options`.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {function(this: S, import(\\\"./Feature.js\\\").FeatureLike,\\n     *     import(\\\"./layer/Layer.js\\\").default): T} callback Feature callback. The callback will be\\n     *     called with two arguments. The first argument is one\\n     *     {@link module:ol/Feature feature} or\\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\\n     *     unmanaged layers. To stop detection, callback functions can return a\\n     *     truthy value.\\n     * @param {AtPixelOptions=} opt_options Optional options.\\n     * @return {T|undefined} Callback result, i.e. the return value of last\\n     * callback execution, or the first truthy callback return value.\\n     * @template S,T\\n     * @api\\n     */\\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\\n        if (!this.frameState_) {\\n            return;\\n        }\\n        var coordinate = this.getCoordinateFromPixel(pixel);\\n        opt_options = opt_options !== undefined ? opt_options :\\n            /** @type {AtPixelOptions} */ ({});\\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\\n        var layerFilter = opt_options.layerFilter !== undefined ?\\n            opt_options.layerFilter : TRUE;\\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\\n    };\\n    /**\\n     * Get all features that intersect a pixel on the viewport.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {AtPixelOptions=} opt_options Optional options.\\n     * @return {Array<import(\\\"./Feature.js\\\").FeatureLike>} The detected features or\\n     * `null` if none were found.\\n     * @api\\n     */\\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\\n        var features = null;\\n        this.forEachFeatureAtPixel(pixel, function (feature) {\\n            if (!features) {\\n                features = [];\\n            }\\n            features.push(feature);\\n        }, opt_options);\\n        return features;\\n    };\\n    /**\\n     * Detect layers that have a color value at a pixel on the viewport, and\\n     * execute a callback with each matching layer. Layers included in the\\n     * detection can be configured through `opt_layerFilter`.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {function(this: S, import(\\\"./layer/Layer.js\\\").default, (Uint8ClampedArray|Uint8Array)): T} callback\\n     *     Layer callback. This callback will receive two arguments: first is the\\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\\n     *     that do not currently support this argument. To stop detection, callback\\n     *     functions can return a truthy value.\\n     * @param {AtPixelOptions=} opt_options Configuration options.\\n     * @return {T|undefined} Callback result, i.e. the return value of last\\n     * callback execution, or the first truthy callback return value.\\n     * @template S,T\\n     * @api\\n     */\\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\\n        if (!this.frameState_) {\\n            return;\\n        }\\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\\n        var hitTolerance = options.hitTolerance !== undefined ?\\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\\n        var layerFilter = options.layerFilter || TRUE;\\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\\n    };\\n    /**\\n     * Detect if features intersect a pixel on the viewport. Layers included in the\\n     * detection can be configured through `opt_layerFilter`.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {AtPixelOptions=} opt_options Optional options.\\n     * @return {boolean} Is there a feature at the given pixel?\\n     * @api\\n     */\\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\\n        if (!this.frameState_) {\\n            return false;\\n        }\\n        var coordinate = this.getCoordinateFromPixel(pixel);\\n        opt_options = opt_options !== undefined ? opt_options :\\n            /** @type {AtPixelOptions} */ ({});\\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\\n    };\\n    /**\\n     * Returns the coordinate in view projection for a browser event.\\n     * @param {Event} event Event.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate.\\n     * @api\\n     */\\n    PluggableMap.prototype.getEventCoordinate = function (event) {\\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\\n    };\\n    /**\\n     * Returns the map pixel position for a browser event relative to the viewport.\\n     * @param {Event|TouchEvent} event Event.\\n     * @return {import(\\\"./pixel.js\\\").Pixel} Pixel.\\n     * @api\\n     */\\n    PluggableMap.prototype.getEventPixel = function (event) {\\n        var viewportPosition = this.viewport_.getBoundingClientRect();\\n        var eventPosition = 'changedTouches' in event ?\\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\\n            /** @type {MouseEvent} */ (event);\\n        return [\\n            eventPosition.clientX - viewportPosition.left,\\n            eventPosition.clientY - viewportPosition.top\\n        ];\\n    };\\n    /**\\n     * Get the target in which this map is rendered.\\n     * Note that this returns what is entered as an option or in setTarget:\\n     * if that was an element, it returns an element; if a string, it returns that.\\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\\n     *     map is rendered in.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getTarget = function () {\\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\\n    };\\n    /**\\n     * Get the DOM element into which this map is rendered. In contrast to\\n     * `getTarget` this method always return an `Element`, or `null` if the\\n     * map has no target.\\n     * @return {HTMLElement} The element that the map is rendered in.\\n     * @api\\n     */\\n    PluggableMap.prototype.getTargetElement = function () {\\n        var target = this.getTarget();\\n        if (target !== undefined) {\\n            return typeof target === 'string' ? document.getElementById(target) : target;\\n        }\\n        else {\\n            return null;\\n        }\\n    };\\n    /**\\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\\n     * map view projection.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel position in the map viewport.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate} The coordinate for the pixel position.\\n     * @api\\n     */\\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\\n        var frameState = this.frameState_;\\n        if (!frameState) {\\n            return null;\\n        }\\n        else {\\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\\n        }\\n    };\\n    /**\\n     * Get the map controls. Modifying this collection changes the controls\\n     * associated with the map.\\n     * @return {Collection<import(\\\"./control/Control.js\\\").default>} Controls.\\n     * @api\\n     */\\n    PluggableMap.prototype.getControls = function () {\\n        return this.controls;\\n    };\\n    /**\\n     * Get the map overlays. Modifying this collection changes the overlays\\n     * associated with the map.\\n     * @return {Collection<import(\\\"./Overlay.js\\\").default>} Overlays.\\n     * @api\\n     */\\n    PluggableMap.prototype.getOverlays = function () {\\n        return this.overlays_;\\n    };\\n    /**\\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\\n     * Note that the index treats string and numeric identifiers as the same. So\\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\\n     * @param {string|number} id Overlay identifier.\\n     * @return {import(\\\"./Overlay.js\\\").default} Overlay.\\n     * @api\\n     */\\n    PluggableMap.prototype.getOverlayById = function (id) {\\n        var overlay = this.overlayIdIndex_[id.toString()];\\n        return overlay !== undefined ? overlay : null;\\n    };\\n    /**\\n     * Get the map interactions. Modifying this collection changes the interactions\\n     * associated with the map.\\n     *\\n     * Interactions are used for e.g. pan, zoom and rotate.\\n     * @return {Collection<import(\\\"./interaction/Interaction.js\\\").default>} Interactions.\\n     * @api\\n     */\\n    PluggableMap.prototype.getInteractions = function () {\\n        return this.interactions;\\n    };\\n    /**\\n     * Get the layergroup associated with this map.\\n     * @return {LayerGroup} A layer group containing the layers in this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getLayerGroup = function () {\\n        return (\\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\\n    };\\n    /**\\n     * Get the collection of layers associated with this map.\\n     * @return {!Collection<import(\\\"./layer/Base.js\\\").default>} Layers.\\n     * @api\\n     */\\n    PluggableMap.prototype.getLayers = function () {\\n        var layers = this.getLayerGroup().getLayers();\\n        return layers;\\n    };\\n    /**\\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\\n     * projection and returns the corresponding pixel.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate A map coordinate.\\n     * @return {import(\\\"./pixel.js\\\").Pixel} A pixel position in the map viewport.\\n     * @api\\n     */\\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\\n        var frameState = this.frameState_;\\n        if (!frameState) {\\n            return null;\\n        }\\n        else {\\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\\n        }\\n    };\\n    /**\\n     * Get the map renderer.\\n     * @return {import(\\\"./renderer/Map.js\\\").default} Renderer\\n     */\\n    PluggableMap.prototype.getRenderer = function () {\\n        return this.renderer_;\\n    };\\n    /**\\n     * Get the size of this map.\\n     * @return {import(\\\"./size.js\\\").Size|undefined} The size in pixels of the map in the DOM.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getSize = function () {\\n        return (\\n        /** @type {import(\\\"./size.js\\\").Size|undefined} */ (this.get(MapProperty.SIZE)));\\n    };\\n    /**\\n     * Get the view associated with this map. A view manages properties such as\\n     * center and resolution.\\n     * @return {View} The view that controls this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getView = function () {\\n        return (\\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\\n    };\\n    /**\\n     * Get the element that serves as the map viewport.\\n     * @return {HTMLElement} Viewport.\\n     * @api\\n     */\\n    PluggableMap.prototype.getViewport = function () {\\n        return this.viewport_;\\n    };\\n    /**\\n     * Get the element that serves as the container for overlays.  Elements added to\\n     * this container will let mousedown and touchstart events through to the map,\\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\\n     * events.\\n     * @return {!HTMLElement} The map's overlay container.\\n     */\\n    PluggableMap.prototype.getOverlayContainer = function () {\\n        return this.overlayContainer_;\\n    };\\n    /**\\n     * Get the element that serves as a container for overlays that don't allow\\n     * event propagation. Elements added to this container won't let mousedown and\\n     * touchstart events through to the map, so clicks and gestures on an overlay\\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\\n     * @return {!HTMLElement} The map's overlay container that stops events.\\n     */\\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\\n        return this.overlayContainerStopEvent_;\\n    };\\n    /**\\n     * @param {import(\\\"./Tile.js\\\").default} tile Tile.\\n     * @param {string} tileSourceKey Tile source key.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} tileCenter Tile center.\\n     * @param {number} tileResolution Tile resolution.\\n     * @return {number} Tile priority.\\n     */\\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\\n        // are outside the visible extent.\\n        var frameState = this.frameState_;\\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\\n            return DROP;\\n        }\\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\\n            return DROP;\\n        }\\n        // Prioritize the highest zoom level tiles closest to the focus.\\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\\n        // Within a zoom level, tiles are prioritized by the distance in pixels\\n        // between the center of the tile and the focus.  The factor of 65536 means\\n        // that the prioritization should behave as desired for tiles up to\\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\\n        var deltaX = tileCenter[0] - frameState.focus[0];\\n        var deltaY = tileCenter[1] - frameState.focus[1];\\n        return 65536 * Math.log(tileResolution) +\\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\\n    };\\n    /**\\n     * @param {Event} browserEvent Browser event.\\n     * @param {string=} opt_type Type.\\n     */\\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\\n        var type = opt_type || browserEvent.type;\\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\\n        this.handleMapBrowserEvent(mapBrowserEvent);\\n    };\\n    /**\\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\\n     */\\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\\n        if (!this.frameState_) {\\n            // With no view defined, we cannot translate pixels into geographical\\n            // coordinates so interactions cannot be used.\\n            return;\\n        }\\n        var target = mapBrowserEvent.originalEvent.target;\\n        while (target instanceof HTMLElement) {\\n            if (target.parentElement === this.overlayContainerStopEvent_) {\\n                return;\\n            }\\n            target = target.parentElement;\\n        }\\n        this.focus_ = mapBrowserEvent.coordinate;\\n        mapBrowserEvent.frameState = this.frameState_;\\n        var interactionsArray = this.getInteractions().getArray();\\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\\n                var interaction = interactionsArray[i];\\n                if (!interaction.getActive()) {\\n                    continue;\\n                }\\n                var cont = interaction.handleEvent(mapBrowserEvent);\\n                if (!cont) {\\n                    break;\\n                }\\n            }\\n        }\\n    };\\n    /**\\n     * @protected\\n     */\\n    PluggableMap.prototype.handlePostRender = function () {\\n        var frameState = this.frameState_;\\n        // Manage the tile queue\\n        // Image loads are expensive and a limited resource, so try to use them\\n        // efficiently:\\n        // * When the view is static we allow a large number of parallel tile loads\\n        //   to complete the frame as quickly as possible.\\n        // * When animating or interacting, image loads can cause janks, so we reduce\\n        //   the maximum number of loads per frame and limit the number of parallel\\n        //   tile loads to remain reactive to view changes and to reduce the chance of\\n        //   loading tiles that will quickly disappear from view.\\n        var tileQueue = this.tileQueue_;\\n        if (!tileQueue.isEmpty()) {\\n            var maxTotalLoading = this.maxTilesLoading_;\\n            var maxNewLoads = maxTotalLoading;\\n            if (frameState) {\\n                var hints = frameState.viewHints;\\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\\n                }\\n            }\\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\\n                tileQueue.reprioritize(); // FIXME only call if view has changed\\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\\n            }\\n        }\\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\\n        }\\n        var postRenderFunctions = this.postRenderFunctions_;\\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\\n            postRenderFunctions[i](this, frameState);\\n        }\\n        postRenderFunctions.length = 0;\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleSizeChanged_ = function () {\\n        if (this.getView()) {\\n            this.getView().resolveConstraints(0);\\n        }\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleTargetChanged_ = function () {\\n        // target may be undefined, null, a string or an Element.\\n        // If it's a string we convert it to an Element before proceeding.\\n        // If it's not now an Element we remove the viewport from the DOM.\\n        // If it's an Element we append the viewport element to it.\\n        var targetElement;\\n        if (this.getTarget()) {\\n            targetElement = this.getTargetElement();\\n        }\\n        if (this.keyHandlerKeys_) {\\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\\n                unlistenByKey(this.keyHandlerKeys_[i]);\\n            }\\n            this.keyHandlerKeys_ = null;\\n        }\\n        if (!targetElement) {\\n            this.renderer_.removeLayerRenderers();\\n            removeNode(this.viewport_);\\n            if (this.handleResize_ !== undefined) {\\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\\n                this.handleResize_ = undefined;\\n            }\\n        }\\n        else {\\n            targetElement.appendChild(this.viewport_);\\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\\n                targetElement : this.keyboardEventTarget_;\\n            this.keyHandlerKeys_ = [\\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\\n            ];\\n            if (!this.handleResize_) {\\n                this.handleResize_ = this.updateSize.bind(this);\\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\\n            }\\n        }\\n        this.updateSize();\\n        // updateSize calls setSize, so no need to call this.render\\n        // ourselves here.\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleTileChange_ = function () {\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleViewChanged_ = function () {\\n        if (this.viewPropertyListenerKey_) {\\n            unlistenByKey(this.viewPropertyListenerKey_);\\n            this.viewPropertyListenerKey_ = null;\\n        }\\n        if (this.viewChangeListenerKey_) {\\n            unlistenByKey(this.viewChangeListenerKey_);\\n            this.viewChangeListenerKey_ = null;\\n        }\\n        var view = this.getView();\\n        if (view) {\\n            this.viewport_.setAttribute('data-view', getUid(view));\\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\\n            view.resolveConstraints(0);\\n        }\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\\n        if (this.layerGroupPropertyListenerKeys_) {\\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\\n            this.layerGroupPropertyListenerKeys_ = null;\\n        }\\n        var layerGroup = this.getLayerGroup();\\n        if (layerGroup) {\\n            this.layerGroupPropertyListenerKeys_ = [\\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\\n                listen(layerGroup, EventType.CHANGE, this.render, this)\\n            ];\\n        }\\n        this.render();\\n    };\\n    /**\\n     * @return {boolean} Is rendered.\\n     */\\n    PluggableMap.prototype.isRendered = function () {\\n        return !!this.frameState_;\\n    };\\n    /**\\n     * Requests an immediate render in a synchronous manner.\\n     * @api\\n     */\\n    PluggableMap.prototype.renderSync = function () {\\n        if (this.animationDelayKey_) {\\n            cancelAnimationFrame(this.animationDelayKey_);\\n        }\\n        this.animationDelay_();\\n    };\\n    /**\\n     * Request a map rendering (at the next animation frame).\\n     * @api\\n     */\\n    PluggableMap.prototype.render = function () {\\n        if (this.animationDelayKey_ === undefined) {\\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\\n        }\\n    };\\n    /**\\n     * Remove the given control from the map.\\n     * @param {import(\\\"./control/Control.js\\\").default} control Control.\\n     * @return {import(\\\"./control/Control.js\\\").default|undefined} The removed control (or undefined\\n     *     if the control was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeControl = function (control) {\\n        return this.getControls().remove(control);\\n    };\\n    /**\\n     * Remove the given interaction from the map.\\n     * @param {import(\\\"./interaction/Interaction.js\\\").default} interaction Interaction to remove.\\n     * @return {import(\\\"./interaction/Interaction.js\\\").default|undefined} The removed interaction (or\\n     *     undefined if the interaction was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeInteraction = function (interaction) {\\n        return this.getInteractions().remove(interaction);\\n    };\\n    /**\\n     * Removes the given layer from the map.\\n     * @param {import(\\\"./layer/Base.js\\\").default} layer Layer.\\n     * @return {import(\\\"./layer/Base.js\\\").default|undefined} The removed layer (or undefined if the\\n     *     layer was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeLayer = function (layer) {\\n        var layers = this.getLayerGroup().getLayers();\\n        return layers.remove(layer);\\n    };\\n    /**\\n     * Remove the given overlay from the map.\\n     * @param {import(\\\"./Overlay.js\\\").default} overlay Overlay.\\n     * @return {import(\\\"./Overlay.js\\\").default|undefined} The removed overlay (or undefined\\n     *     if the overlay was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeOverlay = function (overlay) {\\n        return this.getOverlays().remove(overlay);\\n    };\\n    /**\\n     * @param {number} time Time.\\n     * @private\\n     */\\n    PluggableMap.prototype.renderFrame_ = function (time) {\\n        var viewState;\\n        var size = this.getSize();\\n        var view = this.getView();\\n        var extent = createEmpty();\\n        var previousFrameState = this.frameState_;\\n        /** @type {?FrameState} */\\n        var frameState = null;\\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\\n            viewState = view.getState(this.pixelRatio_);\\n            frameState = /** @type {FrameState} */ ({\\n                animate: false,\\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\\n                extent: extent,\\n                focus: this.focus_ ? this.focus_ : viewState.center,\\n                index: this.frameIndex_++,\\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\\n                pixelRatio: this.pixelRatio_,\\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\\n                postRenderFunctions: [],\\n                size: size,\\n                skippedFeatureUids: this.skippedFeatureUids_,\\n                tileQueue: this.tileQueue_,\\n                time: time,\\n                usedTiles: {},\\n                viewState: viewState,\\n                viewHints: viewHints,\\n                wantedTiles: {}\\n            });\\n        }\\n        if (frameState) {\\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\\n        }\\n        this.frameState_ = frameState;\\n        this.renderer_.renderFrame(frameState);\\n        if (frameState) {\\n            if (frameState.animate) {\\n                this.render();\\n            }\\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\\n            if (previousFrameState) {\\n                var moveStart = !this.previousExtent_ ||\\n                    (!isEmpty(this.previousExtent_) &&\\n                        !equals(frameState.extent, this.previousExtent_));\\n                if (moveStart) {\\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\\n                }\\n            }\\n            var idle = this.previousExtent_ &&\\n                !frameState.viewHints[ViewHint.ANIMATING] &&\\n                !frameState.viewHints[ViewHint.INTERACTING] &&\\n                !equals(frameState.extent, this.previousExtent_);\\n            if (idle) {\\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\\n                clone(frameState.extent, this.previousExtent_);\\n            }\\n        }\\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\\n        setTimeout(this.handlePostRender.bind(this), 0);\\n    };\\n    /**\\n     * Sets the layergroup of this map.\\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\\n        this.set(MapProperty.LAYERGROUP, layerGroup);\\n    };\\n    /**\\n     * Set the size of this map.\\n     * @param {import(\\\"./size.js\\\").Size|undefined} size The size in pixels of the map in the DOM.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setSize = function (size) {\\n        this.set(MapProperty.SIZE, size);\\n    };\\n    /**\\n     * Set the target element to render this map into.\\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\\n     *     that the map is rendered in.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setTarget = function (target) {\\n        this.set(MapProperty.TARGET, target);\\n    };\\n    /**\\n     * Set the view for this map.\\n     * @param {View} view The view that controls this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setView = function (view) {\\n        this.set(MapProperty.VIEW, view);\\n    };\\n    /**\\n     * @param {import(\\\"./Feature.js\\\").default} feature Feature.\\n     */\\n    PluggableMap.prototype.skipFeature = function (feature) {\\n        this.skippedFeatureUids_[getUid(feature)] = true;\\n        this.render();\\n    };\\n    /**\\n     * Force a recalculation of the map viewport size.  This should be called when\\n     * third-party code changes the size of the map viewport.\\n     * @api\\n     */\\n    PluggableMap.prototype.updateSize = function () {\\n        var targetElement = this.getTargetElement();\\n        if (!targetElement) {\\n            this.setSize(undefined);\\n        }\\n        else {\\n            var computedStyle = getComputedStyle(targetElement);\\n            this.setSize([\\n                targetElement.offsetWidth -\\n                    parseFloat(computedStyle['borderLeftWidth']) -\\n                    parseFloat(computedStyle['paddingLeft']) -\\n                    parseFloat(computedStyle['paddingRight']) -\\n                    parseFloat(computedStyle['borderRightWidth']),\\n                targetElement.offsetHeight -\\n                    parseFloat(computedStyle['borderTopWidth']) -\\n                    parseFloat(computedStyle['paddingTop']) -\\n                    parseFloat(computedStyle['paddingBottom']) -\\n                    parseFloat(computedStyle['borderBottomWidth'])\\n            ]);\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./Feature.js\\\").default} feature Feature.\\n     */\\n    PluggableMap.prototype.unskipFeature = function (feature) {\\n        delete this.skippedFeatureUids_[getUid(feature)];\\n        this.render();\\n    };\\n    return PluggableMap;\\n}(BaseObject));\\n/**\\n * @param {MapOptions} options Map options.\\n * @return {MapOptionsInternal} Internal map options.\\n */\\nfunction createOptionsInternal(options) {\\n    /**\\n     * @type {HTMLElement|Document}\\n     */\\n    var keyboardEventTarget = null;\\n    if (options.keyboardEventTarget !== undefined) {\\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\\n            document.getElementById(options.keyboardEventTarget) :\\n            options.keyboardEventTarget;\\n    }\\n    /**\\n     * @type {Object<string, *>}\\n     */\\n    var values = {};\\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\\n    values[MapProperty.LAYERGROUP] = layerGroup;\\n    values[MapProperty.TARGET] = options.target;\\n    values[MapProperty.VIEW] = options.view !== undefined ?\\n        options.view : new View();\\n    var controls;\\n    if (options.controls !== undefined) {\\n        if (Array.isArray(options.controls)) {\\n            controls = new Collection(options.controls.slice());\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\\\"./Collection.js\\\").Collection`\\n            controls = /** @type {Collection} */ (options.controls);\\n        }\\n    }\\n    var interactions;\\n    if (options.interactions !== undefined) {\\n        if (Array.isArray(options.interactions)) {\\n            interactions = new Collection(options.interactions.slice());\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\\\"./Collection.js\\\").Collection`\\n            interactions = /** @type {Collection} */ (options.interactions);\\n        }\\n    }\\n    var overlays;\\n    if (options.overlays !== undefined) {\\n        if (Array.isArray(options.overlays)) {\\n            overlays = new Collection(options.overlays.slice());\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\\\"./Collection.js\\\").Collection`\\n            overlays = options.overlays;\\n        }\\n    }\\n    else {\\n        overlays = new Collection();\\n    }\\n    return {\\n        controls: controls,\\n        interactions: interactions,\\n        keyboardEventTarget: keyboardEventTarget,\\n        overlays: overlays,\\n        values: values\\n    };\\n}\\nexport default PluggableMap;\\n/**\\n * @param  {Array<import(\\\"./layer/Base.js\\\").default>} layers Layers.\\n * @return {boolean} Layers have sources that are still loading.\\n */\\nfunction getLoading(layers) {\\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\\n        var layer = layers[i];\\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\\n        }\\n        else {\\n            var source = /** @type {import(\\\"./layer/Layer.js\\\").default} */ (layer).getSource();\\n            if (source && source.loading) {\\n                return true;\\n            }\\n        }\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=PluggableMap.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Control\\n */\\nimport { VOID } from '../functions.js';\\nimport MapEventType from '../MapEventType.js';\\nimport BaseObject from '../Object.js';\\nimport { removeNode } from '../dom.js';\\nimport { listen, unlistenByKey } from '../events.js';\\n/**\\n * @typedef {Object} Options\\n * @property {HTMLElement} [element] The element is the control's\\n * container element. This only needs to be specified if you're developing\\n * a custom control.\\n * @property {function(import(\\\"../MapEvent.js\\\").default)} [render] Function called when\\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\\n * callback.\\n * @property {HTMLElement|string} [target] Specify a target if you want\\n * the control to be rendered outside of the map's viewport.\\n */\\n/**\\n * @classdesc\\n * A control is a visible widget with a DOM element in a fixed position on the\\n * screen. They can involve user input (buttons), or be informational only;\\n * the position is determined using CSS. By default these are placed in the\\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\\n * any outside DOM element.\\n *\\n * This is the base class for controls. You can use it for simple custom\\n * controls by creating the element with listeners, creating an instance:\\n * ```js\\n * var myControl = new Control({element: myElement});\\n * ```\\n * and then adding this to the map.\\n *\\n * The main advantage of having this as a control rather than a simple separate\\n * DOM element is that preventing propagation is handled for you. Controls\\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\\n *\\n * You can also extend this base for your own control class. See\\n * examples/custom-controls for an example of how to do this.\\n *\\n * @api\\n */\\nvar Control = /** @class */ (function (_super) {\\n    __extends(Control, _super);\\n    /**\\n     * @param {Options} options Control options.\\n     */\\n    function Control(options) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @protected\\n         * @type {HTMLElement}\\n         */\\n        _this.element = options.element ? options.element : null;\\n        /**\\n         * @private\\n         * @type {HTMLElement}\\n         */\\n        _this.target_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = null;\\n        /**\\n         * @protected\\n         * @type {!Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.listenerKeys = [];\\n        /**\\n         * @type {function(import(\\\"../MapEvent.js\\\").default): void}\\n         */\\n        _this.render = options.render ? options.render : VOID;\\n        if (options.target) {\\n            _this.setTarget(options.target);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    Control.prototype.disposeInternal = function () {\\n        removeNode(this.element);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Get the map associated with this control.\\n     * @return {import(\\\"../PluggableMap.js\\\").default} Map.\\n     * @api\\n     */\\n    Control.prototype.getMap = function () {\\n        return this.map_;\\n    };\\n    /**\\n     * Remove the control from its current map and attach it to the new map.\\n     * Subclasses may set up event handlers to get notified about changes to\\n     * the map here.\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     * @api\\n     */\\n    Control.prototype.setMap = function (map) {\\n        if (this.map_) {\\n            removeNode(this.element);\\n        }\\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\\n            unlistenByKey(this.listenerKeys[i]);\\n        }\\n        this.listenerKeys.length = 0;\\n        this.map_ = map;\\n        if (this.map_) {\\n            var target = this.target_ ?\\n                this.target_ : map.getOverlayContainerStopEvent();\\n            target.appendChild(this.element);\\n            if (this.render !== VOID) {\\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\\n            }\\n            map.render();\\n        }\\n    };\\n    /**\\n     * This function is used to set a target element for the control. It has no\\n     * effect if it is called after the control has been added to the map (i.e.\\n     * after `setMap` is called on the control). If no `target` is set in the\\n     * options passed to the control constructor and if `setTarget` is not called\\n     * then the control is added to the map's overlay container.\\n     * @param {HTMLElement|string} target Target.\\n     * @api\\n     */\\n    Control.prototype.setTarget = function (target) {\\n        this.target_ = typeof target === 'string' ?\\n            document.getElementById(target) :\\n            target;\\n    };\\n    return Control;\\n}(BaseObject));\\nexport default Control;\\n//# sourceMappingURL=Control.js.map\",\"/**\\n * @module ol/css\\n */\\n/**\\n * The CSS class for hidden feature.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_HIDDEN = 'ol-hidden';\\n/**\\n * The CSS class that we'll give the DOM elements to have them selectable.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_SELECTABLE = 'ol-selectable';\\n/**\\n * The CSS class that we'll give the DOM elements to have them unselectable.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\\n/**\\n * The CSS class for unsupported feature.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\\n/**\\n * The CSS class for controls.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_CONTROL = 'ol-control';\\n/**\\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\\n * to those elements which usually can be expanded.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_COLLAPSED = 'ol-collapsed';\\n/**\\n * Get the list of font families from a font spec.  Note that this doesn't work\\n * for font families that have commas in them.\\n * @param {string} The CSS font property.\\n * @return {Object<string>} The font families (or null if the input spec is invalid).\\n */\\nexport var getFontFamilies = (function () {\\n    var style;\\n    var cache = {};\\n    return function (font) {\\n        if (!style) {\\n            style = document.createElement('div').style;\\n        }\\n        if (!(font in cache)) {\\n            style.font = font;\\n            var family = style.fontFamily;\\n            style.font = '';\\n            if (!family) {\\n                return null;\\n            }\\n            cache[font] = family.split(/,\\\\s?/);\\n        }\\n        return cache[font];\\n    };\\n})();\\n//# sourceMappingURL=css.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Layer\\n */\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getChangeEventType } from '../Object.js';\\nimport BaseLayer from './Base.js';\\nimport LayerProperty from './Property.js';\\nimport { assign } from '../obj.js';\\nimport RenderEventType from '../render/EventType.js';\\nimport SourceState from '../source/State.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {import(\\\"../source/Source.js\\\").default} [source] Source for this layer.  If not provided to the constructor,\\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\\n * construction.\\n * @property {import(\\\"../PluggableMap.js\\\").default} [map] Map.\\n */\\n/**\\n * @typedef {Object} State\\n * @property {import(\\\"./Base.js\\\").default} layer\\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\\n * @property {SourceState} sourceState\\n * @property {boolean} visible\\n * @property {boolean} managed\\n * @property {import(\\\"../extent.js\\\").Extent} [extent]\\n * @property {number} zIndex\\n * @property {number} maxResolution\\n * @property {number} minResolution\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * A visual representation of raster or vector map data.\\n * Layers group together those properties that pertain to how the data is to be\\n * displayed, irrespective of the source of that data.\\n *\\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\\n * internally. These unmanaged layers are associated with the map using\\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\\n *\\n * A generic `change` event is fired when the state of the source changes.\\n *\\n * @fires import(\\\"../render/Event.js\\\").RenderEvent#prerender\\n * @fires import(\\\"../render/Event.js\\\").RenderEvent#postrender\\n *\\n * @template {import(\\\"../source/Source.js\\\").default} SourceType\\n */\\nvar Layer = /** @class */ (function (_super) {\\n    __extends(Layer, _super);\\n    /**\\n     * @param {Options} options Layer options.\\n     */\\n    function Layer(options) {\\n        var _this = this;\\n        var baseOptions = assign({}, options);\\n        delete baseOptions.source;\\n        _this = _super.call(this, baseOptions) || this;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../events.js\\\").EventsKey}\\n         */\\n        _this.mapPrecomposeKey_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../events.js\\\").EventsKey}\\n         */\\n        _this.mapRenderKey_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../events.js\\\").EventsKey}\\n         */\\n        _this.sourceChangeKey_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../renderer/Layer.js\\\").default}\\n         */\\n        _this.renderer_ = null;\\n        if (options.map) {\\n            _this.setMap(options.map);\\n        }\\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\\n        _this.setSource(source);\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    Layer.prototype.getLayersArray = function (opt_array) {\\n        var array = opt_array ? opt_array : [];\\n        array.push(this);\\n        return array;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\\n        var states = opt_states ? opt_states : [];\\n        states.push(this.getLayerState());\\n        return states;\\n    };\\n    /**\\n     * Get the layer source.\\n     * @return {SourceType} The layer source (or `null` if not yet set).\\n     * @observable\\n     * @api\\n     */\\n    Layer.prototype.getSource = function () {\\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\\n    };\\n    /**\\n      * @inheritDoc\\n      */\\n    Layer.prototype.getSourceState = function () {\\n        var source = this.getSource();\\n        return !source ? SourceState.UNDEFINED : source.getState();\\n    };\\n    /**\\n     * @private\\n     */\\n    Layer.prototype.handleSourceChange_ = function () {\\n        this.changed();\\n    };\\n    /**\\n     * @private\\n     */\\n    Layer.prototype.handleSourcePropertyChange_ = function () {\\n        if (this.sourceChangeKey_) {\\n            unlistenByKey(this.sourceChangeKey_);\\n            this.sourceChangeKey_ = null;\\n        }\\n        var source = this.getSource();\\n        if (source) {\\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * In charge to manage the rendering of the layer. One layer type is\\n     * bounded with one layer renderer.\\n     * @param {?import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {HTMLElement} The rendered element.\\n     */\\n    Layer.prototype.render = function (frameState) {\\n        var layerRenderer = this.getRenderer();\\n        var layerState = this.getLayerState();\\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\\n            return layerRenderer.renderFrame(frameState, layerState);\\n        }\\n    };\\n    /**\\n     * Sets the layer to be rendered on top of other layers on a map. The map will\\n     * not manage this layer in its layers collection, and the callback in\\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\\n     * use `#setMap(null)`.\\n     *\\n     * To add the layer to a map and have it managed by the map, use\\n     * {@link module:ol/Map#addLayer} instead.\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     * @api\\n     */\\n    Layer.prototype.setMap = function (map) {\\n        if (this.mapPrecomposeKey_) {\\n            unlistenByKey(this.mapPrecomposeKey_);\\n            this.mapPrecomposeKey_ = null;\\n        }\\n        if (!map) {\\n            this.changed();\\n        }\\n        if (this.mapRenderKey_) {\\n            unlistenByKey(this.mapRenderKey_);\\n            this.mapRenderKey_ = null;\\n        }\\n        if (map) {\\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\\n                var renderEvent = /** @type {import(\\\"../render/Event.js\\\").default} */ (evt);\\n                var layerState = this.getLayerState();\\n                layerState.managed = false;\\n                if (this.getZIndex() === undefined) {\\n                    layerState.zIndex = Infinity;\\n                }\\n                renderEvent.frameState.layerStatesArray.push(layerState);\\n            }, this);\\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * Set the layer source.\\n     * @param {SourceType} source The layer source.\\n     * @observable\\n     * @api\\n     */\\n    Layer.prototype.setSource = function (source) {\\n        this.set(LayerProperty.SOURCE, source);\\n    };\\n    /**\\n     * Get the renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} The layer renderer.\\n     */\\n    Layer.prototype.getRenderer = function () {\\n        if (!this.renderer_) {\\n            this.renderer_ = this.createRenderer();\\n        }\\n        return this.renderer_;\\n    };\\n    /**\\n     * Create a renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} A layer renderer.\\n     * @protected\\n     */\\n    Layer.prototype.createRenderer = function () {\\n        return null;\\n    };\\n    return Layer;\\n}(BaseLayer));\\n/**\\n * Return `true` if the layer is visible, and if the passed resolution is\\n * between the layer's minResolution and maxResolution. The comparison is\\n * inclusive for `minResolution` and exclusive for `maxResolution`.\\n * @param {State} layerState Layer state.\\n * @param {number} resolution Resolution.\\n * @return {boolean} The layer is visible at the given resolution.\\n */\\nexport function visibleAtResolution(layerState, resolution) {\\n    return layerState.visible && resolution >= layerState.minResolution &&\\n        resolution < layerState.maxResolution;\\n}\\nexport default Layer;\\n//# sourceMappingURL=Layer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Attribution\\n */\\nimport { equals } from '../array.js';\\nimport Control from './Control.js';\\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\\nimport { removeChildren, replaceNode } from '../dom.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { visibleAtResolution } from '../layer/Layer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-attribution'] CSS class name.\\n * @property {HTMLElement|string} [target] Specify a target if you\\n * want the control to be rendered outside of the map's\\n * viewport.\\n * @property {boolean} [collapsible] Specify if attributions can\\n * be collapsed. If not specified, sources control this behavior with their\\n * `attributionsCollapsible` setting.\\n * @property {boolean} [collapsed=true] Specify if attributions should\\n * be collapsed at startup.\\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\\n * @property {string} [label='i'] Text label to use for the\\n * collapsed attributions button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\\n * for the expanded attributions button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {function(import(\\\"../MapEvent.js\\\").default)} [render] Function called when\\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\\n * callback.\\n */\\n/**\\n * @classdesc\\n * Control to show all the attributions associated with the layer sources\\n * in the map. This control is one of the default controls included in maps.\\n * By default it will show in the bottom right portion of the map, but this can\\n * be changed by using a css selector for `.ol-attribution`.\\n *\\n * @api\\n */\\nvar Attribution = /** @class */ (function (_super) {\\n    __extends(Attribution, _super);\\n    /**\\n     * @param {Options=} opt_options Attribution options.\\n     */\\n    function Attribution(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            element: document.createElement('div'),\\n            render: options.render || render,\\n            target: options.target\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {HTMLElement}\\n         */\\n        _this.ulElement_ = document.createElement('ul');\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.collapsible_ = options.collapsible !== undefined ?\\n            options.collapsible : true;\\n        if (!_this.collapsible_) {\\n            _this.collapsed_ = false;\\n        }\\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\\\u00BB';\\n        if (typeof collapseLabel === 'string') {\\n            /**\\n             * @private\\n             * @type {HTMLElement}\\n             */\\n            _this.collapseLabel_ = document.createElement('span');\\n            _this.collapseLabel_.textContent = collapseLabel;\\n        }\\n        else {\\n            _this.collapseLabel_ = collapseLabel;\\n        }\\n        var label = options.label !== undefined ? options.label : 'i';\\n        if (typeof label === 'string') {\\n            /**\\n             * @private\\n             * @type {HTMLElement}\\n             */\\n            _this.label_ = document.createElement('span');\\n            _this.label_.textContent = label;\\n        }\\n        else {\\n            _this.label_ = label;\\n        }\\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\\n            _this.collapseLabel_ : _this.label_;\\n        var button = document.createElement('button');\\n        button.setAttribute('type', 'button');\\n        button.title = tipLabel;\\n        button.appendChild(activeLabel);\\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\\n        var element = _this.element;\\n        element.className = cssClasses;\\n        element.appendChild(_this.ulElement_);\\n        element.appendChild(button);\\n        /**\\n         * A list of currently rendered resolutions.\\n         * @type {Array<string>}\\n         * @private\\n         */\\n        _this.renderedAttributions_ = [];\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderedVisible_ = true;\\n        return _this;\\n    }\\n    /**\\n     * Collect a list of visible attributions and set the collapsible state.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {Array<string>} Attributions.\\n     * @private\\n     */\\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\\n        /**\\n         * Used to determine if an attribution already exists.\\n         * @type {!Object<string, boolean>}\\n         */\\n        var lookup = {};\\n        /**\\n         * A list of visible attributions.\\n         * @type {Array<string>}\\n         */\\n        var visibleAttributions = [];\\n        var layerStatesArray = frameState.layerStatesArray;\\n        var resolution = frameState.viewState.resolution;\\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\\n            var layerState = layerStatesArray[i];\\n            if (!visibleAtResolution(layerState, resolution)) {\\n                continue;\\n            }\\n            var source = /** @type {import(\\\"../layer/Layer.js\\\").default} */ (layerState.layer).getSource();\\n            if (!source) {\\n                continue;\\n            }\\n            var attributionGetter = source.getAttributions();\\n            if (!attributionGetter) {\\n                continue;\\n            }\\n            var attributions = attributionGetter(frameState);\\n            if (!attributions) {\\n                continue;\\n            }\\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\\n                this.setCollapsible(false);\\n            }\\n            if (Array.isArray(attributions)) {\\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\\n                    if (!(attributions[j] in lookup)) {\\n                        visibleAttributions.push(attributions[j]);\\n                        lookup[attributions[j]] = true;\\n                    }\\n                }\\n            }\\n            else {\\n                if (!(attributions in lookup)) {\\n                    visibleAttributions.push(attributions);\\n                    lookup[attributions] = true;\\n                }\\n            }\\n        }\\n        return visibleAttributions;\\n    };\\n    /**\\n     * @private\\n     * @param {?import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    Attribution.prototype.updateElement_ = function (frameState) {\\n        if (!frameState) {\\n            if (this.renderedVisible_) {\\n                this.element.style.display = 'none';\\n                this.renderedVisible_ = false;\\n            }\\n            return;\\n        }\\n        var attributions = this.collectSourceAttributions_(frameState);\\n        var visible = attributions.length > 0;\\n        if (this.renderedVisible_ != visible) {\\n            this.element.style.display = visible ? '' : 'none';\\n            this.renderedVisible_ = visible;\\n        }\\n        if (equals(attributions, this.renderedAttributions_)) {\\n            return;\\n        }\\n        removeChildren(this.ulElement_);\\n        // append the attributions\\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\\n            var element = document.createElement('li');\\n            element.innerHTML = attributions[i];\\n            this.ulElement_.appendChild(element);\\n        }\\n        this.renderedAttributions_ = attributions;\\n    };\\n    /**\\n     * @param {MouseEvent} event The event to handle\\n     * @private\\n     */\\n    Attribution.prototype.handleClick_ = function (event) {\\n        event.preventDefault();\\n        this.handleToggle_();\\n    };\\n    /**\\n     * @private\\n     */\\n    Attribution.prototype.handleToggle_ = function () {\\n        this.element.classList.toggle(CLASS_COLLAPSED);\\n        if (this.collapsed_) {\\n            replaceNode(this.collapseLabel_, this.label_);\\n        }\\n        else {\\n            replaceNode(this.label_, this.collapseLabel_);\\n        }\\n        this.collapsed_ = !this.collapsed_;\\n    };\\n    /**\\n     * Return `true` if the attribution is collapsible, `false` otherwise.\\n     * @return {boolean} True if the widget is collapsible.\\n     * @api\\n     */\\n    Attribution.prototype.getCollapsible = function () {\\n        return this.collapsible_;\\n    };\\n    /**\\n     * Set whether the attribution should be collapsible.\\n     * @param {boolean} collapsible True if the widget is collapsible.\\n     * @api\\n     */\\n    Attribution.prototype.setCollapsible = function (collapsible) {\\n        if (this.collapsible_ === collapsible) {\\n            return;\\n        }\\n        this.collapsible_ = collapsible;\\n        this.element.classList.toggle('ol-uncollapsible');\\n        if (!collapsible && this.collapsed_) {\\n            this.handleToggle_();\\n        }\\n    };\\n    /**\\n     * Collapse or expand the attribution according to the passed parameter. Will\\n     * not do anything if the attribution isn't collapsible or if the current\\n     * collapsed state is already the one requested.\\n     * @param {boolean} collapsed True if the widget is collapsed.\\n     * @api\\n     */\\n    Attribution.prototype.setCollapsed = function (collapsed) {\\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\\n            return;\\n        }\\n        this.handleToggle_();\\n    };\\n    /**\\n     * Return `true` when the attribution is currently collapsed or `false`\\n     * otherwise.\\n     * @return {boolean} True if the widget is collapsed.\\n     * @api\\n     */\\n    Attribution.prototype.getCollapsed = function () {\\n        return this.collapsed_;\\n    };\\n    return Attribution;\\n}(Control));\\n/**\\n * Update the attribution element.\\n * @param {import(\\\"../MapEvent.js\\\").default} mapEvent Map event.\\n * @this {Attribution}\\n * @api\\n */\\nexport function render(mapEvent) {\\n    this.updateElement_(mapEvent.frameState);\\n}\\nexport default Attribution;\\n//# sourceMappingURL=Attribution.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Rotate\\n */\\nimport Control from './Control.js';\\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\\nimport { easeOut } from '../easing.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-rotate'] CSS class name.\\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\\n * @property {function(import(\\\"../MapEvent.js\\\").default)} [render] Function called when the control should\\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\\n * @property {function()} [resetNorth] Function called when the control is clicked.\\n * This will override the default `resetNorth`.\\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\\n * rendered outside of the map's viewport.\\n */\\n/**\\n * @classdesc\\n * A button control to reset rotation to 0.\\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\\n * selector is added to the button when the rotation is 0.\\n *\\n * @api\\n */\\nvar Rotate = /** @class */ (function (_super) {\\n    __extends(Rotate, _super);\\n    /**\\n     * @param {Options=} opt_options Rotate options.\\n     */\\n    function Rotate(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            element: document.createElement('div'),\\n            render: options.render || render,\\n            target: options.target\\n        }) || this;\\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\\n        var label = options.label !== undefined ? options.label : '\\\\u21E7';\\n        /**\\n         * @type {HTMLElement}\\n         * @private\\n         */\\n        _this.label_ = null;\\n        if (typeof label === 'string') {\\n            _this.label_ = document.createElement('span');\\n            _this.label_.className = 'ol-compass';\\n            _this.label_.textContent = label;\\n        }\\n        else {\\n            _this.label_ = label;\\n            _this.label_.classList.add('ol-compass');\\n        }\\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\\n        var button = document.createElement('button');\\n        button.className = className + '-reset';\\n        button.setAttribute('type', 'button');\\n        button.title = tipLabel;\\n        button.appendChild(_this.label_);\\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\\n        var element = _this.element;\\n        element.className = cssClasses;\\n        element.appendChild(button);\\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.rotation_ = undefined;\\n        if (_this.autoHide_) {\\n            _this.element.classList.add(CLASS_HIDDEN);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * @param {MouseEvent} event The event to handle\\n     * @private\\n     */\\n    Rotate.prototype.handleClick_ = function (event) {\\n        event.preventDefault();\\n        if (this.callResetNorth_ !== undefined) {\\n            this.callResetNorth_();\\n        }\\n        else {\\n            this.resetNorth_();\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    Rotate.prototype.resetNorth_ = function () {\\n        var map = this.getMap();\\n        var view = map.getView();\\n        if (!view) {\\n            // the map does not have a view, so we can't act\\n            // upon it\\n            return;\\n        }\\n        if (view.getRotation() !== undefined) {\\n            if (this.duration_ > 0) {\\n                view.animate({\\n                    rotation: 0,\\n                    duration: this.duration_,\\n                    easing: easeOut\\n                });\\n            }\\n            else {\\n                view.setRotation(0);\\n            }\\n        }\\n    };\\n    return Rotate;\\n}(Control));\\n/**\\n * Update the rotate control element.\\n * @param {import(\\\"../MapEvent.js\\\").default} mapEvent Map event.\\n * @this {Rotate}\\n * @api\\n */\\nexport function render(mapEvent) {\\n    var frameState = mapEvent.frameState;\\n    if (!frameState) {\\n        return;\\n    }\\n    var rotation = frameState.viewState.rotation;\\n    if (rotation != this.rotation_) {\\n        var transform = 'rotate(' + rotation + 'rad)';\\n        if (this.autoHide_) {\\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\\n            if (!contains && rotation === 0) {\\n                this.element.classList.add(CLASS_HIDDEN);\\n            }\\n            else if (contains && rotation !== 0) {\\n                this.element.classList.remove(CLASS_HIDDEN);\\n            }\\n        }\\n        this.label_.style.transform = transform;\\n    }\\n    this.rotation_ = rotation;\\n}\\nexport default Rotate;\\n//# sourceMappingURL=Rotate.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Zoom\\n */\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport Control from './Control.js';\\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\\nimport { easeOut } from '../easing.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {string} [className='ol-zoom'] CSS class name.\\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\\n * @property {number} [delta=1] The zoom delta applied on each click.\\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\\n * rendered outside of the map's viewport.\\n */\\n/**\\n * @classdesc\\n * A control with 2 buttons, one for zoom in and one for zoom out.\\n * This control is one of the default controls of a map. To style this control\\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\\n *\\n * @api\\n */\\nvar Zoom = /** @class */ (function (_super) {\\n    __extends(Zoom, _super);\\n    /**\\n     * @param {Options=} opt_options Zoom options.\\n     */\\n    function Zoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            element: document.createElement('div'),\\n            target: options.target\\n        }) || this;\\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\\n        var delta = options.delta !== undefined ? options.delta : 1;\\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\\\u2212';\\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\\n            options.zoomInTipLabel : 'Zoom in';\\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\\n            options.zoomOutTipLabel : 'Zoom out';\\n        var inElement = document.createElement('button');\\n        inElement.className = className + '-in';\\n        inElement.setAttribute('type', 'button');\\n        inElement.title = zoomInTipLabel;\\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\\n        var outElement = document.createElement('button');\\n        outElement.className = className + '-out';\\n        outElement.setAttribute('type', 'button');\\n        outElement.title = zoomOutTipLabel;\\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\\n        var element = _this.element;\\n        element.className = cssClasses;\\n        element.appendChild(inElement);\\n        element.appendChild(outElement);\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    /**\\n     * @param {number} delta Zoom delta.\\n     * @param {MouseEvent} event The event to handle\\n     * @private\\n     */\\n    Zoom.prototype.handleClick_ = function (delta, event) {\\n        event.preventDefault();\\n        this.zoomByDelta_(delta);\\n    };\\n    /**\\n     * @param {number} delta Zoom delta.\\n     * @private\\n     */\\n    Zoom.prototype.zoomByDelta_ = function (delta) {\\n        var map = this.getMap();\\n        var view = map.getView();\\n        if (!view) {\\n            // the map does not have a view, so we can't act\\n            // upon it\\n            return;\\n        }\\n        var currentZoom = view.getZoom();\\n        if (currentZoom !== undefined) {\\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\\n            if (this.duration_ > 0) {\\n                if (view.getAnimating()) {\\n                    view.cancelAnimations();\\n                }\\n                view.animate({\\n                    zoom: newZoom,\\n                    duration: this.duration_,\\n                    easing: easeOut\\n                });\\n            }\\n            else {\\n                view.setZoom(newZoom);\\n            }\\n        }\\n    };\\n    return Zoom;\\n}(Control));\\nexport default Zoom;\\n//# sourceMappingURL=Zoom.js.map\",\"/**\\n * @module ol/Kinetic\\n */\\n/**\\n * @classdesc\\n * Implementation of inertial deceleration for map movement.\\n *\\n * @api\\n */\\nvar Kinetic = /** @class */ (function () {\\n    /**\\n     * @param {number} decay Rate of decay (must be negative).\\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\\n     * @param {number} delay Delay to consider to calculate the kinetic\\n     *     initial values (milliseconds).\\n     */\\n    function Kinetic(decay, minVelocity, delay) {\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.decay_ = decay;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.minVelocity_ = minVelocity;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.delay_ = delay;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        this.points_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.angle_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.initialVelocity_ = 0;\\n    }\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    Kinetic.prototype.begin = function () {\\n        this.points_.length = 0;\\n        this.angle_ = 0;\\n        this.initialVelocity_ = 0;\\n    };\\n    /**\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     */\\n    Kinetic.prototype.update = function (x, y) {\\n        this.points_.push(x, y, Date.now());\\n    };\\n    /**\\n     * @return {boolean} Whether we should do kinetic animation.\\n     */\\n    Kinetic.prototype.end = function () {\\n        if (this.points_.length < 6) {\\n            // at least 2 points are required (i.e. there must be at least 6 elements\\n            // in the array)\\n            return false;\\n        }\\n        var delay = Date.now() - this.delay_;\\n        var lastIndex = this.points_.length - 3;\\n        if (this.points_[lastIndex + 2] < delay) {\\n            // the last tracked point is too old, which means that the user stopped\\n            // panning before releasing the map\\n            return false;\\n        }\\n        // get the first point which still falls into the delay time\\n        var firstIndex = lastIndex - 3;\\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\\n            firstIndex -= 3;\\n        }\\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\\n        // we don't want a duration of 0 (divide by zero)\\n        // we also make sure the user panned for a duration of at least one frame\\n        // (1/60s) to compute sane displacement values\\n        if (duration < 1000 / 60) {\\n            return false;\\n        }\\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\\n        this.angle_ = Math.atan2(dy, dx);\\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\\n        return this.initialVelocity_ > this.minVelocity_;\\n    };\\n    /**\\n     * @return {number} Total distance travelled (pixels).\\n     */\\n    Kinetic.prototype.getDistance = function () {\\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\\n    };\\n    /**\\n     * @return {number} Angle of the kinetic panning animation (radians).\\n     */\\n    Kinetic.prototype.getAngle = function () {\\n        return this.angle_;\\n    };\\n    return Kinetic;\\n}());\\nexport default Kinetic;\\n//# sourceMappingURL=Kinetic.js.map\",\"/**\\n * @module ol/interaction/Property\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    ACTIVE: 'active'\\n};\\n//# sourceMappingURL=Property.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/Interaction\\n */\\nimport BaseObject from '../Object.js';\\nimport { easeOut, linear } from '../easing.js';\\nimport InteractionProperty from './Property.js';\\n/**\\n * Object literal with config options for interactions.\\n * @typedef {Object} InteractionOptions\\n * @property {function(import(\\\"../MapBrowserEvent.js\\\").default):boolean} handleEvent\\n * Method called by the map to notify the interaction that a browser event was\\n * dispatched to the map. If the function returns a falsy value, propagation of\\n * the event to other interactions in the map's interactions chain will be\\n * prevented (this includes functions with no explicit return). The interactions\\n * are traversed in reverse order of the interactions collection of the map.\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * User actions that change the state of the map. Some are similar to controls,\\n * but are not associated with a DOM element.\\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\\n * by a keyboard event not a button element event.\\n * Although interactions do not have a DOM element, some of them do render\\n * vectors and so are visible on the screen.\\n * @api\\n */\\nvar Interaction = /** @class */ (function (_super) {\\n    __extends(Interaction, _super);\\n    /**\\n     * @param {InteractionOptions} options Options.\\n     */\\n    function Interaction(options) {\\n        var _this = _super.call(this) || this;\\n        if (options.handleEvent) {\\n            _this.handleEvent = options.handleEvent;\\n        }\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = null;\\n        _this.setActive(true);\\n        return _this;\\n    }\\n    /**\\n     * Return whether the interaction is currently active.\\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\\n     * @observable\\n     * @api\\n     */\\n    Interaction.prototype.getActive = function () {\\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\\n    };\\n    /**\\n     * Get the map associated with this interaction.\\n     * @return {import(\\\"../PluggableMap.js\\\").default} Map.\\n     * @api\\n     */\\n    Interaction.prototype.getMap = function () {\\n        return this.map_;\\n    };\\n    /**\\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\\n     * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n     * @return {boolean} `false` to stop event propagation.\\n     * @api\\n     */\\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\\n        return true;\\n    };\\n    /**\\n     * Activate or deactivate the interaction.\\n     * @param {boolean} active Active.\\n     * @observable\\n     * @api\\n     */\\n    Interaction.prototype.setActive = function (active) {\\n        this.set(InteractionProperty.ACTIVE, active);\\n    };\\n    /**\\n     * Remove the interaction from its current map and attach it to the new map.\\n     * Subclasses may set up event handlers to get notified about changes to\\n     * the map here.\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    Interaction.prototype.setMap = function (map) {\\n        this.map_ = map;\\n    };\\n    return Interaction;\\n}(BaseObject));\\n/**\\n * @param {import(\\\"../View.js\\\").default} view View.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate} delta Delta.\\n * @param {number=} opt_duration Duration.\\n */\\nexport function pan(view, delta, opt_duration) {\\n    var currentCenter = view.getCenter();\\n    if (currentCenter) {\\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\\n        view.animate_({\\n            duration: opt_duration !== undefined ? opt_duration : 250,\\n            easing: linear,\\n            center: view.getConstrainedCenter(center)\\n        });\\n    }\\n}\\n/**\\n * @param {import(\\\"../View.js\\\").default} view View.\\n * @param {number} delta Delta from previous zoom level.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_anchor Anchor coordinate.\\n * @param {number=} opt_duration Duration.\\n */\\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\\n    var currentZoom = view.getZoom();\\n    if (currentZoom === undefined) {\\n        return;\\n    }\\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\\n    var newResolution = view.getResolutionForZoom(newZoom);\\n    if (view.getAnimating()) {\\n        view.cancelAnimations();\\n    }\\n    view.animate({\\n        resolution: newResolution,\\n        anchor: opt_anchor,\\n        duration: opt_duration !== undefined ? opt_duration : 250,\\n        easing: easeOut\\n    });\\n}\\nexport default Interaction;\\n//# sourceMappingURL=Interaction.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DoubleClickZoom\\n */\\nimport MapBrowserEventType from '../MapBrowserEventType.js';\\nimport Interaction, { zoomByDelta } from './Interaction.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {number} [delta=1] The zoom delta applied on each double click.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom by double-clicking on the map.\\n * @api\\n */\\nvar DoubleClickZoom = /** @class */ (function (_super) {\\n    __extends(DoubleClickZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DoubleClickZoom(opt_options) {\\n        var _this = _super.call(this, {\\n            handleEvent: handleEvent\\n        }) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.delta_ = options.delta ? options.delta : 1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    return DoubleClickZoom;\\n}(Interaction));\\n/**\\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\\n * doubleclick) and eventually zooms the map.\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} `false` to stop event propagation.\\n * @this {DoubleClickZoom}\\n */\\nfunction handleEvent(mapBrowserEvent) {\\n    var stopEvent = false;\\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\\n        var map = mapBrowserEvent.map;\\n        var anchor = mapBrowserEvent.coordinate;\\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\\n        var view = map.getView();\\n        zoomByDelta(view, delta, anchor, this.duration_);\\n        mapBrowserEvent.preventDefault();\\n        stopEvent = true;\\n    }\\n    return !stopEvent;\\n}\\nexport default DoubleClickZoom;\\n//# sourceMappingURL=DoubleClickZoom.js.map\",\"/**\\n * @module ol/events/condition\\n */\\nimport MapBrowserEventType from '../MapBrowserEventType.js';\\nimport { assert } from '../asserts.js';\\nimport { TRUE, FALSE } from '../functions.js';\\nimport { WEBKIT, MAC } from '../has.js';\\n/**\\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\\n * `{boolean}`. If the condition is met, true should be returned.\\n *\\n * @typedef {function(this: ?, import(\\\"../MapBrowserEvent.js\\\").default): boolean} Condition\\n */\\n/**\\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\\n * additionally the shift-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the alt key is pressed.\\n * @api\\n */\\nexport var altKeyOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        !originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\\n * (e.g. when additionally the platform-modifier-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the alt and shift keys are pressed.\\n * @api\\n */\\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if the map has the focus. This condition requires a map target\\n * element with a `tabindex` attribute, e.g. `<div id=\\\"map\\\" tabindex=\\\"1\\\">`.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} event Map browser event.\\n * @return {boolean} The map has the focus.\\n * @api\\n */\\nexport var focus = function (event) {\\n    return event.target.getTargetElement() === document.activeElement;\\n};\\n/**\\n * Return always true.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True.\\n * @api\\n */\\nexport var always = TRUE;\\n/**\\n * Return `true` if the event is a `click` event, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event is a map `click` event.\\n * @api\\n */\\nexport var click = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\\n};\\n/**\\n * Return `true` if the event has an \\\"action\\\"-producing mouse button.\\n *\\n * By definition, this includes left-click on windows/linux, and left-click\\n * without the ctrl key on Macs.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} The result.\\n */\\nexport var mouseActionButton = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\\n    return originalEvent.button == 0 &&\\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\\n};\\n/**\\n * Return always false.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} False.\\n * @api\\n */\\nexport var never = FALSE;\\n/**\\n * Return `true` if the browser event is a `pointermove` event, `false`\\n * otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the browser event is a `pointermove` event.\\n * @api\\n */\\nexport var pointerMove = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == 'pointermove';\\n};\\n/**\\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event is a map `singleclick` event.\\n * @api\\n */\\nexport var singleClick = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\\n};\\n/**\\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event is a map `dblclick` event.\\n * @api\\n */\\nexport var doubleClick = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\\n};\\n/**\\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\\n * pressed.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True only if there no modifier keys are pressed.\\n * @api\\n */\\nexport var noModifierKeys = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (!originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        !originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\\n * the shift-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the platform modifier key is pressed.\\n * @api\\n */\\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return !originalEvent.altKey &&\\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\\n        !originalEvent.shiftKey;\\n};\\n/**\\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\\n * additionally the alt-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the shift key is pressed.\\n * @api\\n */\\nexport var shiftKeyOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (!originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\\n * `<select>`- or `<textarea>`-element, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True only if the target element is not editable.\\n * @api\\n */\\nexport var targetNotEditable = function (mapBrowserEvent) {\\n    var target = mapBrowserEvent.originalEvent.target;\\n    var tagName = /** @type {Element} */ (target).tagName;\\n    return (tagName !== 'INPUT' &&\\n        tagName !== 'SELECT' &&\\n        tagName !== 'TEXTAREA');\\n};\\n/**\\n * Return `true` if the event originates from a mouse device.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a mouse device.\\n * @api\\n */\\nexport var mouseOnly = function (mapBrowserEvent) {\\n    var pointerEvent = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\\n    return pointerEvent.pointerType == 'mouse';\\n};\\n/**\\n * Return `true` if the event originates from a touchable device.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a touchable device.\\n * @api\\n */\\nexport var touchOnly = function (mapBrowserEvent) {\\n    var pointerEvt = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\\n    return pointerEvt.pointerType === 'touch';\\n};\\n/**\\n * Return `true` if the event originates from a digital pen.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a digital pen.\\n * @api\\n */\\nexport var penOnly = function (mapBrowserEvent) {\\n    var pointerEvt = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\\n    return pointerEvt.pointerType === 'pen';\\n};\\n/**\\n * Return `true` if the event originates from a primary pointer in\\n * contact with the surface or if the left mouse button is pressed.\\n * See http://www.w3.org/TR/pointerevents/#button-states.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a primary pointer.\\n * @api\\n */\\nexport var primaryAction = function (mapBrowserEvent) {\\n    var pointerEvent = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\\n};\\n//# sourceMappingURL=condition.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/Pointer\\n */\\nimport MapBrowserEventType from '../MapBrowserEventType.js';\\nimport Interaction from './Interaction.js';\\nimport { getValues } from '../obj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default):boolean} [handleDownEvent]\\n * Function handling \\\"down\\\" events. If the function returns `true` then a drag\\n * sequence is started.\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default)} [handleDragEvent]\\n * Function handling \\\"drag\\\" events. This function is called on \\\"move\\\" events\\n * during a drag sequence.\\n * @property {function(import(\\\"../MapBrowserEvent.js\\\").default):boolean} [handleEvent]\\n * Method called by the map to notify the interaction that a browser event was\\n * dispatched to the map. The function may return `false` to prevent the\\n * propagation of the event to other interactions in the map's interactions\\n * chain.\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default)} [handleMoveEvent]\\n * Function handling \\\"move\\\" events. This function is called on \\\"move\\\" events,\\n * also during a drag sequence (so during a drag sequence both the\\n * `handleDragEvent` function and this function are called).\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default):boolean} [handleUpEvent]\\n *  Function handling \\\"up\\\" events. If the function returns `false` then the\\n * current drag sequence is stopped.\\n * @property {function(boolean):boolean} [stopDown]\\n * Should the down event be propagated to other interactions, or should be\\n * stopped?\\n */\\n/**\\n * @classdesc\\n * Base class that calls user-defined functions on `down`, `move` and `up`\\n * events. This class also manages \\\"drag sequences\\\".\\n *\\n * When the `handleDownEvent` user function returns `true` a drag sequence is\\n * started. During a drag sequence the `handleDragEvent` user function is\\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\\n * user function is called and returns `false`.\\n * @api\\n */\\nvar PointerInteraction = /** @class */ (function (_super) {\\n    __extends(PointerInteraction, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function PointerInteraction(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, /** @type {import(\\\"./Interaction.js\\\").InteractionOptions} */ (options)) || this;\\n        if (options.handleDownEvent) {\\n            _this.handleDownEvent = options.handleDownEvent;\\n        }\\n        if (options.handleDragEvent) {\\n            _this.handleDragEvent = options.handleDragEvent;\\n        }\\n        if (options.handleMoveEvent) {\\n            _this.handleMoveEvent = options.handleMoveEvent;\\n        }\\n        if (options.handleUpEvent) {\\n            _this.handleUpEvent = options.handleUpEvent;\\n        }\\n        if (options.stopDown) {\\n            _this.stopDown = options.stopDown;\\n        }\\n        /**\\n         * @type {boolean}\\n         * @protected\\n         */\\n        _this.handlingDownUpSequence = false;\\n        /**\\n         * @type {!Object<string, import(\\\"../pointer/PointerEvent.js\\\").default>}\\n         * @private\\n         */\\n        _this.trackedPointers_ = {};\\n        /**\\n         * @type {Array<import(\\\"../pointer/PointerEvent.js\\\").default>}\\n         * @protected\\n         */\\n        _this.targetPointers = [];\\n        return _this;\\n    }\\n    /**\\n     * Handle pointer down events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @return {boolean} If the event was consumed.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        return false;\\n    };\\n    /**\\n     * Handle pointer drag events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\\n    /**\\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\\n     * detected.\\n     * @override\\n     * @api\\n     */\\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\\n        if (!( /** @type {import(\\\"../MapBrowserPointerEvent.js\\\").default} */(mapBrowserEvent).pointerEvent)) {\\n            return true;\\n        }\\n        var stopEvent = false;\\n        this.updateTrackedPointers_(mapBrowserEvent);\\n        if (this.handlingDownUpSequence) {\\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\\n                this.handleDragEvent(mapBrowserEvent);\\n            }\\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\\n            }\\n        }\\n        else {\\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\\n                var handled = this.handleDownEvent(mapBrowserEvent);\\n                if (handled) {\\n                    mapBrowserEvent.preventDefault();\\n                }\\n                this.handlingDownUpSequence = handled;\\n                stopEvent = this.stopDown(handled);\\n            }\\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\\n                this.handleMoveEvent(mapBrowserEvent);\\n            }\\n        }\\n        return !stopEvent;\\n    };\\n    /**\\n     * Handle pointer move events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\\n    /**\\n     * Handle pointer up events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @return {boolean} If the event was consumed.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        return false;\\n    };\\n    /**\\n     * This function is used to determine if \\\"down\\\" events should be propagated\\n     * to other interactions or should be stopped.\\n     * @param {boolean} handled Was the event handled by the interaction?\\n     * @return {boolean} Should the `down` event be stopped?\\n     */\\n    PointerInteraction.prototype.stopDown = function (handled) {\\n        return handled;\\n    };\\n    /**\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @private\\n     */\\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\\n            var event_1 = mapBrowserEvent.pointerEvent;\\n            var id = event_1.pointerId.toString();\\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\\n                delete this.trackedPointers_[id];\\n            }\\n            else if (mapBrowserEvent.type ==\\n                MapBrowserEventType.POINTERDOWN) {\\n                this.trackedPointers_[id] = event_1;\\n            }\\n            else if (id in this.trackedPointers_) {\\n                // update only when there was a pointerdown event for this pointer\\n                this.trackedPointers_[id] = event_1;\\n            }\\n            this.targetPointers = getValues(this.trackedPointers_);\\n        }\\n    };\\n    return PointerInteraction;\\n}(Interaction));\\n/**\\n * @param {Array<import(\\\"../pointer/PointerEvent.js\\\").default>} pointerEvents List of events.\\n * @return {import(\\\"../pixel.js\\\").Pixel} Centroid pixel.\\n */\\nexport function centroid(pointerEvents) {\\n    var length = pointerEvents.length;\\n    var clientX = 0;\\n    var clientY = 0;\\n    for (var i = 0; i < length; i++) {\\n        clientX += pointerEvents[i].clientX;\\n        clientY += pointerEvents[i].clientY;\\n    }\\n    return [clientX / length, clientY / length];\\n}\\n/**\\n * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\\n *     or pointerup event.\\n */\\nfunction isPointerDraggingEvent(mapBrowserEvent) {\\n    var type = mapBrowserEvent.type;\\n    return type === MapBrowserEventType.POINTERDOWN ||\\n        type === MapBrowserEventType.POINTERDRAG ||\\n        type === MapBrowserEventType.POINTERUP;\\n}\\nexport default PointerInteraction;\\n//# sourceMappingURL=Pointer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragPan\\n */\\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\\nimport { easeOut } from '../easing.js';\\nimport { noModifierKeys } from '../events/condition.js';\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\\n * to indicate whether that event should be handled.\\n * Default is {@link module:ol/events/condition~noModifierKeys}.\\n * @property {import(\\\"../Kinetic.js\\\").default} [kinetic] Kinetic inertia to apply to the pan.\\n */\\n/**\\n * @classdesc\\n * Allows the user to pan the map by dragging the map.\\n * @api\\n */\\nvar DragPan = /** @class */ (function (_super) {\\n    __extends(DragPan, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragPan(opt_options) {\\n        var _this = _super.call(this, {\\n            stopDown: FALSE\\n        }) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../Kinetic.js\\\").default|undefined}\\n         */\\n        _this.kinetic_ = options.kinetic;\\n        /**\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         */\\n        _this.lastCentroid = null;\\n        /**\\n         * @type {number}\\n         */\\n        _this.lastPointersCount_;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.panning_ = false;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.noKinetic_ = false;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        var targetPointers = this.targetPointers;\\n        var centroid = centroidFromPointers(targetPointers);\\n        if (targetPointers.length == this.lastPointersCount_) {\\n            if (this.kinetic_) {\\n                this.kinetic_.update(centroid[0], centroid[1]);\\n            }\\n            if (this.lastCentroid) {\\n                var delta = [\\n                    this.lastCentroid[0] - centroid[0],\\n                    centroid[1] - this.lastCentroid[1]\\n                ];\\n                var map = mapBrowserEvent.map;\\n                var view = map.getView();\\n                scaleCoordinate(delta, view.getResolution());\\n                rotateCoordinate(delta, view.getRotation());\\n                view.adjustCenter(delta);\\n            }\\n        }\\n        else if (this.kinetic_) {\\n            // reset so we don't overestimate the kinetic energy after\\n            // after one finger down, tiny drag, second finger down\\n            this.kinetic_.begin();\\n        }\\n        this.lastCentroid = centroid;\\n        this.lastPointersCount_ = targetPointers.length;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (this.targetPointers.length === 0) {\\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\\n                var distance = this.kinetic_.getDistance();\\n                var angle = this.kinetic_.getAngle();\\n                var center = /** @type {!import(\\\"../coordinate.js\\\").Coordinate} */ (view.getCenter());\\n                var centerpx = map.getPixelFromCoordinate(center);\\n                var dest = map.getCoordinateFromPixel([\\n                    centerpx[0] - distance * Math.cos(angle),\\n                    centerpx[1] - distance * Math.sin(angle)\\n                ]);\\n                view.animate({\\n                    center: view.getConstrainedCenter(dest),\\n                    duration: 500,\\n                    easing: easeOut\\n                });\\n            }\\n            if (this.panning_) {\\n                this.panning_ = false;\\n                view.endInteraction();\\n            }\\n            return false;\\n        }\\n        else {\\n            if (this.kinetic_) {\\n                // reset so we don't overestimate the kinetic energy after\\n                // after one finger up, tiny drag, second finger up\\n                this.kinetic_.begin();\\n            }\\n            this.lastCentroid = null;\\n            return true;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            this.lastCentroid = null;\\n            // stop any current animation\\n            if (view.getAnimating()) {\\n                view.cancelAnimations();\\n            }\\n            if (!this.panning_) {\\n                this.panning_ = true;\\n                this.getMap().getView().beginInteraction();\\n            }\\n            if (this.kinetic_) {\\n                this.kinetic_.begin();\\n            }\\n            // No kinetic as soon as more than one pointer on the screen is\\n            // detected. This is to prevent nasty pans after pinch.\\n            this.noKinetic_ = this.targetPointers.length > 1;\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return DragPan;\\n}(PointerInteraction));\\nexport default DragPan;\\n//# sourceMappingURL=DragPan.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragRotate\\n */\\nimport { disable } from '../rotationconstraint.js';\\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction from './Pointer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that takes an\\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\\n * to indicate whether that event should be handled.\\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n */\\n/**\\n * @classdesc\\n * Allows the user to rotate the map by clicking and dragging on the map,\\n * normally combined with an {@link module:ol/events/condition} that limits\\n * it to when the alt and shift keys are held down.\\n *\\n * This interaction is only supported for mouse devices.\\n * @api\\n */\\nvar DragRotate = /** @class */ (function (_super) {\\n    __extends(DragRotate, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragRotate(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            stopDown: FALSE\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.lastAngle_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return;\\n        }\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (view.getConstraints().rotation === disable) {\\n            return;\\n        }\\n        var size = map.getSize();\\n        var offset = mapBrowserEvent.pixel;\\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\\n        if (this.lastAngle_ !== undefined) {\\n            var delta = theta - this.lastAngle_;\\n            view.adjustRotation(-delta);\\n        }\\n        this.lastAngle_ = theta;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return true;\\n        }\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        view.endInteraction(this.duration_);\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return false;\\n        }\\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\\n            var map = mapBrowserEvent.map;\\n            map.getView().beginInteraction();\\n            this.lastAngle_ = undefined;\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return DragRotate;\\n}(PointerInteraction));\\nexport default DragRotate;\\n//# sourceMappingURL=DragRotate.js.map\",\"/**\\n * @module ol/render/Box\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport Disposable from '../Disposable.js';\\nimport Polygon from '../geom/Polygon.js';\\nvar RenderBox = /** @class */ (function (_super) {\\n    __extends(RenderBox, _super);\\n    /**\\n     * @param {string} className CSS class name.\\n     */\\n    function RenderBox(className) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {import(\\\"../geom/Polygon.js\\\").default}\\n         * @private\\n         */\\n        _this.geometry_ = null;\\n        /**\\n         * @type {HTMLDivElement}\\n         * @private\\n         */\\n        _this.element_ = document.createElement('div');\\n        _this.element_.style.position = 'absolute';\\n        _this.element_.className = 'ol-box ' + className;\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         */\\n        _this.startPixel_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         */\\n        _this.endPixel_ = null;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    RenderBox.prototype.disposeInternal = function () {\\n        this.setMap(null);\\n    };\\n    /**\\n     * @private\\n     */\\n    RenderBox.prototype.render_ = function () {\\n        var startPixel = this.startPixel_;\\n        var endPixel = this.endPixel_;\\n        var px = 'px';\\n        var style = this.element_.style;\\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\\n    };\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    RenderBox.prototype.setMap = function (map) {\\n        if (this.map_) {\\n            this.map_.getOverlayContainer().removeChild(this.element_);\\n            var style = this.element_.style;\\n            style.left = style.top = style.width = style.height = 'inherit';\\n        }\\n        this.map_ = map;\\n        if (this.map_) {\\n            this.map_.getOverlayContainer().appendChild(this.element_);\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../pixel.js\\\").Pixel} startPixel Start pixel.\\n     * @param {import(\\\"../pixel.js\\\").Pixel} endPixel End pixel.\\n     */\\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\\n        this.startPixel_ = startPixel;\\n        this.endPixel_ = endPixel;\\n        this.createOrUpdateGeometry();\\n        this.render_();\\n    };\\n    /**\\n     * Creates or updates the cached geometry.\\n     */\\n    RenderBox.prototype.createOrUpdateGeometry = function () {\\n        var startPixel = this.startPixel_;\\n        var endPixel = this.endPixel_;\\n        var pixels = [\\n            startPixel,\\n            [startPixel[0], endPixel[1]],\\n            endPixel,\\n            [endPixel[0], startPixel[1]]\\n        ];\\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\\n        // close the polygon\\n        coordinates[4] = coordinates[0].slice();\\n        if (!this.geometry_) {\\n            this.geometry_ = new Polygon([coordinates]);\\n        }\\n        else {\\n            this.geometry_.setCoordinates([coordinates]);\\n        }\\n    };\\n    /**\\n     * @return {import(\\\"../geom/Polygon.js\\\").default} Geometry.\\n     */\\n    RenderBox.prototype.getGeometry = function () {\\n        return this.geometry_;\\n    };\\n    return RenderBox;\\n}(Disposable));\\nexport default RenderBox;\\n//# sourceMappingURL=Box.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragBox\\n */\\n// FIXME draw drag box\\nimport Event from '../events/Event.js';\\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\\nimport { VOID } from '../functions.js';\\nimport PointerInteraction from './Pointer.js';\\nimport RenderBox from '../render/Box.js';\\n/**\\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\\n * true should be returned.\\n * @typedef {function(this: ?, import(\\\"../MapBrowserEvent.js\\\").default, import(\\\"../pixel.js\\\").Pixel, import(\\\"../pixel.js\\\").Pixel):boolean} EndCondition\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\\n * to indicate whether that event should be handled.\\n * Default is {@link ol/events/condition~always}.\\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\\n * `boxEndCondition` function.\\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\\n * Default is `true` if the area of the box is bigger than the `minArea` option.\\n * @property {function(this:DragBox, import(\\\"../MapBrowserEvent.js\\\").default)} [onBoxEnd] Code to execute just\\n * before `boxend` is fired.\\n */\\n/**\\n * @enum {string}\\n */\\nvar DragBoxEventType = {\\n    /**\\n     * Triggered upon drag box start.\\n     * @event DragBoxEvent#boxstart\\n     * @api\\n     */\\n    BOXSTART: 'boxstart',\\n    /**\\n     * Triggered on drag when box is active.\\n     * @event DragBoxEvent#boxdrag\\n     * @api\\n     */\\n    BOXDRAG: 'boxdrag',\\n    /**\\n     * Triggered upon drag box end.\\n     * @event DragBoxEvent#boxend\\n     * @api\\n     */\\n    BOXEND: 'boxend'\\n};\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\\n * this type.\\n */\\nvar DragBoxEvent = /** @class */ (function (_super) {\\n    __extends(DragBoxEvent, _super);\\n    /**\\n     * @param {string} type The event type.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate The event coordinate.\\n     * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Originating event.\\n     */\\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The coordinate of the drag event.\\n         * @const\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         * @api\\n         */\\n        _this.coordinate = coordinate;\\n        /**\\n         * @const\\n         * @type {import(\\\"../MapBrowserEvent.js\\\").default}\\n         * @api\\n         */\\n        _this.mapBrowserEvent = mapBrowserEvent;\\n        return _this;\\n    }\\n    return DragBoxEvent;\\n}(Event));\\n/**\\n * @classdesc\\n * Allows the user to draw a vector box by clicking and dragging on the map,\\n * normally combined with an {@link module:ol/events/condition} that limits\\n * it to when the shift or other key is held down. This is used, for example,\\n * for zooming to a specific area of the map\\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\\n * {@link module:ol/interaction/DragRotateAndZoom}).\\n *\\n * This interaction is only supported for mouse devices.\\n *\\n * @fires DragBoxEvent\\n * @api\\n */\\nvar DragBox = /** @class */ (function (_super) {\\n    __extends(DragBox, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragBox(opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @type {import(\\\"../render/Box.js\\\").default}\\n         * @private\\n         */\\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\\n        /**\\n         * Function to execute just before `onboxend` is fired\\n         * @type {function(this:DragBox, import(\\\"../MapBrowserEvent.js\\\").default): void}\\n         * @private\\n         */\\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\\n        /**\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         * @private\\n         */\\n        _this.startPixel_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : always;\\n        /**\\n         * @private\\n         * @type {EndCondition}\\n         */\\n        _this.boxEndCondition_ = options.boxEndCondition ?\\n            options.boxEndCondition : _this.defaultBoxEndCondition;\\n        return _this;\\n    }\\n    /**\\n     * The default condition for determining whether the boxend event\\n     * should fire.\\n     * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent The originating MapBrowserEvent\\n     *     leading to the box end.\\n     * @param {import(\\\"../pixel.js\\\").Pixel} startPixel The starting pixel of the box.\\n     * @param {import(\\\"../pixel.js\\\").Pixel} endPixel The end pixel of the box.\\n     * @return {boolean} Whether or not the boxend condition should be fired.\\n     */\\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\\n        var width = endPixel[0] - startPixel[0];\\n        var height = endPixel[1] - startPixel[1];\\n        return width * width + height * height >= this.minArea_;\\n    };\\n    /**\\n     * Returns geometry of last drawn box.\\n     * @return {import(\\\"../geom/Polygon.js\\\").default} Geometry.\\n     * @api\\n     */\\n    DragBox.prototype.getGeometry = function () {\\n        return this.box_.getGeometry();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return;\\n        }\\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return true;\\n        }\\n        this.box_.setMap(null);\\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\\n            this.onBoxEnd_(mapBrowserEvent);\\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return false;\\n        }\\n        if (mouseActionButton(mapBrowserEvent) &&\\n            this.condition_(mapBrowserEvent)) {\\n            this.startPixel_ = mapBrowserEvent.pixel;\\n            this.box_.setMap(mapBrowserEvent.map);\\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return DragBox;\\n}(PointerInteraction));\\nexport default DragBox;\\n//# sourceMappingURL=DragBox.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragZoom\\n */\\nimport { easeOut } from '../easing.js';\\nimport { shiftKeyOnly } from '../events/condition.js';\\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\\nimport DragBox from './DragBox.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\\n * box.\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled.\\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\\n * @property {number} [duration=200] Animation duration in milliseconds.\\n * @property {boolean} [out=false] Use interaction for zooming out.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map by clicking and dragging on the map,\\n * normally combined with an {@link module:ol/events/condition} that limits\\n * it to when a key, shift by default, is held down.\\n *\\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\\n * your custom one configured with `className`.\\n * @api\\n */\\nvar DragZoom = /** @class */ (function (_super) {\\n    __extends(DragZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragZoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var condition = options.condition ? options.condition : shiftKeyOnly;\\n        _this = _super.call(this, {\\n            condition: condition,\\n            className: options.className || 'ol-dragzoom',\\n            onBoxEnd: onBoxEnd\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.out_ = options.out !== undefined ? options.out : false;\\n        return _this;\\n    }\\n    return DragZoom;\\n}(DragBox));\\n/**\\n * @this {DragZoom}\\n */\\nfunction onBoxEnd() {\\n    var map = this.getMap();\\n    var view = /** @type {!import(\\\"../View.js\\\").default} */ (map.getView());\\n    var size = /** @type {!import(\\\"../size.js\\\").Size} */ (map.getSize());\\n    var extent = this.getGeometry().getExtent();\\n    if (this.out_) {\\n        var mapExtent = view.calculateExtent(size);\\n        var boxPixelExtent = createOrUpdateFromCoordinates([\\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\\n            map.getPixelFromCoordinate(getTopRight(extent))\\n        ]);\\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\\n        scaleFromCenter(mapExtent, 1 / factor);\\n        extent = mapExtent;\\n    }\\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\\n    view.animate({\\n        resolution: resolution,\\n        center: center,\\n        duration: this.duration_,\\n        easing: easeOut\\n    });\\n}\\nexport default DragZoom;\\n//# sourceMappingURL=DragZoom.js.map\",\"/**\\n * @module ol/events/KeyCode\\n */\\n/**\\n * @enum {number}\\n * @const\\n */\\nexport default {\\n    LEFT: 37,\\n    UP: 38,\\n    RIGHT: 39,\\n    DOWN: 40\\n};\\n//# sourceMappingURL=KeyCode.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/KeyboardPan\\n */\\nimport { rotate as rotateCoordinate } from '../coordinate.js';\\nimport EventType from '../events/EventType.js';\\nimport KeyCode from '../events/KeyCode.js';\\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\\nimport Interaction, { pan } from './Interaction.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled. Default is\\n * {@link module:ol/events/condition~noModifierKeys} and\\n * {@link module:ol/events/condition~targetNotEditable}.\\n * @property {number} [duration=100] Animation duration in milliseconds.\\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\\n * press.\\n */\\n/**\\n * @classdesc\\n * Allows the user to pan the map using keyboard arrows.\\n * Note that, although this interaction is by default included in maps,\\n * the keys can only be used when browser focus is on the element to which\\n * the keyboard events are attached. By default, this is the map div,\\n * though you can change this with the `keyboardEventTarget` in\\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\\n * element, focus will have to be on, and returned to, this element if the keys\\n * are to function.\\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\\n * @api\\n */\\nvar KeyboardPan = /** @class */ (function (_super) {\\n    __extends(KeyboardPan, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function KeyboardPan(opt_options) {\\n        var _this = _super.call(this, {\\n            handleEvent: handleEvent\\n        }) || this;\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Browser event.\\n         * @return {boolean} Combined condition result.\\n         */\\n        _this.defaultCondition_ = function (mapBrowserEvent) {\\n            return noModifierKeys(mapBrowserEvent) &&\\n                targetNotEditable(mapBrowserEvent);\\n        };\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition !== undefined ?\\n            options.condition : _this.defaultCondition_;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\\n            options.pixelDelta : 128;\\n        return _this;\\n    }\\n    return KeyboardPan;\\n}(Interaction));\\n/**\\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\\n * pressed).\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} `false` to stop event propagation.\\n * @this {KeyboardPan}\\n */\\nfunction handleEvent(mapBrowserEvent) {\\n    var stopEvent = false;\\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\\n        var keyCode = keyEvent.keyCode;\\n        if (this.condition_(mapBrowserEvent) &&\\n            (keyCode == KeyCode.DOWN ||\\n                keyCode == KeyCode.LEFT ||\\n                keyCode == KeyCode.RIGHT ||\\n                keyCode == KeyCode.UP)) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\\n            var deltaX = 0, deltaY = 0;\\n            if (keyCode == KeyCode.DOWN) {\\n                deltaY = -mapUnitsDelta;\\n            }\\n            else if (keyCode == KeyCode.LEFT) {\\n                deltaX = -mapUnitsDelta;\\n            }\\n            else if (keyCode == KeyCode.RIGHT) {\\n                deltaX = mapUnitsDelta;\\n            }\\n            else {\\n                deltaY = mapUnitsDelta;\\n            }\\n            var delta = [deltaX, deltaY];\\n            rotateCoordinate(delta, view.getRotation());\\n            pan(view, delta, this.duration_);\\n            mapBrowserEvent.preventDefault();\\n            stopEvent = true;\\n        }\\n    }\\n    return !stopEvent;\\n}\\nexport default KeyboardPan;\\n//# sourceMappingURL=KeyboardPan.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/KeyboardZoom\\n */\\nimport EventType from '../events/EventType.js';\\nimport { targetNotEditable } from '../events/condition.js';\\nimport Interaction, { zoomByDelta } from './Interaction.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=100] Animation duration in milliseconds.\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled. Default is\\n * {@link module:ol/events/condition~targetNotEditable}.\\n * @property {number} [delta=1] The zoom level delta on each key press.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map using keyboard + and -.\\n * Note that, although this interaction is by default included in maps,\\n * the keys can only be used when browser focus is on the element to which\\n * the keyboard events are attached. By default, this is the map div,\\n * though you can change this with the `keyboardEventTarget` in\\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\\n * element, focus will have to be on, and returned to, this element if the keys\\n * are to function.\\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\\n * @api\\n */\\nvar KeyboardZoom = /** @class */ (function (_super) {\\n    __extends(KeyboardZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function KeyboardZoom(opt_options) {\\n        var _this = _super.call(this, {\\n            handleEvent: handleEvent\\n        }) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.delta_ = options.delta ? options.delta : 1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\\n        return _this;\\n    }\\n    return KeyboardZoom;\\n}(Interaction));\\n/**\\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\\n * key pressed was '+' or '-').\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} `false` to stop event propagation.\\n * @this {KeyboardZoom}\\n */\\nfunction handleEvent(mapBrowserEvent) {\\n    var stopEvent = false;\\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\\n        mapBrowserEvent.type == EventType.KEYPRESS) {\\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\\n        var charCode = keyEvent.charCode;\\n        if (this.condition_(mapBrowserEvent) &&\\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\\n            var map = mapBrowserEvent.map;\\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\\n            var view = map.getView();\\n            zoomByDelta(view, delta, undefined, this.duration_);\\n            mapBrowserEvent.preventDefault();\\n            stopEvent = true;\\n        }\\n    }\\n    return !stopEvent;\\n}\\nexport default KeyboardZoom;\\n//# sourceMappingURL=KeyboardZoom.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/MouseWheelZoom\\n */\\nimport { always } from '../events/condition.js';\\nimport EventType from '../events/EventType.js';\\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\\nimport Interaction, { zoomByDelta } from './Interaction.js';\\nimport { clamp } from '../math.js';\\n/**\\n * @enum {string}\\n */\\nexport var Mode = {\\n    TRACKPAD: 'trackpad',\\n    WHEEL: 'wheel'\\n};\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled. Default is\\n * {@link module:ol/events/condition~always}.\\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\\n * location as the anchor. When set to `false`, zooming in and out will zoom to\\n * the center of the screen instead of zooming on the mouse's location.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map by scrolling the mouse wheel.\\n * @api\\n */\\nvar MouseWheelZoom = /** @class */ (function (_super) {\\n    __extends(MouseWheelZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function MouseWheelZoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, /** @type {import(\\\"./Interaction.js\\\").InteractionOptions} */ (options)) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.totalDelta_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.lastDelta_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : always;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.lastAnchor_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.startTime_ = undefined;\\n        /**\\n         * @private\\n         * @type {?}\\n         */\\n        _this.timeoutId_;\\n        /**\\n         * @private\\n         * @type {Mode|undefined}\\n         */\\n        _this.mode_ = undefined;\\n        /**\\n         * Trackpad events separated by this delay will be considered separate\\n         * interactions.\\n         * @type {number}\\n         */\\n        _this.trackpadEventGap_ = 400;\\n        /**\\n         * @type {?}\\n         */\\n        _this.trackpadTimeoutId_;\\n        /**\\n         * The number of delta values per zoom level\\n         * @private\\n         * @type {number}\\n         */\\n        _this.trackpadDeltaPerZoom_ = 300;\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     */\\n    MouseWheelZoom.prototype.endInteraction_ = function () {\\n        this.trackpadTimeoutId_ = undefined;\\n        var view = this.getMap().getView();\\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\\n    };\\n    /**\\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\\n     * zooms the map.\\n     * @override\\n     */\\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\\n        if (!this.condition_(mapBrowserEvent)) {\\n            return true;\\n        }\\n        var type = mapBrowserEvent.type;\\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\\n            return true;\\n        }\\n        mapBrowserEvent.preventDefault();\\n        var map = mapBrowserEvent.map;\\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\\n        if (this.useAnchor_) {\\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\\n        }\\n        // Delta normalisation inspired by\\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\\n        var delta;\\n        if (mapBrowserEvent.type == EventType.WHEEL) {\\n            delta = wheelEvent.deltaY;\\n            if (FIREFOX &&\\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\\n                delta /= DEVICE_PIXEL_RATIO;\\n            }\\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\\n                delta *= 40;\\n            }\\n        }\\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\\n            delta = -wheelEvent.wheelDeltaY;\\n            if (SAFARI) {\\n                delta /= 3;\\n            }\\n        }\\n        if (delta === 0) {\\n            return false;\\n        }\\n        else {\\n            this.lastDelta_ = delta;\\n        }\\n        var now = Date.now();\\n        if (this.startTime_ === undefined) {\\n            this.startTime_ = now;\\n        }\\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\\n            this.mode_ = Math.abs(delta) < 4 ?\\n                Mode.TRACKPAD :\\n                Mode.WHEEL;\\n        }\\n        if (this.mode_ === Mode.TRACKPAD) {\\n            var view = map.getView();\\n            if (this.trackpadTimeoutId_) {\\n                clearTimeout(this.trackpadTimeoutId_);\\n            }\\n            else {\\n                view.beginInteraction();\\n            }\\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\\n            this.startTime_ = now;\\n            return false;\\n        }\\n        this.totalDelta_ += delta;\\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\\n        clearTimeout(this.timeoutId_);\\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\\n        return false;\\n    };\\n    /**\\n     * @private\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\\n        var view = map.getView();\\n        if (view.getAnimating()) {\\n            view.cancelAnimations();\\n        }\\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\\n        this.mode_ = undefined;\\n        this.totalDelta_ = 0;\\n        this.lastAnchor_ = null;\\n        this.startTime_ = undefined;\\n        this.timeoutId_ = undefined;\\n    };\\n    /**\\n     * Enable or disable using the mouse's location as an anchor when zooming\\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\\n     * to zoom to the center of the map\\n     * @api\\n     */\\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\\n        this.useAnchor_ = useAnchor;\\n        if (!useAnchor) {\\n            this.lastAnchor_ = null;\\n        }\\n    };\\n    return MouseWheelZoom;\\n}(Interaction));\\nexport default MouseWheelZoom;\\n//# sourceMappingURL=MouseWheelZoom.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/PinchRotate\\n */\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\\nimport { disable } from '../rotationconstraint.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=250] The duration of the animation in\\n * milliseconds.\\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\\n */\\n/**\\n * @classdesc\\n * Allows the user to rotate the map by twisting with two fingers\\n * on a touch screen.\\n * @api\\n */\\nvar PinchRotate = /** @class */ (function (_super) {\\n    __extends(PinchRotate, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function PinchRotate(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var pointerOptions = /** @type {import(\\\"./Pointer.js\\\").Options} */ (options);\\n        if (!pointerOptions.stopDown) {\\n            pointerOptions.stopDown = FALSE;\\n        }\\n        _this = _super.call(this, pointerOptions) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.anchor_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.lastAngle_ = undefined;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.rotating_ = false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.rotationDelta_ = 0.0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        var rotationDelta = 0.0;\\n        var touch0 = this.targetPointers[0];\\n        var touch1 = this.targetPointers[1];\\n        // angle between touches\\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\\n        if (this.lastAngle_ !== undefined) {\\n            var delta = angle - this.lastAngle_;\\n            this.rotationDelta_ += delta;\\n            if (!this.rotating_ &&\\n                Math.abs(this.rotationDelta_) > this.threshold_) {\\n                this.rotating_ = true;\\n            }\\n            rotationDelta = delta;\\n        }\\n        this.lastAngle_ = angle;\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (view.getConstraints().rotation === disable) {\\n            return;\\n        }\\n        // rotate anchor point.\\n        // FIXME: should be the intersection point between the lines:\\n        //     touch0,touch1 and previousTouch0,previousTouch1\\n        var viewportPosition = map.getViewport().getBoundingClientRect();\\n        var centroid = centroidFromPointers(this.targetPointers);\\n        centroid[0] -= viewportPosition.left;\\n        centroid[1] -= viewportPosition.top;\\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\\n        // rotate\\n        if (this.rotating_) {\\n            map.render();\\n            view.adjustRotation(rotationDelta, this.anchor_);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length < 2) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            view.endInteraction(this.duration_);\\n            return false;\\n        }\\n        else {\\n            return true;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length >= 2) {\\n            var map = mapBrowserEvent.map;\\n            this.anchor_ = null;\\n            this.lastAngle_ = undefined;\\n            this.rotating_ = false;\\n            this.rotationDelta_ = 0.0;\\n            if (!this.handlingDownUpSequence) {\\n                map.getView().beginInteraction();\\n            }\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return PinchRotate;\\n}(PointerInteraction));\\nexport default PinchRotate;\\n//# sourceMappingURL=PinchRotate.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/PinchZoom\\n */\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=400] Animation duration in milliseconds.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map by pinching with two fingers\\n * on a touch screen.\\n * @api\\n */\\nvar PinchZoom = /** @class */ (function (_super) {\\n    __extends(PinchZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function PinchZoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var pointerOptions = /** @type {import(\\\"./Pointer.js\\\").Options} */ (options);\\n        if (!pointerOptions.stopDown) {\\n            pointerOptions.stopDown = FALSE;\\n        }\\n        _this = _super.call(this, pointerOptions) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.anchor_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.lastDistance_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.lastScaleDelta_ = 1;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        var scaleDelta = 1.0;\\n        var touch0 = this.targetPointers[0];\\n        var touch1 = this.targetPointers[1];\\n        var dx = touch0.clientX - touch1.clientX;\\n        var dy = touch0.clientY - touch1.clientY;\\n        // distance between touches\\n        var distance = Math.sqrt(dx * dx + dy * dy);\\n        if (this.lastDistance_ !== undefined) {\\n            scaleDelta = this.lastDistance_ / distance;\\n        }\\n        this.lastDistance_ = distance;\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (scaleDelta != 1.0) {\\n            this.lastScaleDelta_ = scaleDelta;\\n        }\\n        // scale anchor point.\\n        var viewportPosition = map.getViewport().getBoundingClientRect();\\n        var centroid = centroidFromPointers(this.targetPointers);\\n        centroid[0] -= viewportPosition.left;\\n        centroid[1] -= viewportPosition.top;\\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\\n        // scale, bypass the resolution constraint\\n        map.render();\\n        view.adjustResolution(scaleDelta, this.anchor_);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length < 2) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\\n            view.endInteraction(this.duration_, direction);\\n            return false;\\n        }\\n        else {\\n            return true;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length >= 2) {\\n            var map = mapBrowserEvent.map;\\n            this.anchor_ = null;\\n            this.lastDistance_ = undefined;\\n            this.lastScaleDelta_ = 1;\\n            if (!this.handlingDownUpSequence) {\\n                map.getView().beginInteraction();\\n            }\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return PinchZoom;\\n}(PointerInteraction));\\nexport default PinchZoom;\\n//# sourceMappingURL=PinchZoom.js.map\",\"/**\\n * @module ol/render/Event\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport Event from '../events/Event.js';\\nvar RenderEvent = /** @class */ (function (_super) {\\n    __extends(RenderEvent, _super);\\n    /**\\n     * @param {import(\\\"./EventType.js\\\").default} type Type.\\n     * @param {import(\\\"../transform.js\\\").Transform=} opt_inversePixelTransform Transform for\\n     *     CSS pixels to rendered pixels.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\\n     * @param {?import(\\\"../webgl/Helper.js\\\").default=} opt_glContext WebGL Context.\\n     */\\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\\n         * to rendered pixels on this event's `context`.\\n         * @type {import(\\\"../transform.js\\\").Transform|undefined}\\n         * @api\\n         */\\n        _this.inversePixelTransform = opt_inversePixelTransform;\\n        /**\\n         * An object representing the current render frame state.\\n         * @type {import(\\\"../PluggableMap.js\\\").FrameState|undefined}\\n         * @api\\n         */\\n        _this.frameState = opt_frameState;\\n        /**\\n         * Canvas context. Only available when a Canvas renderer is used, null\\n         * otherwise.\\n         * @type {CanvasRenderingContext2D|null|undefined}\\n         * @api\\n         */\\n        _this.context = opt_context;\\n        /**\\n         * WebGL context. Only available when a WebGL renderer is used, null\\n         * otherwise.\\n         * @type {import(\\\"../webgl/Helper.js\\\").default|null|undefined}\\n         * @api\\n         */\\n        _this.glContext = opt_glContext;\\n        return _this;\\n    }\\n    return RenderEvent;\\n}(Event));\\nexport default RenderEvent;\\n//# sourceMappingURL=Event.js.map\",\"/**\\n * @module ol/color\\n */\\nimport { assert } from './asserts.js';\\nimport { clamp } from './math.js';\\n/**\\n * A color represented as a short array [red, green, blue, alpha].\\n * red, green, and blue should be integers in the range 0..255 inclusive.\\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\\n * given then `1` will be used.\\n * @typedef {Array<number>} Color\\n * @api\\n */\\n/**\\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\\n * @const\\n * @type {RegExp}\\n * @private\\n */\\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\\n/**\\n * Regular expression for matching potential named color style strings.\\n * @const\\n * @type {RegExp}\\n * @private\\n */\\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\\n/**\\n * Return the color as an rgba string.\\n * @param {Color|string} color Color.\\n * @return {string} Rgba string.\\n * @api\\n */\\nexport function asString(color) {\\n    if (typeof color === 'string') {\\n        return color;\\n    }\\n    else {\\n        return toString(color);\\n    }\\n}\\n/**\\n * Return named color as an rgba string.\\n * @param {string} color Named color.\\n * @return {string} Rgb string.\\n */\\nfunction fromNamed(color) {\\n    var el = document.createElement('div');\\n    el.style.color = color;\\n    if (el.style.color !== '') {\\n        document.body.appendChild(el);\\n        var rgb = getComputedStyle(el).color;\\n        document.body.removeChild(el);\\n        return rgb;\\n    }\\n    else {\\n        return '';\\n    }\\n}\\n/**\\n * @param {string} s String.\\n * @return {Color} Color.\\n */\\nexport var fromString = (function () {\\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\\n    // semantics, whenever the cache grows too large we simply delete an\\n    // arbitrary 25% of the entries.\\n    /**\\n     * @const\\n     * @type {number}\\n     */\\n    var MAX_CACHE_SIZE = 1024;\\n    /**\\n     * @type {Object<string, Color>}\\n     */\\n    var cache = {};\\n    /**\\n     * @type {number}\\n     */\\n    var cacheSize = 0;\\n    return (\\n    /**\\n     * @param {string} s String.\\n     * @return {Color} Color.\\n     */\\n    function (s) {\\n        var color;\\n        if (cache.hasOwnProperty(s)) {\\n            color = cache[s];\\n        }\\n        else {\\n            if (cacheSize >= MAX_CACHE_SIZE) {\\n                var i = 0;\\n                for (var key in cache) {\\n                    if ((i++ & 3) === 0) {\\n                        delete cache[key];\\n                        --cacheSize;\\n                    }\\n                }\\n            }\\n            color = fromStringInternal_(s);\\n            cache[s] = color;\\n            ++cacheSize;\\n        }\\n        return color;\\n    });\\n})();\\n/**\\n * Return the color as an array. This function maintains a cache of calculated\\n * arrays which means the result should not be modified.\\n * @param {Color|string} color Color.\\n * @return {Color} Color.\\n * @api\\n */\\nexport function asArray(color) {\\n    if (Array.isArray(color)) {\\n        return color;\\n    }\\n    else {\\n        return fromString(color);\\n    }\\n}\\n/**\\n * @param {string} s String.\\n * @private\\n * @return {Color} Color.\\n */\\nfunction fromStringInternal_(s) {\\n    var r, g, b, a, color;\\n    if (NAMED_COLOR_RE_.exec(s)) {\\n        s = fromNamed(s);\\n    }\\n    if (HEX_COLOR_RE_.exec(s)) { // hex\\n        var n = s.length - 1; // number of hex digits\\n        var d = // number of digits per channel\\n         void 0; // number of digits per channel\\n        if (n <= 4) {\\n            d = 1;\\n        }\\n        else {\\n            d = 2;\\n        }\\n        var hasAlpha = n === 4 || n === 8;\\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\\n        if (hasAlpha) {\\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\\n        }\\n        else {\\n            a = 255;\\n        }\\n        if (d == 1) {\\n            r = (r << 4) + r;\\n            g = (g << 4) + g;\\n            b = (b << 4) + b;\\n            if (hasAlpha) {\\n                a = (a << 4) + a;\\n            }\\n        }\\n        color = [r, g, b, a / 255];\\n    }\\n    else if (s.indexOf('rgba(') == 0) { // rgba()\\n        color = s.slice(5, -1).split(',').map(Number);\\n        normalize(color);\\n    }\\n    else if (s.indexOf('rgb(') == 0) { // rgb()\\n        color = s.slice(4, -1).split(',').map(Number);\\n        color.push(1);\\n        normalize(color);\\n    }\\n    else {\\n        assert(false, 14); // Invalid color\\n    }\\n    return color;\\n}\\n/**\\n * TODO this function is only used in the test, we probably shouldn't export it\\n * @param {Color} color Color.\\n * @return {Color} Clamped color.\\n */\\nexport function normalize(color) {\\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\\n    color[3] = clamp(color[3], 0, 1);\\n    return color;\\n}\\n/**\\n * @param {Color} color Color.\\n * @return {string} String.\\n */\\nexport function toString(color) {\\n    var r = color[0];\\n    if (r != (r | 0)) {\\n        r = (r + 0.5) | 0;\\n    }\\n    var g = color[1];\\n    if (g != (g | 0)) {\\n        g = (g + 0.5) | 0;\\n    }\\n    var b = color[2];\\n    if (b != (b | 0)) {\\n        b = (b + 0.5) | 0;\\n    }\\n    var a = color[3] === undefined ? 1 : color[3];\\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\\n}\\n//# sourceMappingURL=color.js.map\",\"/**\\n * @module ol/style/IconImageCache\\n */\\nimport { asString } from '../color.js';\\n/**\\n * @classdesc\\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\\n */\\nvar IconImageCache = /** @class */ (function () {\\n    function IconImageCache() {\\n        /**\\n        * @type {!Object<string, import(\\\"./IconImage.js\\\").default>}\\n        * @private\\n        */\\n        this.cache_ = {};\\n        /**\\n        * @type {number}\\n        * @private\\n        */\\n        this.cacheSize_ = 0;\\n        /**\\n        * @type {number}\\n        * @private\\n        */\\n        this.maxCacheSize_ = 32;\\n    }\\n    /**\\n    * FIXME empty description for jsdoc\\n    */\\n    IconImageCache.prototype.clear = function () {\\n        this.cache_ = {};\\n        this.cacheSize_ = 0;\\n    };\\n    /**\\n     * @return {boolean} Can expire cache.\\n     */\\n    IconImageCache.prototype.canExpireCache = function () {\\n        return this.cacheSize_ > this.maxCacheSize_;\\n    };\\n    /**\\n    * FIXME empty description for jsdoc\\n    */\\n    IconImageCache.prototype.expire = function () {\\n        if (this.canExpireCache()) {\\n            var i = 0;\\n            for (var key in this.cache_) {\\n                var iconImage = this.cache_[key];\\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\\n                    delete this.cache_[key];\\n                    --this.cacheSize_;\\n                }\\n            }\\n        }\\n    };\\n    /**\\n    * @param {string} src Src.\\n    * @param {?string} crossOrigin Cross origin.\\n    * @param {import(\\\"../color.js\\\").Color} color Color.\\n    * @return {import(\\\"./IconImage.js\\\").default} Icon image.\\n    */\\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\\n        var key = getKey(src, crossOrigin, color);\\n        return key in this.cache_ ? this.cache_[key] : null;\\n    };\\n    /**\\n    * @param {string} src Src.\\n    * @param {?string} crossOrigin Cross origin.\\n    * @param {import(\\\"../color.js\\\").Color} color Color.\\n    * @param {import(\\\"./IconImage.js\\\").default} iconImage Icon image.\\n    */\\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\\n        var key = getKey(src, crossOrigin, color);\\n        this.cache_[key] = iconImage;\\n        ++this.cacheSize_;\\n    };\\n    /**\\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\\n    * your map uses more than 32 different icon images and you are not caching icon\\n    * styles on the application level.\\n    * @param {number} maxCacheSize Cache max size.\\n    * @api\\n    */\\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\\n        this.maxCacheSize_ = maxCacheSize;\\n        this.expire();\\n    };\\n    return IconImageCache;\\n}());\\n/**\\n * @param {string} src Src.\\n * @param {?string} crossOrigin Cross origin.\\n * @param {import(\\\"../color.js\\\").Color} color Color.\\n * @return {string} Cache key.\\n */\\nfunction getKey(src, crossOrigin, color) {\\n    var colorString = color ? asString(color) : 'null';\\n    return crossOrigin + ':' + src + ':' + colorString;\\n}\\nexport default IconImageCache;\\n/**\\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\\n * {@link module:ol/style/Icon~Icon} images.\\n * @api\\n */\\nexport var shared = new IconImageCache();\\n//# sourceMappingURL=IconImageCache.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/Map\\n */\\nimport { abstract, getUid } from '../util.js';\\nimport Disposable from '../Disposable.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getWidth } from '../extent.js';\\nimport { TRUE } from '../functions.js';\\nimport { visibleAtResolution } from '../layer/Layer.js';\\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\\nimport { compose as composeTransform, makeInverse } from '../transform.js';\\n/**\\n * @abstract\\n */\\nvar MapRenderer = /** @class */ (function (_super) {\\n    __extends(MapRenderer, _super);\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    function MapRenderer(map) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = map;\\n        /**\\n         * @private\\n         * @type {!Object<string, import(\\\"./Layer.js\\\").default>}\\n         */\\n        _this.layerRenderers_ = {};\\n        /**\\n         * @private\\n         * @type {Object<string, import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.layerRendererListeners_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../render/EventType.js\\\").default} type Event type.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\\n        abstract();\\n    };\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @protected\\n     */\\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\\n        var viewState = frameState.viewState;\\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\\n    };\\n    /**\\n     * Removes all layer renderers.\\n     */\\n    MapRenderer.prototype.removeLayerRenderers = function () {\\n        for (var key in this.layerRenderers_) {\\n            this.removeLayerRendererByKey_(key).dispose();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(this: S, import(\\\"../Feature.js\\\").FeatureLike,\\n     *     import(\\\"../layer/Layer.js\\\").default): T} callback Feature callback.\\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\\n     * @param {function(this: U, import(\\\"../layer/Layer.js\\\").default): boolean} layerFilter Layer filter\\n     *     function, only layers which are visible and for which this function\\n     *     returns `true` will be tested for features.  By default, all visible\\n     *     layers will be tested.\\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\\n     * @return {T|undefined} Callback result.\\n     * @template S,T,U\\n     */\\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\\n        var result;\\n        var viewState = frameState.viewState;\\n        var viewResolution = viewState.resolution;\\n        /**\\n         * @param {boolean} managed Managed layer.\\n         * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n         * @param {import(\\\"../layer/Layer.js\\\").default} layer Layer.\\n         * @return {?} Callback result.\\n         */\\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\\n                return callback.call(thisArg, feature, managed ? layer : null);\\n            }\\n        }\\n        var projection = viewState.projection;\\n        var translatedCoordinate = coordinate;\\n        if (projection.canWrapX()) {\\n            var projectionExtent = projection.getExtent();\\n            var worldWidth = getWidth(projectionExtent);\\n            var x = coordinate[0];\\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\\n            }\\n        }\\n        var layerStates = frameState.layerStatesArray;\\n        var numLayers = layerStates.length;\\n        var i;\\n        for (i = numLayers - 1; i >= 0; --i) {\\n            var layerState = layerStates[i];\\n            var layer = /** @type {import(\\\"../layer/Layer.js\\\").default} */ (layerState.layer);\\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\\n                var layerRenderer = this.getLayerRenderer(layer);\\n                var source = layer.getSource();\\n                if (layerRenderer && source) {\\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\\n                }\\n                if (result) {\\n                    return result;\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(this: S, import(\\\"../layer/Layer.js\\\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\\n     *     callback.\\n     * @param {function(this: U, import(\\\"../layer/Layer.js\\\").default): boolean} layerFilter Layer filter\\n     *     function, only layers which are visible and for which this function\\n     *     returns `true` will be tested for features.  By default, all visible\\n     *     layers will be tested.\\n     * @return {T|undefined} Callback result.\\n     * @template S,T,U\\n     */\\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\\n        return abstract();\\n    };\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(this: U, import(\\\"../layer/Layer.js\\\").default): boolean} layerFilter Layer filter\\n     *     function, only layers which are visible and for which this function\\n     *     returns `true` will be tested for features.  By default, all visible\\n     *     layers will be tested.\\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\\n     * @return {boolean} Is there a feature at the given coordinate?\\n     * @template U\\n     */\\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\\n        return hasFeature !== undefined;\\n    };\\n    /**\\n     * @param {import(\\\"../layer/Layer.js\\\").default} layer Layer.\\n     * @protected\\n     * @return {import(\\\"./Layer.js\\\").default} Layer renderer. May return null.\\n     */\\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\\n        var layerKey = getUid(layer);\\n        if (layerKey in this.layerRenderers_) {\\n            return this.layerRenderers_[layerKey];\\n        }\\n        var renderer = layer.getRenderer();\\n        if (!renderer) {\\n            return null;\\n        }\\n        this.layerRenderers_[layerKey] = renderer;\\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\\n        return renderer;\\n    };\\n    /**\\n     * @protected\\n     * @return {Object<string, import(\\\"./Layer.js\\\").default>} Layer renderers.\\n     */\\n    MapRenderer.prototype.getLayerRenderers = function () {\\n        return this.layerRenderers_;\\n    };\\n    /**\\n     * @return {import(\\\"../PluggableMap.js\\\").default} Map.\\n     */\\n    MapRenderer.prototype.getMap = function () {\\n        return this.map_;\\n    };\\n    /**\\n     * Handle changes in a layer renderer.\\n     * @private\\n     */\\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\\n        this.map_.render();\\n    };\\n    /**\\n     * @param {string} layerKey Layer key.\\n     * @return {import(\\\"./Layer.js\\\").default} Layer renderer.\\n     * @private\\n     */\\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\\n        var layerRenderer = this.layerRenderers_[layerKey];\\n        delete this.layerRenderers_[layerKey];\\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\\n        delete this.layerRendererListeners_[layerKey];\\n        return layerRenderer;\\n    };\\n    /**\\n     * Render.\\n     * @abstract\\n     * @param {?import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    MapRenderer.prototype.renderFrame = function (frameState) {\\n        abstract();\\n    };\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\\n        if (iconImageCache.canExpireCache()) {\\n            frameState.postRenderFunctions.push(expireIconCache);\\n        }\\n    };\\n    /**\\n     * @param {!import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\\n        var _loop_1 = function (layerKey) {\\n            if (!(layerKey in layerStatesMap)) {\\n                frameState.postRenderFunctions.push(function () {\\n                    this.removeLayerRendererByKey_(layerKey).dispose();\\n                }.bind(this_1));\\n            }\\n        };\\n        var this_1 = this;\\n        for (var layerKey in this.layerRenderers_) {\\n            _loop_1(layerKey);\\n        }\\n    };\\n    return MapRenderer;\\n}(Disposable));\\n/**\\n * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n */\\nfunction expireIconCache(map, frameState) {\\n    iconImageCache.expire();\\n}\\n/**\\n * @param {Array<import(\\\"../layer/Layer.js\\\").State>} layerStatesArray Layer states array.\\n * @return {Object<string, import(\\\"../layer/Layer.js\\\").State>} States mapped by layer uid.\\n */\\nfunction getLayerStatesMap(layerStatesArray) {\\n    return layerStatesArray.reduce(function (acc, state) {\\n        acc[getUid(state.layer)] = state;\\n        return acc;\\n    }, {});\\n}\\nexport default MapRenderer;\\n//# sourceMappingURL=Map.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/Composite\\n */\\nimport { CLASS_UNSELECTABLE } from '../css.js';\\nimport { visibleAtResolution } from '../layer/Layer.js';\\nimport RenderEvent from '../render/Event.js';\\nimport RenderEventType from '../render/EventType.js';\\nimport MapRenderer from './Map.js';\\nimport SourceState from '../source/State.js';\\nimport { replaceChildren } from '../dom.js';\\n/**\\n * @classdesc\\n * Canvas map renderer.\\n * @api\\n */\\nvar CompositeMapRenderer = /** @class */ (function (_super) {\\n    __extends(CompositeMapRenderer, _super);\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    function CompositeMapRenderer(map) {\\n        var _this = _super.call(this, map) || this;\\n        /**\\n         * @private\\n         * @type {HTMLDivElement}\\n         */\\n        _this.element_ = document.createElement('div');\\n        var style = _this.element_.style;\\n        style.position = 'absolute';\\n        style.width = '100%';\\n        style.height = '100%';\\n        style.zIndex = '0';\\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\\n        var container = map.getViewport();\\n        container.insertBefore(_this.element_, container.firstChild || null);\\n        /**\\n         * @private\\n         * @type {Array<HTMLElement>}\\n         */\\n        _this.children_ = [];\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderedVisible_ = true;\\n        return _this;\\n    }\\n    /**\\n     * @param {import(\\\"../render/EventType.js\\\").default} type Event type.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\\n        var map = this.getMap();\\n        if (map.hasListener(type)) {\\n            var event_1 = new RenderEvent(type, undefined, frameState);\\n            map.dispatchEvent(event_1);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\\n        if (!frameState) {\\n            if (this.renderedVisible_) {\\n                this.element_.style.display = 'none';\\n                this.renderedVisible_ = false;\\n            }\\n            return;\\n        }\\n        this.calculateMatrices2D(frameState);\\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\\n        var layerStatesArray = frameState.layerStatesArray;\\n        var viewResolution = frameState.viewState.resolution;\\n        this.children_.length = 0;\\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\\n            var layerState = layerStatesArray[i];\\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\\n                continue;\\n            }\\n            var layer = layerState.layer;\\n            var element = layer.render(frameState);\\n            if (element) {\\n                var zIndex = layerState.zIndex;\\n                if (zIndex !== element.style.zIndex) {\\n                    element.style.zIndex = zIndex;\\n                }\\n                this.children_.push(element);\\n            }\\n        }\\n        replaceChildren(this.element_, this.children_);\\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\\n        if (!this.renderedVisible_) {\\n            this.element_.style.display = '';\\n            this.renderedVisible_ = true;\\n        }\\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\\n        this.scheduleExpireIconCache(frameState);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\\n        var viewState = frameState.viewState;\\n        var viewResolution = viewState.resolution;\\n        var layerStates = frameState.layerStatesArray;\\n        var numLayers = layerStates.length;\\n        for (var i = numLayers - 1; i >= 0; --i) {\\n            var layerState = layerStates[i];\\n            var layer = layerState.layer;\\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\\n                var layerRenderer = this.getLayerRenderer(layer);\\n                if (!layerRenderer) {\\n                    continue;\\n                }\\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\\n                if (data) {\\n                    var result = callback(layer, data);\\n                    if (result) {\\n                        return result;\\n                    }\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    return CompositeMapRenderer;\\n}(MapRenderer));\\nexport default CompositeMapRenderer;\\n//# sourceMappingURL=Composite.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Map\\n */\\nimport PluggableMap from './PluggableMap.js';\\nimport { defaults as defaultControls } from './control/util.js';\\nimport { defaults as defaultInteractions } from './interaction.js';\\nimport { assign } from './obj.js';\\nimport CompositeMapRenderer from './renderer/Composite.js';\\n/**\\n * @classdesc\\n * The map is the core component of OpenLayers. For a map to render, a view,\\n * one or more layers, and a target container are needed:\\n *\\n *     import Map from 'ol/Map';\\n *     import View from 'ol/View';\\n *     import TileLayer from 'ol/layer/Tile';\\n *     import OSM from 'ol/source/OSM';\\n *\\n *     var map = new Map({\\n *       view: new View({\\n *         center: [0, 0],\\n *         zoom: 1\\n *       }),\\n *       layers: [\\n *         new TileLayer({\\n *           source: new OSM()\\n *         })\\n *       ],\\n *       target: 'map'\\n *     });\\n *\\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\\n * element with the id `map`.\\n *\\n * The constructor places a viewport container (with CSS class name\\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\\n * further elements within the viewport: one with CSS class name\\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\\n * itself is placed in a further element within the viewport.\\n *\\n * Layers are stored as a {@link module:ol/Collection~Collection} in\\n * layerGroups. A top-level group is provided by the library. This is what is\\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\\n * options are added to this group, and `addLayer` and `removeLayer` change the\\n * layer collection in the group. `getLayers` is a convenience function for\\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\\n * options or added with `addLayer` can be groups, which can contain further\\n * groups, and so on.\\n *\\n * @api\\n */\\nvar Map = /** @class */ (function (_super) {\\n    __extends(Map, _super);\\n    /**\\n     * @param {import(\\\"./PluggableMap.js\\\").MapOptions} options Map options.\\n     */\\n    function Map(options) {\\n        var _this = this;\\n        options = assign({}, options);\\n        if (!options.controls) {\\n            options.controls = defaultControls();\\n        }\\n        if (!options.interactions) {\\n            options.interactions = defaultInteractions();\\n        }\\n        _this = _super.call(this, options) || this;\\n        return _this;\\n    }\\n    Map.prototype.createRenderer = function () {\\n        return new CompositeMapRenderer(this);\\n    };\\n    return Map;\\n}(PluggableMap));\\nexport default Map;\\n//# sourceMappingURL=Map.js.map\",\"/**\\n * @module ol/control/util\\n */\\nimport Collection from '../Collection.js';\\nimport Attribution from './Attribution.js';\\nimport Rotate from './Rotate.js';\\nimport Zoom from './Zoom.js';\\n/**\\n * @typedef {Object} DefaultsOptions\\n * @property {boolean} [attribution=true] Include\\n * {@link module:ol/control/Attribution~Attribution}.\\n * @property {import(\\\"./Attribution.js\\\").Options} [attributionOptions]\\n * Options for {@link module:ol/control/Attribution~Attribution}.\\n * @property {boolean} [rotate=true] Include\\n * {@link module:ol/control/Rotate~Rotate}.\\n * @property {import(\\\"./Rotate.js\\\").Options} [rotateOptions] Options\\n * for {@link module:ol/control/Rotate~Rotate}.\\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\\n * @property {import(\\\"./Zoom.js\\\").Options} [zoomOptions] Options for\\n * {@link module:ol/control/Zoom~Zoom}.\\n * @api\\n */\\n/**\\n * Set of controls included in maps by default. Unless configured otherwise,\\n * this returns a collection containing an instance of each of the following\\n * controls:\\n * * {@link module:ol/control/Zoom~Zoom}\\n * * {@link module:ol/control/Rotate~Rotate}\\n * * {@link module:ol/control/Attribution~Attribution}\\n *\\n * @param {DefaultsOptions=} opt_options\\n * Defaults options.\\n * @return {Collection<import(\\\"./Control.js\\\").default>}\\n * Controls.\\n * @function module:ol/control.defaults\\n * @api\\n */\\nexport function defaults(opt_options) {\\n    var options = opt_options ? opt_options : {};\\n    var controls = new Collection();\\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\\n    if (zoomControl) {\\n        controls.push(new Zoom(options.zoomOptions));\\n    }\\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\\n    if (rotateControl) {\\n        controls.push(new Rotate(options.rotateOptions));\\n    }\\n    var attributionControl = options.attribution !== undefined ?\\n        options.attribution : true;\\n    if (attributionControl) {\\n        controls.push(new Attribution(options.attributionOptions));\\n    }\\n    return controls;\\n}\\n//# sourceMappingURL=util.js.map\",\"/**\\n * @module ol/interaction\\n */\\nimport Collection from './Collection.js';\\nimport Kinetic from './Kinetic.js';\\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\\nimport DragPan from './interaction/DragPan.js';\\nimport DragRotate from './interaction/DragRotate.js';\\nimport DragZoom from './interaction/DragZoom.js';\\nimport KeyboardPan from './interaction/KeyboardPan.js';\\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\\nimport PinchRotate from './interaction/PinchRotate.js';\\nimport PinchZoom from './interaction/PinchZoom.js';\\nimport { focus } from './events/condition.js';\\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\\nexport { default as DragBox } from './interaction/DragBox.js';\\nexport { default as DragPan } from './interaction/DragPan.js';\\nexport { default as DragRotate } from './interaction/DragRotate.js';\\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\\nexport { default as DragZoom } from './interaction/DragZoom.js';\\nexport { default as Draw } from './interaction/Draw.js';\\nexport { default as Extent } from './interaction/Extent.js';\\nexport { default as Interaction } from './interaction/Interaction.js';\\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\\nexport { default as Modify } from './interaction/Modify.js';\\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\\nexport { default as Pointer } from './interaction/Pointer.js';\\nexport { default as Select } from './interaction/Select.js';\\nexport { default as Snap } from './interaction/Snap.js';\\nexport { default as Translate } from './interaction/Translate.js';\\n/**\\n * @typedef {Object} DefaultsOptions\\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\\n * desired.\\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\\n * useful when page scroll is desired for maps that do not have the browser's\\n * focus.\\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\\n * desired.\\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\\n * @property {number} [zoomDuration] Duration of the zoom animation in\\n * milliseconds.\\n */\\n/**\\n * Set of interactions included in maps by default. Specific interactions can be\\n * excluded by setting the appropriate option to false in the constructor\\n * options, but the order of the interactions is fixed.  If you want to specify\\n * a different order for interactions, you will need to create your own\\n * {@link module:ol/interaction/Interaction} instances and insert\\n * them into a {@link module:ol/Collection} in the order you want\\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\\n * be of interest if the event propagation needs to be stopped at a point.\\n * The default set of interactions, in sequence, is:\\n * * {@link module:ol/interaction/DragRotate~DragRotate}\\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\\n * * {@link module:ol/interaction/DragPan~DragPan}\\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\\n * * {@link module:ol/interaction/DragZoom~DragZoom}\\n *\\n * @param {DefaultsOptions=} opt_options Defaults options.\\n * @return {import(\\\"./Collection.js\\\").default<import(\\\"./interaction/Interaction.js\\\").default>}\\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\\n * constructor's `interactions` option.\\n * @api\\n */\\nexport function defaults(opt_options) {\\n    var options = opt_options ? opt_options : {};\\n    var interactions = new Collection();\\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\\n        options.altShiftDragRotate : true;\\n    if (altShiftDragRotate) {\\n        interactions.push(new DragRotate());\\n    }\\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\\n        options.doubleClickZoom : true;\\n    if (doubleClickZoom) {\\n        interactions.push(new DoubleClickZoom({\\n            delta: options.zoomDelta,\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\\n    if (dragPan) {\\n        interactions.push(new DragPan({\\n            condition: options.onFocusOnly ? focus : undefined,\\n            kinetic: kinetic\\n        }));\\n    }\\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\\n        true;\\n    if (pinchRotate) {\\n        interactions.push(new PinchRotate());\\n    }\\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\\n    if (pinchZoom) {\\n        interactions.push(new PinchZoom({\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\\n    if (keyboard) {\\n        interactions.push(new KeyboardPan());\\n        interactions.push(new KeyboardZoom({\\n            delta: options.zoomDelta,\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\\n        options.mouseWheelZoom : true;\\n    if (mouseWheelZoom) {\\n        interactions.push(new MouseWheelZoom({\\n            condition: options.onFocusOnly ? focus : undefined,\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\\n        options.shiftDragZoom : true;\\n    if (shiftDragZoom) {\\n        interactions.push(new DragZoom({\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    return interactions;\\n}\\n//# sourceMappingURL=interaction.js.map\",\"/**\\n * @module ol/layer/TileProperty\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    PRELOAD: 'preload',\\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\\n};\\n//# sourceMappingURL=TileProperty.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/BaseTile\\n */\\nimport Layer from './Layer.js';\\nimport TileProperty from './TileProperty.js';\\nimport { assign } from '../obj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\\n * means no preloading.\\n * @property {import(\\\"../source/Tile.js\\\").default} [source] Source for this layer.\\n * @property {import(\\\"../PluggableMap.js\\\").default} [map] Sets the layer as overlay on a map. The map will not manage\\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\\n * use {@link module:ol/Map#addLayer}.\\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\\n */\\n/**\\n * @classdesc\\n * For layer sources that provide pre-rendered, tiled images in grids that are\\n * organized by zoom levels for specific resolutions.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @extends {Layer<import(\\\"../source/Tile.js\\\").default>}\\n * @api\\n */\\nvar BaseTileLayer = /** @class */ (function (_super) {\\n    __extends(BaseTileLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Tile layer options.\\n     */\\n    function BaseTileLayer(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var baseOptions = assign({}, options);\\n        delete baseOptions.preload;\\n        delete baseOptions.useInterimTilesOnError;\\n        _this = _super.call(this, baseOptions) || this;\\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\\n            options.useInterimTilesOnError : true);\\n        return _this;\\n    }\\n    /**\\n    * Return the level as number to which we will preload tiles up to.\\n    * @return {number} The level to preload tiles up to.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.getPreload = function () {\\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\\n    };\\n    /**\\n    * Set the level as number to which we will preload tiles up to.\\n    * @param {number} preload The level to preload tiles up to.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.setPreload = function (preload) {\\n        this.set(TileProperty.PRELOAD, preload);\\n    };\\n    /**\\n    * Whether we use interim tiles on error.\\n    * @return {boolean} Use interim tiles on error.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\\n    };\\n    /**\\n    * Set whether we use interim tiles on error.\\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\\n    };\\n    return BaseTileLayer;\\n}(Layer));\\nexport default BaseTileLayer;\\n//# sourceMappingURL=BaseTile.js.map\",\"/**\\n * @module ol/TileRange\\n */\\n/**\\n * A representation of a contiguous block of tiles.  A tile range is specified\\n * by its min/max tile coordinates and is inclusive of coordinates.\\n */\\nvar TileRange = /** @class */ (function () {\\n    /**\\n     * @param {number} minX Minimum X.\\n     * @param {number} maxX Maximum X.\\n     * @param {number} minY Minimum Y.\\n     * @param {number} maxY Maximum Y.\\n     */\\n    function TileRange(minX, maxX, minY, maxY) {\\n        /**\\n         * @type {number}\\n         */\\n        this.minX = minX;\\n        /**\\n         * @type {number}\\n         */\\n        this.maxX = maxX;\\n        /**\\n         * @type {number}\\n         */\\n        this.minY = minY;\\n        /**\\n         * @type {number}\\n         */\\n        this.maxY = maxY;\\n    }\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @return {boolean} Contains tile coordinate.\\n     */\\n    TileRange.prototype.contains = function (tileCoord) {\\n        return this.containsXY(tileCoord[1], tileCoord[2]);\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     * @return {boolean} Contains.\\n     */\\n    TileRange.prototype.containsTileRange = function (tileRange) {\\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\\n    };\\n    /**\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @return {boolean} Contains coordinate.\\n     */\\n    TileRange.prototype.containsXY = function (x, y) {\\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     * @return {boolean} Equals.\\n     */\\n    TileRange.prototype.equals = function (tileRange) {\\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     */\\n    TileRange.prototype.extend = function (tileRange) {\\n        if (tileRange.minX < this.minX) {\\n            this.minX = tileRange.minX;\\n        }\\n        if (tileRange.maxX > this.maxX) {\\n            this.maxX = tileRange.maxX;\\n        }\\n        if (tileRange.minY < this.minY) {\\n            this.minY = tileRange.minY;\\n        }\\n        if (tileRange.maxY > this.maxY) {\\n            this.maxY = tileRange.maxY;\\n        }\\n    };\\n    /**\\n     * @return {number} Height.\\n     */\\n    TileRange.prototype.getHeight = function () {\\n        return this.maxY - this.minY + 1;\\n    };\\n    /**\\n     * @return {import(\\\"./size.js\\\").Size} Size.\\n     */\\n    TileRange.prototype.getSize = function () {\\n        return [this.getWidth(), this.getHeight()];\\n    };\\n    /**\\n     * @return {number} Width.\\n     */\\n    TileRange.prototype.getWidth = function () {\\n        return this.maxX - this.minX + 1;\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     * @return {boolean} Intersects.\\n     */\\n    TileRange.prototype.intersects = function (tileRange) {\\n        return this.minX <= tileRange.maxX &&\\n            this.maxX >= tileRange.minX &&\\n            this.minY <= tileRange.maxY &&\\n            this.maxY >= tileRange.minY;\\n    };\\n    return TileRange;\\n}());\\n/**\\n * @param {number} minX Minimum X.\\n * @param {number} maxX Maximum X.\\n * @param {number} minY Minimum Y.\\n * @param {number} maxY Maximum Y.\\n * @param {TileRange=} tileRange TileRange.\\n * @return {TileRange} Tile range.\\n */\\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\\n    if (tileRange !== undefined) {\\n        tileRange.minX = minX;\\n        tileRange.maxX = maxX;\\n        tileRange.minY = minY;\\n        tileRange.maxY = maxY;\\n        return tileRange;\\n    }\\n    else {\\n        return new TileRange(minX, maxX, minY, maxY);\\n    }\\n}\\nexport default TileRange;\\n//# sourceMappingURL=TileRange.js.map\",\"/**\\n * @module ol/structs/LRUCache\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { assert } from '../asserts.js';\\nimport EventTarget from '../events/Target.js';\\nimport EventType from '../events/EventType.js';\\n/**\\n * @typedef {Object} Entry\\n * @property {string} key_\\n * @property {Object} newer\\n * @property {Object} older\\n * @property {*} value_\\n */\\n/**\\n * @classdesc\\n * Implements a Least-Recently-Used cache where the keys do not conflict with\\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\\n * items from the cache is the responsibility of the user.\\n *\\n * @fires import(\\\"../events/Event.js\\\").Event\\n * @template T\\n */\\nvar LRUCache = /** @class */ (function (_super) {\\n    __extends(LRUCache, _super);\\n    /**\\n     * @param {number=} opt_highWaterMark High water mark.\\n     */\\n    function LRUCache(opt_highWaterMark) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {number}\\n         */\\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.count_ = 0;\\n        /**\\n         * @private\\n         * @type {!Object<string, Entry>}\\n         */\\n        _this.entries_ = {};\\n        /**\\n         * @private\\n         * @type {?Entry}\\n         */\\n        _this.oldest_ = null;\\n        /**\\n         * @private\\n         * @type {?Entry}\\n         */\\n        _this.newest_ = null;\\n        return _this;\\n    }\\n    /**\\n     * @return {boolean} Can expire cache.\\n     */\\n    LRUCache.prototype.canExpireCache = function () {\\n        return this.getCount() > this.highWaterMark;\\n    };\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    LRUCache.prototype.clear = function () {\\n        this.count_ = 0;\\n        this.entries_ = {};\\n        this.oldest_ = null;\\n        this.newest_ = null;\\n        this.dispatchEvent(EventType.CLEAR);\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @return {boolean} Contains key.\\n     */\\n    LRUCache.prototype.containsKey = function (key) {\\n        return this.entries_.hasOwnProperty(key);\\n    };\\n    /**\\n     * @param {function(T, string, LRUCache): ?} f The function\\n     *     to call for every entry from the oldest to the newer. This function takes\\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\\n     *     The return value is ignored.\\n     */\\n    LRUCache.prototype.forEach = function (f) {\\n        var entry = this.oldest_;\\n        while (entry) {\\n            f(entry.value_, entry.key_, this);\\n            entry = entry.newer;\\n        }\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @param {*=} opt_options Options (reserverd for subclasses).\\n     * @return {T} Value.\\n     */\\n    LRUCache.prototype.get = function (key, opt_options) {\\n        var entry = this.entries_[key];\\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\\n        if (entry === this.newest_) {\\n            return entry.value_;\\n        }\\n        else if (entry === this.oldest_) {\\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\\n            this.oldest_.older = null;\\n        }\\n        else {\\n            entry.newer.older = entry.older;\\n            entry.older.newer = entry.newer;\\n        }\\n        entry.newer = null;\\n        entry.older = this.newest_;\\n        this.newest_.newer = entry;\\n        this.newest_ = entry;\\n        return entry.value_;\\n    };\\n    /**\\n     * Remove an entry from the cache.\\n     * @param {string} key The entry key.\\n     * @return {T} The removed entry.\\n     */\\n    LRUCache.prototype.remove = function (key) {\\n        var entry = this.entries_[key];\\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\\n        if (entry === this.newest_) {\\n            this.newest_ = /** @type {Entry} */ (entry.older);\\n            if (this.newest_) {\\n                this.newest_.newer = null;\\n            }\\n        }\\n        else if (entry === this.oldest_) {\\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\\n            if (this.oldest_) {\\n                this.oldest_.older = null;\\n            }\\n        }\\n        else {\\n            entry.newer.older = entry.older;\\n            entry.older.newer = entry.newer;\\n        }\\n        delete this.entries_[key];\\n        --this.count_;\\n        return entry.value_;\\n    };\\n    /**\\n     * @return {number} Count.\\n     */\\n    LRUCache.prototype.getCount = function () {\\n        return this.count_;\\n    };\\n    /**\\n     * @return {Array<string>} Keys.\\n     */\\n    LRUCache.prototype.getKeys = function () {\\n        var keys = new Array(this.count_);\\n        var i = 0;\\n        var entry;\\n        for (entry = this.newest_; entry; entry = entry.older) {\\n            keys[i++] = entry.key_;\\n        }\\n        return keys;\\n    };\\n    /**\\n     * @return {Array<T>} Values.\\n     */\\n    LRUCache.prototype.getValues = function () {\\n        var values = new Array(this.count_);\\n        var i = 0;\\n        var entry;\\n        for (entry = this.newest_; entry; entry = entry.older) {\\n            values[i++] = entry.value_;\\n        }\\n        return values;\\n    };\\n    /**\\n     * @return {T} Last value.\\n     */\\n    LRUCache.prototype.peekLast = function () {\\n        return this.oldest_.value_;\\n    };\\n    /**\\n     * @return {string} Last key.\\n     */\\n    LRUCache.prototype.peekLastKey = function () {\\n        return this.oldest_.key_;\\n    };\\n    /**\\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\\n     * @return {string} The newest key.\\n     */\\n    LRUCache.prototype.peekFirstKey = function () {\\n        return this.newest_.key_;\\n    };\\n    /**\\n     * @return {T} value Value.\\n     */\\n    LRUCache.prototype.pop = function () {\\n        var entry = this.oldest_;\\n        delete this.entries_[entry.key_];\\n        if (entry.newer) {\\n            entry.newer.older = null;\\n        }\\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\\n        if (!this.oldest_) {\\n            this.newest_ = null;\\n        }\\n        --this.count_;\\n        return entry.value_;\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @param {T} value Value.\\n     */\\n    LRUCache.prototype.replace = function (key, value) {\\n        this.get(key); // update `newest_`\\n        this.entries_[key].value_ = value;\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @param {T} value Value.\\n     */\\n    LRUCache.prototype.set = function (key, value) {\\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\\n        var entry = {\\n            key_: key,\\n            newer: null,\\n            older: this.newest_,\\n            value_: value\\n        };\\n        if (!this.newest_) {\\n            this.oldest_ = entry;\\n        }\\n        else {\\n            this.newest_.newer = entry;\\n        }\\n        this.newest_ = entry;\\n        this.entries_[key] = entry;\\n        ++this.count_;\\n    };\\n    /**\\n     * Set a maximum number of entries for the cache.\\n     * @param {number} size Cache size.\\n     * @api\\n     */\\n    LRUCache.prototype.setSize = function (size) {\\n        this.highWaterMark = size;\\n    };\\n    return LRUCache;\\n}(EventTarget));\\nexport default LRUCache;\\n//# sourceMappingURL=LRUCache.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { getUid } from '../../util.js';\\nimport LRUCache from '../../structs/LRUCache.js';\\n/**\\n * @module ol/render/canvas/LabelCache\\n */\\n/**\\n * @classdesc\\n * Cache of pre-rendered labels.\\n * @fires import(\\\"../events/Event.js\\\").Event\\n */\\nvar LabelCache = /** @class */ (function (_super) {\\n    __extends(LabelCache, _super);\\n    /**\\n     * @inheritDoc\\n     */\\n    function LabelCache(opt_highWaterMark) {\\n        var _this = _super.call(this, opt_highWaterMark) || this;\\n        _this.consumers = {};\\n        return _this;\\n    }\\n    LabelCache.prototype.clear = function () {\\n        _super.prototype.clear.call(this);\\n        this.consumers = {};\\n    };\\n    /**\\n     * @override\\n     * @param {string} key Label key.\\n     * @param {import(\\\"./Executor.js\\\").default} consumer Label consumer.\\n     * @return {HTMLCanvasElement} Label.\\n     */\\n    LabelCache.prototype.get = function (key, consumer) {\\n        var canvas = _super.prototype.get.call(this, key);\\n        var consumerId = getUid(consumer);\\n        if (!(consumerId in this.consumers)) {\\n            this.consumers[consumerId] = {};\\n        }\\n        this.consumers[consumerId][key] = true;\\n        return canvas;\\n    };\\n    LabelCache.prototype.prune = function () {\\n        outer: while (this.canExpireCache()) {\\n            var key = this.peekLastKey();\\n            for (var consumerId in this.consumers) {\\n                if (key in this.consumers[consumerId]) {\\n                    break outer;\\n                }\\n            }\\n            var canvas = this.pop();\\n            canvas.width = canvas.height = 0;\\n            for (var consumerId in this.consumers) {\\n                delete this.consumers[consumerId][key];\\n            }\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./Executor.js\\\").default} consumer Label consumer.\\n     */\\n    LabelCache.prototype.release = function (consumer) {\\n        delete this.consumers[getUid(consumer)];\\n    };\\n    return LabelCache;\\n}(LRUCache));\\nexport default LabelCache;\\n//# sourceMappingURL=LabelCache.js.map\",\"/**\\n * @module ol/render/canvas\\n */\\nimport { getFontFamilies } from '../css.js';\\nimport { createCanvasContext2D } from '../dom.js';\\nimport { clear } from '../obj.js';\\nimport { create as createTransform } from '../transform.js';\\nimport LabelCache from './canvas/LabelCache.js';\\n/**\\n * @typedef {Object} FillState\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} fillStyle\\n */\\n/**\\n * @typedef {Object} FillStrokeState\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [currentFillStyle]\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [currentStrokeStyle]\\n * @property {string} [currentLineCap]\\n * @property {Array<number>} currentLineDash\\n * @property {number} [currentLineDashOffset]\\n * @property {string} [currentLineJoin]\\n * @property {number} [currentLineWidth]\\n * @property {number} [currentMiterLimit]\\n * @property {number} [lastStroke]\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [fillStyle]\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [strokeStyle]\\n * @property {string} [lineCap]\\n * @property {Array<number>} lineDash\\n * @property {number} [lineDashOffset]\\n * @property {string} [lineJoin]\\n * @property {number} [lineWidth]\\n * @property {number} [miterLimit]\\n */\\n/**\\n * @typedef {Object} StrokeState\\n * @property {string} lineCap\\n * @property {Array<number>} lineDash\\n * @property {number} lineDashOffset\\n * @property {string} lineJoin\\n * @property {number} lineWidth\\n * @property {number} miterLimit\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} strokeStyle\\n */\\n/**\\n * @typedef {Object} TextState\\n * @property {string} font\\n * @property {string} [textAlign]\\n * @property {string} textBaseline\\n * @property {string} [placement]\\n * @property {number} [maxAngle]\\n * @property {boolean} [overflow]\\n * @property {import(\\\"../style/Fill.js\\\").default} [backgroundFill]\\n * @property {import(\\\"../style/Stroke.js\\\").default} [backgroundStroke]\\n * @property {number} [scale]\\n * @property {Array<number>} [padding]\\n */\\n/**\\n * Container for decluttered replay instructions that need to be rendered or\\n * omitted together, i.e. when styles render both an image and text, or for the\\n * characters that form text along lines. The basic elements of this array are\\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\\n * rendered extent of the group in pixel space. `count` is the number of styles\\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\\n * In addition to these four elements, declutter instruction arrays (i.e. the\\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\\n * @typedef {Array<*>} DeclutterGroup\\n */\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultFont = '10px sans-serif';\\n/**\\n * @const\\n * @type {import(\\\"../colorlike.js\\\").ColorLike}\\n */\\nexport var defaultFillStyle = '#000';\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultLineCap = 'round';\\n/**\\n * @const\\n * @type {Array<number>}\\n */\\nexport var defaultLineDash = [];\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var defaultLineDashOffset = 0;\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultLineJoin = 'round';\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var defaultMiterLimit = 10;\\n/**\\n * @const\\n * @type {import(\\\"../colorlike.js\\\").ColorLike}\\n */\\nexport var defaultStrokeStyle = '#000';\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultTextAlign = 'center';\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultTextBaseline = 'middle';\\n/**\\n * @const\\n * @type {Array<number>}\\n */\\nexport var defaultPadding = [0, 0, 0, 0];\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var defaultLineWidth = 1;\\n/**\\n * The label cache for text rendering. To change the default cache size of 2048\\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\\n * @type {LabelCache}\\n * @api\\n */\\nexport var labelCache = new LabelCache();\\n/**\\n * @type {!Object<string, number>}\\n */\\nexport var checkedFonts = {};\\n/**\\n * @type {CanvasRenderingContext2D}\\n */\\nvar measureContext = null;\\n/**\\n * @type {!Object<string, number>}\\n */\\nexport var textHeights = {};\\n/**\\n * Clears the label cache when a font becomes available.\\n * @param {string} fontSpec CSS font spec.\\n */\\nexport var checkFont = (function () {\\n    var retries = 60;\\n    var checked = checkedFonts;\\n    var size = '32px ';\\n    var referenceFonts = ['monospace', 'serif'];\\n    var len = referenceFonts.length;\\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\\\uF013';\\n    var interval, referenceWidth;\\n    function isAvailable(font) {\\n        var context = getMeasureContext();\\n        // Check weight ranges according to\\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\\n        for (var weight = 100; weight <= 700; weight += 300) {\\n            var fontWeight = weight + ' ';\\n            var available = true;\\n            for (var i = 0; i < len; ++i) {\\n                var referenceFont = referenceFonts[i];\\n                context.font = fontWeight + size + referenceFont;\\n                referenceWidth = context.measureText(text).width;\\n                if (font != referenceFont) {\\n                    context.font = fontWeight + size + font + ',' + referenceFont;\\n                    var width = context.measureText(text).width;\\n                    // If width and referenceWidth are the same, then the fallback was used\\n                    // instead of the font we wanted, so the font is not available.\\n                    available = available && width != referenceWidth;\\n                }\\n            }\\n            if (available) {\\n                // Consider font available when it is available in one weight range.\\n                //FIXME With this we miss rare corner cases, so we should consider\\n                //FIXME checking availability for each requested weight range.\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n    function check() {\\n        var done = true;\\n        for (var font in checked) {\\n            if (checked[font] < retries) {\\n                if (isAvailable(font)) {\\n                    checked[font] = retries;\\n                    clear(textHeights);\\n                    // Make sure that loaded fonts are picked up by Safari\\n                    measureContext = null;\\n                    labelCache.clear();\\n                }\\n                else {\\n                    ++checked[font];\\n                    done = false;\\n                }\\n            }\\n        }\\n        if (done) {\\n            clearInterval(interval);\\n            interval = undefined;\\n        }\\n    }\\n    return function (fontSpec) {\\n        var fontFamilies = getFontFamilies(fontSpec);\\n        if (!fontFamilies) {\\n            return;\\n        }\\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\\n            var fontFamily = fontFamilies[i];\\n            if (!(fontFamily in checked)) {\\n                checked[fontFamily] = retries;\\n                if (!isAvailable(fontFamily)) {\\n                    checked[fontFamily] = 0;\\n                    if (interval === undefined) {\\n                        interval = setInterval(check, 32);\\n                    }\\n                }\\n            }\\n        }\\n    };\\n})();\\n/**\\n * @return {CanvasRenderingContext2D} Measure context.\\n */\\nfunction getMeasureContext() {\\n    if (!measureContext) {\\n        measureContext = createCanvasContext2D(1, 1);\\n    }\\n    return measureContext;\\n}\\n/**\\n * @param {string} font Font to use for measuring.\\n * @return {import(\\\"../size.js\\\").Size} Measurement.\\n */\\nexport var measureTextHeight = (function () {\\n    var div;\\n    var heights = textHeights;\\n    return function (font) {\\n        var height = heights[font];\\n        if (height == undefined) {\\n            if (!div) {\\n                div = document.createElement('div');\\n                div.innerHTML = 'M';\\n                div.style.margin = div.style.padding = '0 !important';\\n                div.style.position = 'absolute !important';\\n                div.style.left = '-99999px !important';\\n            }\\n            div.style.font = font;\\n            document.body.appendChild(div);\\n            height = heights[font] = div.offsetHeight;\\n            document.body.removeChild(div);\\n        }\\n        return height;\\n    };\\n})();\\n/**\\n * @param {string} font Font.\\n * @param {string} text Text.\\n * @return {number} Width.\\n */\\nexport function measureTextWidth(font, text) {\\n    var measureContext = getMeasureContext();\\n    if (font != measureContext.font) {\\n        measureContext.font = font;\\n    }\\n    return measureContext.measureText(text).width;\\n}\\n/**\\n * Measure text width using a cache.\\n * @param {string} font The font.\\n * @param {string} text The text to measure.\\n * @param {Object<string, number>} cache A lookup of cached widths by text.\\n * @returns {number} The text width.\\n */\\nexport function measureAndCacheTextWidth(font, text, cache) {\\n    if (text in cache) {\\n        return cache[text];\\n    }\\n    var width = cache[text] = measureTextWidth(font, text);\\n    return width;\\n}\\n/**\\n * @param {string} font Font to use for measuring.\\n * @param {Array<string>} lines Lines to measure.\\n * @param {Array<number>} widths Array will be populated with the widths of\\n * each line.\\n * @return {number} Width of the whole text.\\n */\\nexport function measureTextWidths(font, lines, widths) {\\n    var numLines = lines.length;\\n    var width = 0;\\n    for (var i = 0; i < numLines; ++i) {\\n        var currentWidth = measureTextWidth(font, lines[i]);\\n        width = Math.max(width, currentWidth);\\n        widths.push(currentWidth);\\n    }\\n    return width;\\n}\\n/**\\n * @param {CanvasRenderingContext2D} context Context.\\n * @param {number} rotation Rotation.\\n * @param {number} offsetX X offset.\\n * @param {number} offsetY Y offset.\\n */\\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\\n    if (rotation !== 0) {\\n        context.translate(offsetX, offsetY);\\n        context.rotate(rotation);\\n        context.translate(-offsetX, -offsetY);\\n    }\\n}\\nexport var resetTransform = createTransform();\\n/**\\n * @param {CanvasRenderingContext2D} context Context.\\n * @param {import(\\\"../transform.js\\\").Transform|null} transform Transform.\\n * @param {number} opacity Opacity.\\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\\n * @param {number} originX Origin X.\\n * @param {number} originY Origin Y.\\n * @param {number} w Width.\\n * @param {number} h Height.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {number} scale Scale.\\n */\\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\\n    var alpha;\\n    if (opacity != 1) {\\n        alpha = context.globalAlpha;\\n        context.globalAlpha = alpha * opacity;\\n    }\\n    if (transform) {\\n        context.setTransform.apply(context, transform);\\n    }\\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\\n    if (alpha) {\\n        context.globalAlpha = alpha;\\n    }\\n    if (transform) {\\n        context.setTransform.apply(context, resetTransform);\\n    }\\n}\\n//# sourceMappingURL=canvas.js.map\",\"/**\\n * @module ol/ImageState\\n */\\n/**\\n * @enum {number}\\n */\\nexport default {\\n    IDLE: 0,\\n    LOADING: 1,\\n    LOADED: 2,\\n    ERROR: 3\\n};\\n//# sourceMappingURL=ImageState.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/Layer\\n */\\nimport { abstract } from '../util.js';\\nimport ImageState from '../ImageState.js';\\nimport Observable from '../Observable.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport SourceState from '../source/State.js';\\nvar LayerRenderer = /** @class */ (function (_super) {\\n    __extends(LayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../layer/Layer.js\\\").default} layer Layer.\\n     */\\n    function LayerRenderer(layer) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../layer/Layer.js\\\").default}\\n         */\\n        _this.layer_ = layer;\\n        return _this;\\n    }\\n    /**\\n     * Determine whether render should be called.\\n     * @abstract\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../layer/Layer.js\\\").State} layerState Layer state.\\n     * @return {boolean} Layer is ready to be rendered.\\n     */\\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\\n        return abstract();\\n    };\\n    /**\\n     * Render the layer.\\n     * @abstract\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../layer/Layer.js\\\").State} layerState Layer state.\\n     * @return {HTMLElement} The rendered element.\\n     */\\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\\n        return abstract();\\n    };\\n    /**\\n     * @param {Object<number, Object<string, import(\\\"../Tile.js\\\").default>>} tiles Lookup of loaded tiles by zoom level.\\n     * @param {number} zoom Zoom level.\\n     * @param {import(\\\"../Tile.js\\\").default} tile Tile.\\n     */\\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\\n        if (!tiles[zoom]) {\\n            tiles[zoom] = {};\\n        }\\n        tiles[zoom][tile.tileCoord.toString()] = tile;\\n    };\\n    /**\\n     * Create a function that adds loaded tiles to the tile lookup.\\n     * @param {import(\\\"../source/Tile.js\\\").default} source Tile source.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection of the tiles.\\n     * @param {Object<number, Object<string, import(\\\"../Tile.js\\\").default>>} tiles Lookup of loaded tiles by zoom level.\\n     * @return {function(number, import(\\\"../TileRange.js\\\").default):boolean} A function that can be\\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\\n     * @protected\\n     */\\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\\n        return (\\n        /**\\n         * @param {number} zoom Zoom level.\\n         * @param {import(\\\"../TileRange.js\\\").default} tileRange Tile range.\\n         * @return {boolean} The tile range is fully loaded.\\n         * @this {LayerRenderer}\\n         */\\n        function (zoom, tileRange) {\\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\\n        }).bind(this);\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(import(\\\"../Feature.js\\\").FeatureLike, import(\\\"../layer/Layer.js\\\").default): T} callback Feature callback.\\n     * @return {T|void} Callback result.\\n     * @template T\\n     */\\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\\n     *    location, null will be returned.  If there is data, but pixel values cannot be\\n     *    returned, and empty array will be returned.\\n     */\\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\\n        return abstract();\\n    };\\n    /**\\n     * @return {import(\\\"../layer/Layer.js\\\").default} Layer.\\n     */\\n    LayerRenderer.prototype.getLayer = function () {\\n        return this.layer_;\\n    };\\n    /**\\n     * Handle changes in image state.\\n     * @param {import(\\\"../events/Event.js\\\").default} event Image change event.\\n     * @private\\n     */\\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\\n        var image = /** @type {import(\\\"../Image.js\\\").default} */ (event.target);\\n        if (image.getState() === ImageState.LOADED) {\\n            this.renderIfReadyAndVisible();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {boolean} Is there a feature at the given coordinate?\\n     */\\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\\n        return false;\\n    };\\n    /**\\n     * Load the image if not already loaded, and register the image change\\n     * listener if needed.\\n     * @param {import(\\\"../ImageBase.js\\\").default} image Image.\\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\\n     * @protected\\n     */\\n    LayerRenderer.prototype.loadImage = function (image) {\\n        var imageState = image.getState();\\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\\n        }\\n        if (imageState == ImageState.IDLE) {\\n            image.load();\\n            imageState = image.getState();\\n        }\\n        return imageState == ImageState.LOADED;\\n    };\\n    /**\\n     * @protected\\n     */\\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\\n        var layer = this.getLayer();\\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\\n            layer.changed();\\n        }\\n    };\\n    return LayerRenderer;\\n}(Observable));\\nexport default LayerRenderer;\\n//# sourceMappingURL=Layer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/canvas/Layer\\n */\\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\\nimport { createCanvasContext2D } from '../../dom.js';\\nimport RenderEvent from '../../render/Event.js';\\nimport RenderEventType from '../../render/EventType.js';\\nimport { rotateAtOffset } from '../../render/canvas.js';\\nimport LayerRenderer from '../Layer.js';\\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\\n/**\\n * @abstract\\n */\\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\\n    __extends(CanvasLayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../../layer/Layer.js\\\").default} layer Layer.\\n     */\\n    function CanvasLayerRenderer(layer) {\\n        var _this = _super.call(this, layer) || this;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.renderedResolution;\\n        /**\\n         * A temporary transform.  The values in this transform should only be used in a\\n         * function that sets the values.\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.tempTransform_ = createTransform();\\n        /**\\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\\n         * be set when rendering a frame and may be used by other functions after rendering.\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.pixelTransform_ = createTransform();\\n        /**\\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\\n         * be set when rendering a frame and may be used by other functions after rendering.\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.inversePixelTransform_ = createTransform();\\n        /**\\n         * @protected\\n         * @type {CanvasRenderingContext2D}\\n         */\\n        _this.context = createCanvasContext2D();\\n        var canvas = _this.context.canvas;\\n        canvas.style.position = 'absolute';\\n        canvas.style.transformOrigin = 'top left';\\n        canvas.className = _this.getLayer().getClassName();\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\\n        this.context.canvas.width = this.context.canvas.height = 0;\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../extent.js\\\").Extent} extent Clip extent.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\\n        var pixelRatio = frameState.pixelRatio;\\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\\n        var rotation = frameState.viewState.rotation;\\n        var topLeft = getTopLeft(extent);\\n        var topRight = getTopRight(extent);\\n        var bottomRight = getBottomRight(extent);\\n        var bottomLeft = getBottomLeft(extent);\\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\\n        context.save();\\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\\n        context.beginPath();\\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\\n        context.clip();\\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../extent.js\\\").Extent} extent Clip extent.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\\n        var topLeft = getTopLeft(extent);\\n        var topRight = getTopRight(extent);\\n        var bottomRight = getBottomRight(extent);\\n        var bottomLeft = getBottomLeft(extent);\\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\\n        var inverted = this.inversePixelTransform_;\\n        applyTransform(inverted, topLeft);\\n        applyTransform(inverted, topRight);\\n        applyTransform(inverted, bottomRight);\\n        applyTransform(inverted, bottomLeft);\\n        context.save();\\n        context.beginPath();\\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\\n        context.clip();\\n    };\\n    /**\\n     * @param {import(\\\"../../render/EventType.js\\\").default} type Event type.\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @private\\n     */\\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\\n        var layer = this.getLayer();\\n        if (layer.hasListener(type)) {\\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\\n            layer.dispatchEvent(event_1);\\n        }\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\\n    };\\n    /**\\n     * Creates a transform for rendering to an element that will be rotated after rendering.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {number} width Width of the rendered element (in pixels).\\n     * @param {number} height Height of the rendered element (in pixels).\\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\\n     * @protected\\n     * @return {!import(\\\"../../transform.js\\\").Transform} Transform.\\n     */\\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\\n        var viewState = frameState.viewState;\\n        var pixelRatio = frameState.pixelRatio;\\n        var dx1 = width / 2;\\n        var dy1 = height / 2;\\n        var sx = pixelRatio / viewState.resolution;\\n        var sy = -sx;\\n        var dx2 = -viewState.center[0] + offsetX;\\n        var dy2 = -viewState.center[1];\\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\\n    };\\n    /**\\n     * @param {import(\\\"../../pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\\n     *    location, null will be returned.  If there is data, but pixel values cannot be\\n     *    returned, and empty array will be returned.\\n     */\\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\\n        var context = this.context;\\n        var data;\\n        try {\\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\\n        }\\n        catch (err) {\\n            if (err.name === 'SecurityError') {\\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\\n                return new Uint8Array();\\n            }\\n            return data;\\n        }\\n        if (data[3] === 0) {\\n            return null;\\n        }\\n        return data;\\n    };\\n    return CanvasLayerRenderer;\\n}(LayerRenderer));\\nexport default CanvasLayerRenderer;\\n//# sourceMappingURL=Layer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/canvas/TileLayer\\n */\\nimport { getUid } from '../../util.js';\\nimport TileRange from '../../TileRange.js';\\nimport TileState from '../../TileState.js';\\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\\nimport CanvasLayerRenderer from './Layer.js';\\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\\n/**\\n * @classdesc\\n * Canvas renderer for tile layers.\\n * @api\\n */\\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\\n    __extends(CanvasTileLayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../../layer/Tile.js\\\").default|import(\\\"../../layer/VectorTile.js\\\").default} tileLayer Tile layer.\\n     */\\n    function CanvasTileLayerRenderer(tileLayer) {\\n        var _this = _super.call(this, tileLayer) || this;\\n        /**\\n         * Rendered extent has changed since the previous `renderFrame()` call\\n         * @type {boolean}\\n         */\\n        _this.extentChanged = true;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.renderedExtent_ = null;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.renderedRevision;\\n        /**\\n         * @protected\\n         * @type {!Array<import(\\\"../../Tile.js\\\").default>}\\n         */\\n        _this.renderedTiles = [];\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.newTiles_ = false;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.tmpExtent = createEmpty();\\n        /**\\n         * @private\\n         * @type {import(\\\"../../TileRange.js\\\").default}\\n         */\\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.zDirection = 0;\\n        return _this;\\n    }\\n    /**\\n     * @protected\\n     * @param {import(\\\"../../Tile.js\\\").default} tile Tile.\\n     * @return {boolean} Tile is drawable.\\n     */\\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileState = tile.getState();\\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\\n        return tileState == TileState.LOADED ||\\n            tileState == TileState.EMPTY ||\\n            tileState == TileState.ERROR && !useInterimTilesOnError;\\n    };\\n    /**\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {!import(\\\"../../Tile.js\\\").default} Tile.\\n     */\\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\\n        var pixelRatio = frameState.pixelRatio;\\n        var projection = frameState.viewState.projection;\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileSource = tileLayer.getSource();\\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\\n        if (tile.getState() == TileState.ERROR) {\\n            if (!tileLayer.getUseInterimTilesOnError()) {\\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\\n                tile.setState(TileState.LOADED);\\n            }\\n            else if (tileLayer.getPreload() > 0) {\\n                // Preloaded tiles for lower resolutions might have finished loading.\\n                this.newTiles_ = true;\\n            }\\n        }\\n        if (!this.isDrawableTile(tile)) {\\n            tile = tile.getInterimTile();\\n        }\\n        return tile;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\\n        if (this.isDrawableTile(tile)) {\\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\\n        return true;\\n    };\\n    /**\\n     * TODO: File a TypeScript issue about inheritDoc not being followed\\n     * all the way.  Without this explicit return type, the VectorTileLayer\\n     * renderFrame function does not pass.\\n     *\\n     * @inheritDoc\\n     * @returns {HTMLElement} The rendered element.\\n     */\\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\\n        var context = this.context;\\n        var viewState = frameState.viewState;\\n        var projection = viewState.projection;\\n        var viewResolution = viewState.resolution;\\n        var viewCenter = viewState.center;\\n        var rotation = viewState.rotation;\\n        var pixelRatio = frameState.pixelRatio;\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileSource = tileLayer.getSource();\\n        var sourceRevision = tileSource.getRevision();\\n        var tileGrid = tileSource.getTileGridForProjection(projection);\\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\\n        var tileResolution = tileGrid.getResolution(z);\\n        var extent = frameState.extent;\\n        if (layerState.extent) {\\n            extent = getIntersection(extent, layerState.extent);\\n        }\\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\\n        // desired dimensions of the canvas in pixels\\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\\n        if (rotation) {\\n            var size = Math.round(Math.sqrt(width * width + height * height));\\n            width = height = size;\\n        }\\n        var dx = tileResolution * width / 2 / tilePixelRatio;\\n        var dy = tileResolution * height / 2 / tilePixelRatio;\\n        var canvasExtent = [\\n            viewCenter[0] - dx,\\n            viewCenter[1] - dy,\\n            viewCenter[0] + dx,\\n            viewCenter[1] + dy\\n        ];\\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\\n        /**\\n         * @type {Object<number, Object<string, import(\\\"../../Tile.js\\\").default>>}\\n         */\\n        var tilesToDrawByZ = {};\\n        tilesToDrawByZ[z] = {};\\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\\n        var tmpExtent = this.tmpExtent;\\n        var tmpTileRange = this.tmpTileRange_;\\n        this.newTiles_ = false;\\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\\n                var tile = this.getTile(z, x, y, frameState);\\n                if (this.isDrawableTile(tile)) {\\n                    var uid = getUid(this);\\n                    if (tile.getState() == TileState.LOADED) {\\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\\n                        var inTransition = tile.inTransition(uid);\\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\\n                            this.newTiles_ = true;\\n                        }\\n                    }\\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\\n                        // don't look for alt tiles if alpha is 1\\n                        continue;\\n                    }\\n                }\\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\\n                var covered = false;\\n                if (childTileRange) {\\n                    covered = findLoadedTiles(z + 1, childTileRange);\\n                }\\n                if (!covered) {\\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\\n                }\\n            }\\n        }\\n        var canvas = context.canvas;\\n        var canvasScale = tileResolution / viewResolution;\\n        // set forward and inverse pixel transforms\\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\\n        // set scale transform for calculating tile positions on the canvas\\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\\n        if (canvas.width != width || canvas.height != height) {\\n            canvas.width = width;\\n            canvas.height = height;\\n        }\\n        else {\\n            context.clearRect(0, 0, width, height);\\n        }\\n        if (layerState.extent) {\\n            this.clipUnrotated(context, frameState, layerState.extent);\\n        }\\n        this.preRender(context, frameState);\\n        this.renderedTiles.length = 0;\\n        /** @type {Array<number>} */\\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\\n        zs.sort(function (a, b) {\\n            if (a === z) {\\n                return 1;\\n            }\\n            else if (b === z) {\\n                return -1;\\n            }\\n            else {\\n                return a > b ? 1 : a < b ? -1 : 0;\\n            }\\n        });\\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\\n            var currentZ = zs[i];\\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\\n            var currentResolution = tileGrid.getResolution(currentZ);\\n            var currentScale = currentResolution / tileResolution;\\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\\n            var origin_1 = applyTransform(this.tempTransform_, [\\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\\n            ]);\\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\\n            var tilesToDraw = tilesToDrawByZ[currentZ];\\n            for (var tileCoordKey in tilesToDraw) {\\n                var tile = tilesToDraw[tileCoordKey];\\n                var tileCoord = tile.tileCoord;\\n                // Calculate integer positions and sizes so that tiles align\\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\\n                var nextX = Math.round(floatX + dx_1);\\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\\n                var nextY = Math.round(floatY + dy_1);\\n                var x = Math.round(floatX);\\n                var y = Math.round(floatY);\\n                var w = nextX - x;\\n                var h = nextY - y;\\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\\n                this.renderedTiles.push(tile);\\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\\n            }\\n        }\\n        this.renderedRevision = sourceRevision;\\n        this.renderedResolution = tileResolution;\\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\\n        this.renderedExtent_ = canvasExtent;\\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\\n        this.updateCacheSize_(frameState, tileSource);\\n        this.scheduleExpireCache(frameState, tileSource);\\n        this.postRender(context, frameState);\\n        if (layerState.extent) {\\n            context.restore();\\n        }\\n        var opacity = layerState.opacity;\\n        if (opacity !== parseFloat(canvas.style.opacity)) {\\n            canvas.style.opacity = opacity;\\n        }\\n        var canvasTransform = transformToString(this.pixelTransform_);\\n        if (canvasTransform !== canvas.style.transform) {\\n            canvas.style.transform = canvasTransform;\\n        }\\n        return canvas;\\n    };\\n    /**\\n     * @param {import(\\\"../../Tile.js\\\").default} tile Tile.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {number} x Left of the tile.\\n     * @param {number} y Top of the tile.\\n     * @param {number} w Width of the tile.\\n     * @param {number} h Height of the tile.\\n     * @param {number} gutter Tile gutter.\\n     * @param {boolean} transition Apply an alpha transition.\\n     */\\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\\n        var image = this.getTileImage(tile);\\n        if (!image) {\\n            return;\\n        }\\n        var uid = getUid(this);\\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileSource = tileLayer.getSource();\\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\\n            this.context.clearRect(x, y, w, h);\\n        }\\n        var alphaChanged = alpha !== this.context.globalAlpha;\\n        if (alphaChanged) {\\n            this.context.save();\\n            this.context.globalAlpha = alpha;\\n        }\\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\\n        if (alphaChanged) {\\n            this.context.restore();\\n        }\\n        if (alpha !== 1) {\\n            frameState.animate = true;\\n        }\\n        else if (transition) {\\n            tile.endTransition(uid);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTileLayerRenderer.prototype.getImage = function () {\\n        var context = this.context;\\n        return context ? context.canvas : null;\\n    };\\n    /**\\n     * Get the image from a tile.\\n     * @param {import(\\\"../../Tile.js\\\").default} tile Tile.\\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\\n        return /** @type {import(\\\"../../ImageTile.js\\\").default} */ (tile).getImage();\\n    };\\n    /**\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\\n        if (tileSource.canExpireCache()) {\\n            /**\\n             * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n             * @param {import(\\\"../../PluggableMap.js\\\").default} map Map.\\n             * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n             */\\n            var postRenderFunction = function (tileSource, map, frameState) {\\n                var tileSourceKey = getUid(tileSource);\\n                if (tileSourceKey in frameState.usedTiles) {\\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\\n                }\\n            }.bind(null, tileSource);\\n            frameState.postRenderFunctions.push(\\n            /** @type {import(\\\"../../PluggableMap.js\\\").PostRenderFunction} */ (postRenderFunction));\\n        }\\n    };\\n    /**\\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @param {import('../../Tile.js').default} tile Tile.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\\n        // FIXME should we use tilesToDrawByZ instead?\\n        var tileSourceKey = getUid(tileSource);\\n        if (!(tileSourceKey in usedTiles)) {\\n            usedTiles[tileSourceKey] = {};\\n        }\\n        usedTiles[tileSourceKey][tile.getKey()] = true;\\n    };\\n    /**\\n     * Check if the cache is big enough, and increase its size if necessary.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @private\\n     */\\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\\n        var tileSourceKey = getUid(tileSource);\\n        var size = 0;\\n        if (tileSourceKey in frameState.usedTiles) {\\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\\n        }\\n        if (tileSourceKey in frameState.wantedTiles) {\\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\\n        }\\n        var tileCache = tileSource.tileCache;\\n        if (tileCache.highWaterMark < size) {\\n            tileCache.highWaterMark = size;\\n        }\\n    };\\n    /**\\n     * Manage tile pyramid.\\n     * This function performs a number of functions related to the tiles at the\\n     * current zoom and lower zoom levels:\\n     * - registers idle tiles in frameState.wantedTiles so that they are not\\n     *   discarded by the tile queue\\n     * - enqueues missing tiles\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @param {import(\\\"../../tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../../proj/Projection.js\\\").default} projection Projection.\\n     * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n     * @param {number} currentZ Current Z.\\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\\n     * @param {function(import(\\\"../../Tile.js\\\").default)=} opt_tileCallback Tile callback.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\\n        var tileSourceKey = getUid(tileSource);\\n        if (!(tileSourceKey in frameState.wantedTiles)) {\\n            frameState.wantedTiles[tileSourceKey] = {};\\n        }\\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\\n        var tileQueue = frameState.tileQueue;\\n        var minZoom = tileGrid.getMinZoom();\\n        var tile, tileRange, tileResolution, x, y, z;\\n        for (z = minZoom; z <= currentZ; ++z) {\\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\\n            tileResolution = tileGrid.getResolution(z);\\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\\n                    if (currentZ - z <= preload) {\\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\\n                        if (tile.getState() == TileState.IDLE) {\\n                            wantedTiles[tile.getKey()] = true;\\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\\n                                tileQueue.enqueue([tile, tileSourceKey,\\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\\n                            }\\n                        }\\n                        if (opt_tileCallback !== undefined) {\\n                            opt_tileCallback(tile);\\n                        }\\n                    }\\n                    else {\\n                        tileSource.useTile(z, x, y, projection);\\n                    }\\n                }\\n            }\\n        }\\n    };\\n    return CanvasTileLayerRenderer;\\n}(CanvasLayerRenderer));\\n/**\\n * @function\\n * @return {import(\\\"../../layer/Tile.js\\\").default|import(\\\"../../layer/VectorTile.js\\\").default}\\n */\\nCanvasTileLayerRenderer.prototype.getLayer;\\nexport default CanvasTileLayerRenderer;\\n//# sourceMappingURL=TileLayer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Tile\\n */\\nimport BaseTileLayer from './BaseTile.js';\\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\\n/**\\n * @typedef {import(\\\"./BaseTile.js\\\").Options} Options\\n */\\n/**\\n * @classdesc\\n * For layer sources that provide pre-rendered, tiled images in grids that are\\n * organized by zoom levels for specific resolutions.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @api\\n */\\nvar TileLayer = /** @class */ (function (_super) {\\n    __extends(TileLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Tile layer options.\\n     */\\n    function TileLayer(opt_options) {\\n        return _super.call(this, opt_options) || this;\\n    }\\n    /**\\n     * Create a renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} A layer renderer.\\n     * @protected\\n     */\\n    TileLayer.prototype.createRenderer = function () {\\n        return new CanvasTileLayerRenderer(this);\\n    };\\n    return TileLayer;\\n}(BaseTileLayer));\\nexport default TileLayer;\\n//# sourceMappingURL=Tile.js.map\",\"/**\\n * @module ol/colorlike\\n */\\nimport { toString } from './color.js';\\n/**\\n * A type accepted by CanvasRenderingContext2D.fillStyle\\n * or CanvasRenderingContext2D.strokeStyle.\\n * Represents a color, pattern, or gradient. The origin for patterns and\\n * gradients as fill style is an increment of 512 css pixels from map coordinate\\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\\n * must be a factor of two (2, 4, 8, ..., 512).\\n *\\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\\n * @api\\n */\\n/**\\n * @param {import(\\\"./color.js\\\").Color|ColorLike} color Color.\\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\\n * @api\\n */\\nexport function asColorLike(color) {\\n    if (Array.isArray(color)) {\\n        return toString(color);\\n    }\\n    else {\\n        return color;\\n    }\\n}\\n//# sourceMappingURL=colorlike.js.map\",\"/**\\n * @module ol/style/Image\\n */\\nimport { abstract } from '../util.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} opacity\\n * @property {boolean} rotateWithView\\n * @property {number} rotation\\n * @property {number} scale\\n */\\n/**\\n * @classdesc\\n * A base class used for creating subclasses and not instantiated in\\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\\n * {@link module:ol/style/RegularShape~RegularShape}.\\n * @abstract\\n * @api\\n */\\nvar ImageStyle = /** @class */ (function () {\\n    /**\\n     * @param {Options} options Options.\\n     */\\n    function ImageStyle(options) {\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.opacity_ = options.opacity;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.rotateWithView_ = options.rotateWithView;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.rotation_ = options.rotation;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.scale_ = options.scale;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {ImageStyle} The cloned style.\\n     * @api\\n     */\\n    ImageStyle.prototype.clone = function () {\\n        return new ImageStyle({\\n            opacity: this.getOpacity(),\\n            scale: this.getScale(),\\n            rotation: this.getRotation(),\\n            rotateWithView: this.getRotateWithView()\\n        });\\n    };\\n    /**\\n     * Get the symbolizer opacity.\\n     * @return {number} Opacity.\\n     * @api\\n     */\\n    ImageStyle.prototype.getOpacity = function () {\\n        return this.opacity_;\\n    };\\n    /**\\n     * Determine whether the symbolizer rotates with the map.\\n     * @return {boolean} Rotate with map.\\n     * @api\\n     */\\n    ImageStyle.prototype.getRotateWithView = function () {\\n        return this.rotateWithView_;\\n    };\\n    /**\\n     * Get the symoblizer rotation.\\n     * @return {number} Rotation.\\n     * @api\\n     */\\n    ImageStyle.prototype.getRotation = function () {\\n        return this.rotation_;\\n    };\\n    /**\\n     * Get the symbolizer scale.\\n     * @return {number} Scale.\\n     * @api\\n     */\\n    ImageStyle.prototype.getScale = function () {\\n        return this.scale_;\\n    };\\n    /**\\n     * Get the anchor point in pixels. The anchor determines the center point for the\\n     * symbolizer.\\n     * @abstract\\n     * @return {Array<number>} Anchor.\\n     */\\n    ImageStyle.prototype.getAnchor = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Get the image element for the symbolizer.\\n     * @abstract\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\\n     */\\n    ImageStyle.prototype.getImage = function (pixelRatio) {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\\n     */\\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"../ImageState.js\\\").default} Image state.\\n     */\\n    ImageStyle.prototype.getImageState = function () {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"../size.js\\\").Size} Image size.\\n     */\\n    ImageStyle.prototype.getImageSize = function () {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"../size.js\\\").Size} Size of the hit-detection image.\\n     */\\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Get the origin of the symbolizer.\\n     * @abstract\\n     * @return {Array<number>} Origin.\\n     */\\n    ImageStyle.prototype.getOrigin = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Get the size of the symbolizer (in pixels).\\n     * @abstract\\n     * @return {import(\\\"../size.js\\\").Size} Size.\\n     */\\n    ImageStyle.prototype.getSize = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Set the opacity.\\n     *\\n     * @param {number} opacity Opacity.\\n     * @api\\n     */\\n    ImageStyle.prototype.setOpacity = function (opacity) {\\n        this.opacity_ = opacity;\\n    };\\n    /**\\n     * Set whether to rotate the style with the view.\\n     *\\n     * @param {boolean} rotateWithView Rotate with map.\\n     * @api\\n     */\\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\\n        this.rotateWithView_ = rotateWithView;\\n    };\\n    /**\\n     * Set the rotation.\\n     *\\n     * @param {number} rotation Rotation.\\n     * @api\\n     */\\n    ImageStyle.prototype.setRotation = function (rotation) {\\n        this.rotation_ = rotation;\\n    };\\n    /**\\n     * Set the scale.\\n     *\\n     * @param {number} scale Scale.\\n     * @api\\n     */\\n    ImageStyle.prototype.setScale = function (scale) {\\n        this.scale_ = scale;\\n    };\\n    /**\\n     * @abstract\\n     * @param {function(this: T, import(\\\"../events/Event.js\\\").default): void} listener Listener function.\\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\\n     * @return {import(\\\"../events.js\\\").EventsKey|undefined} Listener key.\\n     * @template T\\n     */\\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\\n        return abstract();\\n    };\\n    /**\\n     * Load not yet loaded URI.\\n     * @abstract\\n     */\\n    ImageStyle.prototype.load = function () {\\n        abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {function(this: T, import(\\\"../events/Event.js\\\").default): void} listener Listener function.\\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\\n     * @template T\\n     */\\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\\n        abstract();\\n    };\\n    return ImageStyle;\\n}());\\nexport default ImageStyle;\\n//# sourceMappingURL=Image.js.map\",\"/**\\n * @module ol/style/RegularShape\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { asColorLike } from '../colorlike.js';\\nimport { createCanvasContext2D } from '../dom.js';\\nimport ImageState from '../ImageState.js';\\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\\nimport ImageStyle from './Image.js';\\n/**\\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\\n * @typedef {Object} Options\\n * @property {import(\\\"./Fill.js\\\").default} [fill] Fill style.\\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\\n * is the number of sides.\\n * @property {number} [radius] Radius of a regular polygon.\\n * @property {number} [radius1] Outer radius of a star.\\n * @property {number} [radius2] Inner radius of a star.\\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\\n * @property {import(\\\"./Stroke.js\\\").default} [stroke] Stroke style.\\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\\n */\\n/**\\n * @typedef {Object} RenderOptions\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [strokeStyle]\\n * @property {number} strokeWidth\\n * @property {number} size\\n * @property {string} lineCap\\n * @property {Array<number>} lineDash\\n * @property {number} lineDashOffset\\n * @property {string} lineJoin\\n * @property {number} miterLimit\\n */\\n/**\\n * @classdesc\\n * Set regular shape style for vector features. The resulting shape will be\\n * a regular polygon when `radius` is provided, or a star when `radius1` and\\n * `radius2` are provided.\\n * @api\\n */\\nvar RegularShape = /** @class */ (function (_super) {\\n    __extends(RegularShape, _super);\\n    /**\\n     * @param {Options} options Options.\\n     */\\n    function RegularShape(options) {\\n        var _this = this;\\n        /**\\n         * @type {boolean}\\n         */\\n        var rotateWithView = options.rotateWithView !== undefined ?\\n            options.rotateWithView : false;\\n        _this = _super.call(this, {\\n            opacity: 1,\\n            rotateWithView: rotateWithView,\\n            rotation: options.rotation !== undefined ? options.rotation : 0,\\n            scale: 1\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement}\\n         */\\n        _this.canvas_ = null;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement}\\n         */\\n        _this.hitDetectionCanvas_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Fill.js\\\").default}\\n         */\\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.origin_ = [0, 0];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.points_ = options.points;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\\n            options.radius : options.radius1);\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.radius2_ = options.radius2;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Stroke.js\\\").default}\\n         */\\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.anchor_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.size_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.imageSize_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.hitDetectionImageSize_ = null;\\n        _this.render_();\\n        return _this;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {RegularShape} The cloned style.\\n     * @api\\n     */\\n    RegularShape.prototype.clone = function () {\\n        var style = new RegularShape({\\n            fill: this.getFill() ? this.getFill().clone() : undefined,\\n            points: this.getPoints(),\\n            radius: this.getRadius(),\\n            radius2: this.getRadius2(),\\n            angle: this.getAngle(),\\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\\n            rotation: this.getRotation(),\\n            rotateWithView: this.getRotateWithView()\\n        });\\n        style.setOpacity(this.getOpacity());\\n        style.setScale(this.getScale());\\n        return style;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    RegularShape.prototype.getAnchor = function () {\\n        return this.anchor_;\\n    };\\n    /**\\n     * Get the angle used in generating the shape.\\n     * @return {number} Shape's rotation in radians.\\n     * @api\\n     */\\n    RegularShape.prototype.getAngle = function () {\\n        return this.angle_;\\n    };\\n    /**\\n     * Get the fill style for the shape.\\n     * @return {import(\\\"./Fill.js\\\").default} Fill style.\\n     * @api\\n     */\\n    RegularShape.prototype.getFill = function () {\\n        return this.fill_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\\n        return this.hitDetectionCanvas_;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    RegularShape.prototype.getImage = function (pixelRatio) {\\n        return this.canvas_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.getImageSize = function () {\\n        return this.imageSize_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.getHitDetectionImageSize = function () {\\n        return this.hitDetectionImageSize_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.getImageState = function () {\\n        return ImageState.LOADED;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    RegularShape.prototype.getOrigin = function () {\\n        return this.origin_;\\n    };\\n    /**\\n     * Get the number of points for generating the shape.\\n     * @return {number} Number of points for stars and regular polygons.\\n     * @api\\n     */\\n    RegularShape.prototype.getPoints = function () {\\n        return this.points_;\\n    };\\n    /**\\n     * Get the (primary) radius for the shape.\\n     * @return {number} Radius.\\n     * @api\\n     */\\n    RegularShape.prototype.getRadius = function () {\\n        return this.radius_;\\n    };\\n    /**\\n     * Get the secondary radius for the shape.\\n     * @return {number|undefined} Radius2.\\n     * @api\\n     */\\n    RegularShape.prototype.getRadius2 = function () {\\n        return this.radius2_;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    RegularShape.prototype.getSize = function () {\\n        return this.size_;\\n    };\\n    /**\\n     * Get the stroke style for the shape.\\n     * @return {import(\\\"./Stroke.js\\\").default} Stroke style.\\n     * @api\\n     */\\n    RegularShape.prototype.getStroke = function () {\\n        return this.stroke_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\\n        return undefined;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.load = function () { };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\\n    /**\\n     * @protected\\n     */\\n    RegularShape.prototype.render_ = function () {\\n        var lineCap = '';\\n        var lineJoin = '';\\n        var miterLimit = 0;\\n        var lineDash = null;\\n        var lineDashOffset = 0;\\n        var strokeStyle;\\n        var strokeWidth = 0;\\n        if (this.stroke_) {\\n            strokeStyle = this.stroke_.getColor();\\n            if (strokeStyle === null) {\\n                strokeStyle = defaultStrokeStyle;\\n            }\\n            strokeStyle = asColorLike(strokeStyle);\\n            strokeWidth = this.stroke_.getWidth();\\n            if (strokeWidth === undefined) {\\n                strokeWidth = defaultLineWidth;\\n            }\\n            lineDash = this.stroke_.getLineDash();\\n            lineDashOffset = this.stroke_.getLineDashOffset();\\n            lineJoin = this.stroke_.getLineJoin();\\n            if (lineJoin === undefined) {\\n                lineJoin = defaultLineJoin;\\n            }\\n            lineCap = this.stroke_.getLineCap();\\n            if (lineCap === undefined) {\\n                lineCap = defaultLineCap;\\n            }\\n            miterLimit = this.stroke_.getMiterLimit();\\n            if (miterLimit === undefined) {\\n                miterLimit = defaultMiterLimit;\\n            }\\n        }\\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\\n        /** @type {RenderOptions} */\\n        var renderOptions = {\\n            strokeStyle: strokeStyle,\\n            strokeWidth: strokeWidth,\\n            size: size,\\n            lineCap: lineCap,\\n            lineDash: lineDash,\\n            lineDashOffset: lineDashOffset,\\n            lineJoin: lineJoin,\\n            miterLimit: miterLimit\\n        };\\n        var context = createCanvasContext2D(size, size);\\n        this.canvas_ = context.canvas;\\n        // canvas.width and height are rounded to the closest integer\\n        size = this.canvas_.width;\\n        var imageSize = size;\\n        this.draw_(renderOptions, context, 0, 0);\\n        this.createHitDetectionCanvas_(renderOptions);\\n        this.anchor_ = [size / 2, size / 2];\\n        this.size_ = [size, size];\\n        this.imageSize_ = [imageSize, imageSize];\\n    };\\n    /**\\n     * @private\\n     * @param {RenderOptions} renderOptions Render options.\\n     * @param {CanvasRenderingContext2D} context The rendering context.\\n     * @param {number} x The origin for the symbol (x).\\n     * @param {number} y The origin for the symbol (y).\\n     */\\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\\n        var i, angle0, radiusC;\\n        // reset transform\\n        context.setTransform(1, 0, 0, 1, 0, 0);\\n        // then move to (x, y)\\n        context.translate(x, y);\\n        context.beginPath();\\n        var points = this.points_;\\n        if (points === Infinity) {\\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\\n        }\\n        else {\\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\\n                : this.radius_;\\n            if (radius2 !== this.radius_) {\\n                points = 2 * points;\\n            }\\n            for (i = 0; i <= points; i++) {\\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\\n            }\\n        }\\n        if (this.fill_) {\\n            var color = this.fill_.getColor();\\n            if (color === null) {\\n                color = defaultFillStyle;\\n            }\\n            context.fillStyle = asColorLike(color);\\n            context.fill();\\n        }\\n        if (this.stroke_) {\\n            context.strokeStyle = renderOptions.strokeStyle;\\n            context.lineWidth = renderOptions.strokeWidth;\\n            if (context.setLineDash && renderOptions.lineDash) {\\n                context.setLineDash(renderOptions.lineDash);\\n                context.lineDashOffset = renderOptions.lineDashOffset;\\n            }\\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\\n            context.miterLimit = renderOptions.miterLimit;\\n            context.stroke();\\n        }\\n        context.closePath();\\n    };\\n    /**\\n     * @private\\n     * @param {RenderOptions} renderOptions Render options.\\n     */\\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\\n        if (this.fill_) {\\n            this.hitDetectionCanvas_ = this.canvas_;\\n            return;\\n        }\\n        // if no fill style is set, create an extra hit-detection image with a\\n        // default fill style\\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\\n        this.hitDetectionCanvas_ = context.canvas;\\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\\n    };\\n    /**\\n     * @private\\n     * @param {RenderOptions} renderOptions Render options.\\n     * @param {CanvasRenderingContext2D} context The context.\\n     * @param {number} x The origin for the symbol (x).\\n     * @param {number} y The origin for the symbol (y).\\n     */\\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\\n        // reset transform\\n        context.setTransform(1, 0, 0, 1, 0, 0);\\n        // then move to (x, y)\\n        context.translate(x, y);\\n        context.beginPath();\\n        var points = this.points_;\\n        if (points === Infinity) {\\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\\n        }\\n        else {\\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\\n                : this.radius_;\\n            if (radius2 !== this.radius_) {\\n                points = 2 * points;\\n            }\\n            var i = void 0, radiusC = void 0, angle0 = void 0;\\n            for (i = 0; i <= points; i++) {\\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\\n            }\\n        }\\n        context.fillStyle = defaultFillStyle;\\n        context.fill();\\n        if (this.stroke_) {\\n            context.strokeStyle = renderOptions.strokeStyle;\\n            context.lineWidth = renderOptions.strokeWidth;\\n            if (renderOptions.lineDash) {\\n                context.setLineDash(renderOptions.lineDash);\\n                context.lineDashOffset = renderOptions.lineDashOffset;\\n            }\\n            context.stroke();\\n        }\\n        context.closePath();\\n    };\\n    return RegularShape;\\n}(ImageStyle));\\nexport default RegularShape;\\n//# sourceMappingURL=RegularShape.js.map\",\"/**\\n * @module ol/style/Circle\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport RegularShape from './RegularShape.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Fill.js\\\").default} [fill] Fill style.\\n * @property {number} radius Circle radius.\\n * @property {import(\\\"./Stroke.js\\\").default} [stroke] Stroke style.\\n */\\n/**\\n * @classdesc\\n * Set circle style for vector features.\\n * @api\\n */\\nvar CircleStyle = /** @class */ (function (_super) {\\n    __extends(CircleStyle, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function CircleStyle(opt_options) {\\n        var _this = this;\\n        var options = opt_options || /** @type {Options} */ ({});\\n        _this = _super.call(this, {\\n            points: Infinity,\\n            fill: options.fill,\\n            radius: options.radius,\\n            stroke: options.stroke\\n        }) || this;\\n        return _this;\\n    }\\n    /**\\n    * Clones the style.\\n    * @return {CircleStyle} The cloned style.\\n    * @override\\n    * @api\\n    */\\n    CircleStyle.prototype.clone = function () {\\n        var style = new CircleStyle({\\n            fill: this.getFill() ? this.getFill().clone() : undefined,\\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\\n            radius: this.getRadius()\\n        });\\n        style.setOpacity(this.getOpacity());\\n        style.setScale(this.getScale());\\n        return style;\\n    };\\n    /**\\n    * Set the circle radius.\\n    *\\n    * @param {number} radius Circle radius.\\n    * @api\\n    */\\n    CircleStyle.prototype.setRadius = function (radius) {\\n        this.radius_ = radius;\\n    };\\n    return CircleStyle;\\n}(RegularShape));\\nexport default CircleStyle;\\n//# sourceMappingURL=Circle.js.map\",\"/**\\n * @module ol/style/Fill\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} [color=null] A color, gradient or pattern.\\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\\n * Default null; if null, the Canvas/renderer default black will be used.\\n */\\n/**\\n * @classdesc\\n * Set fill style for vector features.\\n * @api\\n */\\nvar Fill = /** @class */ (function () {\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function Fill(opt_options) {\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike}\\n         */\\n        this.color_ = options.color !== undefined ? options.color : null;\\n    }\\n    /**\\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\\n     * @return {Fill} The cloned style.\\n     * @api\\n     */\\n    Fill.prototype.clone = function () {\\n        var color = this.getColor();\\n        return new Fill({\\n            color: Array.isArray(color) ? color.slice() : color || undefined\\n        });\\n    };\\n    /**\\n     * Get the fill color.\\n     * @return {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} Color.\\n     * @api\\n     */\\n    Fill.prototype.getColor = function () {\\n        return this.color_;\\n    };\\n    /**\\n     * Set the color.\\n     *\\n     * @param {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} color Color.\\n     * @api\\n     */\\n    Fill.prototype.setColor = function (color) {\\n        this.color_ = color;\\n    };\\n    return Fill;\\n}());\\nexport default Fill;\\n//# sourceMappingURL=Fill.js.map\",\"/**\\n * @module ol/style/Stroke\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} [color] A color, gradient or pattern.\\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\\n * Default null; if null, the Canvas/renderer default black will be used.\\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\\n * @property {number} [lineDashOffset=0] Line dash offset.\\n * @property {number} [miterLimit=10] Miter limit.\\n * @property {number} [width] Width.\\n */\\n/**\\n * @classdesc\\n * Set stroke style for vector features.\\n * Note that the defaults given are the Canvas defaults, which will be used if\\n * option is not defined. The `get` functions return whatever was entered in\\n * the options; they will not return the default.\\n * @api\\n */\\nvar Stroke = /** @class */ (function () {\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function Stroke(opt_options) {\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike}\\n         */\\n        this.color_ = options.color !== undefined ? options.color : null;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.lineCap_ = options.lineCap;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.lineDashOffset_ = options.lineDashOffset;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.lineJoin_ = options.lineJoin;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.miterLimit_ = options.miterLimit;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.width_ = options.width;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {Stroke} The cloned style.\\n     * @api\\n     */\\n    Stroke.prototype.clone = function () {\\n        var color = this.getColor();\\n        return new Stroke({\\n            color: Array.isArray(color) ? color.slice() : color || undefined,\\n            lineCap: this.getLineCap(),\\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\\n            lineDashOffset: this.getLineDashOffset(),\\n            lineJoin: this.getLineJoin(),\\n            miterLimit: this.getMiterLimit(),\\n            width: this.getWidth()\\n        });\\n    };\\n    /**\\n     * Get the stroke color.\\n     * @return {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} Color.\\n     * @api\\n     */\\n    Stroke.prototype.getColor = function () {\\n        return this.color_;\\n    };\\n    /**\\n     * Get the line cap type for the stroke.\\n     * @return {string|undefined} Line cap.\\n     * @api\\n     */\\n    Stroke.prototype.getLineCap = function () {\\n        return this.lineCap_;\\n    };\\n    /**\\n     * Get the line dash style for the stroke.\\n     * @return {Array<number>} Line dash.\\n     * @api\\n     */\\n    Stroke.prototype.getLineDash = function () {\\n        return this.lineDash_;\\n    };\\n    /**\\n     * Get the line dash offset for the stroke.\\n     * @return {number|undefined} Line dash offset.\\n     * @api\\n     */\\n    Stroke.prototype.getLineDashOffset = function () {\\n        return this.lineDashOffset_;\\n    };\\n    /**\\n     * Get the line join type for the stroke.\\n     * @return {string|undefined} Line join.\\n     * @api\\n     */\\n    Stroke.prototype.getLineJoin = function () {\\n        return this.lineJoin_;\\n    };\\n    /**\\n     * Get the miter limit for the stroke.\\n     * @return {number|undefined} Miter limit.\\n     * @api\\n     */\\n    Stroke.prototype.getMiterLimit = function () {\\n        return this.miterLimit_;\\n    };\\n    /**\\n     * Get the stroke width.\\n     * @return {number|undefined} Width.\\n     * @api\\n     */\\n    Stroke.prototype.getWidth = function () {\\n        return this.width_;\\n    };\\n    /**\\n     * Set the color.\\n     *\\n     * @param {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} color Color.\\n     * @api\\n     */\\n    Stroke.prototype.setColor = function (color) {\\n        this.color_ = color;\\n    };\\n    /**\\n     * Set the line cap.\\n     *\\n     * @param {string|undefined} lineCap Line cap.\\n     * @api\\n     */\\n    Stroke.prototype.setLineCap = function (lineCap) {\\n        this.lineCap_ = lineCap;\\n    };\\n    /**\\n     * Set the line dash.\\n     *\\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\\n     * property will have no visual effect in these browsers.\\n     *\\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\\n     *\\n     * @param {Array<number>} lineDash Line dash.\\n     * @api\\n     */\\n    Stroke.prototype.setLineDash = function (lineDash) {\\n        this.lineDash_ = lineDash;\\n    };\\n    /**\\n     * Set the line dash offset.\\n     *\\n     * @param {number|undefined} lineDashOffset Line dash offset.\\n     * @api\\n     */\\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\\n        this.lineDashOffset_ = lineDashOffset;\\n    };\\n    /**\\n     * Set the line join.\\n     *\\n     * @param {string|undefined} lineJoin Line join.\\n     * @api\\n     */\\n    Stroke.prototype.setLineJoin = function (lineJoin) {\\n        this.lineJoin_ = lineJoin;\\n    };\\n    /**\\n     * Set the miter limit.\\n     *\\n     * @param {number|undefined} miterLimit Miter limit.\\n     * @api\\n     */\\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\\n        this.miterLimit_ = miterLimit;\\n    };\\n    /**\\n     * Set the width.\\n     *\\n     * @param {number|undefined} width Width.\\n     * @api\\n     */\\n    Stroke.prototype.setWidth = function (width) {\\n        this.width_ = width;\\n    };\\n    return Stroke;\\n}());\\nexport default Stroke;\\n//# sourceMappingURL=Stroke.js.map\",\"/**\\n * @module ol/style/Style\\n */\\n/**\\n * Feature styles.\\n *\\n * If no style is defined, the following default style is used:\\n * ```js\\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\\n *\\n *  var fill = new Fill({\\n *    color: 'rgba(255,255,255,0.4)'\\n *  });\\n *  var stroke = new Stroke({\\n *    color: '#3399CC',\\n *    width: 1.25\\n *  });\\n *  var styles = [\\n *    new Style({\\n *      image: new Circle({\\n *        fill: fill,\\n *        stroke: stroke,\\n *        radius: 5\\n *      }),\\n *      fill: fill,\\n *      stroke: stroke\\n *    })\\n *  ];\\n * ```\\n *\\n * A separate editing style has the following defaults:\\n * ```js\\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\\n *  import GeometryType from 'ol/geom/GeometryType';\\n *\\n *  var white = [255, 255, 255, 1];\\n *  var blue = [0, 153, 255, 1];\\n *  var width = 3;\\n *  styles[GeometryType.POLYGON] = [\\n *    new Style({\\n *      fill: new Fill({\\n *        color: [255, 255, 255, 0.5]\\n *      })\\n *    })\\n *  ];\\n *  styles[GeometryType.MULTI_POLYGON] =\\n *      styles[GeometryType.POLYGON];\\n *  styles[GeometryType.LINE_STRING] = [\\n *    new Style({\\n *      stroke: new Stroke({\\n *        color: white,\\n *        width: width + 2\\n *      })\\n *    }),\\n *    new Style({\\n *      stroke: new Stroke({\\n *        color: blue,\\n *        width: width\\n *      })\\n *    })\\n *  ];\\n *  styles[GeometryType.MULTI_LINE_STRING] =\\n *      styles[GeometryType.LINE_STRING];\\n *  styles[GeometryType.POINT] = [\\n *    new Style({\\n *      image: new Circle({\\n *        radius: width * 2,\\n *        fill: new Fill({\\n *          color: blue\\n *        }),\\n *        stroke: new Stroke({\\n *          color: white,\\n *          width: width / 2\\n *        })\\n *      }),\\n *      zIndex: Infinity\\n *    })\\n *  ];\\n *  styles[GeometryType.MULTI_POINT] =\\n *      styles[GeometryType.POINT];\\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\\n *      styles[GeometryType.POLYGON].concat(\\n *          styles[GeometryType.LINE_STRING],\\n *          styles[GeometryType.POINT]\\n *      );\\n * ```\\n */\\nimport { assert } from '../asserts.js';\\nimport GeometryType from '../geom/GeometryType.js';\\nimport CircleStyle from './Circle.js';\\nimport Fill from './Fill.js';\\nimport Stroke from './Stroke.js';\\n/**\\n * A function that takes an {@link module:ol/Feature} and a `{number}`\\n * representing the view's resolution. The function should return a\\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\\n * vector layer can be styled.\\n *\\n * @typedef {function(import(\\\"../Feature.js\\\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\\n */\\n/**\\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\\n */\\n/**\\n * A function that takes an {@link module:ol/Feature} as argument and returns an\\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\\n *\\n * @typedef {function(import(\\\"../Feature.js\\\").FeatureLike):\\n *     (import(\\\"../geom/Geometry.js\\\").default|import(\\\"../render/Feature.js\\\").default|undefined)} GeometryFunction\\n */\\n/**\\n * Custom renderer function. Takes two arguments:\\n *\\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\\n * 2. The {@link module:ol/render~State} of the layer renderer.\\n *\\n * @typedef {function((import(\\\"../coordinate.js\\\").Coordinate|Array<import(\\\"../coordinate.js\\\").Coordinate>|Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>),import(\\\"../render.js\\\").State): void}\\n * RenderFunction\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {string|import(\\\"../geom/Geometry.js\\\").default|GeometryFunction} [geometry] Feature property or geometry\\n * or function returning a geometry to render for this style.\\n * @property {import(\\\"./Fill.js\\\").default} [fill] Fill style.\\n * @property {import(\\\"./Image.js\\\").default} [image] Image style.\\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\\n * ignored, and the provided function will be called with each render frame for each geometry.\\n * @property {import(\\\"./Stroke.js\\\").default} [stroke] Stroke style.\\n * @property {import(\\\"./Text.js\\\").default} [text] Text style.\\n * @property {number} [zIndex] Z index.\\n */\\n/**\\n * @classdesc\\n * Container for vector feature rendering styles. Any changes made to the style\\n * or its children through `set*()` methods will not take effect until the\\n * feature or layer that uses the style is re-rendered.\\n * @api\\n */\\nvar Style = /** @class */ (function () {\\n    /**\\n     * @param {Options=} opt_options Style options.\\n     */\\n    function Style(opt_options) {\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {string|import(\\\"../geom/Geometry.js\\\").default|GeometryFunction}\\n         */\\n        this.geometry_ = null;\\n        /**\\n         * @private\\n         * @type {!GeometryFunction}\\n         */\\n        this.geometryFunction_ = defaultGeometryFunction;\\n        if (options.geometry !== undefined) {\\n            this.setGeometry(options.geometry);\\n        }\\n        /**\\n         * @private\\n         * @type {import(\\\"./Fill.js\\\").default}\\n         */\\n        this.fill_ = options.fill !== undefined ? options.fill : null;\\n        /**\\n           * @private\\n           * @type {import(\\\"./Image.js\\\").default}\\n           */\\n        this.image_ = options.image !== undefined ? options.image : null;\\n        /**\\n         * @private\\n         * @type {RenderFunction|null}\\n         */\\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Stroke.js\\\").default}\\n         */\\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Text.js\\\").default}\\n         */\\n        this.text_ = options.text !== undefined ? options.text : null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.zIndex_ = options.zIndex;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {Style} The cloned style.\\n     * @api\\n     */\\n    Style.prototype.clone = function () {\\n        var geometry = this.getGeometry();\\n        if (geometry && typeof geometry === 'object') {\\n            geometry = /** @type {import(\\\"../geom/Geometry.js\\\").default} */ (geometry).clone();\\n        }\\n        return new Style({\\n            geometry: geometry,\\n            fill: this.getFill() ? this.getFill().clone() : undefined,\\n            image: this.getImage() ? this.getImage().clone() : undefined,\\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\\n            text: this.getText() ? this.getText().clone() : undefined,\\n            zIndex: this.getZIndex()\\n        });\\n    };\\n    /**\\n     * Get the custom renderer function that was configured with\\n     * {@link #setRenderer} or the `renderer` constructor option.\\n     * @return {RenderFunction|null} Custom renderer function.\\n     * @api\\n     */\\n    Style.prototype.getRenderer = function () {\\n        return this.renderer_;\\n    };\\n    /**\\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\\n     * and `image` options of the style will be ignored.\\n     * @param {RenderFunction|null} renderer Custom renderer function.\\n     * @api\\n     */\\n    Style.prototype.setRenderer = function (renderer) {\\n        this.renderer_ = renderer;\\n    };\\n    /**\\n     * Get the geometry to be rendered.\\n     * @return {string|import(\\\"../geom/Geometry.js\\\").default|GeometryFunction}\\n     * Feature property or geometry or function that returns the geometry that will\\n     * be rendered with this style.\\n     * @api\\n     */\\n    Style.prototype.getGeometry = function () {\\n        return this.geometry_;\\n    };\\n    /**\\n     * Get the function used to generate a geometry for rendering.\\n     * @return {!GeometryFunction} Function that is called with a feature\\n     * and returns the geometry to render instead of the feature's geometry.\\n     * @api\\n     */\\n    Style.prototype.getGeometryFunction = function () {\\n        return this.geometryFunction_;\\n    };\\n    /**\\n     * Get the fill style.\\n     * @return {import(\\\"./Fill.js\\\").default} Fill style.\\n     * @api\\n     */\\n    Style.prototype.getFill = function () {\\n        return this.fill_;\\n    };\\n    /**\\n     * Set the fill style.\\n     * @param {import(\\\"./Fill.js\\\").default} fill Fill style.\\n     * @api\\n     */\\n    Style.prototype.setFill = function (fill) {\\n        this.fill_ = fill;\\n    };\\n    /**\\n     * Get the image style.\\n     * @return {import(\\\"./Image.js\\\").default} Image style.\\n     * @api\\n     */\\n    Style.prototype.getImage = function () {\\n        return this.image_;\\n    };\\n    /**\\n     * Set the image style.\\n     * @param {import(\\\"./Image.js\\\").default} image Image style.\\n     * @api\\n     */\\n    Style.prototype.setImage = function (image) {\\n        this.image_ = image;\\n    };\\n    /**\\n     * Get the stroke style.\\n     * @return {import(\\\"./Stroke.js\\\").default} Stroke style.\\n     * @api\\n     */\\n    Style.prototype.getStroke = function () {\\n        return this.stroke_;\\n    };\\n    /**\\n     * Set the stroke style.\\n     * @param {import(\\\"./Stroke.js\\\").default} stroke Stroke style.\\n     * @api\\n     */\\n    Style.prototype.setStroke = function (stroke) {\\n        this.stroke_ = stroke;\\n    };\\n    /**\\n     * Get the text style.\\n     * @return {import(\\\"./Text.js\\\").default} Text style.\\n     * @api\\n     */\\n    Style.prototype.getText = function () {\\n        return this.text_;\\n    };\\n    /**\\n     * Set the text style.\\n     * @param {import(\\\"./Text.js\\\").default} text Text style.\\n     * @api\\n     */\\n    Style.prototype.setText = function (text) {\\n        this.text_ = text;\\n    };\\n    /**\\n     * Get the z-index for the style.\\n     * @return {number|undefined} ZIndex.\\n     * @api\\n     */\\n    Style.prototype.getZIndex = function () {\\n        return this.zIndex_;\\n    };\\n    /**\\n     * Set a geometry that is rendered instead of the feature's geometry.\\n     *\\n     * @param {string|import(\\\"../geom/Geometry.js\\\").default|GeometryFunction} geometry\\n     *     Feature property or geometry or function returning a geometry to render\\n     *     for this style.\\n     * @api\\n     */\\n    Style.prototype.setGeometry = function (geometry) {\\n        if (typeof geometry === 'function') {\\n            this.geometryFunction_ = geometry;\\n        }\\n        else if (typeof geometry === 'string') {\\n            this.geometryFunction_ = function (feature) {\\n                return (\\n                /** @type {import(\\\"../geom/Geometry.js\\\").default} */ (feature.get(geometry)));\\n            };\\n        }\\n        else if (!geometry) {\\n            this.geometryFunction_ = defaultGeometryFunction;\\n        }\\n        else if (geometry !== undefined) {\\n            this.geometryFunction_ = function () {\\n                return (\\n                /** @type {import(\\\"../geom/Geometry.js\\\").default} */ (geometry));\\n            };\\n        }\\n        this.geometry_ = geometry;\\n    };\\n    /**\\n     * Set the z-index.\\n     *\\n     * @param {number|undefined} zIndex ZIndex.\\n     * @api\\n     */\\n    Style.prototype.setZIndex = function (zIndex) {\\n        this.zIndex_ = zIndex;\\n    };\\n    return Style;\\n}());\\n/**\\n * Convert the provided object into a style function.  Functions passed through\\n * unchanged.  Arrays of Style or single style objects wrapped in a\\n * new style function.\\n * @param {StyleFunction|Array<Style>|Style} obj\\n *     A style function, a single style, or an array of styles.\\n * @return {StyleFunction} A style function.\\n */\\nexport function toFunction(obj) {\\n    var styleFunction;\\n    if (typeof obj === 'function') {\\n        styleFunction = obj;\\n    }\\n    else {\\n        /**\\n         * @type {Array<Style>}\\n         */\\n        var styles_1;\\n        if (Array.isArray(obj)) {\\n            styles_1 = obj;\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\\n            var style = /** @type {Style} */ (obj);\\n            styles_1 = [style];\\n        }\\n        styleFunction = function () {\\n            return styles_1;\\n        };\\n    }\\n    return styleFunction;\\n}\\n/**\\n * @type {Array<Style>}\\n */\\nvar defaultStyles = null;\\n/**\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n * @param {number} resolution Resolution.\\n * @return {Array<Style>} Style.\\n */\\nexport function createDefaultStyle(feature, resolution) {\\n    // We don't use an immediately-invoked function\\n    // and a closure so we don't get an error at script evaluation time in\\n    // browsers that do not support Canvas. (import(\\\"./Circle.js\\\").CircleStyle does\\n    // canvas.getContext('2d') at construction time, which will cause an.error\\n    // in such browsers.)\\n    if (!defaultStyles) {\\n        var fill = new Fill({\\n            color: 'rgba(255,255,255,0.4)'\\n        });\\n        var stroke = new Stroke({\\n            color: '#3399CC',\\n            width: 1.25\\n        });\\n        defaultStyles = [\\n            new Style({\\n                image: new CircleStyle({\\n                    fill: fill,\\n                    stroke: stroke,\\n                    radius: 5\\n                }),\\n                fill: fill,\\n                stroke: stroke\\n            })\\n        ];\\n    }\\n    return defaultStyles;\\n}\\n/**\\n * Default styles for editing features.\\n * @return {Object<import(\\\"../geom/GeometryType.js\\\").default, Array<Style>>} Styles\\n */\\nexport function createEditingStyle() {\\n    /** @type {Object<import(\\\"../geom/GeometryType.js\\\").default, Array<Style>>} */\\n    var styles = {};\\n    var white = [255, 255, 255, 1];\\n    var blue = [0, 153, 255, 1];\\n    var width = 3;\\n    styles[GeometryType.POLYGON] = [\\n        new Style({\\n            fill: new Fill({\\n                color: [255, 255, 255, 0.5]\\n            })\\n        })\\n    ];\\n    styles[GeometryType.MULTI_POLYGON] =\\n        styles[GeometryType.POLYGON];\\n    styles[GeometryType.LINE_STRING] = [\\n        new Style({\\n            stroke: new Stroke({\\n                color: white,\\n                width: width + 2\\n            })\\n        }),\\n        new Style({\\n            stroke: new Stroke({\\n                color: blue,\\n                width: width\\n            })\\n        })\\n    ];\\n    styles[GeometryType.MULTI_LINE_STRING] =\\n        styles[GeometryType.LINE_STRING];\\n    styles[GeometryType.CIRCLE] =\\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\\n    styles[GeometryType.POINT] = [\\n        new Style({\\n            image: new CircleStyle({\\n                radius: width * 2,\\n                fill: new Fill({\\n                    color: blue\\n                }),\\n                stroke: new Stroke({\\n                    color: white,\\n                    width: width / 2\\n                })\\n            }),\\n            zIndex: Infinity\\n        })\\n    ];\\n    styles[GeometryType.MULTI_POINT] =\\n        styles[GeometryType.POINT];\\n    styles[GeometryType.GEOMETRY_COLLECTION] =\\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\\n    return styles;\\n}\\n/**\\n * Function that is called with a feature and returns its default geometry.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature to get the geometry for.\\n * @return {import(\\\"../geom/Geometry.js\\\").default|import(\\\"../render/Feature.js\\\").default|undefined} Geometry to render.\\n */\\nfunction defaultGeometryFunction(feature) {\\n    return feature.getGeometry();\\n}\\nexport default Style;\\n//# sourceMappingURL=Style.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/BaseVector\\n */\\nimport Layer from './Layer.js';\\nimport { assign } from '../obj.js';\\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {import(\\\"../render.js\\\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\\n * features before rendering. By default features are drawn in the order that they are created. Use\\n * `null` to avoid the sort, but get an undefined draw order.\\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\\n * renderer when getting features from the vector source for the rendering or hit-detection.\\n * Recommended value: the size of the largest symbol, line width or label.\\n * @property {import(\\\"../source/Vector.js\\\").default} [source] Source.\\n * @property {import(\\\"../PluggableMap.js\\\").default} [map] Sets the layer as overlay on a map. The map will not manage\\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\\n * use {@link module:ol/Map#addLayer}.\\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\\n * means higher priority.\\n * @property {import(\\\"../style/Style.js\\\").StyleLike} [style] Layer style. See\\n * {@link module:ol/style} for default style which will be used if this is not defined.\\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\\n * be recreated during animations. This means that no vectors will be shown clipped, but the\\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\\n * batches will be recreated when no animation is active.\\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\\n * be recreated during interactions. See also `updateWhileAnimating`.\\n */\\n/**\\n * @enum {string}\\n * @private\\n */\\nvar Property = {\\n    RENDER_ORDER: 'renderOrder'\\n};\\n/**\\n * @classdesc\\n * Vector data that is rendered client-side.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @template {import(\\\"../source/Vector.js\\\").default|import(\\\"../source/VectorTile.js\\\").default} VectorSourceType\\n * @extends {Layer<VectorSourceType>}\\n * @api\\n */\\nvar BaseVectorLayer = /** @class */ (function (_super) {\\n    __extends(BaseVectorLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function BaseVectorLayer(opt_options) {\\n        var _this = this;\\n        var options = opt_options ?\\n            opt_options : /** @type {Options} */ ({});\\n        var baseOptions = assign({}, options);\\n        delete baseOptions.style;\\n        delete baseOptions.renderBuffer;\\n        delete baseOptions.updateWhileAnimating;\\n        delete baseOptions.updateWhileInteracting;\\n        _this = _super.call(this, baseOptions) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\\n            options.renderBuffer : 100;\\n        /**\\n         * User provided style.\\n         * @type {import(\\\"../style/Style.js\\\").StyleLike}\\n         * @private\\n         */\\n        _this.style_ = null;\\n        /**\\n         * Style function for use within the library.\\n         * @type {import(\\\"../style/Style.js\\\").StyleFunction|undefined}\\n         * @private\\n         */\\n        _this.styleFunction_ = undefined;\\n        _this.setStyle(options.style);\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\\n            options.updateWhileAnimating : false;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\\n            options.updateWhileInteracting : false;\\n        return _this;\\n    }\\n    /**\\n     * @return {boolean} Declutter.\\n     */\\n    BaseVectorLayer.prototype.getDeclutter = function () {\\n        return this.declutter_;\\n    };\\n    /**\\n     * @return {number|undefined} Render buffer.\\n     */\\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\\n        return this.renderBuffer_;\\n    };\\n    /**\\n     * @return {function(import(\\\"../Feature.js\\\").default, import(\\\"../Feature.js\\\").default): number|null|undefined} Render\\n     *     order.\\n     */\\n    BaseVectorLayer.prototype.getRenderOrder = function () {\\n        return (\\n        /** @type {import(\\\"../render.js\\\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\\n    };\\n    /**\\n     * Get the style for features.  This returns whatever was passed to the `style`\\n     * option at construction or to the `setStyle` method.\\n     * @return {import(\\\"../style/Style.js\\\").StyleLike}\\n     *     Layer style.\\n     * @api\\n     */\\n    BaseVectorLayer.prototype.getStyle = function () {\\n        return this.style_;\\n    };\\n    /**\\n     * Get the style function.\\n     * @return {import(\\\"../style/Style.js\\\").StyleFunction|undefined} Layer style function.\\n     * @api\\n     */\\n    BaseVectorLayer.prototype.getStyleFunction = function () {\\n        return this.styleFunction_;\\n    };\\n    /**\\n     * @return {boolean} Whether the rendered layer should be updated while\\n     *     animating.\\n     */\\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\\n        return this.updateWhileAnimating_;\\n    };\\n    /**\\n     * @return {boolean} Whether the rendered layer should be updated while\\n     *     interacting.\\n     */\\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\\n        return this.updateWhileInteracting_;\\n    };\\n    /**\\n     * @param {import(\\\"../render.js\\\").OrderFunction|null|undefined} renderOrder\\n     *     Render order.\\n     */\\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\\n        this.set(Property.RENDER_ORDER, renderOrder);\\n    };\\n    /**\\n     * Set the style for features.  This can be a single style object, an array\\n     * of styles, or a function that takes a feature and resolution and returns\\n     * an array of styles. If it is `undefined` the default style is used. If\\n     * it is `null` the layer has no style (a `null` style), so only features\\n     * that have their own styles will be rendered in the layer. See\\n     * {@link module:ol/style} for information on the default style.\\n     * @param {import(\\\"../style/Style.js\\\").default|Array<import(\\\"../style/Style.js\\\").default>|import(\\\"../style/Style.js\\\").StyleFunction|null|undefined} style Layer style.\\n     * @api\\n     */\\n    BaseVectorLayer.prototype.setStyle = function (style) {\\n        this.style_ = style !== undefined ? style : createDefaultStyle;\\n        this.styleFunction_ = style === null ?\\n            undefined : toStyleFunction(this.style_);\\n        this.changed();\\n    };\\n    return BaseVectorLayer;\\n}(Layer));\\nexport default BaseVectorLayer;\\n//# sourceMappingURL=BaseVector.js.map\",\"/**\\n * @module ol/render/VectorContext\\n */\\n/**\\n * @classdesc\\n * Context for drawing geometries.  A vector context is available on render\\n * events and does not need to be constructed directly.\\n * @api\\n */\\nvar VectorContext = /** @class */ (function () {\\n    function VectorContext() {\\n    }\\n    /**\\n     * Render a geometry with a custom renderer.\\n     *\\n     * @param {import(\\\"../geom/SimpleGeometry.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     * @param {Function} renderer Renderer.\\n     */\\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\\n    /**\\n     * Render a geometry.\\n     *\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry The geometry to render.\\n     */\\n    VectorContext.prototype.drawGeometry = function (geometry) { };\\n    /**\\n     * Set the rendering style.\\n     *\\n     * @param {import(\\\"../style/Style.js\\\").default} style The rendering style.\\n     */\\n    VectorContext.prototype.setStyle = function (style) { };\\n    /**\\n     * @param {import(\\\"../geom/Circle.js\\\").default} circleGeometry Circle geometry.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     */\\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n     */\\n    VectorContext.prototype.drawFeature = function (feature, style) { };\\n    /**\\n     * @param {import(\\\"../geom/GeometryCollection.js\\\").default} geometryCollectionGeometry Geometry collection.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     */\\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/LineString.js\\\").default|import(\\\"./Feature.js\\\").default} lineStringGeometry Line string geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/MultiLineString.js\\\").default|import(\\\"./Feature.js\\\").default} multiLineStringGeometry MultiLineString geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/MultiPoint.js\\\").default|import(\\\"./Feature.js\\\").default} multiPointGeometry MultiPoint geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/MultiPolygon.js\\\").default} multiPolygonGeometry MultiPolygon geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/Point.js\\\").default|import(\\\"./Feature.js\\\").default} pointGeometry Point geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/Polygon.js\\\").default|import(\\\"./Feature.js\\\").default} polygonGeometry Polygon geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/Geometry.js\\\").default|import(\\\"./Feature.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawText = function (geometry, feature) { };\\n    /**\\n     * @param {import(\\\"../style/Fill.js\\\").default} fillStyle Fill style.\\n     * @param {import(\\\"../style/Stroke.js\\\").default} strokeStyle Stroke style.\\n     */\\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\\n    /**\\n     * @param {import(\\\"../style/Image.js\\\").default} imageStyle Image style.\\n     * @param {import(\\\"./canvas.js\\\").DeclutterGroup=} opt_declutterGroup Declutter.\\n     */\\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\\n    /**\\n     * @param {import(\\\"../style/Text.js\\\").default} textStyle Text style.\\n     * @param {import(\\\"./canvas.js\\\").DeclutterGroup=} opt_declutterGroup Declutter.\\n     */\\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\\n    return VectorContext;\\n}());\\nexport default VectorContext;\\n//# sourceMappingURL=VectorContext.js.map\",\"/**\\n * @module ol/render/canvas/Instruction\\n */\\n/**\\n * @enum {number}\\n */\\nvar Instruction = {\\n    BEGIN_GEOMETRY: 0,\\n    BEGIN_PATH: 1,\\n    CIRCLE: 2,\\n    CLOSE_PATH: 3,\\n    CUSTOM: 4,\\n    DRAW_CHARS: 5,\\n    DRAW_IMAGE: 6,\\n    END_GEOMETRY: 7,\\n    FILL: 8,\\n    MOVE_TO_LINE_TO: 9,\\n    SET_FILL_STYLE: 10,\\n    SET_STROKE_STYLE: 11,\\n    STROKE: 12\\n};\\n/**\\n * @type {Array<Instruction>}\\n */\\nexport var fillInstruction = [Instruction.FILL];\\n/**\\n * @type {Array<Instruction>}\\n */\\nexport var strokeInstruction = [Instruction.STROKE];\\n/**\\n * @type {Array<Instruction>}\\n */\\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\\n/**\\n * @type {Array<Instruction>}\\n */\\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\\nexport default Instruction;\\n//# sourceMappingURL=Instruction.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/Builder\\n */\\nimport { equals, reverseSubArray } from '../../array.js';\\nimport { asColorLike } from '../../colorlike.js';\\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\\nimport Relationship from '../../extent/Relationship.js';\\nimport GeometryType from '../../geom/GeometryType.js';\\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\\nimport VectorContext from '../VectorContext.js';\\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\\nimport CanvasInstruction from './Instruction.js';\\n/**\\n * @typedef {Object} SerializableInstructions\\n * @property {Array<*>} instructions The rendering instructions.\\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\\n * @property {Array<number>} coordinates The array of all coordinates.\\n * @property {!Object<string, import(\\\"../canvas.js\\\").TextState>} [textStates] The text states (decluttering).\\n * @property {!Object<string, import(\\\"../canvas.js\\\").FillState>} [fillStates] The fill states (decluttering).\\n * @property {!Object<string, import(\\\"../canvas.js\\\").StrokeState>} [strokeStates] The stroke states (decluttering).\\n */\\nvar CanvasBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.tolerance = tolerance;\\n        /**\\n         * @protected\\n         * @const\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.maxExtent = maxExtent;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.pixelRatio = pixelRatio;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.maxLineWidth = 0;\\n        /**\\n         * @protected\\n         * @const\\n         * @type {number}\\n         */\\n        _this.resolution = resolution;\\n        /**\\n         * @private\\n         * @type {Array<*>}\\n         */\\n        _this.beginGeometryInstruction1_ = null;\\n        /**\\n         * @private\\n         * @type {Array<*>}\\n         */\\n        _this.beginGeometryInstruction2_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.bufferedMaxExtent_ = null;\\n        /**\\n         * @protected\\n         * @type {Array<*>}\\n         */\\n        _this.instructions = [];\\n        /**\\n         * @protected\\n         * @type {Array<number>}\\n         */\\n        _this.coordinates = [];\\n        /**\\n         * @private\\n         * @type {import(\\\"../../coordinate.js\\\").Coordinate}\\n         */\\n        _this.tmpCoordinate_ = [];\\n        /**\\n         * @protected\\n         * @type {Array<*>}\\n         */\\n        _this.hitDetectionInstructions = [];\\n        /**\\n         * @protected\\n         * @type {import(\\\"../canvas.js\\\").FillStrokeState}\\n         */\\n        _this.state = /** @type {import(\\\"../canvas.js\\\").FillStrokeState} */ ({});\\n        return _this;\\n    }\\n    /**\\n     * @protected\\n     * @param {Array<number>} dashArray Dash array.\\n     * @return {Array<number>} Dash array with pixel ratio applied\\n     */\\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\\n        var pixelRatio = this.pixelRatio;\\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\\n            return dash * pixelRatio;\\n        });\\n    };\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {number} end End.\\n     * @param {number} stride Stride.\\n     * @param {boolean} closed Last input coordinate equals first.\\n     * @param {boolean} skipFirst Skip first coordinate.\\n     * @protected\\n     * @return {number} My end.\\n     */\\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\\n        var myEnd = this.coordinates.length;\\n        var extent = this.getBufferedMaxExtent();\\n        if (skipFirst) {\\n            offset += stride;\\n        }\\n        var lastXCoord = flatCoordinates[offset];\\n        var lastYCoord = flatCoordinates[offset + 1];\\n        var nextCoord = this.tmpCoordinate_;\\n        var skipped = true;\\n        var i, lastRel, nextRel;\\n        for (i = offset + stride; i < end; i += stride) {\\n            nextCoord[0] = flatCoordinates[i];\\n            nextCoord[1] = flatCoordinates[i + 1];\\n            nextRel = coordinateRelationship(extent, nextCoord);\\n            if (nextRel !== lastRel) {\\n                if (skipped) {\\n                    this.coordinates[myEnd++] = lastXCoord;\\n                    this.coordinates[myEnd++] = lastYCoord;\\n                }\\n                this.coordinates[myEnd++] = nextCoord[0];\\n                this.coordinates[myEnd++] = nextCoord[1];\\n                skipped = false;\\n            }\\n            else if (nextRel === Relationship.INTERSECTING) {\\n                this.coordinates[myEnd++] = nextCoord[0];\\n                this.coordinates[myEnd++] = nextCoord[1];\\n                skipped = false;\\n            }\\n            else {\\n                skipped = true;\\n            }\\n            lastXCoord = nextCoord[0];\\n            lastYCoord = nextCoord[1];\\n            lastRel = nextRel;\\n        }\\n        // Last coordinate equals first or only one point to append:\\n        if ((closed && skipped) || i === offset + stride) {\\n            this.coordinates[myEnd++] = lastXCoord;\\n            this.coordinates[myEnd++] = lastYCoord;\\n        }\\n        return myEnd;\\n    };\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {Array<number>} ends Ends.\\n     * @param {number} stride Stride.\\n     * @param {Array<number>} builderEnds Builder ends.\\n     * @return {number} Offset.\\n     */\\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            var end = ends[i];\\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\\n            builderEnds.push(builderEnd);\\n            offset = end;\\n        }\\n        return offset;\\n    };\\n    /**\\n     * @inheritDoc.\\n     */\\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\\n        this.beginGeometry(feature);\\n        var type = geometry.getType();\\n        var stride = geometry.getStride();\\n        var builderBegin = this.coordinates.length;\\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\\n        var offset;\\n        if (type == GeometryType.MULTI_POLYGON) {\\n            geometry = /** @type {import(\\\"../../geom/MultiPolygon.js\\\").default} */ (geometry);\\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\\n            builderEndss = [];\\n            var endss = geometry.getEndss();\\n            offset = 0;\\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\\n                var myEnds = [];\\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\\n                builderEndss.push(myEnds);\\n            }\\n            this.instructions.push([CanvasInstruction.CUSTOM,\\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\\n        }\\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\\n            builderEnds = [];\\n            flatCoordinates = (type == GeometryType.POLYGON) ?\\n                /** @type {import(\\\"../../geom/Polygon.js\\\").default} */ (geometry).getOrientedFlatCoordinates() :\\n                geometry.getFlatCoordinates();\\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \\n            /** @type {import(\\\"../../geom/Polygon.js\\\").default|import(\\\"../../geom/MultiLineString.js\\\").default} */ (geometry).getEnds(), stride, builderEnds);\\n            this.instructions.push([CanvasInstruction.CUSTOM,\\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\\n        }\\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\\n            flatCoordinates = geometry.getFlatCoordinates();\\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\\n            this.instructions.push([CanvasInstruction.CUSTOM,\\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\\n        }\\n        else if (type == GeometryType.POINT) {\\n            flatCoordinates = geometry.getFlatCoordinates();\\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\\n            builderEnd = this.coordinates.length;\\n            this.instructions.push([CanvasInstruction.CUSTOM,\\n                builderBegin, builderEnd, geometry, renderer]);\\n        }\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @protected\\n     * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\\n        this.instructions.push(this.beginGeometryInstruction1_);\\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\\n    };\\n    /**\\n     * @return {SerializableInstructions} the serializable instructions.\\n     */\\n    CanvasBuilder.prototype.finish = function () {\\n        return {\\n            instructions: this.instructions,\\n            hitDetectionInstructions: this.hitDetectionInstructions,\\n            coordinates: this.coordinates\\n        };\\n    };\\n    /**\\n     * Reverse the hit detection instructions.\\n     */\\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\\n        var hitDetectionInstructions = this.hitDetectionInstructions;\\n        // step 1 - reverse array\\n        hitDetectionInstructions.reverse();\\n        // step 2 - reverse instructions within geometry blocks\\n        var i;\\n        var n = hitDetectionInstructions.length;\\n        var instruction;\\n        var type;\\n        var begin = -1;\\n        for (i = 0; i < n; ++i) {\\n            instruction = hitDetectionInstructions[i];\\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\\n            if (type == CanvasInstruction.END_GEOMETRY) {\\n                begin = i;\\n            }\\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\\n                instruction[2] = i;\\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\\n                begin = -1;\\n            }\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\\n        var state = this.state;\\n        if (fillStyle) {\\n            var fillStyleColor = fillStyle.getColor();\\n            state.fillStyle = asColorLike(fillStyleColor ?\\n                fillStyleColor : defaultFillStyle);\\n        }\\n        else {\\n            state.fillStyle = undefined;\\n        }\\n        if (strokeStyle) {\\n            var strokeStyleColor = strokeStyle.getColor();\\n            state.strokeStyle = asColorLike(strokeStyleColor ?\\n                strokeStyleColor : defaultStrokeStyle);\\n            var strokeStyleLineCap = strokeStyle.getLineCap();\\n            state.lineCap = strokeStyleLineCap !== undefined ?\\n                strokeStyleLineCap : defaultLineCap;\\n            var strokeStyleLineDash = strokeStyle.getLineDash();\\n            state.lineDash = strokeStyleLineDash ?\\n                strokeStyleLineDash.slice() : defaultLineDash;\\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\\n            state.lineDashOffset = strokeStyleLineDashOffset ?\\n                strokeStyleLineDashOffset : defaultLineDashOffset;\\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\\n                strokeStyleLineJoin : defaultLineJoin;\\n            var strokeStyleWidth = strokeStyle.getWidth();\\n            state.lineWidth = strokeStyleWidth !== undefined ?\\n                strokeStyleWidth : defaultLineWidth;\\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\\n                strokeStyleMiterLimit : defaultMiterLimit;\\n            if (state.lineWidth > this.maxLineWidth) {\\n                this.maxLineWidth = state.lineWidth;\\n                // invalidate the buffered max extent cache\\n                this.bufferedMaxExtent_ = null;\\n            }\\n        }\\n        else {\\n            state.strokeStyle = undefined;\\n            state.lineCap = undefined;\\n            state.lineDash = null;\\n            state.lineDashOffset = undefined;\\n            state.lineJoin = undefined;\\n            state.lineWidth = undefined;\\n            state.miterLimit = undefined;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     * @return {Array<*>} Fill instruction.\\n     */\\n    CanvasBuilder.prototype.createFill = function (state) {\\n        var fillStyle = state.fillStyle;\\n        /** @type {Array<*>} */\\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\\n        if (typeof fillStyle !== 'string') {\\n            // Fill is a pattern or gradient - align it!\\n            fillInstruction.push(true);\\n        }\\n        return fillInstruction;\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     */\\n    CanvasBuilder.prototype.applyStroke = function (state) {\\n        this.instructions.push(this.createStroke(state));\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     * @return {Array<*>} Stroke instruction.\\n     */\\n    CanvasBuilder.prototype.createStroke = function (state) {\\n        return [\\n            CanvasInstruction.SET_STROKE_STYLE,\\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\\n            state.lineJoin, state.miterLimit,\\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\\n        ];\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     * @param {function(this:CanvasBuilder, import(\\\"../canvas.js\\\").FillStrokeState):Array<*>} createFill Create fill.\\n     */\\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\\n        var fillStyle = state.fillStyle;\\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\\n            if (fillStyle !== undefined) {\\n                this.instructions.push(createFill.call(this, state));\\n            }\\n            state.currentFillStyle = fillStyle;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     * @param {function(this:CanvasBuilder, import(\\\"../canvas.js\\\").FillStrokeState): void} applyStroke Apply stroke.\\n     */\\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\\n        var strokeStyle = state.strokeStyle;\\n        var lineCap = state.lineCap;\\n        var lineDash = state.lineDash;\\n        var lineDashOffset = state.lineDashOffset;\\n        var lineJoin = state.lineJoin;\\n        var lineWidth = state.lineWidth;\\n        var miterLimit = state.miterLimit;\\n        if (state.currentStrokeStyle != strokeStyle ||\\n            state.currentLineCap != lineCap ||\\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\\n            state.currentLineDashOffset != lineDashOffset ||\\n            state.currentLineJoin != lineJoin ||\\n            state.currentLineWidth != lineWidth ||\\n            state.currentMiterLimit != miterLimit) {\\n            if (strokeStyle !== undefined) {\\n                applyStroke.call(this, state);\\n            }\\n            state.currentStrokeStyle = strokeStyle;\\n            state.currentLineCap = lineCap;\\n            state.currentLineDash = lineDash;\\n            state.currentLineDashOffset = lineDashOffset;\\n            state.currentLineJoin = lineJoin;\\n            state.currentLineWidth = lineWidth;\\n            state.currentMiterLimit = miterLimit;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    CanvasBuilder.prototype.endGeometry = function (feature) {\\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\\n        this.beginGeometryInstruction1_ = null;\\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\\n        this.beginGeometryInstruction2_ = null;\\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\\n        this.instructions.push(endGeometryInstruction);\\n        this.hitDetectionInstructions.push(endGeometryInstruction);\\n    };\\n    /**\\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\\n     * provided to the constructor.  To account for symbolizers that may intersect\\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\\n     * @return {import(\\\"../../extent.js\\\").Extent} The buffered rendering extent.\\n     * @protected\\n     */\\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\\n        if (!this.bufferedMaxExtent_) {\\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\\n            if (this.maxLineWidth > 0) {\\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\\n            }\\n        }\\n        return this.bufferedMaxExtent_;\\n    };\\n    return CanvasBuilder;\\n}(VectorContext));\\nexport default CanvasBuilder;\\n//# sourceMappingURL=Builder.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/ImageBuilder\\n */\\nimport CanvasInstruction from './Instruction.js';\\nimport CanvasBuilder from './Builder.js';\\nvar CanvasImageBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasImageBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../canvas.js\\\").DeclutterGroup}\\n         */\\n        _this.declutterGroup_ = null;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\\n         */\\n        _this.hitDetectionImage_ = null;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\\n         */\\n        _this.image_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.anchorX_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.anchorY_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.height_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.opacity_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.originX_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.originY_ = undefined;\\n        /**\\n         * @private\\n         * @type {boolean|undefined}\\n         */\\n        _this.rotateWithView_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.rotation_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.scale_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.width_ = undefined;\\n        return _this;\\n    }\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {number} end End.\\n     * @param {number} stride Stride.\\n     * @private\\n     * @return {number} My end.\\n     */\\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\\n        if (!this.image_) {\\n            return;\\n        }\\n        this.beginGeometry(feature);\\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\\n        var stride = pointGeometry.getStride();\\n        var myBegin = this.coordinates.length;\\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\\n        this.instructions.push([\\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\\n            this.scale_ * this.pixelRatio, this.width_\\n        ]);\\n        this.hitDetectionInstructions.push([\\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\\n            this.scale_, this.width_\\n        ]);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\\n        if (!this.image_) {\\n            return;\\n        }\\n        this.beginGeometry(feature);\\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\\n        var stride = multiPointGeometry.getStride();\\n        var myBegin = this.coordinates.length;\\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\\n        this.instructions.push([\\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\\n            this.scale_ * this.pixelRatio, this.width_\\n        ]);\\n        this.hitDetectionInstructions.push([\\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\\n            this.scale_, this.width_\\n        ]);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasImageBuilder.prototype.finish = function () {\\n        this.reverseHitDetectionInstructions();\\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\\n        this.anchorX_ = undefined;\\n        this.anchorY_ = undefined;\\n        this.hitDetectionImage_ = null;\\n        this.image_ = null;\\n        this.height_ = undefined;\\n        this.scale_ = undefined;\\n        this.opacity_ = undefined;\\n        this.originX_ = undefined;\\n        this.originY_ = undefined;\\n        this.rotateWithView_ = undefined;\\n        this.rotation_ = undefined;\\n        this.width_ = undefined;\\n        return _super.prototype.finish.call(this);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\\n        var anchor = imageStyle.getAnchor();\\n        var size = imageStyle.getSize();\\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\\n        var image = imageStyle.getImage(1);\\n        var origin = imageStyle.getOrigin();\\n        this.anchorX_ = anchor[0];\\n        this.anchorY_ = anchor[1];\\n        this.declutterGroup_ = /** @type {import(\\\"../canvas.js\\\").DeclutterGroup} */ (declutterGroup);\\n        this.hitDetectionImage_ = hitDetectionImage;\\n        this.image_ = image;\\n        this.height_ = size[1];\\n        this.opacity_ = imageStyle.getOpacity();\\n        this.originX_ = origin[0];\\n        this.originY_ = origin[1];\\n        this.rotateWithView_ = imageStyle.getRotateWithView();\\n        this.rotation_ = imageStyle.getRotation();\\n        this.scale_ = imageStyle.getScale();\\n        this.width_ = size[0];\\n    };\\n    return CanvasImageBuilder;\\n}(CanvasBuilder));\\nexport default CanvasImageBuilder;\\n//# sourceMappingURL=ImageBuilder.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/LineStringBuilder\\n */\\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\\nimport CanvasBuilder from './Builder.js';\\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasLineStringBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\\n    }\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {number} end End.\\n     * @param {number} stride Stride.\\n     * @private\\n     * @return {number} end.\\n     */\\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\\n        var myBegin = this.coordinates.length;\\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\\n        this.instructions.push(moveToLineToInstruction);\\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\\n        return end;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\\n        var state = this.state;\\n        var strokeStyle = state.strokeStyle;\\n        var lineWidth = state.lineWidth;\\n        if (strokeStyle === undefined || lineWidth === undefined) {\\n            return;\\n        }\\n        this.updateStrokeStyle(state, this.applyStroke);\\n        this.beginGeometry(feature);\\n        this.hitDetectionInstructions.push([\\n            CanvasInstruction.SET_STROKE_STYLE,\\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n            state.miterLimit, state.lineDash, state.lineDashOffset\\n        ], beginPathInstruction);\\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\\n        var stride = lineStringGeometry.getStride();\\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\\n        this.hitDetectionInstructions.push(strokeInstruction);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\\n        var state = this.state;\\n        var strokeStyle = state.strokeStyle;\\n        var lineWidth = state.lineWidth;\\n        if (strokeStyle === undefined || lineWidth === undefined) {\\n            return;\\n        }\\n        this.updateStrokeStyle(state, this.applyStroke);\\n        this.beginGeometry(feature);\\n        this.hitDetectionInstructions.push([\\n            CanvasInstruction.SET_STROKE_STYLE,\\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n            state.miterLimit, state.lineDash, state.lineDashOffset\\n        ], beginPathInstruction);\\n        var ends = multiLineStringGeometry.getEnds();\\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\\n        var stride = multiLineStringGeometry.getStride();\\n        var offset = 0;\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\\n        }\\n        this.hitDetectionInstructions.push(strokeInstruction);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasLineStringBuilder.prototype.finish = function () {\\n        var state = this.state;\\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\\n            this.instructions.push(strokeInstruction);\\n        }\\n        this.reverseHitDetectionInstructions();\\n        this.state = null;\\n        return _super.prototype.finish.call(this);\\n    };\\n    /**\\n     * @inheritDoc.\\n     */\\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\\n            this.instructions.push(strokeInstruction);\\n            state.lastStroke = this.coordinates.length;\\n        }\\n        state.lastStroke = 0;\\n        _super.prototype.applyStroke.call(this, state);\\n        this.instructions.push(beginPathInstruction);\\n    };\\n    return CanvasLineStringBuilder;\\n}(CanvasBuilder));\\nexport default CanvasLineStringBuilder;\\n//# sourceMappingURL=LineStringBuilder.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/PolygonBuilder\\n */\\nimport { snap } from '../../geom/flat/simplify.js';\\nimport { defaultFillStyle } from '../canvas.js';\\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\\nimport CanvasBuilder from './Builder.js';\\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasPolygonBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\\n    }\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {Array<number>} ends Ends.\\n     * @param {number} stride Stride.\\n     * @private\\n     * @return {number} End.\\n     */\\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\\n        var state = this.state;\\n        var fill = state.fillStyle !== undefined;\\n        var stroke = state.strokeStyle != undefined;\\n        var numEnds = ends.length;\\n        this.instructions.push(beginPathInstruction);\\n        this.hitDetectionInstructions.push(beginPathInstruction);\\n        for (var i = 0; i < numEnds; ++i) {\\n            var end = ends[i];\\n            var myBegin = this.coordinates.length;\\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\\n            this.instructions.push(moveToLineToInstruction);\\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\\n            if (stroke) {\\n                // Performance optimization: only call closePath() when we have a stroke.\\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\\n                this.instructions.push(closePathInstruction);\\n                this.hitDetectionInstructions.push(closePathInstruction);\\n            }\\n            offset = end;\\n        }\\n        if (fill) {\\n            this.instructions.push(fillInstruction);\\n            this.hitDetectionInstructions.push(fillInstruction);\\n        }\\n        if (stroke) {\\n            this.instructions.push(strokeInstruction);\\n            this.hitDetectionInstructions.push(strokeInstruction);\\n        }\\n        return offset;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\\n        var state = this.state;\\n        var fillStyle = state.fillStyle;\\n        var strokeStyle = state.strokeStyle;\\n        if (fillStyle === undefined && strokeStyle === undefined) {\\n            return;\\n        }\\n        this.setFillStrokeStyles_();\\n        this.beginGeometry(feature);\\n        if (state.fillStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_FILL_STYLE,\\n                defaultFillStyle\\n            ]);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_STROKE_STYLE,\\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n                state.miterLimit, state.lineDash, state.lineDashOffset\\n            ]);\\n        }\\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\\n        var stride = circleGeometry.getStride();\\n        var myBegin = this.coordinates.length;\\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\\n        this.instructions.push(beginPathInstruction, circleInstruction);\\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\\n        this.hitDetectionInstructions.push(fillInstruction);\\n        if (state.fillStyle !== undefined) {\\n            this.instructions.push(fillInstruction);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.instructions.push(strokeInstruction);\\n            this.hitDetectionInstructions.push(strokeInstruction);\\n        }\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\\n        var state = this.state;\\n        var fillStyle = state.fillStyle;\\n        var strokeStyle = state.strokeStyle;\\n        if (fillStyle === undefined && strokeStyle === undefined) {\\n            return;\\n        }\\n        this.setFillStrokeStyles_();\\n        this.beginGeometry(feature);\\n        if (state.fillStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_FILL_STYLE,\\n                defaultFillStyle\\n            ]);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_STROKE_STYLE,\\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n                state.miterLimit, state.lineDash, state.lineDashOffset\\n            ]);\\n        }\\n        var ends = polygonGeometry.getEnds();\\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\\n        var stride = polygonGeometry.getStride();\\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\\n        var state = this.state;\\n        var fillStyle = state.fillStyle;\\n        var strokeStyle = state.strokeStyle;\\n        if (fillStyle === undefined && strokeStyle === undefined) {\\n            return;\\n        }\\n        this.setFillStrokeStyles_();\\n        this.beginGeometry(feature);\\n        if (state.fillStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_FILL_STYLE,\\n                defaultFillStyle\\n            ]);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_STROKE_STYLE,\\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n                state.miterLimit, state.lineDash, state.lineDashOffset\\n            ]);\\n        }\\n        var endss = multiPolygonGeometry.getEndss();\\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\\n        var stride = multiPolygonGeometry.getStride();\\n        var offset = 0;\\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\\n        }\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasPolygonBuilder.prototype.finish = function () {\\n        this.reverseHitDetectionInstructions();\\n        this.state = null;\\n        // We want to preserve topology when drawing polygons.  Polygons are\\n        // simplified using quantization and point elimination. However, we might\\n        // have received a mix of quantized and non-quantized geometries, so ensure\\n        // that all are quantized by quantizing all coordinates in the batch.\\n        var tolerance = this.tolerance;\\n        if (tolerance !== 0) {\\n            var coordinates = this.coordinates;\\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coordinates[i] = snap(coordinates[i], tolerance);\\n            }\\n        }\\n        return _super.prototype.finish.call(this);\\n    };\\n    /**\\n     * @private\\n     */\\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\\n        var state = this.state;\\n        var fillStyle = state.fillStyle;\\n        if (fillStyle !== undefined) {\\n            this.updateFillStyle(state, this.createFill);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.updateStrokeStyle(state, this.applyStroke);\\n        }\\n    };\\n    return CanvasPolygonBuilder;\\n}(CanvasBuilder));\\nexport default CanvasPolygonBuilder;\\n//# sourceMappingURL=PolygonBuilder.js.map\",\"/**\\n * @module ol/geom/flat/straightchunk\\n */\\n/**\\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {Array<number>} Start and end of the first suitable chunk of the\\n * given `flatCoordinates`.\\n */\\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\\n    var chunkStart = offset;\\n    var chunkEnd = offset;\\n    var chunkM = 0;\\n    var m = 0;\\n    var start = offset;\\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\\n    for (i = offset; i < end; i += stride) {\\n        var x2 = flatCoordinates[i];\\n        var y2 = flatCoordinates[i + 1];\\n        if (x1 !== undefined) {\\n            x23 = x2 - x1;\\n            y23 = y2 - y1;\\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\\n            if (x12 !== undefined) {\\n                m += m12;\\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\\n                if (acos > maxAngle) {\\n                    if (m > chunkM) {\\n                        chunkM = m;\\n                        chunkStart = start;\\n                        chunkEnd = i;\\n                    }\\n                    m = 0;\\n                    start = i - stride;\\n                }\\n            }\\n            m12 = m23;\\n            x12 = x23;\\n            y12 = y23;\\n        }\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    m += m23;\\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\\n}\\n//# sourceMappingURL=straightchunk.js.map\",\"/**\\n * @module ol/style/TextPlacement\\n */\\n/**\\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\\n * @enum {string}\\n */\\nexport default {\\n    POINT: 'point',\\n    LINE: 'line'\\n};\\n//# sourceMappingURL=TextPlacement.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/TextBuilder\\n */\\nimport { getUid } from '../../util.js';\\nimport { asColorLike } from '../../colorlike.js';\\nimport { intersects } from '../../extent.js';\\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\\nimport GeometryType from '../../geom/GeometryType.js';\\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\\nimport CanvasInstruction from './Instruction.js';\\nimport CanvasBuilder from './Builder.js';\\nimport TextPlacement from '../../style/TextPlacement.js';\\n/**\\n * @const\\n * @enum {number}\\n */\\nexport var TEXT_ALIGN = {};\\nTEXT_ALIGN['left'] = 0;\\nTEXT_ALIGN['end'] = 0;\\nTEXT_ALIGN['center'] = 0.5;\\nTEXT_ALIGN['right'] = 1;\\nTEXT_ALIGN['start'] = 1;\\nTEXT_ALIGN['top'] = 0;\\nTEXT_ALIGN['middle'] = 0.5;\\nTEXT_ALIGN['hanging'] = 0.2;\\nTEXT_ALIGN['alphabetic'] = 0.8;\\nTEXT_ALIGN['ideographic'] = 0.8;\\nTEXT_ALIGN['bottom'] = 1;\\nvar CanvasTextBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasTextBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../canvas.js\\\").DeclutterGroup}\\n         */\\n        _this.declutterGroup_;\\n        /**\\n         * @private\\n         * @type {Array<HTMLCanvasElement>}\\n         */\\n        _this.labels_ = null;\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.text_ = '';\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.textOffsetX_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.textOffsetY_ = 0;\\n        /**\\n         * @private\\n         * @type {boolean|undefined}\\n         */\\n        _this.textRotateWithView_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.textRotation_ = 0;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../canvas.js\\\").FillState}\\n         */\\n        _this.textFillState_ = null;\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").FillState>}\\n         */\\n        _this.fillStates = {};\\n        /**\\n         * @private\\n         * @type {?import(\\\"../canvas.js\\\").StrokeState}\\n         */\\n        _this.textStrokeState_ = null;\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").StrokeState>}\\n         */\\n        _this.strokeStates = {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../canvas.js\\\").TextState}\\n         */\\n        _this.textState_ = /** @type {import(\\\"../canvas.js\\\").TextState} */ ({});\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").TextState>}\\n         */\\n        _this.textStates = {};\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.textKey_ = '';\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.fillKey_ = '';\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.strokeKey_ = '';\\n        labelCache.prune();\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTextBuilder.prototype.finish = function () {\\n        var instructions = _super.prototype.finish.call(this);\\n        instructions.textStates = this.textStates;\\n        instructions.fillStates = this.fillStates;\\n        instructions.strokeStates = this.strokeStates;\\n        return instructions;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\\n        var fillState = this.textFillState_;\\n        var strokeState = this.textStrokeState_;\\n        var textState = this.textState_;\\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\\n            return;\\n        }\\n        var begin = this.coordinates.length;\\n        var geometryType = geometry.getType();\\n        var flatCoordinates = null;\\n        var end = 2;\\n        var stride = 2;\\n        var i, ii;\\n        if (textState.placement === TextPlacement.LINE) {\\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\\n                return;\\n            }\\n            var ends = void 0;\\n            flatCoordinates = geometry.getFlatCoordinates();\\n            stride = geometry.getStride();\\n            if (geometryType == GeometryType.LINE_STRING) {\\n                ends = [flatCoordinates.length];\\n            }\\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\\n                ends = geometry.getEnds();\\n            }\\n            else if (geometryType == GeometryType.POLYGON) {\\n                ends = geometry.getEnds().slice(0, 1);\\n            }\\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\\n                var endss = geometry.getEndss();\\n                ends = [];\\n                for (i = 0, ii = endss.length; i < ii; ++i) {\\n                    ends.push(endss[i][0]);\\n                }\\n            }\\n            this.beginGeometry(feature);\\n            var textAlign = textState.textAlign;\\n            var flatOffset = 0;\\n            var flatEnd = void 0;\\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\\n                if (textAlign == undefined) {\\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\\n                    flatOffset = range[0];\\n                    flatEnd = range[1];\\n                }\\n                else {\\n                    flatEnd = ends[o];\\n                }\\n                for (i = flatOffset; i < flatEnd; i += stride) {\\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\\n                }\\n                end = this.coordinates.length;\\n                flatOffset = ends[o];\\n                this.drawChars_(begin, end, this.declutterGroup_);\\n                begin = end;\\n            }\\n            this.endGeometry(feature);\\n        }\\n        else {\\n            var geometryWidths = null;\\n            if (!textState.overflow) {\\n                geometryWidths = [];\\n            }\\n            switch (geometryType) {\\n                case GeometryType.POINT:\\n                case GeometryType.MULTI_POINT:\\n                    flatCoordinates = geometry.getFlatCoordinates();\\n                    end = flatCoordinates.length;\\n                    break;\\n                case GeometryType.LINE_STRING:\\n                    flatCoordinates = /** @type {import(\\\"../../geom/LineString.js\\\").default} */ (geometry).getFlatMidpoint();\\n                    break;\\n                case GeometryType.CIRCLE:\\n                    flatCoordinates = /** @type {import(\\\"../../geom/Circle.js\\\").default} */ (geometry).getCenter();\\n                    break;\\n                case GeometryType.MULTI_LINE_STRING:\\n                    flatCoordinates = /** @type {import(\\\"../../geom/MultiLineString.js\\\").default} */ (geometry).getFlatMidpoints();\\n                    end = flatCoordinates.length;\\n                    break;\\n                case GeometryType.POLYGON:\\n                    flatCoordinates = /** @type {import(\\\"../../geom/Polygon.js\\\").default} */ (geometry).getFlatInteriorPoint();\\n                    if (!textState.overflow) {\\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\\n                    }\\n                    stride = 3;\\n                    break;\\n                case GeometryType.MULTI_POLYGON:\\n                    var interiorPoints = /** @type {import(\\\"../../geom/MultiPolygon.js\\\").default} */ (geometry).getFlatInteriorPoints();\\n                    flatCoordinates = [];\\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\\n                        if (!textState.overflow) {\\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\\n                        }\\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\\n                    }\\n                    end = flatCoordinates.length;\\n                    if (end == 0) {\\n                        return;\\n                    }\\n                    break;\\n                default:\\n            }\\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\\n            this.saveTextStates_();\\n            if (textState.backgroundFill || textState.backgroundStroke) {\\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\\n                if (textState.backgroundFill) {\\n                    this.updateFillStyle(this.state, this.createFill);\\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\\n                }\\n                if (textState.backgroundStroke) {\\n                    this.updateStrokeStyle(this.state, this.applyStroke);\\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\\n                }\\n            }\\n            this.beginGeometry(feature);\\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\\n            // render time.\\n            var pixelRatio_1 = this.pixelRatio;\\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\\n                textState.padding == defaultPadding ?\\n                    defaultPadding : textState.padding.map(function (p) {\\n                    return p * pixelRatio_1;\\n                }),\\n                !!textState.backgroundFill, !!textState.backgroundStroke,\\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\\n            ]);\\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\\n                textState.padding,\\n                !!textState.backgroundFill, !!textState.backgroundStroke,\\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\\n            ]);\\n            this.endGeometry(feature);\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\\n        var strokeState = this.textStrokeState_;\\n        var textState = this.textState_;\\n        var fillState = this.textFillState_;\\n        var strokeKey = this.strokeKey_;\\n        if (strokeState) {\\n            if (!(strokeKey in this.strokeStates)) {\\n                this.strokeStates[strokeKey] = {\\n                    strokeStyle: strokeState.strokeStyle,\\n                    lineCap: strokeState.lineCap,\\n                    lineDashOffset: strokeState.lineDashOffset,\\n                    lineWidth: strokeState.lineWidth,\\n                    lineJoin: strokeState.lineJoin,\\n                    miterLimit: strokeState.miterLimit,\\n                    lineDash: strokeState.lineDash\\n                };\\n            }\\n        }\\n        var textKey = this.textKey_;\\n        if (!(textKey in this.textStates)) {\\n            this.textStates[textKey] = {\\n                font: textState.font,\\n                textAlign: textState.textAlign || defaultTextAlign,\\n                textBaseline: textState.textBaseline || defaultTextBaseline,\\n                scale: textState.scale\\n            };\\n        }\\n        var fillKey = this.fillKey_;\\n        if (fillState) {\\n            if (!(fillKey in this.fillStates)) {\\n                this.fillStates[fillKey] = {\\n                    fillStyle: fillState.fillStyle\\n                };\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {number} begin Begin.\\n     * @param {number} end End.\\n     * @param {import(\\\"../canvas.js\\\").DeclutterGroup} declutterGroup Declutter group.\\n     */\\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\\n        var strokeState = this.textStrokeState_;\\n        var textState = this.textState_;\\n        var strokeKey = this.strokeKey_;\\n        var textKey = this.textKey_;\\n        var fillKey = this.fillKey_;\\n        this.saveTextStates_();\\n        var pixelRatio = this.pixelRatio;\\n        var baseline = TEXT_ALIGN[textState.textBaseline];\\n        var offsetY = this.textOffsetY_ * pixelRatio;\\n        var text = this.text_;\\n        var textScale = textState.scale;\\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\\n            begin, end, baseline, declutterGroup,\\n            textState.overflow, fillKey, textState.maxAngle,\\n            pixelRatio,\\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\\n        ]);\\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\\n            begin, end, baseline, declutterGroup,\\n            textState.overflow, fillKey, textState.maxAngle,\\n            1,\\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\\n        ]);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\\n        var textState, fillState, strokeState;\\n        if (!textStyle) {\\n            this.text_ = '';\\n        }\\n        else {\\n            this.declutterGroup_ = /** @type {import(\\\"../canvas.js\\\").DeclutterGroup} */ (declutterGroup);\\n            var textFillStyle = textStyle.getFill();\\n            if (!textFillStyle) {\\n                fillState = this.textFillState_ = null;\\n            }\\n            else {\\n                fillState = this.textFillState_;\\n                if (!fillState) {\\n                    fillState = this.textFillState_ = /** @type {import(\\\"../canvas.js\\\").FillState} */ ({});\\n                }\\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\\n            }\\n            var textStrokeStyle = textStyle.getStroke();\\n            if (!textStrokeStyle) {\\n                strokeState = this.textStrokeState_ = null;\\n            }\\n            else {\\n                strokeState = this.textStrokeState_;\\n                if (!strokeState) {\\n                    strokeState = this.textStrokeState_ = /** @type {import(\\\"../canvas.js\\\").StrokeState} */ ({});\\n                }\\n                var lineDash = textStrokeStyle.getLineDash();\\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\\n                var lineWidth = textStrokeStyle.getWidth();\\n                var miterLimit = textStrokeStyle.getMiterLimit();\\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\\n                strokeState.lineDashOffset =\\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\\n                strokeState.lineWidth =\\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\\n                strokeState.miterLimit =\\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\\n            }\\n            textState = this.textState_;\\n            var font = textStyle.getFont() || defaultFont;\\n            checkFont(font);\\n            var textScale = textStyle.getScale();\\n            textState.overflow = textStyle.getOverflow();\\n            textState.font = font;\\n            textState.maxAngle = textStyle.getMaxAngle();\\n            textState.placement = textStyle.getPlacement();\\n            textState.textAlign = textStyle.getTextAlign();\\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\\n            textState.backgroundFill = textStyle.getBackgroundFill();\\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\\n            textState.padding = textStyle.getPadding() || defaultPadding;\\n            textState.scale = textScale === undefined ? 1 : textScale;\\n            var textOffsetX = textStyle.getOffsetX();\\n            var textOffsetY = textStyle.getOffsetY();\\n            var textRotateWithView = textStyle.getRotateWithView();\\n            var textRotation = textStyle.getRotation();\\n            this.text_ = textStyle.getText() || '';\\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\\n            this.strokeKey_ = strokeState ?\\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\\n                '';\\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\\n            this.fillKey_ = fillState ?\\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\\n                '';\\n        }\\n    };\\n    return CanvasTextBuilder;\\n}(CanvasBuilder));\\nexport default CanvasTextBuilder;\\n//# sourceMappingURL=TextBuilder.js.map\",\"/**\\n * @module ol/render/canvas/BuilderGroup\\n */\\nimport { createEmpty } from '../../extent.js';\\nimport Builder from './Builder.js';\\nimport ImageBuilder from './ImageBuilder.js';\\nimport LineStringBuilder from './LineStringBuilder.js';\\nimport PolygonBuilder from './PolygonBuilder.js';\\nimport TextBuilder from './TextBuilder.js';\\n/**\\n * @type {Object<import(\\\"./BuilderType\\\").default, typeof Builder>}\\n */\\nvar BATCH_CONSTRUCTORS = {\\n    'Circle': PolygonBuilder,\\n    'Default': Builder,\\n    'Image': ImageBuilder,\\n    'LineString': LineStringBuilder,\\n    'Polygon': PolygonBuilder,\\n    'Text': TextBuilder\\n};\\nvar BuilderGroup = /** @class */ (function () {\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Max extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {boolean} declutter Decluttering enabled.\\n     */\\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.declutter_ = declutter;\\n        /**\\n         * @type {import(\\\"../canvas.js\\\").DeclutterGroup}\\n         * @private\\n         */\\n        this.declutterGroup_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.tolerance_ = tolerance;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        this.maxExtent_ = maxExtent;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.pixelRatio_ = pixelRatio;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.resolution_ = resolution;\\n        /**\\n         * @private\\n         * @type {!Object<string, !Object<import(\\\"./BuilderType\\\").default, Builder>>}\\n         */\\n        this.buildersByZIndex_ = {};\\n    }\\n    /**\\n     * @param {boolean} group Group with previous builder.\\n     * @return {Array<*>} The resulting instruction group.\\n     */\\n    BuilderGroup.prototype.addDeclutter = function (group) {\\n        var declutter = null;\\n        if (this.declutter_) {\\n            if (group) {\\n                declutter = this.declutterGroup_;\\n                /** @type {number} */ (declutter[4])++;\\n            }\\n            else {\\n                declutter = this.declutterGroup_ = createEmpty();\\n                declutter.push(1);\\n            }\\n        }\\n        return declutter;\\n    };\\n    /**\\n     * @return {!Object<string, !Object<import(\\\"./BuilderType\\\").default, import(\\\"./Builder.js\\\").SerializableInstructions>>} The serializable instructions\\n     */\\n    BuilderGroup.prototype.finish = function () {\\n        var builderInstructions = {};\\n        for (var zKey in this.buildersByZIndex_) {\\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\\n            var builders = this.buildersByZIndex_[zKey];\\n            for (var builderKey in builders) {\\n                var builderInstruction = builders[builderKey].finish();\\n                builderInstructions[zKey][builderKey] = builderInstruction;\\n            }\\n        }\\n        return builderInstructions;\\n    };\\n    /**\\n     * @param {number|undefined} zIndex Z index.\\n     * @param {import(\\\"./BuilderType.js\\\").default} builderType Replay type.\\n     * @return {import(\\\"../VectorContext.js\\\").default} Replay.\\n     */\\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\\n        var replays = this.buildersByZIndex_[zIndexKey];\\n        if (replays === undefined) {\\n            replays = {};\\n            this.buildersByZIndex_[zIndexKey] = replays;\\n        }\\n        var replay = replays[builderType];\\n        if (replay === undefined) {\\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\\n            replays[builderType] = replay;\\n        }\\n        return replay;\\n    };\\n    return BuilderGroup;\\n}());\\nexport default BuilderGroup;\\n//# sourceMappingURL=BuilderGroup.js.map\",\"/**\\n * @module ol/render/canvas/BuilderType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    CIRCLE: 'Circle',\\n    DEFAULT: 'Default',\\n    IMAGE: 'Image',\\n    LINE_STRING: 'LineString',\\n    POLYGON: 'Polygon',\\n    TEXT: 'Text'\\n};\\n//# sourceMappingURL=BuilderType.js.map\",\"/**\\n * @module ol/geom/flat/length\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {number} Length.\\n */\\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    var length = 0;\\n    for (var i = offset + stride; i < end; i += stride) {\\n        var x2 = flatCoordinates[i];\\n        var y2 = flatCoordinates[i + 1];\\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return length;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {number} Perimeter.\\n */\\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\\n    perimeter += Math.sqrt(dx * dx + dy * dy);\\n    return perimeter;\\n}\\n//# sourceMappingURL=length.js.map\",\"/**\\n * @module ol/geom/flat/textpath\\n */\\nimport { lerp } from '../../math.js';\\n/**\\n * @param {Array<number>} flatCoordinates Path to put text on.\\n * @param {number} offset Start offset of the `flatCoordinates`.\\n * @param {number} end End offset of the `flatCoordinates`.\\n * @param {number} stride Stride.\\n * @param {string} text Text to place on the path.\\n * @param {number} startM m along the path where the text starts.\\n * @param {number} maxAngle Max angle between adjacent chars in radians.\\n * @param {number} scale The product of the text scale and the device pixel ratio.\\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\\n * @param {string} font The font.\\n * @param {Object<string, number>} cache A cache of measured widths.\\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\\n */\\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\\n    var result = [];\\n    // Keep text upright\\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\\n    var numChars = text.length;\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    offset += stride;\\n    var x2 = flatCoordinates[offset];\\n    var y2 = flatCoordinates[offset + 1];\\n    var segmentM = 0;\\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\\n    var chunk = '';\\n    var chunkLength = 0;\\n    var data, index, previousAngle;\\n    for (var i = 0; i < numChars; ++i) {\\n        index = reverse ? numChars - i - 1 : i;\\n        var char = text.charAt(index);\\n        chunk = reverse ? char + chunk : chunk + char;\\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\\n        chunkLength += charLength;\\n        var charM = startM + charLength / 2;\\n        while (offset < end - stride && segmentM + segmentLength < charM) {\\n            x1 = x2;\\n            y1 = y2;\\n            offset += stride;\\n            x2 = flatCoordinates[offset];\\n            y2 = flatCoordinates[offset + 1];\\n            segmentM += segmentLength;\\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\\n        }\\n        var segmentPos = charM - segmentM;\\n        var angle = Math.atan2(y2 - y1, x2 - x1);\\n        if (reverse) {\\n            angle += angle > 0 ? -Math.PI : Math.PI;\\n        }\\n        if (previousAngle !== undefined) {\\n            var delta = angle - previousAngle;\\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\\n            if (Math.abs(delta) > maxAngle) {\\n                return null;\\n            }\\n        }\\n        var interpolate = segmentPos / segmentLength;\\n        var x = lerp(x1, x2, interpolate);\\n        var y = lerp(y1, y2, interpolate);\\n        if (previousAngle == angle) {\\n            if (reverse) {\\n                data[0] = x;\\n                data[1] = y;\\n                data[2] = charLength / 2;\\n            }\\n            data[4] = chunk;\\n        }\\n        else {\\n            chunk = char;\\n            chunkLength = charLength;\\n            data = [x, y, charLength / 2, angle, chunk];\\n            if (reverse) {\\n                result.unshift(data);\\n            }\\n            else {\\n                result.push(data);\\n            }\\n            previousAngle = angle;\\n        }\\n        startM += charLength;\\n    }\\n    return result;\\n}\\n//# sourceMappingURL=textpath.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/Executor\\n */\\nimport { getUid } from '../../util.js';\\nimport { equals } from '../../array.js';\\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\\nimport { lineStringLength } from '../../geom/flat/length.js';\\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\\nimport { transform2D } from '../../geom/flat/transform.js';\\nimport { isEmpty } from '../../obj.js';\\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\\nimport CanvasInstruction from './Instruction.js';\\nimport { TEXT_ALIGN } from './TextBuilder.js';\\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\\nimport { createCanvasContext2D } from '../../dom.js';\\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\\nimport Disposable from '../../Disposable.js';\\n/**\\n * @typedef {Object} SerializableInstructions\\n * @property {Array<*>} instructions The rendering instructions.\\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\\n * @property {Array<number>} coordinates The array of all coordinates.\\n * @property {!Object<string, import(\\\"../canvas.js\\\").TextState>} textStates The text states (decluttering).\\n * @property {!Object<string, import(\\\"../canvas.js\\\").FillState>} fillStates The fill states (decluttering).\\n * @property {!Object<string, import(\\\"../canvas.js\\\").StrokeState>} strokeStates The stroke states (decluttering).\\n */\\n/**\\n * @type {import(\\\"../../extent.js\\\").Extent}\\n */\\nvar tmpExtent = createEmpty();\\n/**\\n * @type {!import(\\\"../../transform.js\\\").Transform}\\n */\\nvar tmpTransform = createTransform();\\n/** @type {import(\\\"../../coordinate.js\\\").Coordinate} */\\nvar p1 = [];\\n/** @type {import(\\\"../../coordinate.js\\\").Coordinate} */\\nvar p2 = [];\\n/** @type {import(\\\"../../coordinate.js\\\").Coordinate} */\\nvar p3 = [];\\n/** @type {import(\\\"../../coordinate.js\\\").Coordinate} */\\nvar p4 = [];\\nvar Executor = /** @class */ (function (_super) {\\n    __extends(Executor, _super);\\n    /**\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {boolean} overlaps The replay can have overlapping geometries.\\n     * @param {?} declutterTree Declutter tree.\\n     * @param {SerializableInstructions} instructions The serializable instructions\\n     */\\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {?}\\n         */\\n        _this.declutterTree = declutterTree;\\n        /**\\n         * @protected\\n         * @type {boolean}\\n         */\\n        _this.overlaps = overlaps;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.pixelRatio = pixelRatio;\\n        /**\\n         * @protected\\n         * @const\\n         * @type {number}\\n         */\\n        _this.resolution = resolution;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.alignFill_;\\n        /**\\n         * @protected\\n         * @type {Array<*>}\\n         */\\n        _this.instructions = instructions.instructions;\\n        /**\\n         * @protected\\n         * @type {Array<number>}\\n         */\\n        _this.coordinates = instructions.coordinates;\\n        /**\\n         * @private\\n         * @type {!Object<number,import(\\\"../../coordinate.js\\\").Coordinate|Array<import(\\\"../../coordinate.js\\\").Coordinate>|Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>}\\n         */\\n        _this.coordinateCache_ = {};\\n        /**\\n         * @private\\n         * @type {!import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.renderedTransform_ = createTransform();\\n        /**\\n         * @protected\\n         * @type {Array<*>}\\n         */\\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.pixelCoordinates_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.viewRotation_ = 0;\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").FillState>}\\n         */\\n        _this.fillStates = instructions.fillStates || {};\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").StrokeState>}\\n         */\\n        _this.strokeStates = instructions.strokeStates || {};\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").TextState>}\\n         */\\n        _this.textStates = instructions.textStates || {};\\n        /**\\n         * @private\\n         * @type {Object<string, Object<string, number>>}\\n         */\\n        _this.widths_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    Executor.prototype.disposeInternal = function () {\\n        labelCache.release(this);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * @param {string} text Text.\\n     * @param {string} textKey Text style key.\\n     * @param {string} fillKey Fill style key.\\n     * @param {string} strokeKey Stroke style key.\\n     * @return {HTMLCanvasElement} Image.\\n     */\\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\\n        var label;\\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\\n        if (!labelCache.containsKey(key)) {\\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\\n            var textState = this.textStates[textKey];\\n            var pixelRatio = this.pixelRatio;\\n            var scale = textState.scale * pixelRatio;\\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\\n            var lines = text.split('\\\\n');\\n            var numLines = lines.length;\\n            var widths = [];\\n            var width = measureTextWidths(textState.font, lines, widths);\\n            var lineHeight = measureTextHeight(textState.font);\\n            var height = lineHeight * numLines;\\n            var renderWidth = (width + strokeWidth);\\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\\n            label = context.canvas;\\n            labelCache.set(key, label);\\n            if (scale != 1) {\\n                context.scale(scale, scale);\\n            }\\n            context.font = textState.font;\\n            if (strokeKey) {\\n                context.strokeStyle = strokeState.strokeStyle;\\n                context.lineWidth = strokeWidth;\\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\\n                context.miterLimit = strokeState.miterLimit;\\n                if (context.setLineDash && strokeState.lineDash.length) {\\n                    context.setLineDash(strokeState.lineDash);\\n                    context.lineDashOffset = strokeState.lineDashOffset;\\n                }\\n            }\\n            if (fillKey) {\\n                context.fillStyle = fillState.fillStyle;\\n            }\\n            context.textBaseline = 'middle';\\n            context.textAlign = 'center';\\n            var leftRight = (0.5 - align);\\n            var x = align * label.width / scale + leftRight * strokeWidth;\\n            var i = void 0;\\n            if (strokeKey) {\\n                for (i = 0; i < numLines; ++i) {\\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\\n                }\\n            }\\n            if (fillKey) {\\n                for (i = 0; i < numLines; ++i) {\\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\\n                }\\n            }\\n        }\\n        return labelCache.get(key, this);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} p1 1st point of the background box.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} p2 2nd point of the background box.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} p3 3rd point of the background box.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} p4 4th point of the background box.\\n     * @param {Array<*>} fillInstruction Fill instruction.\\n     * @param {Array<*>} strokeInstruction Stroke instruction.\\n     */\\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\\n        context.beginPath();\\n        context.moveTo.apply(context, p1);\\n        context.lineTo.apply(context, p2);\\n        context.lineTo.apply(context, p3);\\n        context.lineTo.apply(context, p4);\\n        context.lineTo.apply(context, p1);\\n        if (fillInstruction) {\\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\\n            this.fill_(context);\\n        }\\n        if (strokeInstruction) {\\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\\n            context.stroke();\\n        }\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\\n     * @param {number} anchorX Anchor X.\\n     * @param {number} anchorY Anchor Y.\\n     * @param {import(\\\"../canvas.js\\\").DeclutterGroup} declutterGroup Declutter group.\\n     * @param {number} height Height.\\n     * @param {number} opacity Opacity.\\n     * @param {number} originX Origin X.\\n     * @param {number} originY Origin Y.\\n     * @param {number} rotation Rotation.\\n     * @param {number} scale Scale.\\n     * @param {boolean} snapToPixel Snap to pixel.\\n     * @param {number} width Width.\\n     * @param {Array<number>} padding Padding.\\n     * @param {Array<*>} fillInstruction Fill instruction.\\n     * @param {Array<*>} strokeInstruction Stroke instruction.\\n     */\\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\\n        var fillStroke = fillInstruction || strokeInstruction;\\n        anchorX *= scale;\\n        anchorY *= scale;\\n        x -= anchorX;\\n        y -= anchorY;\\n        var w = (width + originX > image.width) ? image.width - originX : width;\\n        var h = (height + originY > image.height) ? image.height - originY : height;\\n        var boxW = padding[3] + w * scale + padding[1];\\n        var boxH = padding[0] + h * scale + padding[2];\\n        var boxX = x - padding[3];\\n        var boxY = y - padding[0];\\n        if (fillStroke || rotation !== 0) {\\n            p1[0] = p4[0] = boxX;\\n            p1[1] = p2[1] = boxY;\\n            p2[0] = p3[0] = boxX + boxW;\\n            p3[1] = p4[1] = boxY + boxH;\\n        }\\n        var transform = null;\\n        if (rotation !== 0) {\\n            var centerX = x + anchorX;\\n            var centerY = y + anchorY;\\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\\n            applyTransform(tmpTransform, p1);\\n            applyTransform(tmpTransform, p2);\\n            applyTransform(tmpTransform, p3);\\n            applyTransform(tmpTransform, p4);\\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\\n        }\\n        else {\\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\\n        }\\n        var canvas = context.canvas;\\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\\n        if (snapToPixel) {\\n            x = Math.round(x);\\n            y = Math.round(y);\\n        }\\n        if (declutterGroup) {\\n            if (!intersects && declutterGroup[4] == 1) {\\n                return;\\n            }\\n            extend(declutterGroup, tmpExtent);\\n            var declutterArgs = intersects ?\\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\\n                null;\\n            if (declutterArgs && fillStroke) {\\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\\n            }\\n            declutterGroup.push(declutterArgs);\\n        }\\n        else if (intersects) {\\n            if (fillStroke) {\\n                this.replayTextBackground_(context, p1, p2, p3, p4, \\n                /** @type {Array<*>} */ (fillInstruction), \\n                /** @type {Array<*>} */ (strokeInstruction));\\n            }\\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {CanvasRenderingContext2D} context Context.\\n     */\\n    Executor.prototype.fill_ = function (context) {\\n        if (this.alignFill_) {\\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\\n            var repeatSize = 512 * this.pixelRatio;\\n            context.save();\\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\\n            context.rotate(this.viewRotation_);\\n        }\\n        context.fill();\\n        if (this.alignFill_) {\\n            context.restore();\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {Array<*>} instruction Instruction.\\n     */\\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\\n        context.strokeStyle = /** @type {import(\\\"../../colorlike.js\\\").ColorLike} */ (instruction[1]);\\n        context.lineWidth = /** @type {number} */ (instruction[2]);\\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\\n        context.miterLimit = /** @type {number} */ (instruction[5]);\\n        if (context.setLineDash) {\\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").DeclutterGroup} declutterGroup Declutter group.\\n     * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\\n        if (declutterGroup && declutterGroup.length > 5) {\\n            var groupCount = declutterGroup[4];\\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\\n                /** @type {import(\\\"../../structs/RBush.js\\\").Entry} */\\n                var box = {\\n                    minX: /** @type {number} */ (declutterGroup[0]),\\n                    minY: /** @type {number} */ (declutterGroup[1]),\\n                    maxX: /** @type {number} */ (declutterGroup[2]),\\n                    maxY: /** @type {number} */ (declutterGroup[3]),\\n                    value: feature\\n                };\\n                if (!this.declutterTree.collides(box)) {\\n                    this.declutterTree.insert(box);\\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\\n                        if (declutterData) {\\n                            if (declutterData.length > 11) {\\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\\n                            }\\n                            drawImage.apply(undefined, declutterData);\\n                        }\\n                    }\\n                }\\n                declutterGroup.length = 5;\\n                createOrUpdateEmpty(declutterGroup);\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {string} text The text to draw.\\n     * @param {string} textKey The key of the text state.\\n     * @param {string} strokeKey The key for the stroke state.\\n     * @param {string} fillKey The key for the fill state.\\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\\n     */\\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\\n        var textState = this.textStates[textKey];\\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\\n        var strokeState = this.strokeStates[strokeKey];\\n        var pixelRatio = this.pixelRatio;\\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\\n        return {\\n            label: label,\\n            anchorX: anchorX,\\n            anchorY: anchorY\\n        };\\n    };\\n    /**\\n     * @private\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\\n     *     to skip.\\n     * @param {Array<*>} instructions Instructions array.\\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\\n     * @param {function(import(\\\"../../Feature.js\\\").FeatureLike): T|undefined} featureCallback Feature callback.\\n     * @param {import(\\\"../../extent.js\\\").Extent=} opt_hitExtent Only check features that intersect this\\n     *     extent.\\n     * @return {T|undefined} Callback result.\\n     * @template T\\n     */\\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\\n        /** @type {Array<number>} */\\n        var pixelCoordinates;\\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\\n            pixelCoordinates = this.pixelCoordinates_;\\n        }\\n        else {\\n            if (!this.pixelCoordinates_) {\\n                this.pixelCoordinates_ = [];\\n            }\\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\\n            transformSetFromArray(this.renderedTransform_, transform);\\n        }\\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\\n        var i = 0; // instruction index\\n        var ii = instructions.length; // end of instructions\\n        var d = 0; // data index\\n        var dd; // end of per-instruction data\\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\\n        var strokeKey, fillKey;\\n        var pendingFill = 0;\\n        var pendingStroke = 0;\\n        var lastFillInstruction = null;\\n        var lastStrokeInstruction = null;\\n        var coordinateCache = this.coordinateCache_;\\n        var viewRotation = this.viewRotation_;\\n        var state = /** @type {import(\\\"../../render.js\\\").State} */ ({\\n            context: context,\\n            pixelRatio: this.pixelRatio,\\n            resolution: this.resolution,\\n            rotation: viewRotation\\n        });\\n        // When the batch size gets too big, performance decreases. 200 is a good\\n        // balance between batch size and number of fill/stroke instructions.\\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\\n        var /** @type {import(\\\"../../Feature.js\\\").FeatureLike} */ feature;\\n        var x, y;\\n        while (i < ii) {\\n            var instruction = instructions[i];\\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\\n            switch (type) {\\n                case CanvasInstruction.BEGIN_GEOMETRY:\\n                    feature = /** @type {import(\\\"../../Feature.js\\\").FeatureLike} */ (instruction[1]);\\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\\n                        i = /** @type {number} */ (instruction[2]);\\n                    }\\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\\n                        i = /** @type {number} */ (instruction[2]) + 1;\\n                    }\\n                    else {\\n                        ++i;\\n                    }\\n                    break;\\n                case CanvasInstruction.BEGIN_PATH:\\n                    if (pendingFill > batchSize) {\\n                        this.fill_(context);\\n                        pendingFill = 0;\\n                    }\\n                    if (pendingStroke > batchSize) {\\n                        context.stroke();\\n                        pendingStroke = 0;\\n                    }\\n                    if (!pendingFill && !pendingStroke) {\\n                        context.beginPath();\\n                        prevX = prevY = NaN;\\n                    }\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.CIRCLE:\\n                    d = /** @type {number} */ (instruction[1]);\\n                    var x1 = pixelCoordinates[d];\\n                    var y1 = pixelCoordinates[d + 1];\\n                    var x2 = pixelCoordinates[d + 2];\\n                    var y2 = pixelCoordinates[d + 3];\\n                    var dx = x2 - x1;\\n                    var dy = y2 - y1;\\n                    var r = Math.sqrt(dx * dx + dy * dy);\\n                    context.moveTo(x1 + r, y1);\\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.CLOSE_PATH:\\n                    context.closePath();\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.CUSTOM:\\n                    d = /** @type {number} */ (instruction[1]);\\n                    dd = instruction[2];\\n                    var geometry = /** @type {import(\\\"../../geom/SimpleGeometry.js\\\").default} */ (instruction[3]);\\n                    var renderer = instruction[4];\\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\\n                    state.geometry = geometry;\\n                    state.feature = feature;\\n                    if (!(i in coordinateCache)) {\\n                        coordinateCache[i] = [];\\n                    }\\n                    var coords = coordinateCache[i];\\n                    if (fn) {\\n                        fn(pixelCoordinates, d, dd, 2, coords);\\n                    }\\n                    else {\\n                        coords[0] = pixelCoordinates[d];\\n                        coords[1] = pixelCoordinates[d + 1];\\n                        coords.length = 2;\\n                    }\\n                    renderer(coords, state);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.DRAW_IMAGE:\\n                    d = /** @type {number} */ (instruction[1]);\\n                    dd = /** @type {number} */ (instruction[2]);\\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\\n                    anchorX = /** @type {number} */ (instruction[4]);\\n                    anchorY = /** @type {number} */ (instruction[5]);\\n                    declutterGroup = featureCallback ? null : /** @type {import(\\\"../canvas.js\\\").DeclutterGroup} */ (instruction[6]);\\n                    var height = /** @type {number} */ (instruction[7]);\\n                    var opacity = /** @type {number} */ (instruction[8]);\\n                    var originX = /** @type {number} */ (instruction[9]);\\n                    var originY = /** @type {number} */ (instruction[10]);\\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\\n                    var rotation = /** @type {number} */ (instruction[12]);\\n                    var scale = /** @type {number} */ (instruction[13]);\\n                    var width = /** @type {number} */ (instruction[14]);\\n                    if (!image && instruction.length >= 19) {\\n                        // create label images\\n                        text = /** @type {string} */ (instruction[18]);\\n                        textKey = /** @type {string} */ (instruction[19]);\\n                        strokeKey = /** @type {string} */ (instruction[20]);\\n                        fillKey = /** @type {string} */ (instruction[21]);\\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\\n                        image = instruction[3] = labelWithAnchor.label;\\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\\n                        height = instruction[7] = image.height;\\n                        width = instruction[14] = image.width;\\n                    }\\n                    var geometryWidths = void 0;\\n                    if (instruction.length > 24) {\\n                        geometryWidths = /** @type {number} */ (instruction[24]);\\n                    }\\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\\n                    if (instruction.length > 16) {\\n                        padding = /** @type {Array<number>} */ (instruction[15]);\\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\\n                    }\\n                    else {\\n                        padding = defaultPadding;\\n                        backgroundFill = backgroundStroke = false;\\n                    }\\n                    if (rotateWithView) {\\n                        rotation += viewRotation;\\n                    }\\n                    var widthIndex = 0;\\n                    for (; d < dd; d += 2) {\\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\\n                            continue;\\n                        }\\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\\n                    }\\n                    this.renderDeclutter_(declutterGroup, feature);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.DRAW_CHARS:\\n                    var begin = /** @type {number} */ (instruction[1]);\\n                    var end = /** @type {number} */ (instruction[2]);\\n                    var baseline = /** @type {number} */ (instruction[3]);\\n                    declutterGroup = featureCallback ? null : /** @type {import(\\\"../canvas.js\\\").DeclutterGroup} */ (instruction[4]);\\n                    var overflow = /** @type {number} */ (instruction[5]);\\n                    fillKey = /** @type {string} */ (instruction[6]);\\n                    var maxAngle = /** @type {number} */ (instruction[7]);\\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\\n                    var offsetY = /** @type {number} */ (instruction[9]);\\n                    strokeKey = /** @type {string} */ (instruction[10]);\\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\\n                    text = /** @type {string} */ (instruction[12]);\\n                    textKey = /** @type {string} */ (instruction[13]);\\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\\n                    var textState = this.textStates[textKey];\\n                    var font = textState.font;\\n                    var textScale = textState.scale * measurePixelRatio;\\n                    var cachedWidths = void 0;\\n                    if (font in this.widths_) {\\n                        cachedWidths = this.widths_[font];\\n                    }\\n                    else {\\n                        cachedWidths = this.widths_[font] = {};\\n                    }\\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\\n                    if (overflow || textLength <= pathLength) {\\n                        var textAlign = this.textStates[textKey].textAlign;\\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\\n                        if (parts) {\\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\\n                            if (strokeKey) {\\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\\n                                    chars = /** @type {string} */ (part[4]);\\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\\n                                    this.replayImage_(context, \\n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \\n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\\n                                }\\n                            }\\n                            if (fillKey) {\\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\\n                                    chars = /** @type {string} */ (part[4]);\\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\\n                                    anchorX = /** @type {number} */ (part[2]);\\n                                    anchorY = baseline * label.height - offsetY;\\n                                    this.replayImage_(context, \\n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \\n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\\n                                }\\n                            }\\n                        }\\n                    }\\n                    this.renderDeclutter_(declutterGroup, feature);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.END_GEOMETRY:\\n                    if (featureCallback !== undefined) {\\n                        feature = /** @type {import(\\\"../../Feature.js\\\").FeatureLike} */ (instruction[1]);\\n                        var result = featureCallback(feature);\\n                        if (result) {\\n                            return result;\\n                        }\\n                    }\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.FILL:\\n                    if (batchSize) {\\n                        pendingFill++;\\n                    }\\n                    else {\\n                        this.fill_(context);\\n                    }\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.MOVE_TO_LINE_TO:\\n                    d = /** @type {number} */ (instruction[1]);\\n                    dd = /** @type {number} */ (instruction[2]);\\n                    x = pixelCoordinates[d];\\n                    y = pixelCoordinates[d + 1];\\n                    roundX = (x + 0.5) | 0;\\n                    roundY = (y + 0.5) | 0;\\n                    if (roundX !== prevX || roundY !== prevY) {\\n                        context.moveTo(x, y);\\n                        prevX = roundX;\\n                        prevY = roundY;\\n                    }\\n                    for (d += 2; d < dd; d += 2) {\\n                        x = pixelCoordinates[d];\\n                        y = pixelCoordinates[d + 1];\\n                        roundX = (x + 0.5) | 0;\\n                        roundY = (y + 0.5) | 0;\\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\\n                            context.lineTo(x, y);\\n                            prevX = roundX;\\n                            prevY = roundY;\\n                        }\\n                    }\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.SET_FILL_STYLE:\\n                    lastFillInstruction = instruction;\\n                    this.alignFill_ = instruction[2];\\n                    if (pendingFill) {\\n                        this.fill_(context);\\n                        pendingFill = 0;\\n                        if (pendingStroke) {\\n                            context.stroke();\\n                            pendingStroke = 0;\\n                        }\\n                    }\\n                    context.fillStyle = /** @type {import(\\\"../../colorlike.js\\\").ColorLike} */ (instruction[1]);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.SET_STROKE_STYLE:\\n                    lastStrokeInstruction = instruction;\\n                    if (pendingStroke) {\\n                        context.stroke();\\n                        pendingStroke = 0;\\n                    }\\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.STROKE:\\n                    if (batchSize) {\\n                        pendingStroke++;\\n                    }\\n                    else {\\n                        context.stroke();\\n                    }\\n                    ++i;\\n                    break;\\n                default:\\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\\n                    break;\\n            }\\n        }\\n        if (pendingFill) {\\n            this.fill_(context);\\n        }\\n        if (pendingStroke) {\\n            context.stroke();\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @param {number} viewRotation View rotation.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\\n     *     to skip.\\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\\n     */\\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\\n        this.viewRotation_ = viewRotation;\\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @param {number} viewRotation View rotation.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\\n     *     to skip.\\n     * @param {function(import(\\\"../../Feature.js\\\").FeatureLike): T=} opt_featureCallback\\n     *     Feature callback.\\n     * @param {import(\\\"../../extent.js\\\").Extent=} opt_hitExtent Only check features that intersect this\\n     *     extent.\\n     * @return {T|undefined} Callback result.\\n     * @template T\\n     */\\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\\n        this.viewRotation_ = viewRotation;\\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\\n    };\\n    return Executor;\\n}(Disposable));\\nexport default Executor;\\n//# sourceMappingURL=Executor.js.map\",\"/**\\n * @module ol/render/canvas/ExecutorGroup\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { numberSafeCompareFunction } from '../../array.js';\\nimport { createCanvasContext2D } from '../../dom.js';\\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\\nimport { transform2D } from '../../geom/flat/transform.js';\\nimport { isEmpty } from '../../obj.js';\\nimport BuilderType from './BuilderType.js';\\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\\nimport Executor from './Executor.js';\\nimport Disposable from '../../Disposable.js';\\n/**\\n * @const\\n * @type {Array<BuilderType>}\\n */\\nvar ORDER = [\\n    BuilderType.POLYGON,\\n    BuilderType.CIRCLE,\\n    BuilderType.LINE_STRING,\\n    BuilderType.IMAGE,\\n    BuilderType.TEXT,\\n    BuilderType.DEFAULT\\n];\\nvar ExecutorGroup = /** @class */ (function (_super) {\\n    __extends(ExecutorGroup, _super);\\n    /**\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Max extent for clipping. When a\\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\\n     * should be set here, unless the target context does not exceet that extent (which\\n     * can be the case when rendering to tiles).\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\\n     * @param {!Object<string, !Object<BuilderType, import(\\\"./Builder.js\\\").SerializableInstructions>>} allInstructions\\n     * The serializable instructions.\\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\\n     */\\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * Declutter tree.\\n         * @private\\n         */\\n        _this.declutterTree_ = declutterTree;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.maxExtent_ = maxExtent;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.overlaps_ = overlaps;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelRatio_ = pixelRatio;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.resolution_ = resolution;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.renderBuffer_ = opt_renderBuffer;\\n        /**\\n         * @private\\n         * @type {!Object<string, !Object<BuilderType, import(\\\"./Executor\\\").default>>}\\n         */\\n        _this.executorsByZIndex_ = {};\\n        /**\\n         * @private\\n         * @type {CanvasRenderingContext2D}\\n         */\\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\\n        /**\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.hitDetectionTransform_ = createTransform();\\n        _this.createExecutors_(allInstructions);\\n        return _this;\\n    }\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     */\\n    ExecutorGroup.prototype.clip = function (context, transform) {\\n        var flatClipCoords = this.getClipCoords(transform);\\n        context.beginPath();\\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\\n        context.clip();\\n    };\\n    /**\\n     * Create executors and populate them using the provided instructions.\\n     * @private\\n     * @param {!Object<string, !Object<BuilderType, import(\\\"./Builder.js\\\").SerializableInstructions>>} allInstructions The serializable instructions\\n     */\\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\\n        for (var zIndex in allInstructions) {\\n            var executors = this.executorsByZIndex_[zIndex];\\n            if (executors === undefined) {\\n                this.executorsByZIndex_[zIndex] = executors = {};\\n            }\\n            var instructionByZindex = allInstructions[zIndex];\\n            for (var builderType in instructionByZindex) {\\n                var instructions = instructionByZindex[builderType];\\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\\n            }\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    ExecutorGroup.prototype.disposeInternal = function () {\\n        for (var z in this.executorsByZIndex_) {\\n            var executors = this.executorsByZIndex_[z];\\n            for (var key in executors) {\\n                executors[key].disposeInternal();\\n            }\\n        }\\n        var canvas = this.hitDetectionContext_.canvas;\\n        canvas.width = canvas.height = 0;\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * @param {Array<BuilderType>} executors Executors.\\n     * @return {boolean} Has executors of the provided types.\\n     */\\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\\n        for (var zIndex in this.executorsByZIndex_) {\\n            var candidates = this.executorsByZIndex_[zIndex];\\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\\n                if (executors[i] in candidates) {\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {number} resolution Resolution.\\n     * @param {number} rotation Rotation.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\\n     * @param {function(import(\\\"../../Feature.js\\\").FeatureLike): T} callback Feature callback.\\n     * @param {Object<string, import(\\\"../canvas.js\\\").DeclutterGroup>} declutterReplays Declutter replays.\\n     * @return {T|undefined} Callback result.\\n     * @template T\\n     */\\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\\n        hitTolerance = Math.round(hitTolerance);\\n        var contextSize = hitTolerance * 2 + 1;\\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\\n        var context = this.hitDetectionContext_;\\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\\n            context.canvas.width = contextSize;\\n            context.canvas.height = contextSize;\\n        }\\n        else {\\n            context.clearRect(0, 0, contextSize, contextSize);\\n        }\\n        /**\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        var hitExtent;\\n        if (this.renderBuffer_ !== undefined) {\\n            hitExtent = createEmpty();\\n            extendCoordinate(hitExtent, coordinate);\\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\\n        }\\n        var mask = getCircleArray(hitTolerance);\\n        var declutteredFeatures;\\n        if (this.declutterTree_) {\\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\\n                return entry.value;\\n            });\\n        }\\n        var builderType;\\n        /**\\n         * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n         * @return {?} Callback result.\\n         */\\n        function featureCallback(feature) {\\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\\n                    if (mask[i_1][j_1]) {\\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\\n                            var result_1 = void 0;\\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\\n                                declutteredFeatures.indexOf(feature) !== -1) {\\n                                result_1 = callback(feature);\\n                            }\\n                            if (result_1) {\\n                                return result_1;\\n                            }\\n                            else {\\n                                context.clearRect(0, 0, contextSize, contextSize);\\n                                return undefined;\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        /** @type {Array<number>} */\\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\\n        zs.sort(numberSafeCompareFunction);\\n        var i, j, executors, executor, result;\\n        for (i = zs.length - 1; i >= 0; --i) {\\n            var zIndexKey = zs[i].toString();\\n            executors = this.executorsByZIndex_[zIndexKey];\\n            for (j = ORDER.length - 1; j >= 0; --j) {\\n                builderType = ORDER[j];\\n                executor = executors[builderType];\\n                if (executor !== undefined) {\\n                    if (declutterReplays &&\\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\\n                        var declutter = declutterReplays[zIndexKey];\\n                        if (!declutter) {\\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\\n                        }\\n                        else {\\n                            declutter.push(executor, transform.slice(0));\\n                        }\\n                    }\\n                    else {\\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\\n                        if (result) {\\n                            return result;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @return {Array<number>} Clip coordinates.\\n     */\\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\\n        var maxExtent = this.maxExtent_;\\n        if (!maxExtent) {\\n            return null;\\n        }\\n        var minX = maxExtent[0];\\n        var minY = maxExtent[1];\\n        var maxX = maxExtent[2];\\n        var maxY = maxExtent[3];\\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\\n        return flatClipCoords;\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    ExecutorGroup.prototype.isEmpty = function () {\\n        return isEmpty(this.executorsByZIndex_);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @param {number} viewRotation View rotation.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\\n     *     Default is {@link module:ol/render/replay~ORDER}\\n     * @param {Object<string, import(\\\"../canvas.js\\\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\\n     */\\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\\n        /** @type {Array<number>} */\\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\\n        zs.sort(numberSafeCompareFunction);\\n        // setup clipping so that the parts of over-simplified geometries are not\\n        // visible outside the current extent when panning\\n        if (this.maxExtent_) {\\n            context.save();\\n            this.clip(context, transform);\\n        }\\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\\n        var i, ii, j, jj, replays, replay;\\n        for (i = 0, ii = zs.length; i < ii; ++i) {\\n            var zIndexKey = zs[i].toString();\\n            replays = this.executorsByZIndex_[zIndexKey];\\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\\n                var builderType = builderTypes[j];\\n                replay = replays[builderType];\\n                if (replay !== undefined) {\\n                    if (opt_declutterReplays &&\\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\\n                        var declutter = opt_declutterReplays[zIndexKey];\\n                        if (!declutter) {\\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\\n                        }\\n                        else {\\n                            declutter.push(replay, transform.slice(0));\\n                        }\\n                    }\\n                    else {\\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\\n                    }\\n                }\\n            }\\n        }\\n        if (this.maxExtent_) {\\n            context.restore();\\n        }\\n    };\\n    return ExecutorGroup;\\n}(Disposable));\\n/**\\n * This cache is used for storing calculated pixel circles for increasing performance.\\n * It is a static property to allow each Replaygroup to access it.\\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\\n */\\nvar circleArrayCache = {\\n    0: [[true]]\\n};\\n/**\\n * This method fills a row in the array from the given coordinate to the\\n * middle with `true`.\\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\\n * @param {number} x X coordinate.\\n * @param {number} y Y coordinate.\\n */\\nfunction fillCircleArrayRowToMiddle(array, x, y) {\\n    var i;\\n    var radius = Math.floor(array.length / 2);\\n    if (x >= radius) {\\n        for (i = radius; i < x; i++) {\\n            array[i][y] = true;\\n        }\\n    }\\n    else if (x < radius) {\\n        for (i = x + 1; i < radius; i++) {\\n            array[i][y] = true;\\n        }\\n    }\\n}\\n/**\\n * This methods creates a circle inside a fitting array. Points inside the\\n * circle are marked by true, points on the outside are undefined.\\n * It uses the midpoint circle algorithm.\\n * A cache is used to increase performance.\\n * @param {number} radius Radius.\\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\\n */\\nexport function getCircleArray(radius) {\\n    if (circleArrayCache[radius] !== undefined) {\\n        return circleArrayCache[radius];\\n    }\\n    var arraySize = radius * 2 + 1;\\n    var arr = new Array(arraySize);\\n    for (var i = 0; i < arraySize; i++) {\\n        arr[i] = new Array(arraySize);\\n    }\\n    var x = radius;\\n    var y = 0;\\n    var error = 0;\\n    while (x >= y) {\\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\\n        y++;\\n        error += 1 + 2 * y;\\n        if (2 * (error - x) + 1 > 0) {\\n            x -= 1;\\n            error += 1 - 2 * x;\\n        }\\n    }\\n    circleArrayCache[radius] = arr;\\n    return arr;\\n}\\n/**\\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\\n * @param {CanvasRenderingContext2D} context Context.\\n * @param {number} rotation Rotation.\\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\\n */\\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\\n    var skippedFeatureUids = {};\\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\\n        var executorData = declutterReplays[zs[z].toString()];\\n        for (var i = 0, ii = executorData.length; i < ii;) {\\n            var executor = executorData[i++];\\n            var transform = executorData[i++];\\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\\n        }\\n    }\\n}\\nexport default ExecutorGroup;\\n//# sourceMappingURL=ExecutorGroup.js.map\",\"/**\\n * @module ol/renderer/vector\\n */\\nimport { getUid } from '../util.js';\\nimport ImageState from '../ImageState.js';\\nimport GeometryType from '../geom/GeometryType.js';\\nimport BuilderType from '../render/canvas/BuilderType.js';\\n/**\\n * Tolerance for geometry simplification in device pixels.\\n * @type {number}\\n */\\nvar SIMPLIFY_TOLERANCE = 0.5;\\n/**\\n * @const\\n * @type {Object<import(\\\"../geom/GeometryType.js\\\").default,\\n *                function(import(\\\"../render/canvas/BuilderGroup.js\\\").default, import(\\\"../geom/Geometry.js\\\").default,\\n *                         import(\\\"../style/Style.js\\\").default, Object): void>}\\n */\\nvar GEOMETRY_RENDERERS = {\\n    'Point': renderPointGeometry,\\n    'LineString': renderLineStringGeometry,\\n    'Polygon': renderPolygonGeometry,\\n    'MultiPoint': renderMultiPointGeometry,\\n    'MultiLineString': renderMultiLineStringGeometry,\\n    'MultiPolygon': renderMultiPolygonGeometry,\\n    'GeometryCollection': renderGeometryCollectionGeometry,\\n    'Circle': renderCircleGeometry\\n};\\n/**\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature1 Feature 1.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature2 Feature 2.\\n * @return {number} Order.\\n */\\nexport function defaultOrder(feature1, feature2) {\\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\\n}\\n/**\\n * @param {number} resolution Resolution.\\n * @param {number} pixelRatio Pixel ratio.\\n * @return {number} Squared pixel tolerance.\\n */\\nexport function getSquaredTolerance(resolution, pixelRatio) {\\n    var tolerance = getTolerance(resolution, pixelRatio);\\n    return tolerance * tolerance;\\n}\\n/**\\n * @param {number} resolution Resolution.\\n * @param {number} pixelRatio Pixel ratio.\\n * @return {number} Pixel tolerance.\\n */\\nexport function getTolerance(resolution, pixelRatio) {\\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Builder group.\\n * @param {import(\\\"../geom/Circle.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n */\\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\\n    var fillStyle = style.getFill();\\n    var strokeStyle = style.getStroke();\\n    if (fillStyle || strokeStyle) {\\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\\n        circleReplay.drawCircle(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} replayGroup Replay group.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {function(this: T, import(\\\"../events/Event.js\\\").default): void} listener Listener function.\\n * @param {T} thisArg Value to use as `this` when executing `listener`.\\n * @return {boolean} `true` if style is loading.\\n * @template T\\n */\\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\\n    var loading = false;\\n    var imageStyle = style.getImage();\\n    if (imageStyle) {\\n        var imageState = imageStyle.getImageState();\\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\\n            imageStyle.unlistenImageChange(listener, thisArg);\\n        }\\n        else {\\n            if (imageState == ImageState.IDLE) {\\n                imageStyle.load();\\n            }\\n            imageState = imageStyle.getImageState();\\n            imageStyle.listenImageChange(listener, thisArg);\\n            loading = true;\\n        }\\n    }\\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\\n    return loading;\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} replayGroup Replay group.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {number} squaredTolerance Squared tolerance.\\n */\\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\\n    var geometry = style.getGeometryFunction()(feature);\\n    if (!geometry) {\\n        return;\\n    }\\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\\n    var renderer = style.getRenderer();\\n    if (renderer) {\\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\\n    }\\n    else {\\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} replayGroup Replay group.\\n * @param {import(\\\"../geom/Geometry.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderGeometry(replayGroup, geometry, style, feature) {\\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\\n        var geometries = /** @type {import(\\\"../geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            renderGeometry(replayGroup, geometries[i], style, feature);\\n        }\\n        return;\\n    }\\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\\n    replay.drawCustom(/** @type {import(\\\"../geom/SimpleGeometry.js\\\").default} */ (geometry), feature, style.getRenderer());\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} replayGroup Replay group.\\n * @param {import(\\\"../geom/GeometryCollection.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n */\\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\\n    var geometries = geometry.getGeometriesArray();\\n    var i, ii;\\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\\n        geometryRenderer(replayGroup, geometries[i], style, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/LineString.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\\n    var strokeStyle = style.getStroke();\\n    if (strokeStyle) {\\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\\n        lineStringReplay.drawLineString(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/MultiLineString.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\\n    var strokeStyle = style.getStroke();\\n    if (strokeStyle) {\\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\\n        lineStringReplay.drawMultiLineString(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/MultiPolygon.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n */\\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\\n    var fillStyle = style.getFill();\\n    var strokeStyle = style.getStroke();\\n    if (strokeStyle || fillStyle) {\\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\\n        polygonReplay.drawMultiPolygon(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/Point.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\\n    var imageStyle = style.getImage();\\n    if (imageStyle) {\\n        if (imageStyle.getImageState() != ImageState.LOADED) {\\n            return;\\n        }\\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\\n        imageReplay.drawPoint(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/MultiPoint.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\\n    var imageStyle = style.getImage();\\n    if (imageStyle) {\\n        if (imageStyle.getImageState() != ImageState.LOADED) {\\n            return;\\n        }\\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\\n        imageReplay.drawMultiPoint(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/Polygon.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\\n    var fillStyle = style.getFill();\\n    var strokeStyle = style.getStroke();\\n    if (fillStyle || strokeStyle) {\\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\\n        polygonReplay.drawPolygon(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n//# sourceMappingURL=vector.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/canvas/VectorLayer\\n */\\nimport { getUid } from '../../util.js';\\nimport ViewHint from '../../ViewHint.js';\\nimport { listen, unlisten } from '../../events.js';\\nimport EventType from '../../events/EventType.js';\\nimport rbush from 'rbush';\\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\\nimport { labelCache } from '../../render/canvas.js';\\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\\nimport CanvasLayerRenderer from './Layer.js';\\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\\n/**\\n * @classdesc\\n * Canvas renderer for vector layers.\\n * @api\\n */\\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\\n    __extends(CanvasVectorLayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../../layer/Vector.js\\\").default} vectorLayer Vector layer.\\n     */\\n    function CanvasVectorLayerRenderer(vectorLayer) {\\n        var _this = _super.call(this, vectorLayer) || this;\\n        /**\\n         * Declutter tree.\\n         * @private\\n         */\\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.dirty_ = false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.renderedRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.renderedResolution_ = NaN;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.renderedExtent_ = createEmpty();\\n        /**\\n         * @private\\n         * @type {function(import(\\\"../../Feature.js\\\").default, import(\\\"../../Feature.js\\\").default): number|null}\\n         */\\n        _this.renderedRenderOrder_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../render/canvas/ExecutorGroup\\\").default}\\n         */\\n        _this.replayGroup_ = null;\\n        /**\\n         * A new replay group had to be created by `prepareFrame()`\\n         * @type {boolean}\\n         */\\n        _this.replayGroupChanged = true;\\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\\n        var context = this.context;\\n        var canvas = context.canvas;\\n        var replayGroup = this.replayGroup_;\\n        if (!replayGroup || replayGroup.isEmpty()) {\\n            if (canvas.width > 0) {\\n                canvas.width = 0;\\n            }\\n            return canvas;\\n        }\\n        var pixelRatio = frameState.pixelRatio;\\n        // set forward and inverse pixel transforms\\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\\n        // resize and clear\\n        var width = Math.round(frameState.size[0] * pixelRatio);\\n        var height = Math.round(frameState.size[1] * pixelRatio);\\n        if (canvas.width != width || canvas.height != height) {\\n            canvas.width = width;\\n            canvas.height = height;\\n            var canvasTransform = transformToString(this.pixelTransform_);\\n            if (canvas.style.transform !== canvasTransform) {\\n                canvas.style.transform = canvasTransform;\\n            }\\n        }\\n        else {\\n            context.clearRect(0, 0, width, height);\\n        }\\n        this.preRender(context, frameState);\\n        var extent = frameState.extent;\\n        var viewState = frameState.viewState;\\n        var projection = viewState.projection;\\n        var rotation = viewState.rotation;\\n        var projectionExtent = projection.getExtent();\\n        var vectorSource = this.getLayer().getSource();\\n        // clipped rendering if layer extent is set\\n        var clipExtent = layerState.extent;\\n        var clipped = clipExtent !== undefined;\\n        if (clipped) {\\n            this.clip(context, frameState, clipExtent);\\n        }\\n        if (this.declutterTree_) {\\n            this.declutterTree_.clear();\\n        }\\n        var viewHints = frameState.viewHints;\\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\\n        var transform = this.getRenderTransform(frameState, width, height, 0);\\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\\n            var startX = extent[0];\\n            var worldWidth = getWidth(projectionExtent);\\n            var world = 0;\\n            var offsetX = void 0;\\n            while (startX < projectionExtent[0]) {\\n                --world;\\n                offsetX = worldWidth * world;\\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\\n                startX += worldWidth;\\n            }\\n            world = 0;\\n            startX = extent[2];\\n            while (startX > projectionExtent[2]) {\\n                ++world;\\n                offsetX = worldWidth * world;\\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\\n                startX -= worldWidth;\\n            }\\n        }\\n        if (clipped) {\\n            context.restore();\\n        }\\n        this.postRender(context, frameState);\\n        var opacity = layerState.opacity;\\n        if (opacity !== parseFloat(canvas.style.opacity)) {\\n            canvas.style.opacity = opacity;\\n        }\\n        return canvas;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\\n        if (!this.replayGroup_) {\\n            return undefined;\\n        }\\n        else {\\n            var resolution = frameState.viewState.resolution;\\n            var rotation = frameState.viewState.rotation;\\n            var layer_1 = this.getLayer();\\n            /** @type {!Object<string, boolean>} */\\n            var features_1 = {};\\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \\n            /**\\n             * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n             * @return {?} Callback result.\\n             */\\n            function (feature) {\\n                var key = getUid(feature);\\n                if (!(key in features_1)) {\\n                    features_1[key] = true;\\n                    return callback.call(thisArg, feature, layer_1);\\n                }\\n            }, null);\\n            return result;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../../events/Event.js\\\").default} event Event.\\n     */\\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\\n        var layer = this.getLayer();\\n        if (layer.getVisible() && this.replayGroup_) {\\n            layer.changed();\\n        }\\n    };\\n    /**\\n     * Handle changes in image style state.\\n     * @param {import(\\\"../../events/Event.js\\\").default} event Image style change event.\\n     * @private\\n     */\\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\\n        this.renderIfReadyAndVisible();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\\n        var vectorLayer = /** @type {import(\\\"../../layer/Vector.js\\\").default} */ (this.getLayer());\\n        var vectorSource = vectorLayer.getSource();\\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\\n            (!updateWhileInteracting && interacting)) {\\n            return true;\\n        }\\n        var frameStateExtent = frameState.extent;\\n        var viewState = frameState.viewState;\\n        var projection = viewState.projection;\\n        var resolution = viewState.resolution;\\n        var pixelRatio = frameState.pixelRatio;\\n        var vectorLayerRevision = vectorLayer.getRevision();\\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\\n        if (vectorLayerRenderOrder === undefined) {\\n            vectorLayerRenderOrder = defaultRenderOrder;\\n        }\\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\\n        var projectionExtent = viewState.projection.getExtent();\\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\\n            !containsExtent(projectionExtent, frameState.extent)) {\\n            // For the replay group, we need an extent that intersects the real world\\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\\n            // to +540°, we add at least 1 world width on each side of the projection\\n            // extent. If the viewport is wider than the world, we need to add half of\\n            // the viewport width to make sure we cover the whole viewport.\\n            var worldWidth = getWidth(projectionExtent);\\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\\n            extent[0] = projectionExtent[0] - gutter;\\n            extent[2] = projectionExtent[2] + gutter;\\n        }\\n        if (!this.dirty_ &&\\n            this.renderedResolution_ == resolution &&\\n            this.renderedRevision_ == vectorLayerRevision &&\\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\\n            containsExtent(this.renderedExtent_, extent)) {\\n            this.replayGroupChanged = false;\\n            return true;\\n        }\\n        if (this.replayGroup_) {\\n            this.replayGroup_.dispose();\\n        }\\n        this.replayGroup_ = null;\\n        this.dirty_ = false;\\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\\n        vectorSource.loadFeatures(extent, resolution, projection);\\n        /**\\n         * @param {import(\\\"../../Feature.js\\\").default} feature Feature.\\n         * @this {CanvasVectorLayerRenderer}\\n         */\\n        var render = function (feature) {\\n            var styles;\\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\\n            if (styleFunction) {\\n                styles = styleFunction(feature, resolution);\\n            }\\n            if (styles) {\\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\\n                this.dirty_ = this.dirty_ || dirty;\\n            }\\n        }.bind(this);\\n        if (vectorLayerRenderOrder) {\\n            /** @type {Array<import(\\\"../../Feature.js\\\").default>} */\\n            var features_2 = [];\\n            vectorSource.forEachFeatureInExtent(extent, \\n            /**\\n             * @param {import(\\\"../../Feature.js\\\").default} feature Feature.\\n             */\\n            function (feature) {\\n                features_2.push(feature);\\n            });\\n            features_2.sort(vectorLayerRenderOrder);\\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\\n                render(features_2[i]);\\n            }\\n        }\\n        else {\\n            vectorSource.forEachFeatureInExtent(extent, render);\\n        }\\n        var replayGroupInstructions = replayGroup.finish();\\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\\n        this.renderedResolution_ = resolution;\\n        this.renderedRevision_ = vectorLayerRevision;\\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\\n        this.renderedExtent_ = extent;\\n        this.replayGroup_ = executorGroup;\\n        this.replayGroupChanged = true;\\n        return true;\\n    };\\n    /**\\n     * @param {import(\\\"../../Feature.js\\\").default} feature Feature.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../../style/Style.js\\\").default|Array<import(\\\"../../style/Style.js\\\").default>} styles The style or array of styles.\\n     * @param {import(\\\"../../render/canvas/BuilderGroup.js\\\").default} builderGroup Builder group.\\n     * @return {boolean} `true` if an image is loading.\\n     */\\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\\n        if (!styles) {\\n            return false;\\n        }\\n        var loading = false;\\n        if (Array.isArray(styles)) {\\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\\n            }\\n        }\\n        else {\\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\\n        }\\n        return loading;\\n    };\\n    return CanvasVectorLayerRenderer;\\n}(CanvasLayerRenderer));\\nexport default CanvasVectorLayerRenderer;\\n//# sourceMappingURL=VectorLayer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Vector\\n */\\nimport BaseVectorLayer from './BaseVector.js';\\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\\n/**\\n * @typedef {import(\\\"./BaseVector.js\\\").Options} Options\\n */\\n/**\\n * @classdesc\\n * Vector data that is rendered client-side.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @extends {BaseVectorLayer<import(\\\"../source/Vector.js\\\").default>}\\n * @api\\n */\\nvar VectorLayer = /** @class */ (function (_super) {\\n    __extends(VectorLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function VectorLayer(opt_options) {\\n        return _super.call(this, opt_options) || this;\\n    }\\n    /**\\n     * Create a renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} A layer renderer.\\n     * @protected\\n     */\\n    VectorLayer.prototype.createRenderer = function () {\\n        return new CanvasVectorLayerRenderer(this);\\n    };\\n    return VectorLayer;\\n}(BaseVectorLayer));\\nexport default VectorLayer;\\n//# sourceMappingURL=Vector.js.map\",\"/**\\n * @module ol/format/FormatType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    ARRAY_BUFFER: 'arraybuffer',\\n    JSON: 'json',\\n    TEXT: 'text',\\n    XML: 'xml'\\n};\\n//# sourceMappingURL=FormatType.js.map\",\"/**\\n * @module ol/featureloader\\n */\\nimport { VOID } from './functions.js';\\nimport FormatType from './format/FormatType.js';\\n/**\\n * {@link module:ol/source/Vector} sources use a function of this type to\\n * load features.\\n *\\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\\n * a `{number}` representing the resolution (map units per pixel) and an\\n * {@link module:ol/proj/Projection} for the projection  as\\n * arguments. `this` within the function is bound to the\\n * {@link module:ol/source/Vector} it's called from.\\n *\\n * The function is responsible for loading the features and adding them to the\\n * source.\\n * @typedef {function(this:(import(\\\"./source/Vector\\\").default|import(\\\"./VectorTile.js\\\").default), import(\\\"./extent.js\\\").Extent, number,\\n *                    import(\\\"./proj/Projection.js\\\").default): void} FeatureLoader\\n * @api\\n */\\n/**\\n * {@link module:ol/source/Vector} sources use a function of this type to\\n * get the url to load features from.\\n *\\n * This function takes an {@link module:ol/extent~Extent} representing the area\\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\\n * and an {@link module:ol/proj/Projection} for the projection  as\\n * arguments and returns a `{string}` representing the URL.\\n * @typedef {function(import(\\\"./extent.js\\\").Extent, number, import(\\\"./proj/Projection.js\\\").default): string} FeatureUrlFunction\\n * @api\\n */\\n/**\\n * @param {string|FeatureUrlFunction} url Feature URL service.\\n * @param {import(\\\"./format/Feature.js\\\").default} format Feature format.\\n * @param {function(this:import(\\\"./VectorTile.js\\\").default, Array<import(\\\"./Feature.js\\\").default>, import(\\\"./proj/Projection.js\\\").default, import(\\\"./extent.js\\\").Extent): void|function(this:import(\\\"./source/Vector\\\").default, Array<import(\\\"./Feature.js\\\").default>): void} success\\n *     Function called with the loaded features and optionally with the data\\n *     projection. Called with the vector tile or source as `this`.\\n * @param {function(this:import(\\\"./VectorTile.js\\\").default): void|function(this:import(\\\"./source/Vector\\\").default): void} failure\\n *     Function called when loading failed. Called with the vector tile or\\n *     source as `this`.\\n * @return {FeatureLoader} The feature loader.\\n */\\nexport function loadFeaturesXhr(url, format, success, failure) {\\n    return (\\n    /**\\n     * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n     * @this {import(\\\"./source/Vector\\\").default|import(\\\"./VectorTile.js\\\").default}\\n     */\\n    function (extent, resolution, projection) {\\n        var xhr = new XMLHttpRequest();\\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\\n            xhr.responseType = 'arraybuffer';\\n        }\\n        /**\\n         * @param {Event} event Event.\\n         * @private\\n         */\\n        xhr.onload = function (event) {\\n            // status will be 0 for file:// urls\\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\\n                var type = format.getType();\\n                /** @type {Document|Node|Object|string|undefined} */\\n                var source = void 0;\\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\\n                    source = xhr.responseText;\\n                }\\n                else if (type == FormatType.XML) {\\n                    source = xhr.responseXML;\\n                    if (!source) {\\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\\n                    }\\n                }\\n                else if (type == FormatType.ARRAY_BUFFER) {\\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\\n                }\\n                if (source) {\\n                    success.call(this, format.readFeatures(source, {\\n                        extent: extent,\\n                        featureProjection: projection\\n                    }), format.readProjection(source));\\n                }\\n                else {\\n                    failure.call(this);\\n                }\\n            }\\n            else {\\n                failure.call(this);\\n            }\\n        }.bind(this);\\n        /**\\n         * @private\\n         */\\n        xhr.onerror = function () {\\n            failure.call(this);\\n        }.bind(this);\\n        xhr.send();\\n    });\\n}\\n/**\\n * Create an XHR feature loader for a `url` and `format`. The feature loader\\n * loads features (with XHR), parses the features, and adds them to the\\n * vector source.\\n * @param {string|FeatureUrlFunction} url Feature URL service.\\n * @param {import(\\\"./format/Feature.js\\\").default} format Feature format.\\n * @return {FeatureLoader} The feature loader.\\n * @api\\n */\\nexport function xhr(url, format) {\\n    return loadFeaturesXhr(url, format, \\n    /**\\n     * @param {Array<import(\\\"./Feature.js\\\").default>} features The loaded features.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} dataProjection Data\\n     * projection.\\n     * @this {import(\\\"./source/Vector\\\").default|import(\\\"./VectorTile.js\\\").default}\\n     */\\n    function (features, dataProjection) {\\n        var sourceOrTile = /** @type {?} */ (this);\\n        if (typeof sourceOrTile.addFeatures === 'function') {\\n            /** @type {import(\\\"./source/Vector\\\").default} */ (sourceOrTile).addFeatures(features);\\n        }\\n    }, /* FIXME handle error */ VOID);\\n}\\n//# sourceMappingURL=featureloader.js.map\",\"/**\\n * @module ol/loadingstrategy\\n */\\n/**\\n * Strategy function for loading all features with a single request.\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number} resolution Resolution.\\n * @return {Array<import(\\\"./extent.js\\\").Extent>} Extents.\\n * @api\\n */\\nexport function all(extent, resolution) {\\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\\n}\\n/**\\n * Strategy function for loading features based on the view's extent and\\n * resolution.\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number} resolution Resolution.\\n * @return {Array<import(\\\"./extent.js\\\").Extent>} Extents.\\n * @api\\n */\\nexport function bbox(extent, resolution) {\\n    return [extent];\\n}\\n/**\\n * Creates a strategy function for loading features based on a tile grid.\\n * @param {import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {function(import(\\\"./extent.js\\\").Extent, number): Array<import(\\\"./extent.js\\\").Extent>} Loading strategy.\\n * @api\\n */\\nexport function tile(tileGrid) {\\n    return (\\n    /**\\n     * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n     * @param {number} resolution Resolution.\\n     * @return {Array<import(\\\"./extent.js\\\").Extent>} Extents.\\n     */\\n    function (extent, resolution) {\\n        var z = tileGrid.getZForResolution(resolution);\\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\\n        /** @type {Array<import(\\\"./extent.js\\\").Extent>} */\\n        var extents = [];\\n        /** @type {import(\\\"./tilecoord.js\\\").TileCoord} */\\n        var tileCoord = [z, 0, 0];\\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\\n            }\\n        }\\n        return extents;\\n    });\\n}\\n//# sourceMappingURL=loadingstrategy.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/Source\\n */\\nimport { abstract } from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport { get as getProjection } from '../proj.js';\\nimport SourceState from './State.js';\\n/**\\n * A function that returns a string or an array of strings representing source\\n * attributions.\\n *\\n * @typedef {function(import(\\\"../PluggableMap.js\\\").FrameState): (string|Array<string>)} Attribution\\n */\\n/**\\n * A type that can be used to provide attribution information for data sources.\\n *\\n * It represents either\\n * * a simple string (e.g. `'© Acme Inc.'`)\\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\\n *\\n * @typedef {string|Array<string>|Attribution} AttributionLike\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection] Projection. Default is the view projection.\\n * @property {SourceState} [state='ready']\\n * @property {boolean} [wrapX=false]\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\\n *\\n * A generic `change` event is triggered when the state of the source changes.\\n * @abstract\\n * @api\\n */\\nvar Source = /** @class */ (function (_super) {\\n    __extends(Source, _super);\\n    /**\\n     * @param {Options} options Source options.\\n     */\\n    function Source(options) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         */\\n        _this.projection_ = getProjection(options.projection);\\n        /**\\n         * @private\\n         * @type {?Attribution}\\n         */\\n        _this.attributions_ = adaptAttributions(options.attributions);\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\\n            options.attributionsCollapsible : true;\\n        /**\\n         * This source is currently loading data. Sources that defer loading to the\\n         * map's tile queue never set this to `true`.\\n         * @type {boolean}\\n         */\\n        _this.loading = false;\\n        /**\\n         * @private\\n         * @type {SourceState}\\n         */\\n        _this.state_ = options.state !== undefined ?\\n            options.state : SourceState.READY;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\\n        return _this;\\n    }\\n    /**\\n     * Get the attribution function for the source.\\n     * @return {?Attribution} Attribution function.\\n     */\\n    Source.prototype.getAttributions = function () {\\n        return this.attributions_;\\n    };\\n    /**\\n     * @return {boolean} Attributions are collapsible.\\n     */\\n    Source.prototype.getAttributionsCollapsible = function () {\\n        return this.attributionsCollapsible_;\\n    };\\n    /**\\n     * Get the projection of the source.\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     * @api\\n     */\\n    Source.prototype.getProjection = function () {\\n        return this.projection_;\\n    };\\n    /**\\n     * @abstract\\n     * @return {Array<number>|undefined} Resolutions.\\n     */\\n    Source.prototype.getResolutions = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\\n     * @return {SourceState} State.\\n     * @api\\n     */\\n    Source.prototype.getState = function () {\\n        return this.state_;\\n    };\\n    /**\\n     * @return {boolean|undefined} Wrap X.\\n     */\\n    Source.prototype.getWrapX = function () {\\n        return this.wrapX_;\\n    };\\n    /**\\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\\n     * @api\\n     */\\n    Source.prototype.refresh = function () {\\n        this.changed();\\n    };\\n    /**\\n     * Set the attributions of the source.\\n     * @param {AttributionLike|undefined} attributions Attributions.\\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\\n     *     or `undefined`.\\n     * @api\\n     */\\n    Source.prototype.setAttributions = function (attributions) {\\n        this.attributions_ = adaptAttributions(attributions);\\n        this.changed();\\n    };\\n    /**\\n     * Set the state of the source.\\n     * @param {SourceState} state State.\\n     * @protected\\n     */\\n    Source.prototype.setState = function (state) {\\n        this.state_ = state;\\n        this.changed();\\n    };\\n    return Source;\\n}(BaseObject));\\n/**\\n * Turns the attributions option into an attributions function.\\n * @param {AttributionLike|undefined} attributionLike The attribution option.\\n * @return {?Attribution} An attribution function (or null).\\n */\\nfunction adaptAttributions(attributionLike) {\\n    if (!attributionLike) {\\n        return null;\\n    }\\n    if (Array.isArray(attributionLike)) {\\n        return function (frameState) {\\n            return attributionLike;\\n        };\\n    }\\n    if (typeof attributionLike === 'function') {\\n        return attributionLike;\\n    }\\n    return function (frameState) {\\n        return [attributionLike];\\n    };\\n}\\nexport default Source;\\n//# sourceMappingURL=Source.js.map\",\"/**\\n * @module ol/source/VectorEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when a feature is added to the source.\\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\\n     * @api\\n     */\\n    ADDFEATURE: 'addfeature',\\n    /**\\n     * Triggered when a feature is updated.\\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\\n     * @api\\n     */\\n    CHANGEFEATURE: 'changefeature',\\n    /**\\n     * Triggered when the clear method is called on the source.\\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\\n     * @api\\n     */\\n    CLEAR: 'clear',\\n    /**\\n     * Triggered when a feature is removed from the source.\\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\\n     * @api\\n     */\\n    REMOVEFEATURE: 'removefeature'\\n};\\n//# sourceMappingURL=VectorEventType.js.map\",\"/**\\n * @module ol/structs/RBush\\n */\\nimport { getUid } from '../util.js';\\nimport rbush from 'rbush';\\nimport { createOrUpdate, equals } from '../extent.js';\\nimport { isEmpty } from '../obj.js';\\n/**\\n * @typedef {Object} Entry\\n * @property {number} minX\\n * @property {number} minY\\n * @property {number} maxX\\n * @property {number} maxY\\n * @property {Object} [value]\\n */\\n/**\\n * @classdesc\\n * Wrapper around the RBush by Vladimir Agafonkin.\\n * See https://github.com/mourner/rbush.\\n *\\n * @template T\\n */\\nvar RBush = /** @class */ (function () {\\n    /**\\n     * @param {number=} opt_maxEntries Max entries.\\n     */\\n    function RBush(opt_maxEntries) {\\n        /**\\n         * @private\\n         */\\n        this.rbush_ = rbush(opt_maxEntries, undefined);\\n        /**\\n         * A mapping between the objects added to this rbush wrapper\\n         * and the objects that are actually added to the internal rbush.\\n         * @private\\n         * @type {Object<string, Entry>}\\n         */\\n        this.items_ = {};\\n    }\\n    /**\\n     * Insert a value into the RBush.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {T} value Value.\\n     */\\n    RBush.prototype.insert = function (extent, value) {\\n        /** @type {Entry} */\\n        var item = {\\n            minX: extent[0],\\n            minY: extent[1],\\n            maxX: extent[2],\\n            maxY: extent[3],\\n            value: value\\n        };\\n        this.rbush_.insert(item);\\n        this.items_[getUid(value)] = item;\\n    };\\n    /**\\n     * Bulk-insert values into the RBush.\\n     * @param {Array<import(\\\"../extent.js\\\").Extent>} extents Extents.\\n     * @param {Array<T>} values Values.\\n     */\\n    RBush.prototype.load = function (extents, values) {\\n        var items = new Array(values.length);\\n        for (var i = 0, l = values.length; i < l; i++) {\\n            var extent = extents[i];\\n            var value = values[i];\\n            /** @type {Entry} */\\n            var item = {\\n                minX: extent[0],\\n                minY: extent[1],\\n                maxX: extent[2],\\n                maxY: extent[3],\\n                value: value\\n            };\\n            items[i] = item;\\n            this.items_[getUid(value)] = item;\\n        }\\n        this.rbush_.load(items);\\n    };\\n    /**\\n     * Remove a value from the RBush.\\n     * @param {T} value Value.\\n     * @return {boolean} Removed.\\n     */\\n    RBush.prototype.remove = function (value) {\\n        var uid = getUid(value);\\n        // get the object in which the value was wrapped when adding to the\\n        // internal rbush. then use that object to do the removal.\\n        var item = this.items_[uid];\\n        delete this.items_[uid];\\n        return this.rbush_.remove(item) !== null;\\n    };\\n    /**\\n     * Update the extent of a value in the RBush.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {T} value Value.\\n     */\\n    RBush.prototype.update = function (extent, value) {\\n        var item = this.items_[getUid(value)];\\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\\n        if (!equals(bbox, extent)) {\\n            this.remove(value);\\n            this.insert(extent, value);\\n        }\\n    };\\n    /**\\n     * Return all values in the RBush.\\n     * @return {Array<T>} All.\\n     */\\n    RBush.prototype.getAll = function () {\\n        var items = this.rbush_.all();\\n        return items.map(function (item) {\\n            return item.value;\\n        });\\n    };\\n    /**\\n     * Return all values in the given extent.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @return {Array<T>} All in extent.\\n     */\\n    RBush.prototype.getInExtent = function (extent) {\\n        /** @type {Entry} */\\n        var bbox = {\\n            minX: extent[0],\\n            minY: extent[1],\\n            maxX: extent[2],\\n            maxY: extent[3]\\n        };\\n        var items = this.rbush_.search(bbox);\\n        return items.map(function (item) {\\n            return item.value;\\n        });\\n    };\\n    /**\\n     * Calls a callback function with each value in the tree.\\n     * If the callback returns a truthy value, this value is returned without\\n     * checking the rest of the tree.\\n     * @param {function(T): *} callback Callback.\\n     * @return {*} Callback return value.\\n     */\\n    RBush.prototype.forEach = function (callback) {\\n        return this.forEach_(this.getAll(), callback);\\n    };\\n    /**\\n     * Calls a callback function with each value in the provided extent.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {function(T): *} callback Callback.\\n     * @return {*} Callback return value.\\n     */\\n    RBush.prototype.forEachInExtent = function (extent, callback) {\\n        return this.forEach_(this.getInExtent(extent), callback);\\n    };\\n    /**\\n     * @param {Array<T>} values Values.\\n     * @param {function(T): *} callback Callback.\\n     * @private\\n     * @return {*} Callback return value.\\n     */\\n    RBush.prototype.forEach_ = function (values, callback) {\\n        var result;\\n        for (var i = 0, l = values.length; i < l; i++) {\\n            result = callback(values[i]);\\n            if (result) {\\n                return result;\\n            }\\n        }\\n        return result;\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    RBush.prototype.isEmpty = function () {\\n        return isEmpty(this.items_);\\n    };\\n    /**\\n     * Remove all values from the RBush.\\n     */\\n    RBush.prototype.clear = function () {\\n        this.rbush_.clear();\\n        this.items_ = {};\\n    };\\n    /**\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Extent.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     */\\n    RBush.prototype.getExtent = function (opt_extent) {\\n        var data = this.rbush_.toJSON();\\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\\n    };\\n    /**\\n     * @param {RBush} rbush R-Tree.\\n     */\\n    RBush.prototype.concat = function (rbush) {\\n        this.rbush_.load(rbush.rbush_.all());\\n        for (var i in rbush.items_) {\\n            this.items_[i] = rbush.items_[i];\\n        }\\n    };\\n    return RBush;\\n}());\\nexport default RBush;\\n//# sourceMappingURL=RBush.js.map\",\"/**\\n * @module ol/source/Vector\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { getUid } from '../util.js';\\nimport Collection from '../Collection.js';\\nimport CollectionEventType from '../CollectionEventType.js';\\nimport ObjectEventType from '../ObjectEventType.js';\\nimport { extend } from '../array.js';\\nimport { assert } from '../asserts.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport Event from '../events/Event.js';\\nimport EventType from '../events/EventType.js';\\nimport { containsExtent, equals } from '../extent.js';\\nimport { xhr } from '../featureloader.js';\\nimport { TRUE, VOID } from '../functions.js';\\nimport { all as allStrategy } from '../loadingstrategy.js';\\nimport { isEmpty, getValues } from '../obj.js';\\nimport Source from './Source.js';\\nimport SourceState from './State.js';\\nimport VectorEventType from './VectorEventType.js';\\nimport RBush from '../structs/RBush.js';\\n/**\\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\\n *\\n * @typedef {function(import(\\\"../extent.js\\\").Extent, number): Array<import(\\\"../extent.js\\\").Extent>} LoadingStrategy\\n * @api\\n */\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\\n * type.\\n */\\nvar VectorSourceEvent = /** @class */ (function (_super) {\\n    __extends(VectorSourceEvent, _super);\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../Feature.js\\\").default=} opt_feature Feature.\\n     */\\n    function VectorSourceEvent(type, opt_feature) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The feature being added or removed.\\n         * @type {import(\\\"../Feature.js\\\").default|undefined}\\n         * @api\\n         */\\n        _this.feature = opt_feature;\\n        return _this;\\n    }\\n    return VectorSourceEvent;\\n}(Event));\\nexport { VectorSourceEvent };\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {Array<import(\\\"../Feature.js\\\").default>|Collection<import(\\\"../Feature.js\\\").default>} [features]\\n * Features. If provided as {@link module:ol/Collection}, the features in the source\\n * and the collection will stay in sync.\\n * @property {import(\\\"../format/Feature.js\\\").default} [format] The feature format used by the XHR\\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\\n * @property {import(\\\"../featureloader.js\\\").FeatureLoader} [loader]\\n * The loader function used to load features, from a remote source for example.\\n * If this is not set and `url` is set, the source will create and use an XHR\\n * feature loader.\\n *\\n * Example:\\n *\\n * ```js\\n * import {Vector} from 'ol/source';\\n * import {GeoJSON} from 'ol/format';\\n * import {bbox} from 'ol/loadingstrategy';\\n *\\n * var vectorSource = new Vector({\\n *   format: new GeoJSON(),\\n *   loader: function(extent, resolution, projection) {\\n *      var proj = projection.getCode();\\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\\n *          'outputFormat=application/json&srsname=' + proj + '&' +\\n *          'bbox=' + extent.join(',') + ',' + proj;\\n *      var xhr = new XMLHttpRequest();\\n *      xhr.open('GET', url);\\n *      var onError = function() {\\n *        vectorSource.removeLoadedExtent(extent);\\n *      }\\n *      xhr.onerror = onError;\\n *      xhr.onload = function() {\\n *        if (xhr.status == 200) {\\n *          vectorSource.addFeatures(\\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\\n *        } else {\\n *          onError();\\n *        }\\n *      }\\n *      xhr.send();\\n *    },\\n *    strategy: bbox\\n *  });\\n * ```\\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\\n * stroke operations.\\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\\n * By default an {@link module:ol/loadingstrategy~all}\\n * strategy is used, a one-off strategy which loads all features at once.\\n * @property {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction} [url]\\n * Setting this option instructs the source to load features using an XHR loader\\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\\n * other loading strategies.\\n * Requires `format` to be set as well.\\n * When default XHR feature loader is provided, the features will\\n * be transformed from the data projection to the view projection\\n * during parsing. If your remote data source does not advertise its projection\\n * properly, this transformation will be incorrect. For some formats, the\\n * default projection (usually EPSG:4326) can be overridden by setting the\\n * dataProjection constructor option on the format.\\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\\n * @property {boolean} [useSpatialIndex=true]\\n * By default, an RTree is used as spatial index. When features are removed and\\n * added frequently, and the total number of features is low, setting this to\\n * `false` may improve performance.\\n *\\n * Note that\\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\\n * through all features.\\n *\\n * When set to `false`, the features will be maintained in an\\n * {@link module:ol/Collection}, which can be retrieved through\\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\\n * -180° and 180° meridians to work properly, this should be set to `false`. The\\n * resulting geometry coordinates will then exceed the world bounds.\\n */\\n/**\\n * @classdesc\\n * Provides a source of features for vector layers. Vector features provided\\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\\n * vector data that is optimized for rendering.\\n *\\n * @fires VectorSourceEvent\\n * @api\\n */\\nvar VectorSource = /** @class */ (function (_super) {\\n    __extends(VectorSource, _super);\\n    /**\\n     * @param {Options=} opt_options Vector source options.\\n     */\\n    function VectorSource(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        _this = _super.call(this, {\\n            attributions: options.attributions,\\n            projection: undefined,\\n            state: SourceState.READY,\\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../featureloader.js\\\").FeatureLoader}\\n         */\\n        _this.loader_ = VOID;\\n        /**\\n         * @private\\n         * @type {import(\\\"../format/Feature.js\\\").default|undefined}\\n         */\\n        _this.format_ = options.format;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\\n        /**\\n         * @private\\n         * @type {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction|undefined}\\n         */\\n        _this.url_ = options.url;\\n        if (options.loader !== undefined) {\\n            _this.loader_ = options.loader;\\n        }\\n        else if (_this.url_ !== undefined) {\\n            assert(_this.format_, 7); // `format` must be set when `url` is set\\n            // create a XHR feature loader for \\\"url\\\" and \\\"format\\\"\\n            _this.loader_ = xhr(_this.url_, /** @type {import(\\\"../format/Feature.js\\\").default} */ (_this.format_));\\n        }\\n        /**\\n         * @private\\n         * @type {LoadingStrategy}\\n         */\\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\\n        /**\\n         * @private\\n         * @type {RBush<import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\\n        /**\\n         * @private\\n         * @type {RBush<{extent: import(\\\"../extent.js\\\").Extent}>}\\n         */\\n        _this.loadedExtentsRtree_ = new RBush();\\n        /**\\n         * @private\\n         * @type {!Object<string, import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.nullGeometryFeatures_ = {};\\n        /**\\n         * A lookup of features by id (the return from feature.getId()).\\n         * @private\\n         * @type {!Object<string, import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.idIndex_ = {};\\n        /**\\n         * A lookup of features without id (keyed by getUid(feature)).\\n         * @private\\n         * @type {!Object<string, import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.undefIdIndex_ = {};\\n        /**\\n         * @private\\n         * @type {Object<string, Array<import(\\\"../events.js\\\").EventsKey>>}\\n         */\\n        _this.featureChangeKeys_ = {};\\n        /**\\n         * @private\\n         * @type {Collection<import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.featuresCollection_ = null;\\n        var collection, features;\\n        if (Array.isArray(options.features)) {\\n            features = options.features;\\n        }\\n        else if (options.features) {\\n            collection = options.features;\\n            features = collection.getArray();\\n        }\\n        if (!useSpatialIndex && collection === undefined) {\\n            collection = new Collection(features);\\n        }\\n        if (features !== undefined) {\\n            _this.addFeaturesInternal(features);\\n        }\\n        if (collection !== undefined) {\\n            _this.bindFeaturesCollection_(collection);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Add a single feature to the source.  If you want to add a batch of features\\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\\n     * instead. A feature will not be added to the source if feature with\\n     * the same id is already there. The reason for this behavior is to avoid\\n     * feature duplication when using bbox or tile loading strategies.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature to add.\\n     * @api\\n     */\\n    VectorSource.prototype.addFeature = function (feature) {\\n        this.addFeatureInternal(feature);\\n        this.changed();\\n    };\\n    /**\\n     * Add a feature without firing a `change` event.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @protected\\n     */\\n    VectorSource.prototype.addFeatureInternal = function (feature) {\\n        var featureKey = getUid(feature);\\n        if (!this.addToIndex_(featureKey, feature)) {\\n            return;\\n        }\\n        this.setupChangeEvents_(featureKey, feature);\\n        var geometry = feature.getGeometry();\\n        if (geometry) {\\n            var extent = geometry.getExtent();\\n            if (this.featuresRtree_) {\\n                this.featuresRtree_.insert(extent, feature);\\n            }\\n        }\\n        else {\\n            this.nullGeometryFeatures_[featureKey] = feature;\\n        }\\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\\n    };\\n    /**\\n     * @param {string} featureKey Unique identifier for the feature.\\n     * @param {import(\\\"../Feature.js\\\").default} feature The feature.\\n     * @private\\n     */\\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\\n        this.featureChangeKeys_[featureKey] = [\\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\\n        ];\\n    };\\n    /**\\n     * @param {string} featureKey Unique identifier for the feature.\\n     * @param {import(\\\"../Feature.js\\\").default} feature The feature.\\n     * @return {boolean} The feature is \\\"valid\\\", in the sense that it is also a\\n     *     candidate for insertion into the Rtree.\\n     * @private\\n     */\\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\\n        var valid = true;\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            if (!(id.toString() in this.idIndex_)) {\\n                this.idIndex_[id.toString()] = feature;\\n            }\\n            else {\\n                valid = false;\\n            }\\n        }\\n        else {\\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\\n            this.undefIdIndex_[featureKey] = feature;\\n        }\\n        return valid;\\n    };\\n    /**\\n     * Add a batch of features to the source.\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features to add.\\n     * @api\\n     */\\n    VectorSource.prototype.addFeatures = function (features) {\\n        this.addFeaturesInternal(features);\\n        this.changed();\\n    };\\n    /**\\n     * Add features without firing a `change` event.\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @protected\\n     */\\n    VectorSource.prototype.addFeaturesInternal = function (features) {\\n        var extents = [];\\n        var newFeatures = [];\\n        var geometryFeatures = [];\\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\\n            var feature = features[i];\\n            var featureKey = getUid(feature);\\n            if (this.addToIndex_(featureKey, feature)) {\\n                newFeatures.push(feature);\\n            }\\n        }\\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\\n            var feature = newFeatures[i];\\n            var featureKey = getUid(feature);\\n            this.setupChangeEvents_(featureKey, feature);\\n            var geometry = feature.getGeometry();\\n            if (geometry) {\\n                var extent = geometry.getExtent();\\n                extents.push(extent);\\n                geometryFeatures.push(feature);\\n            }\\n            else {\\n                this.nullGeometryFeatures_[featureKey] = feature;\\n            }\\n        }\\n        if (this.featuresRtree_) {\\n            this.featuresRtree_.load(extents, geometryFeatures);\\n        }\\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\\n        }\\n    };\\n    /**\\n     * @param {!Collection<import(\\\"../Feature.js\\\").default>} collection Collection.\\n     * @private\\n     */\\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\\n        var modifyingCollection = false;\\n        listen(this, VectorEventType.ADDFEATURE, \\n        /**\\n         * @param {VectorSourceEvent} evt The vector source event\\n         */\\n        function (evt) {\\n            if (!modifyingCollection) {\\n                modifyingCollection = true;\\n                collection.push(evt.feature);\\n                modifyingCollection = false;\\n            }\\n        });\\n        listen(this, VectorEventType.REMOVEFEATURE, \\n        /**\\n         * @param {VectorSourceEvent} evt The vector source event\\n         */\\n        function (evt) {\\n            if (!modifyingCollection) {\\n                modifyingCollection = true;\\n                collection.remove(evt.feature);\\n                modifyingCollection = false;\\n            }\\n        });\\n        listen(collection, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"../Collection.js\\\").CollectionEvent} evt The collection event\\n         */\\n        function (evt) {\\n            if (!modifyingCollection) {\\n                modifyingCollection = true;\\n                this.addFeature(/** @type {import(\\\"../Feature.js\\\").default} */ (evt.element));\\n                modifyingCollection = false;\\n            }\\n        }, this);\\n        listen(collection, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"../Collection.js\\\").CollectionEvent} evt The collection event\\n         */\\n        function (evt) {\\n            if (!modifyingCollection) {\\n                modifyingCollection = true;\\n                this.removeFeature(/** @type {import(\\\"../Feature.js\\\").default} */ (evt.element));\\n                modifyingCollection = false;\\n            }\\n        }, this);\\n        this.featuresCollection_ = collection;\\n    };\\n    /**\\n     * Remove all features from the source.\\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\\n     * @api\\n     */\\n    VectorSource.prototype.clear = function (opt_fast) {\\n        if (opt_fast) {\\n            for (var featureId in this.featureChangeKeys_) {\\n                var keys = this.featureChangeKeys_[featureId];\\n                keys.forEach(unlistenByKey);\\n            }\\n            if (!this.featuresCollection_) {\\n                this.featureChangeKeys_ = {};\\n                this.idIndex_ = {};\\n                this.undefIdIndex_ = {};\\n            }\\n        }\\n        else {\\n            if (this.featuresRtree_) {\\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\\n                for (var id in this.nullGeometryFeatures_) {\\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\\n                }\\n            }\\n        }\\n        if (this.featuresCollection_) {\\n            this.featuresCollection_.clear();\\n        }\\n        if (this.featuresRtree_) {\\n            this.featuresRtree_.clear();\\n        }\\n        this.nullGeometryFeatures_ = {};\\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\\n        this.dispatchEvent(clearEvent);\\n        this.changed();\\n    };\\n    /**\\n     * Iterate through all features on the source, calling the provided callback\\n     * with each one.  If the callback returns any \\\"truthy\\\" value, iteration will\\n     * stop and the function will return the same value.\\n     * Note: this function only iterate through the feature that have a defined geometry.\\n     *\\n     * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n     *     on the source.  Return a truthy value to stop iteration.\\n     * @return {T|undefined} The return value from the last call to the callback.\\n     * @template T\\n     * @api\\n     */\\n    VectorSource.prototype.forEachFeature = function (callback) {\\n        if (this.featuresRtree_) {\\n            return this.featuresRtree_.forEach(callback);\\n        }\\n        else if (this.featuresCollection_) {\\n            this.featuresCollection_.forEach(callback);\\n        }\\n    };\\n    /**\\n     * Iterate through all features whose geometries contain the provided\\n     * coordinate, calling the callback with each feature.  If the callback returns\\n     * a \\\"truthy\\\" value, iteration will stop and the function will return the same\\n     * value.\\n     *\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n     *     whose goemetry contains the provided coordinate.\\n     * @return {T|undefined} The return value from the last call to the callback.\\n     * @template T\\n     */\\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\\n        return this.forEachFeatureInExtent(extent, function (feature) {\\n            var geometry = feature.getGeometry();\\n            if (geometry.intersectsCoordinate(coordinate)) {\\n                return callback(feature);\\n            }\\n            else {\\n                return undefined;\\n            }\\n        });\\n    };\\n    /**\\n     * Iterate through all features whose bounding box intersects the provided\\n     * extent (note that the feature's geometry may not intersect the extent),\\n     * calling the callback with each feature.  If the callback returns a \\\"truthy\\\"\\n     * value, iteration will stop and the function will return the same value.\\n     *\\n     * If you are interested in features whose geometry intersects an extent, call\\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\\n     *\\n     * When `useSpatialIndex` is set to false, this method will loop through all\\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\\n     *\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n     *     whose bounding box intersects the provided extent.\\n     * @return {T|undefined} The return value from the last call to the callback.\\n     * @template T\\n     * @api\\n     */\\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\\n        if (this.featuresRtree_) {\\n            return this.featuresRtree_.forEachInExtent(extent, callback);\\n        }\\n        else if (this.featuresCollection_) {\\n            this.featuresCollection_.forEach(callback);\\n        }\\n    };\\n    /**\\n     * Iterate through all features whose geometry intersects the provided extent,\\n     * calling the callback with each feature.  If the callback returns a \\\"truthy\\\"\\n     * value, iteration will stop and the function will return the same value.\\n     *\\n     * If you only want to test for bounding box intersection, call the\\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\\n     *\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n     *     whose geometry intersects the provided extent.\\n     * @return {T|undefined} The return value from the last call to the callback.\\n     * @template T\\n     * @api\\n     */\\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\\n        return this.forEachFeatureInExtent(extent, \\n        /**\\n         * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n         * @return {T|undefined} The return value from the last call to the callback.\\n         */\\n        function (feature) {\\n            var geometry = feature.getGeometry();\\n            if (geometry.intersectsExtent(extent)) {\\n                var result = callback(feature);\\n                if (result) {\\n                    return result;\\n                }\\n            }\\n        });\\n    };\\n    /**\\n     * Get the features collection associated with this source. Will be `null`\\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\\n     * with an {@link module:ol/Collection} as `features`.\\n     * @return {Collection<import(\\\"../Feature.js\\\").default>} The collection of features.\\n     * @api\\n     */\\n    VectorSource.prototype.getFeaturesCollection = function () {\\n        return this.featuresCollection_;\\n    };\\n    /**\\n     * Get all features on the source in random order.\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     * @api\\n     */\\n    VectorSource.prototype.getFeatures = function () {\\n        var features;\\n        if (this.featuresCollection_) {\\n            features = this.featuresCollection_.getArray();\\n        }\\n        else if (this.featuresRtree_) {\\n            features = this.featuresRtree_.getAll();\\n            if (!isEmpty(this.nullGeometryFeatures_)) {\\n                extend(features, getValues(this.nullGeometryFeatures_));\\n            }\\n        }\\n        return (\\n        /** @type {Array<import(\\\"../Feature.js\\\").default>} */ (features));\\n    };\\n    /**\\n     * Get all features whose geometry intersects the provided coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     * @api\\n     */\\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\\n        var features = [];\\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\\n            features.push(feature);\\n        });\\n        return features;\\n    };\\n    /**\\n     * Get all features in the provided extent.  Note that this returns an array of\\n     * all features intersecting the given extent in random order (so it may include\\n     * features whose geometries do not intersect the extent).\\n     *\\n     * This method is not available when the source is configured with\\n     * `useSpatialIndex` set to `false`.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     * @api\\n     */\\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\\n        return this.featuresRtree_.getInExtent(extent);\\n    };\\n    /**\\n     * Get the closest feature to the provided coordinate.\\n     *\\n     * This method is not available when the source is configured with\\n     * `useSpatialIndex` set to `false`.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {function(import(\\\"../Feature.js\\\").default):boolean=} opt_filter Feature filter function.\\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\\n     *     and it should return a boolean value. By default, no filtering is made.\\n     * @return {import(\\\"../Feature.js\\\").default} Closest feature.\\n     * @api\\n     */\\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\\n        // Find the closest feature using branch and bound.  We start searching an\\n        // infinite extent, and find the distance from the first feature found.  This\\n        // becomes the closest feature.  We then compute a smaller extent which any\\n        // closer feature must intersect.  We continue searching with this smaller\\n        // extent, trying to find a closer feature.  Every time we find a closer\\n        // feature, we update the extent being searched so that any even closer\\n        // feature must intersect it.  We continue until we run out of features.\\n        var x = coordinate[0];\\n        var y = coordinate[1];\\n        var closestFeature = null;\\n        var closestPoint = [NaN, NaN];\\n        var minSquaredDistance = Infinity;\\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\\n        var filter = opt_filter ? opt_filter : TRUE;\\n        this.featuresRtree_.forEachInExtent(extent, \\n        /**\\n         * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n         */\\n        function (feature) {\\n            if (filter(feature)) {\\n                var geometry = feature.getGeometry();\\n                var previousMinSquaredDistance = minSquaredDistance;\\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\\n                if (minSquaredDistance < previousMinSquaredDistance) {\\n                    closestFeature = feature;\\n                    // This is sneaky.  Reduce the extent that it is currently being\\n                    // searched while the R-Tree traversal using this same extent object\\n                    // is still in progress.  This is safe because the new extent is\\n                    // strictly contained by the old extent.\\n                    var minDistance = Math.sqrt(minSquaredDistance);\\n                    extent[0] = x - minDistance;\\n                    extent[1] = y - minDistance;\\n                    extent[2] = x + minDistance;\\n                    extent[3] = y + minDistance;\\n                }\\n            }\\n        });\\n        return closestFeature;\\n    };\\n    /**\\n     * Get the extent of the features currently in the source.\\n     *\\n     * This method is not available when the source is configured with\\n     * `useSpatialIndex` set to `false`.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Destination extent. If provided, no new extent\\n     *     will be created. Instead, that extent's coordinates will be overwritten.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    VectorSource.prototype.getExtent = function (opt_extent) {\\n        return this.featuresRtree_.getExtent(opt_extent);\\n    };\\n    /**\\n     * Get a feature by its identifier (the value returned by feature.getId()).\\n     * Note that the index treats string and numeric identifiers as the same.  So\\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\\n     *\\n     * @param {string|number} id Feature identifier.\\n     * @return {import(\\\"../Feature.js\\\").default} The feature (or `null` if not found).\\n     * @api\\n     */\\n    VectorSource.prototype.getFeatureById = function (id) {\\n        var feature = this.idIndex_[id.toString()];\\n        return feature !== undefined ? feature : null;\\n    };\\n    /**\\n     * Get the format associated with this source.\\n     *\\n     * @return {import(\\\"../format/Feature.js\\\").default|undefined} The feature format.\\n     * @api\\n     */\\n    VectorSource.prototype.getFormat = function () {\\n        return this.format_;\\n    };\\n    /**\\n     * @return {boolean} The source can have overlapping geometries.\\n     */\\n    VectorSource.prototype.getOverlaps = function () {\\n        return this.overlaps_;\\n    };\\n    /**\\n     * Get the url associated with this source.\\n     *\\n     * @return {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction|undefined} The url.\\n     * @api\\n     */\\n    VectorSource.prototype.getUrl = function () {\\n        return this.url_;\\n    };\\n    /**\\n     * @param {Event} event Event.\\n     * @private\\n     */\\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\\n        var feature = /** @type {import(\\\"../Feature.js\\\").default} */ (event.target);\\n        var featureKey = getUid(feature);\\n        var geometry = feature.getGeometry();\\n        if (!geometry) {\\n            if (!(featureKey in this.nullGeometryFeatures_)) {\\n                if (this.featuresRtree_) {\\n                    this.featuresRtree_.remove(feature);\\n                }\\n                this.nullGeometryFeatures_[featureKey] = feature;\\n            }\\n        }\\n        else {\\n            var extent = geometry.getExtent();\\n            if (featureKey in this.nullGeometryFeatures_) {\\n                delete this.nullGeometryFeatures_[featureKey];\\n                if (this.featuresRtree_) {\\n                    this.featuresRtree_.insert(extent, feature);\\n                }\\n            }\\n            else {\\n                if (this.featuresRtree_) {\\n                    this.featuresRtree_.update(extent, feature);\\n                }\\n            }\\n        }\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            var sid = id.toString();\\n            if (featureKey in this.undefIdIndex_) {\\n                delete this.undefIdIndex_[featureKey];\\n                this.idIndex_[sid] = feature;\\n            }\\n            else {\\n                if (this.idIndex_[sid] !== feature) {\\n                    this.removeFromIdIndex_(feature);\\n                    this.idIndex_[sid] = feature;\\n                }\\n            }\\n        }\\n        else {\\n            if (!(featureKey in this.undefIdIndex_)) {\\n                this.removeFromIdIndex_(feature);\\n                this.undefIdIndex_[featureKey] = feature;\\n            }\\n        }\\n        this.changed();\\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\\n    };\\n    /**\\n     * Returns true if the feature is contained within the source.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @return {boolean} Has feature.\\n     * @api\\n     */\\n    VectorSource.prototype.hasFeature = function (feature) {\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            return id in this.idIndex_;\\n        }\\n        else {\\n            return getUid(feature) in this.undefIdIndex_;\\n        }\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    VectorSource.prototype.isEmpty = function () {\\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\\n    };\\n    /**\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     */\\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\\n        var extentsToLoad = this.strategy_(extent, resolution);\\n        this.loading = false;\\n        var _loop_1 = function (i, ii) {\\n            var extentToLoad = extentsToLoad[i];\\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \\n            /**\\n             * @param {{extent: import(\\\"../extent.js\\\").Extent}} object Object.\\n             * @return {boolean} Contains.\\n             */\\n            function (object) {\\n                return containsExtent(object.extent, extentToLoad);\\n            });\\n            if (!alreadyLoaded) {\\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\\n                this_1.loading = this_1.loader_ !== VOID;\\n            }\\n        };\\n        var this_1 = this;\\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\\n            _loop_1(i, ii);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    VectorSource.prototype.refresh = function () {\\n        this.clear(true);\\n        this.loadedExtentsRtree_.clear();\\n        _super.prototype.refresh.call(this);\\n    };\\n    /**\\n     * Remove an extent from the list of loaded extents.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @api\\n     */\\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\\n        var obj;\\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\\n            if (equals(object.extent, extent)) {\\n                obj = object;\\n                return true;\\n            }\\n        });\\n        if (obj) {\\n            loadedExtentsRtree.remove(obj);\\n        }\\n    };\\n    /**\\n     * Remove a single feature from the source.  If you want to remove all features\\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\\n     * instead.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature to remove.\\n     * @api\\n     */\\n    VectorSource.prototype.removeFeature = function (feature) {\\n        var featureKey = getUid(feature);\\n        if (featureKey in this.nullGeometryFeatures_) {\\n            delete this.nullGeometryFeatures_[featureKey];\\n        }\\n        else {\\n            if (this.featuresRtree_) {\\n                this.featuresRtree_.remove(feature);\\n            }\\n        }\\n        this.removeFeatureInternal(feature);\\n        this.changed();\\n    };\\n    /**\\n     * Remove feature without firing a `change` event.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @protected\\n     */\\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\\n        var featureKey = getUid(feature);\\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\\n        delete this.featureChangeKeys_[featureKey];\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            delete this.idIndex_[id.toString()];\\n        }\\n        else {\\n            delete this.undefIdIndex_[featureKey];\\n        }\\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\\n    };\\n    /**\\n     * Remove a feature from the id index.  Called internally when the feature id\\n     * may have changed.\\n     * @param {import(\\\"../Feature.js\\\").default} feature The feature.\\n     * @return {boolean} Removed the feature from the index.\\n     * @private\\n     */\\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\\n        var removed = false;\\n        for (var id in this.idIndex_) {\\n            if (this.idIndex_[id] === feature) {\\n                delete this.idIndex_[id];\\n                removed = true;\\n                break;\\n            }\\n        }\\n        return removed;\\n    };\\n    /**\\n     * Set the new loader of the source. The next render cycle will use the\\n     * new loader.\\n     * @param {import(\\\"../featureloader.js\\\").FeatureLoader} loader The loader to set.\\n     * @api\\n     */\\n    VectorSource.prototype.setLoader = function (loader) {\\n        this.loader_ = loader;\\n    };\\n    /**\\n     * Points the source to a new url. The next render cycle will use the new url.\\n     * @param {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction} url Url.\\n     * @api\\n     */\\n    VectorSource.prototype.setUrl = function (url) {\\n        assert(this.format_, 7); // `format` must be set when `url` is set\\n        this.setLoader(xhr(url, this.format_));\\n    };\\n    return VectorSource;\\n}(Source));\\nexport default VectorSource;\\n//# sourceMappingURL=Vector.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Feature\\n */\\nimport { assert } from './asserts.js';\\nimport { listen, unlisten, unlistenByKey } from './events.js';\\nimport EventType from './events/EventType.js';\\nimport BaseObject, { getChangeEventType } from './Object.js';\\n/**\\n * @typedef {typeof Feature|typeof import(\\\"./render/Feature.js\\\").default} FeatureClass\\n */\\n/**\\n * @typedef {Feature|import(\\\"./render/Feature.js\\\").default} FeatureLike\\n */\\n/**\\n * @classdesc\\n * A vector object for geographic features with a geometry and other\\n * attribute properties, similar to the features in vector file formats like\\n * GeoJSON.\\n *\\n * Features can be styled individually with `setStyle`; otherwise they use the\\n * style of their vector layer.\\n *\\n * Note that attribute properties are set as {@link module:ol/Object} properties on\\n * the feature object, so they are observable, and have get/set accessors.\\n *\\n * Typically, a feature has a single geometry property. You can set the\\n * geometry using the `setGeometry` method and get it with `getGeometry`.\\n * It is possible to store more than one geometry on a feature using attribute\\n * properties. By default, the geometry used for rendering is identified by\\n * the property name `geometry`. If you want to use another geometry property\\n * for rendering, use the `setGeometryName` method to change the attribute\\n * property associated with the geometry for the feature.  For example:\\n *\\n * ```js\\n *\\n * import Feature from 'ol/Feature';\\n * import Polygon from 'ol/geom/Polygon';\\n * import Point from 'ol/geom/Point';\\n *\\n * var feature = new Feature({\\n *   geometry: new Polygon(polyCoords),\\n *   labelPoint: new Point(labelCoords),\\n *   name: 'My Polygon'\\n * });\\n *\\n * // get the polygon geometry\\n * var poly = feature.getGeometry();\\n *\\n * // Render the feature as a point using the coordinates from labelPoint\\n * feature.setGeometryName('labelPoint');\\n *\\n * // get the point geometry\\n * var point = feature.getGeometry();\\n * ```\\n *\\n * @api\\n */\\nvar Feature = /** @class */ (function (_super) {\\n    __extends(Feature, _super);\\n    /**\\n     * @param {import(\\\"./geom/Geometry.js\\\").default|Object<string, *>=} opt_geometryOrProperties\\n     *     You may pass a Geometry object directly, or an object literal containing\\n     *     properties. If you pass an object literal, you may include a Geometry\\n     *     associated with a `geometry` key.\\n     */\\n    function Feature(opt_geometryOrProperties) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {number|string|undefined}\\n         */\\n        _this.id_ = undefined;\\n        /**\\n         * @type {string}\\n         * @private\\n         */\\n        _this.geometryName_ = 'geometry';\\n        /**\\n         * User provided style.\\n         * @private\\n         * @type {import(\\\"./style/Style.js\\\").StyleLike}\\n         */\\n        _this.style_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./style/Style.js\\\").StyleFunction|undefined}\\n         */\\n        _this.styleFunction_ = undefined;\\n        /**\\n         * @private\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         */\\n        _this.geometryChangeKey_ = null;\\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\\n        if (opt_geometryOrProperties) {\\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\\n                var geometry = /** @type {import(\\\"./geom/Geometry.js\\\").default} */ (opt_geometryOrProperties);\\n                _this.setGeometry(geometry);\\n            }\\n            else {\\n                /** @type {Object<string, *>} */\\n                var properties = opt_geometryOrProperties;\\n                _this.setProperties(properties);\\n            }\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Clone this feature. If the original feature has a geometry it\\n     * is also cloned. The feature id is not set in the clone.\\n     * @return {Feature} The clone.\\n     * @api\\n     */\\n    Feature.prototype.clone = function () {\\n        var clone = new Feature(this.getProperties());\\n        clone.setGeometryName(this.getGeometryName());\\n        var geometry = this.getGeometry();\\n        if (geometry) {\\n            clone.setGeometry(geometry.clone());\\n        }\\n        var style = this.getStyle();\\n        if (style) {\\n            clone.setStyle(style);\\n        }\\n        return clone;\\n    };\\n    /**\\n     * Get the feature's default geometry.  A feature may have any number of named\\n     * geometries.  The \\\"default\\\" geometry (the one that is rendered by default) is\\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\\n     * @return {import(\\\"./geom/Geometry.js\\\").default|undefined} The default geometry for the feature.\\n     * @api\\n     * @observable\\n     */\\n    Feature.prototype.getGeometry = function () {\\n        return (\\n        /** @type {import(\\\"./geom/Geometry.js\\\").default|undefined} */ (this.get(this.geometryName_)));\\n    };\\n    /**\\n     * Get the feature identifier.  This is a stable identifier for the feature and\\n     * is either set when reading data from a remote source or set explicitly by\\n     * calling {@link module:ol/Feature~Feature#setId}.\\n     * @return {number|string|undefined} Id.\\n     * @api\\n     */\\n    Feature.prototype.getId = function () {\\n        return this.id_;\\n    };\\n    /**\\n     * Get the name of the feature's default geometry.  By default, the default\\n     * geometry is named `geometry`.\\n     * @return {string} Get the property name associated with the default geometry\\n     *     for this feature.\\n     * @api\\n     */\\n    Feature.prototype.getGeometryName = function () {\\n        return this.geometryName_;\\n    };\\n    /**\\n     * Get the feature's style. Will return what was provided to the\\n     * {@link module:ol/Feature~Feature#setStyle} method.\\n     * @return {import(\\\"./style/Style.js\\\").StyleLike} The feature style.\\n     * @api\\n     */\\n    Feature.prototype.getStyle = function () {\\n        return this.style_;\\n    };\\n    /**\\n     * Get the feature's style function.\\n     * @return {import(\\\"./style/Style.js\\\").StyleFunction|undefined} Return a function\\n     * representing the current style of this feature.\\n     * @api\\n     */\\n    Feature.prototype.getStyleFunction = function () {\\n        return this.styleFunction_;\\n    };\\n    /**\\n     * @private\\n     */\\n    Feature.prototype.handleGeometryChange_ = function () {\\n        this.changed();\\n    };\\n    /**\\n     * @private\\n     */\\n    Feature.prototype.handleGeometryChanged_ = function () {\\n        if (this.geometryChangeKey_) {\\n            unlistenByKey(this.geometryChangeKey_);\\n            this.geometryChangeKey_ = null;\\n        }\\n        var geometry = this.getGeometry();\\n        if (geometry) {\\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Set the default geometry for the feature.  This will update the property\\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\\n     * @param {import(\\\"./geom/Geometry.js\\\").default|undefined} geometry The new geometry.\\n     * @api\\n     * @observable\\n     */\\n    Feature.prototype.setGeometry = function (geometry) {\\n        this.set(this.geometryName_, geometry);\\n    };\\n    /**\\n     * Set the style for the feature.  This can be a single style object, an array\\n     * of styles, or a function that takes a resolution and returns an array of\\n     * styles. If it is `null` the feature has no style (a `null` style).\\n     * @param {import(\\\"./style/Style.js\\\").StyleLike} style Style for this feature.\\n     * @api\\n     * @fires module:ol/events/Event~Event#event:change\\n     */\\n    Feature.prototype.setStyle = function (style) {\\n        this.style_ = style;\\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\\n        this.changed();\\n    };\\n    /**\\n     * Set the feature id.  The feature id is considered stable and may be used when\\n     * requesting features or comparing identifiers returned from a remote source.\\n     * The feature id can be used with the\\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\\n     * @param {number|string|undefined} id The feature id.\\n     * @api\\n     * @fires module:ol/events/Event~Event#event:change\\n     */\\n    Feature.prototype.setId = function (id) {\\n        this.id_ = id;\\n        this.changed();\\n    };\\n    /**\\n     * Set the property name to be used when getting the feature's default geometry.\\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\\n     * this name will be returned.\\n     * @param {string} name The property name of the default geometry.\\n     * @api\\n     */\\n    Feature.prototype.setGeometryName = function (name) {\\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\\n        this.geometryName_ = name;\\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\\n        this.handleGeometryChanged_();\\n    };\\n    return Feature;\\n}(BaseObject));\\n/**\\n * Convert the provided object into a feature style function.  Functions passed\\n * through unchanged.  Arrays of Style or single style objects wrapped\\n * in a new feature style function.\\n * @param {!import(\\\"./style/Style.js\\\").StyleFunction|!Array<import(\\\"./style/Style.js\\\").default>|!import(\\\"./style/Style.js\\\").default} obj\\n *     A feature style function, a single style, or an array of styles.\\n * @return {import(\\\"./style/Style.js\\\").StyleFunction} A style function.\\n */\\nexport function createStyleFunction(obj) {\\n    if (typeof obj === 'function') {\\n        return obj;\\n    }\\n    else {\\n        /**\\n         * @type {Array<import(\\\"./style/Style.js\\\").default>}\\n         */\\n        var styles_1;\\n        if (Array.isArray(obj)) {\\n            styles_1 = obj;\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\\\"./style/Style.js\\\").Style` or an array of `import(\\\"./style/Style.js\\\").Style`\\n            var style = /** @type {import(\\\"./style/Style.js\\\").default} */ (obj);\\n            styles_1 = [style];\\n        }\\n        return function () {\\n            return styles_1;\\n        };\\n    }\\n}\\nexport default Feature;\\n//# sourceMappingURL=Feature.js.map\",\"/**\\n * @module ol/format/Feature\\n */\\nimport { assign } from '../obj.js';\\nimport { abstract } from '../util.js';\\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\\n/**\\n * @typedef {Object} ReadOptions\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [dataProjection] Projection of the data we are reading.\\n * If not provided, the projection will be derived from the data (where possible) or\\n * the `dataProjection` of the format is assigned (where set). If the projection\\n * can not be derived from the data and if no `dataProjection` is set for a format,\\n * the features will not be reprojected.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] Tile extent of the tile being read. This is only used and\\n * required for {@link module:ol/format/MVT}.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [featureProjection] Projection of the feature geometries\\n * created by the format reader. If not provided, features will be returned in the\\n * `dataProjection`.\\n */\\n/**\\n * @typedef {Object} WriteOptions\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [dataProjection] Projection of the data we are writing.\\n * If not provided, the `dataProjection` of the format is assigned (where set).\\n * If no `dataProjection` is set for a format, the features will be returned\\n * in the `featureProjection`.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [featureProjection] Projection of the feature geometries\\n * that will be serialized by the format writer. If not provided, geometries are assumed\\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\\n * as they are provided at construction.  If `true`, the right-hand rule will\\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\\n * exterior and counter-clockwise for interior rings).  Note that not all\\n * formats support this.  The GeoJSON format does use this property when writing\\n * geometries.\\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\\n * coordinates with a large number of decimal places, not generally wanted on output.\\n * Set a number here to round coordinates. Can also be used to ensure that\\n * coordinates read in can be written back out with the same number of decimals.\\n * Default is no rounding.\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for feature formats.\\n * {FeatureFormat} subclasses provide the ability to decode and encode\\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\\n * file formats.  See the documentation for each format for more details.\\n *\\n * @abstract\\n * @api\\n */\\nvar FeatureFormat = /** @class */ (function () {\\n    function FeatureFormat() {\\n        /**\\n         * @protected\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         */\\n        this.dataProjection = null;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         */\\n        this.defaultFeatureProjection = null;\\n    }\\n    /**\\n     * Adds the data projection to the read options.\\n     * @param {Document|Node|Object|string} source Source.\\n     * @param {ReadOptions=} opt_options Options.\\n     * @return {ReadOptions|undefined} Options.\\n     * @protected\\n     */\\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\\n        var options;\\n        if (opt_options) {\\n            options = {\\n                dataProjection: opt_options.dataProjection ?\\n                    opt_options.dataProjection : this.readProjection(source),\\n                featureProjection: opt_options.featureProjection\\n            };\\n        }\\n        return this.adaptOptions(options);\\n    };\\n    /**\\n     * Sets the `dataProjection` on the options, if no `dataProjection`\\n     * is set.\\n     * @param {WriteOptions|ReadOptions|undefined} options\\n     *     Options.\\n     * @protected\\n     * @return {WriteOptions|ReadOptions|undefined}\\n     *     Updated options.\\n     */\\n    FeatureFormat.prototype.adaptOptions = function (options) {\\n        return assign({\\n            dataProjection: this.dataProjection,\\n            featureProjection: this.defaultFeatureProjection\\n        }, options);\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"./FormatType.js\\\").default} Format.\\n     */\\n    FeatureFormat.prototype.getType = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Read a single feature from a source.\\n     *\\n     * @abstract\\n     * @param {Document|Node|Object|string} source Source.\\n     * @param {ReadOptions=} opt_options Read options.\\n     * @return {import(\\\"../Feature.js\\\").FeatureLike} Feature.\\n     */\\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read all features from a source.\\n     *\\n     * @abstract\\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\\n     * @param {ReadOptions=} opt_options Read options.\\n     * @return {Array<import(\\\"../Feature.js\\\").FeatureLike>} Features.\\n     */\\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read a single geometry from a source.\\n     *\\n     * @abstract\\n     * @param {Document|Node|Object|string} source Source.\\n     * @param {ReadOptions=} opt_options Read options.\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n     */\\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read the projection from a source.\\n     *\\n     * @abstract\\n     * @param {Document|Node|Object|string} source Source.\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     */\\n    FeatureFormat.prototype.readProjection = function (source) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode a feature in this format.\\n     *\\n     * @abstract\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {WriteOptions=} opt_options Write options.\\n     * @return {string} Result.\\n     */\\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode an array of features in this format.\\n     *\\n     * @abstract\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {WriteOptions=} opt_options Write options.\\n     * @return {string} Result.\\n     */\\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Write a single geometry in this format.\\n     *\\n     * @abstract\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     * @param {WriteOptions=} opt_options Write options.\\n     * @return {string} Result.\\n     */\\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\\n        return abstract();\\n    };\\n    return FeatureFormat;\\n}());\\nexport default FeatureFormat;\\n/**\\n * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n * @param {boolean} write Set to true for writing, false for reading.\\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\\n * @return {import(\\\"../geom/Geometry.js\\\").default} Transformed geometry.\\n */\\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\\n    var transformed;\\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\\n    }\\n    else {\\n        transformed = geometry;\\n    }\\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\\n        // if decimals option on write, round each coordinate appropriately\\n        /**\\n         * @param {Array<number>} coordinates Coordinates.\\n         * @return {Array<number>} Transformed coordinates.\\n         */\\n        var transform = function (coordinates) {\\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\\n            }\\n            return coordinates;\\n        };\\n        if (transformed === geometry) {\\n            transformed = geometry.clone();\\n        }\\n        transformed.applyTransform(transform);\\n    }\\n    return transformed;\\n}\\n/**\\n * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n * @param {ReadOptions=} opt_options Read options.\\n * @return {import(\\\"../extent.js\\\").Extent} Transformed extent.\\n */\\nexport function transformExtentWithOptions(extent, opt_options) {\\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\\n        return transformExtent(extent, dataProjection, featureProjection);\\n    }\\n    else {\\n        return extent;\\n    }\\n}\\n//# sourceMappingURL=Feature.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/format/JSONFeature\\n */\\nimport { abstract } from '../util.js';\\nimport FeatureFormat from './Feature.js';\\nimport FormatType from './FormatType.js';\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for JSON feature formats.\\n *\\n * @abstract\\n */\\nvar JSONFeature = /** @class */ (function (_super) {\\n    __extends(JSONFeature, _super);\\n    function JSONFeature() {\\n        return _super.call(this) || this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    JSONFeature.prototype.getType = function () {\\n        return FormatType.JSON;\\n    };\\n    /**\\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\\n     * read a feature collection.\\n     *\\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @return {import(\\\"../Feature.js\\\").default} Feature.\\n     * @api\\n     */\\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\\n    };\\n    /**\\n     * Read all features.  Works with both a single feature and a feature\\n     * collection.\\n     *\\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     * @api\\n     */\\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {Object} object Object.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @protected\\n     * @return {import(\\\"../Feature.js\\\").default} Feature.\\n     */\\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {Object} object Object.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @protected\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     */\\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read a geometry.\\n     *\\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n     * @api\\n     */\\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {Object} object Object.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @protected\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n     */\\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read the projection.\\n     *\\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     * @api\\n     */\\n    JSONFeature.prototype.readProjection = function (source) {\\n        return this.readProjectionFromObject(getObject(source));\\n    };\\n    /**\\n     * @abstract\\n     * @param {Object} object Object.\\n     * @protected\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     */\\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode a feature as string.\\n     *\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {string} Encoded feature.\\n     * @api\\n     */\\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {Object} Object.\\n     */\\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode an array of features as string.\\n     *\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {string} Encoded features.\\n     * @api\\n     */\\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {Object} Object.\\n     */\\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode a geometry as string.\\n     *\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {string} Encoded geometry.\\n     * @api\\n     */\\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {Object} Object.\\n     */\\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\\n        return abstract();\\n    };\\n    return JSONFeature;\\n}(FeatureFormat));\\n/**\\n * @param {Document|Node|Object|string} source Source.\\n * @return {Object} Object.\\n */\\nfunction getObject(source) {\\n    if (typeof source === 'string') {\\n        var object = JSON.parse(source);\\n        return object ? /** @type {Object} */ (object) : null;\\n    }\\n    else if (source !== null) {\\n        return source;\\n    }\\n    else {\\n        return null;\\n    }\\n}\\nexport default JSONFeature;\\n//# sourceMappingURL=JSONFeature.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/GeometryCollection\\n */\\nimport { listen, unlisten } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\\nimport Geometry from './Geometry.js';\\nimport GeometryType from './GeometryType.js';\\nimport { clear } from '../obj.js';\\n/**\\n * @classdesc\\n * An array of {@link module:ol/geom/Geometry} objects.\\n *\\n * @api\\n */\\nvar GeometryCollection = /** @class */ (function (_super) {\\n    __extends(GeometryCollection, _super);\\n    /**\\n     * @param {Array<Geometry>=} opt_geometries Geometries.\\n     */\\n    function GeometryCollection(opt_geometries) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {Array<Geometry>}\\n         */\\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\\n        _this.listenGeometriesChange_();\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     */\\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\\n        if (!this.geometries_) {\\n            return;\\n        }\\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\\n        if (!this.geometries_) {\\n            return;\\n        }\\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\\n        }\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!GeometryCollection} Clone.\\n     * @override\\n     * @api\\n     */\\n    GeometryCollection.prototype.clone = function () {\\n        var geometryCollection = new GeometryCollection(null);\\n        geometryCollection.setGeometries(this.geometries_);\\n        return geometryCollection;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\\n        }\\n        return minSquaredDistance;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.containsXY = function (x, y) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            if (geometries[i].containsXY(x, y)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.computeExtent = function (extent) {\\n        createOrUpdateEmpty(extent);\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            extend(extent, geometries[i].getExtent());\\n        }\\n        return extent;\\n    };\\n    /**\\n     * Return the geometries that make up this geometry collection.\\n     * @return {Array<Geometry>} Geometries.\\n     * @api\\n     */\\n    GeometryCollection.prototype.getGeometries = function () {\\n        return cloneGeometries(this.geometries_);\\n    };\\n    /**\\n     * @return {Array<Geometry>} Geometries.\\n     */\\n    GeometryCollection.prototype.getGeometriesArray = function () {\\n        return this.geometries_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\\n            clear(this.simplifiedGeometryCache);\\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n            this.simplifiedGeometryRevision = this.getRevision();\\n        }\\n        if (squaredTolerance < 0 ||\\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\\n            return this;\\n        }\\n        var key = squaredTolerance.toString();\\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\\n            return this.simplifiedGeometryCache[key];\\n        }\\n        else {\\n            var simplifiedGeometries = [];\\n            var geometries = this.geometries_;\\n            var simplified = false;\\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n                var geometry = geometries[i];\\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\\n                simplifiedGeometries.push(simplifiedGeometry);\\n                if (simplifiedGeometry !== geometry) {\\n                    simplified = true;\\n                }\\n            }\\n            if (simplified) {\\n                var simplifiedGeometryCollection = new GeometryCollection(null);\\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\\n                return simplifiedGeometryCollection;\\n            }\\n            else {\\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\\n                return this;\\n            }\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.getType = function () {\\n        return GeometryType.GEOMETRY_COLLECTION;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            if (geometries[i].intersectsExtent(extent)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    GeometryCollection.prototype.isEmpty = function () {\\n        return this.geometries_.length === 0;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            geometries[i].rotate(angle, anchor);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\\n        var anchor = opt_anchor;\\n        if (!anchor) {\\n            anchor = getCenter(this.getExtent());\\n        }\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            geometries[i].scale(sx, opt_sy, anchor);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Set the geometries that make up this geometry collection.\\n     * @param {Array<Geometry>} geometries Geometries.\\n     * @api\\n     */\\n    GeometryCollection.prototype.setGeometries = function (geometries) {\\n        this.setGeometriesArray(cloneGeometries(geometries));\\n    };\\n    /**\\n     * @param {Array<Geometry>} geometries Geometries.\\n     */\\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\\n        this.unlistenGeometriesChange_();\\n        this.geometries_ = geometries;\\n        this.listenGeometriesChange_();\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            geometries[i].applyTransform(transformFn);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            geometries[i].translate(deltaX, deltaY);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.disposeInternal = function () {\\n        this.unlistenGeometriesChange_();\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    return GeometryCollection;\\n}(Geometry));\\n/**\\n * @param {Array<Geometry>} geometries Geometries.\\n * @return {Array<Geometry>} Cloned geometries.\\n */\\nfunction cloneGeometries(geometries) {\\n    var clonedGeometries = [];\\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n        clonedGeometries.push(geometries[i].clone());\\n    }\\n    return clonedGeometries;\\n}\\nexport default GeometryCollection;\\n//# sourceMappingURL=GeometryCollection.js.map\",\"/**\\n * @module ol/geom/flat/interpolate\\n */\\nimport { binarySearch } from '../../array.js';\\nimport { lerp } from '../../math.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} fraction Fraction.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Destination.\\n */\\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\\n    var pointX = NaN;\\n    var pointY = NaN;\\n    var n = (end - offset) / stride;\\n    if (n === 1) {\\n        pointX = flatCoordinates[offset];\\n        pointY = flatCoordinates[offset + 1];\\n    }\\n    else if (n == 2) {\\n        pointX = (1 - fraction) * flatCoordinates[offset] +\\n            fraction * flatCoordinates[offset + stride];\\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\\n            fraction * flatCoordinates[offset + stride + 1];\\n    }\\n    else if (n !== 0) {\\n        var x1 = flatCoordinates[offset];\\n        var y1 = flatCoordinates[offset + 1];\\n        var length_1 = 0;\\n        var cumulativeLengths = [0];\\n        for (var i = offset + stride; i < end; i += stride) {\\n            var x2 = flatCoordinates[i];\\n            var y2 = flatCoordinates[i + 1];\\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\\n            cumulativeLengths.push(length_1);\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n        var target = fraction * length_1;\\n        var index = binarySearch(cumulativeLengths, target);\\n        if (index < 0) {\\n            var t = (target - cumulativeLengths[-index - 2]) /\\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\\n            var o = offset + (-index - 2) * stride;\\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\\n        }\\n        else {\\n            pointX = flatCoordinates[offset + index * stride];\\n            pointY = flatCoordinates[offset + index * stride + 1];\\n        }\\n    }\\n    if (opt_dest) {\\n        opt_dest[0] = pointX;\\n        opt_dest[1] = pointY;\\n        return opt_dest;\\n    }\\n    else {\\n        return [pointX, pointY];\\n    }\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} m M.\\n * @param {boolean} extrapolate Extrapolate.\\n * @return {import(\\\"../../coordinate.js\\\").Coordinate} Coordinate.\\n */\\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\\n    if (end == offset) {\\n        return null;\\n    }\\n    var coordinate;\\n    if (m < flatCoordinates[offset + stride - 1]) {\\n        if (extrapolate) {\\n            coordinate = flatCoordinates.slice(offset, offset + stride);\\n            coordinate[stride - 1] = m;\\n            return coordinate;\\n        }\\n        else {\\n            return null;\\n        }\\n    }\\n    else if (flatCoordinates[end - 1] < m) {\\n        if (extrapolate) {\\n            coordinate = flatCoordinates.slice(end - stride, end);\\n            coordinate[stride - 1] = m;\\n            return coordinate;\\n        }\\n        else {\\n            return null;\\n        }\\n    }\\n    // FIXME use O(1) search\\n    if (m == flatCoordinates[offset + stride - 1]) {\\n        return flatCoordinates.slice(offset, offset + stride);\\n    }\\n    var lo = offset / stride;\\n    var hi = end / stride;\\n    while (lo < hi) {\\n        var mid = (lo + hi) >> 1;\\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\\n            hi = mid;\\n        }\\n        else {\\n            lo = mid + 1;\\n        }\\n    }\\n    var m0 = flatCoordinates[lo * stride - 1];\\n    if (m == m0) {\\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\\n    }\\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\\n    var t = (m - m0) / (m1 - m0);\\n    coordinate = [];\\n    for (var i = 0; i < stride - 1; ++i) {\\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\\n    }\\n    coordinate.push(m);\\n    return coordinate;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} m M.\\n * @param {boolean} extrapolate Extrapolate.\\n * @param {boolean} interpolate Interpolate.\\n * @return {import(\\\"../../coordinate.js\\\").Coordinate} Coordinate.\\n */\\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\\n    if (interpolate) {\\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\\n    }\\n    var coordinate;\\n    if (m < flatCoordinates[stride - 1]) {\\n        if (extrapolate) {\\n            coordinate = flatCoordinates.slice(0, stride);\\n            coordinate[stride - 1] = m;\\n            return coordinate;\\n        }\\n        else {\\n            return null;\\n        }\\n    }\\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\\n        if (extrapolate) {\\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\\n            coordinate[stride - 1] = m;\\n            return coordinate;\\n        }\\n        else {\\n            return null;\\n        }\\n    }\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        if (offset == end) {\\n            continue;\\n        }\\n        if (m < flatCoordinates[offset + stride - 1]) {\\n            return null;\\n        }\\n        else if (m <= flatCoordinates[end - 1]) {\\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\\n        }\\n        offset = end;\\n    }\\n    return null;\\n}\\n//# sourceMappingURL=interpolate.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/LineString\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\\nimport { deflateCoordinates } from './flat/deflate.js';\\nimport { inflateCoordinates } from './flat/inflate.js';\\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\\nimport { intersectsLineString } from './flat/intersectsextent.js';\\nimport { lineStringLength } from './flat/length.js';\\nimport { forEach as forEachSegment } from './flat/segments.js';\\nimport { douglasPeucker } from './flat/simplify.js';\\n/**\\n * @classdesc\\n * Linestring geometry.\\n *\\n * @api\\n */\\nvar LineString = /** @class */ (function (_super) {\\n    __extends(LineString, _super);\\n    /**\\n     * @param {Array<import(\\\"../coordinate.js\\\").Coordinate>|Array<number>} coordinates Coordinates.\\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     */\\n    function LineString(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.flatMidpoint_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.flatMidpointRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<import(\\\"../coordinate.js\\\").Coordinate>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed coordinate to the coordinates of the linestring.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @api\\n     */\\n    LineString.prototype.appendCoordinate = function (coordinate) {\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = coordinate.slice();\\n        }\\n        else {\\n            extend(this.flatCoordinates, coordinate);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!LineString} Clone.\\n     * @override\\n     * @api\\n     */\\n    LineString.prototype.clone = function () {\\n        return new LineString(this.flatCoordinates.slice(), this.layout);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * Iterate over each segment, calling the provided callback.\\n     * If the callback returns a truthy value the function returns that\\n     * value immediately. Otherwise the function returns `false`.\\n     *\\n     * @param {function(this: S, import(\\\"../coordinate.js\\\").Coordinate, import(\\\"../coordinate.js\\\").Coordinate): T} callback Function\\n     *     called for each segment.\\n     * @return {T|boolean} Value.\\n     * @template T,S\\n     * @api\\n     */\\n    LineString.prototype.forEachSegment = function (callback) {\\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\\n    };\\n    /**\\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\\n     * such coordinate exists.\\n     *\\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\\n     * M will return the first coordinate and Ms greater than the last M will\\n     * return the last coordinate.\\n     *\\n     * @param {number} m M.\\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinate.\\n     * @api\\n     */\\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\\n        if (this.layout != GeometryLayout.XYM &&\\n            this.layout != GeometryLayout.XYZM) {\\n            return null;\\n        }\\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\\n    };\\n    /**\\n     * Return the coordinates of the linestring.\\n     * @return {Array<import(\\\"../coordinate.js\\\").Coordinate>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    LineString.prototype.getCoordinates = function () {\\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * Return the coordinate at the provided fraction along the linestring.\\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\\n     * linestring and 1 is the end.\\n     * @param {number} fraction Fraction.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_dest Optional coordinate whose values will\\n     *     be modified. If not provided, a new coordinate will be returned.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinate of the interpolated point.\\n     * @api\\n     */\\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\\n    };\\n    /**\\n     * Return the length of the linestring on projected plane.\\n     * @return {number} Length (on projected plane).\\n     * @api\\n     */\\n    LineString.prototype.getLength = function () {\\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Flat midpoint.\\n     */\\n    LineString.prototype.getFlatMidpoint = function () {\\n        if (this.flatMidpointRevision_ != this.getRevision()) {\\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\\n            this.flatMidpointRevision_ = this.getRevision();\\n        }\\n        return this.flatMidpoint_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    LineString.prototype.getType = function () {\\n        return GeometryType.LINE_STRING;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    LineString.prototype.intersectsExtent = function (extent) {\\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\\n    };\\n    /**\\n     * Set the coordinates of the linestring.\\n     * @param {!Array<import(\\\"../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 1);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return LineString;\\n}(SimpleGeometry));\\nexport default LineString;\\n//# sourceMappingURL=LineString.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/MultiLineString\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport LineString from './LineString.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\\nimport { deflateCoordinatesArray } from './flat/deflate.js';\\nimport { inflateCoordinatesArray } from './flat/inflate.js';\\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\\nimport { douglasPeuckerArray } from './flat/simplify.js';\\n/**\\n * @classdesc\\n * Multi-linestring geometry.\\n *\\n * @api\\n */\\nvar MultiLineString = /** @class */ (function (_super) {\\n    __extends(MultiLineString, _super);\\n    /**\\n     * @param {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>|LineString>|Array<number>} coordinates\\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\\n     */\\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Array<number>}\\n         * @private\\n         */\\n        _this.ends_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        if (Array.isArray(coordinates[0])) {\\n            _this.setCoordinates(/** @type {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} */ (coordinates), opt_layout);\\n        }\\n        else if (opt_layout !== undefined && opt_ends) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n            _this.ends_ = opt_ends;\\n        }\\n        else {\\n            var layout = _this.getLayout();\\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\\n            var flatCoordinates = [];\\n            var ends = [];\\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\\n                var lineString = lineStrings[i];\\n                if (i === 0) {\\n                    layout = lineString.getLayout();\\n                }\\n                extend(flatCoordinates, lineString.getFlatCoordinates());\\n                ends.push(flatCoordinates.length);\\n            }\\n            _this.setFlatCoordinates(layout, flatCoordinates);\\n            _this.ends_ = ends;\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed linestring to the multilinestring.\\n     * @param {LineString} lineString LineString.\\n     * @api\\n     */\\n    MultiLineString.prototype.appendLineString = function (lineString) {\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\\n        }\\n        else {\\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\\n        }\\n        this.ends_.push(this.flatCoordinates.length);\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!MultiLineString} Clone.\\n     * @override\\n     * @api\\n     */\\n    MultiLineString.prototype.clone = function () {\\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\\n     * such coordinate exists.\\n     *\\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\\n     * M will return the first coordinate and Ms greater than the last M will\\n     * return the last coordinate.\\n     *\\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\\n     * will be linearly interpolated between the last coordinate of one LineString\\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\\n     * `false` then the function will return `null` for Ms falling between\\n     * LineStrings.\\n     *\\n     * @param {number} m M.\\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinate.\\n     * @api\\n     */\\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\\n        if ((this.layout != GeometryLayout.XYM &&\\n            this.layout != GeometryLayout.XYZM) ||\\n            this.flatCoordinates.length === 0) {\\n            return null;\\n        }\\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\\n    };\\n    /**\\n     * Return the coordinates of the multilinestring.\\n     * @return {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    MultiLineString.prototype.getCoordinates = function () {\\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Ends.\\n     */\\n    MultiLineString.prototype.getEnds = function () {\\n        return this.ends_;\\n    };\\n    /**\\n     * Return the linestring at the specified index.\\n     * @param {number} index Index.\\n     * @return {LineString} LineString.\\n     * @api\\n     */\\n    MultiLineString.prototype.getLineString = function (index) {\\n        if (index < 0 || this.ends_.length <= index) {\\n            return null;\\n        }\\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\\n    };\\n    /**\\n     * Return the linestrings of this multilinestring.\\n     * @return {Array<LineString>} LineStrings.\\n     * @api\\n     */\\n    MultiLineString.prototype.getLineStrings = function () {\\n        var flatCoordinates = this.flatCoordinates;\\n        var ends = this.ends_;\\n        var layout = this.layout;\\n        /** @type {Array<LineString>} */\\n        var lineStrings = [];\\n        var offset = 0;\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            var end = ends[i];\\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\\n            lineStrings.push(lineString);\\n            offset = end;\\n        }\\n        return lineStrings;\\n    };\\n    /**\\n     * @return {Array<number>} Flat midpoints.\\n     */\\n    MultiLineString.prototype.getFlatMidpoints = function () {\\n        var midpoints = [];\\n        var flatCoordinates = this.flatCoordinates;\\n        var offset = 0;\\n        var ends = this.ends_;\\n        var stride = this.stride;\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            var end = ends[i];\\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\\n            extend(midpoints, midpoint);\\n            offset = end;\\n        }\\n        return midpoints;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        var simplifiedEnds = [];\\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiLineString.prototype.getType = function () {\\n        return GeometryType.MULTI_LINE_STRING;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiLineString.prototype.intersectsExtent = function (extent) {\\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\\n    };\\n    /**\\n     * Set the coordinates of the multilinestring.\\n     * @param {!Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 2);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\\n        this.changed();\\n    };\\n    return MultiLineString;\\n}(SimpleGeometry));\\nexport default MultiLineString;\\n//# sourceMappingURL=MultiLineString.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/MultiPoint\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\\nimport GeometryType from './GeometryType.js';\\nimport Point from './Point.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { deflateCoordinates } from './flat/deflate.js';\\nimport { inflateCoordinates } from './flat/inflate.js';\\nimport { squaredDistance as squaredDx } from '../math.js';\\n/**\\n * @classdesc\\n * Multi-point geometry.\\n *\\n * @api\\n */\\nvar MultiPoint = /** @class */ (function (_super) {\\n    __extends(MultiPoint, _super);\\n    /**\\n     * @param {Array<import(\\\"../coordinate.js\\\").Coordinate>|Array<number>} coordinates Coordinates.\\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\\n     * @param {import(\\\"./GeometryLayout.js\\\").default=} opt_layout Layout.\\n     */\\n    function MultiPoint(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        if (opt_layout && !Array.isArray(coordinates[0])) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<import(\\\"../coordinate.js\\\").Coordinate>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed point to this multipoint.\\n     * @param {Point} point Point.\\n     * @api\\n     */\\n    MultiPoint.prototype.appendPoint = function (point) {\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = point.getFlatCoordinates().slice();\\n        }\\n        else {\\n            extend(this.flatCoordinates, point.getFlatCoordinates());\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!MultiPoint} Clone.\\n     * @override\\n     * @api\\n     */\\n    MultiPoint.prototype.clone = function () {\\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\\n        return multiPoint;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        var flatCoordinates = this.flatCoordinates;\\n        var stride = this.stride;\\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\\n            if (squaredDistance < minSquaredDistance) {\\n                minSquaredDistance = squaredDistance;\\n                for (var j = 0; j < stride; ++j) {\\n                    closestPoint[j] = flatCoordinates[i + j];\\n                }\\n                closestPoint.length = stride;\\n            }\\n        }\\n        return minSquaredDistance;\\n    };\\n    /**\\n     * Return the coordinates of the multipoint.\\n     * @return {Array<import(\\\"../coordinate.js\\\").Coordinate>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    MultiPoint.prototype.getCoordinates = function () {\\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * Return the point at the specified index.\\n     * @param {number} index Index.\\n     * @return {Point} Point.\\n     * @api\\n     */\\n    MultiPoint.prototype.getPoint = function (index) {\\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\\n        if (index < 0 || n <= index) {\\n            return null;\\n        }\\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\\n    };\\n    /**\\n     * Return the points of this multipoint.\\n     * @return {Array<Point>} Points.\\n     * @api\\n     */\\n    MultiPoint.prototype.getPoints = function () {\\n        var flatCoordinates = this.flatCoordinates;\\n        var layout = this.layout;\\n        var stride = this.stride;\\n        /** @type {Array<Point>} */\\n        var points = [];\\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\\n            points.push(point);\\n        }\\n        return points;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiPoint.prototype.getType = function () {\\n        return GeometryType.MULTI_POINT;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiPoint.prototype.intersectsExtent = function (extent) {\\n        var flatCoordinates = this.flatCoordinates;\\n        var stride = this.stride;\\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\\n            var x = flatCoordinates[i];\\n            var y = flatCoordinates[i + 1];\\n            if (containsXY(extent, x, y)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * Set the coordinates of the multipoint.\\n     * @param {!Array<import(\\\"../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n     * @param {import(\\\"./GeometryLayout.js\\\").default=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 1);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return MultiPoint;\\n}(SimpleGeometry));\\nexport default MultiPoint;\\n//# sourceMappingURL=MultiPoint.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/MultiPolygon\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport MultiPoint from './MultiPoint.js';\\nimport Polygon from './Polygon.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { linearRingss as linearRingssArea } from './flat/area.js';\\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\\nimport { linearRingssContainsXY } from './flat/contains.js';\\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\\nimport { quantizeMultiArray } from './flat/simplify.js';\\n/**\\n * @classdesc\\n * Multi-polygon geometry.\\n *\\n * @api\\n */\\nvar MultiPolygon = /** @class */ (function (_super) {\\n    __extends(MultiPolygon, _super);\\n    /**\\n     * @param {Array<Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\\n     */\\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Array<Array<number>>}\\n         * @private\\n         */\\n        _this.endss_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.flatInteriorPointsRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.flatInteriorPoints_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.orientedRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.orientedFlatCoordinates_ = null;\\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\\n            var layout = _this.getLayout();\\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\\n            var flatCoordinates = [];\\n            var endss = [];\\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\\n                var polygon = polygons[i];\\n                if (i === 0) {\\n                    layout = polygon.getLayout();\\n                }\\n                var offset = flatCoordinates.length;\\n                var ends = polygon.getEnds();\\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\\n                    ends[j] += offset;\\n                }\\n                extend(flatCoordinates, polygon.getFlatCoordinates());\\n                endss.push(ends);\\n            }\\n            opt_layout = layout;\\n            coordinates = flatCoordinates;\\n            opt_endss = endss;\\n        }\\n        if (opt_layout !== undefined && opt_endss) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n            _this.endss_ = opt_endss;\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed polygon to this multipolygon.\\n     * @param {Polygon} polygon Polygon.\\n     * @api\\n     */\\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\\n        /** @type {Array<number>} */\\n        var ends;\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\\n            ends = polygon.getEnds().slice();\\n            this.endss_.push();\\n        }\\n        else {\\n            var offset = this.flatCoordinates.length;\\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\\n            ends = polygon.getEnds().slice();\\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\\n                ends[i] += offset;\\n            }\\n        }\\n        this.endss_.push(ends);\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!MultiPolygon} Clone.\\n     * @override\\n     * @api\\n     */\\n    MultiPolygon.prototype.clone = function () {\\n        var len = this.endss_.length;\\n        var newEndss = new Array(len);\\n        for (var i = 0; i < len; ++i) {\\n            newEndss[i] = this.endss_[i].slice();\\n        }\\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiPolygon.prototype.containsXY = function (x, y) {\\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\\n    };\\n    /**\\n     * Return the area of the multipolygon on projected plane.\\n     * @return {number} Area (on projected plane).\\n     * @api\\n     */\\n    MultiPolygon.prototype.getArea = function () {\\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\\n    };\\n    /**\\n     * Get the coordinate array for this geometry.  This array has the structure\\n     * of a GeoJSON coordinate array for multi-polygons.\\n     *\\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\\n     *     If `false`, coordinates will be oriented according to the left-hand rule\\n     *     (clockwise for exterior and counter-clockwise for interior rings).\\n     *     By default, coordinate orientation will depend on how the geometry was\\n     *     constructed.\\n     * @return {Array<Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\\n        var flatCoordinates;\\n        if (opt_right !== undefined) {\\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\\n        }\\n        else {\\n            flatCoordinates = this.flatCoordinates;\\n        }\\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\\n    };\\n    /**\\n     * @return {Array<Array<number>>} Endss.\\n     */\\n    MultiPolygon.prototype.getEndss = function () {\\n        return this.endss_;\\n    };\\n    /**\\n     * @return {Array<number>} Flat interior points.\\n     */\\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\\n            this.flatInteriorPointsRevision_ = this.getRevision();\\n        }\\n        return this.flatInteriorPoints_;\\n    };\\n    /**\\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\\n     * the length of the horizontal intersection that the point belongs to.\\n     * @api\\n     */\\n    MultiPolygon.prototype.getInteriorPoints = function () {\\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\\n    };\\n    /**\\n     * @return {Array<number>} Oriented flat coordinates.\\n     */\\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\\n        if (this.orientedRevision_ != this.getRevision()) {\\n            var flatCoordinates = this.flatCoordinates;\\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\\n                this.orientedFlatCoordinates_ = flatCoordinates;\\n            }\\n            else {\\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\\n                this.orientedFlatCoordinates_.length =\\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\\n            }\\n            this.orientedRevision_ = this.getRevision();\\n        }\\n        return this.orientedFlatCoordinates_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        var simplifiedEndss = [];\\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\\n    };\\n    /**\\n     * Return the polygon at the specified index.\\n     * @param {number} index Index.\\n     * @return {Polygon} Polygon.\\n     * @api\\n     */\\n    MultiPolygon.prototype.getPolygon = function (index) {\\n        if (index < 0 || this.endss_.length <= index) {\\n            return null;\\n        }\\n        var offset;\\n        if (index === 0) {\\n            offset = 0;\\n        }\\n        else {\\n            var prevEnds = this.endss_[index - 1];\\n            offset = prevEnds[prevEnds.length - 1];\\n        }\\n        var ends = this.endss_[index].slice();\\n        var end = ends[ends.length - 1];\\n        if (offset !== 0) {\\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\\n                ends[i] -= offset;\\n            }\\n        }\\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\\n    };\\n    /**\\n     * Return the polygons of this multipolygon.\\n     * @return {Array<Polygon>} Polygons.\\n     * @api\\n     */\\n    MultiPolygon.prototype.getPolygons = function () {\\n        var layout = this.layout;\\n        var flatCoordinates = this.flatCoordinates;\\n        var endss = this.endss_;\\n        var polygons = [];\\n        var offset = 0;\\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\\n            var ends = endss[i].slice();\\n            var end = ends[ends.length - 1];\\n            if (offset !== 0) {\\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\\n                    ends[j] -= offset;\\n                }\\n            }\\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\\n            polygons.push(polygon);\\n            offset = end;\\n        }\\n        return polygons;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiPolygon.prototype.getType = function () {\\n        return GeometryType.MULTI_POLYGON;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\\n    };\\n    /**\\n     * Set the coordinates of the multipolygon.\\n     * @param {!Array<Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 3);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\\n        if (endss.length === 0) {\\n            this.flatCoordinates.length = 0;\\n        }\\n        else {\\n            var lastEnds = endss[endss.length - 1];\\n            this.flatCoordinates.length = lastEnds.length === 0 ?\\n                0 : lastEnds[lastEnds.length - 1];\\n        }\\n        this.changed();\\n    };\\n    return MultiPolygon;\\n}(SimpleGeometry));\\nexport default MultiPolygon;\\n//# sourceMappingURL=MultiPolygon.js.map\",\"/**\\n * @module ol/geom/flat/center\\n */\\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @return {Array<number>} Flat centers.\\n */\\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\\n    var flatCenters = [];\\n    var extent = createEmpty();\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\\n        offset = ends[ends.length - 1];\\n    }\\n    return flatCenters;\\n}\\n//# sourceMappingURL=center.js.map\",\"/**\\n * @module ol/format/GeoJSON\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { assert } from '../asserts.js';\\nimport Feature from '../Feature.js';\\nimport { transformGeometryWithOptions } from './Feature.js';\\nimport JSONFeature from './JSONFeature.js';\\nimport GeometryCollection from '../geom/GeometryCollection.js';\\nimport LineString from '../geom/LineString.js';\\nimport MultiLineString from '../geom/MultiLineString.js';\\nimport MultiPoint from '../geom/MultiPoint.js';\\nimport MultiPolygon from '../geom/MultiPolygon.js';\\nimport Point from '../geom/Point.js';\\nimport Polygon from '../geom/Polygon.js';\\nimport { assign, isEmpty } from '../obj.js';\\nimport { get as getProjection } from '../proj.js';\\nimport GeometryType from '../geom/GeometryType.js';\\n/**\\n * @typedef {import(\\\"geojson\\\").GeoJSON} GeoJSONObject\\n * @typedef {import(\\\"geojson\\\").Feature} GeoJSONFeature\\n * @typedef {import(\\\"geojson\\\").FeatureCollection} GeoJSONFeatureCollection\\n * @typedef {import(\\\"geojson\\\").Geometry} GeoJSONGeometry\\n * @typedef {import(\\\"geojson\\\").Point} GeoJSONPoint\\n * @typedef {import(\\\"geojson\\\").LineString} GeoJSONLineString\\n * @typedef {import(\\\"geojson\\\").Polygon} GeoJSONPolygon\\n * @typedef {import(\\\"geojson\\\").MultiPoint} GeoJSONMultiPoint\\n * @typedef {import(\\\"geojson\\\").MultiLineString} GeoJSONMultiLineString\\n * @typedef {import(\\\"geojson\\\").MultiPolygon} GeoJSONMultiPolygon\\n * @typedef {import(\\\"geojson\\\").GeometryCollection} GeoJSONGeometryCollection\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [featureProjection] Projection for features read or\\n * written by the format.  Options passed to read or write methods will take precedence.\\n * @property {string} [geometryName] Geometry name to use when creating features.\\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\\n * will look for that field to set the geometry name. If both this field is set to `true`\\n * and a `geometryName` is provided, the `geometryName` will take precedence.\\n */\\n/**\\n * @classdesc\\n * Feature format for reading and writing data in the GeoJSON format.\\n *\\n  * @api\\n */\\nvar GeoJSON = /** @class */ (function (_super) {\\n    __extends(GeoJSON, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function GeoJSON(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this) || this;\\n        /**\\n         * @inheritDoc\\n         */\\n        _this.dataProjection = getProjection(options.dataProjection ?\\n            options.dataProjection : 'EPSG:4326');\\n        if (options.featureProjection) {\\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\\n        }\\n        /**\\n         * Name of the geometry attribute for features.\\n         * @type {string|undefined}\\n         * @private\\n         */\\n        _this.geometryName_ = options.geometryName;\\n        /**\\n         * Look for the geometry name in the feature GeoJSON\\n         * @type {boolean|undefined}\\n         * @private\\n         */\\n        _this.extractGeometryName_ = options.extractGeometryName;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\\n        /**\\n         * @type {GeoJSONFeature}\\n         */\\n        var geoJSONFeature = null;\\n        if (object['type'] === 'Feature') {\\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\\n        }\\n        else {\\n            geoJSONFeature = {\\n                'type': 'Feature',\\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\\n                'properties': null\\n            };\\n        }\\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\\n        var feature = new Feature();\\n        if (this.geometryName_) {\\n            feature.setGeometryName(this.geometryName_);\\n        }\\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\\n        }\\n        feature.setGeometry(geometry);\\n        if ('id' in geoJSONFeature) {\\n            feature.setId(geoJSONFeature['id']);\\n        }\\n        if (geoJSONFeature['properties']) {\\n            feature.setProperties(geoJSONFeature['properties'], true);\\n        }\\n        return feature;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\\n        /** @type {Array<import(\\\"../Feature.js\\\").default>} */\\n        var features = null;\\n        if (geoJSONObject['type'] === 'FeatureCollection') {\\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\\n            features = [];\\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\\n            }\\n        }\\n        else {\\n            features = [this.readFeatureFromObject(object, opt_options)];\\n        }\\n        return features;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\\n        var crs = object['crs'];\\n        var projection;\\n        if (crs) {\\n            if (crs['type'] == 'name') {\\n                projection = getProjection(crs['properties']['name']);\\n            }\\n            else {\\n                assert(false, 36); // Unknown SRS type\\n            }\\n        }\\n        else {\\n            projection = this.dataProjection;\\n        }\\n        return (\\n        /** @type {import(\\\"../proj/Projection.js\\\").default} */ (projection));\\n    };\\n    /**\\n     * Encode a feature as a GeoJSON Feature object.\\n     *\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {GeoJSONFeature} Object.\\n     * @override\\n     * @api\\n     */\\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\\n        opt_options = this.adaptOptions(opt_options);\\n        /** @type {GeoJSONFeature} */\\n        var object = {\\n            'type': 'Feature',\\n            geometry: null,\\n            properties: null\\n        };\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            object.id = id;\\n        }\\n        var geometry = feature.getGeometry();\\n        if (geometry) {\\n            object.geometry = writeGeometry(geometry, opt_options);\\n        }\\n        var properties = feature.getProperties();\\n        delete properties[feature.getGeometryName()];\\n        if (!isEmpty(properties)) {\\n            object.properties = properties;\\n        }\\n        return object;\\n    };\\n    /**\\n     * Encode an array of features as a GeoJSON object.\\n     *\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\\n     * @override\\n     * @api\\n     */\\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\\n        opt_options = this.adaptOptions(opt_options);\\n        var objects = [];\\n        for (var i = 0, ii = features.length; i < ii; ++i) {\\n            objects.push(this.writeFeatureObject(features[i], opt_options));\\n        }\\n        return {\\n            type: 'FeatureCollection',\\n            features: objects\\n        };\\n    };\\n    /**\\n     * Encode a geometry as a GeoJSON object.\\n     *\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\\n     * @override\\n     * @api\\n     */\\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\\n    };\\n    return GeoJSON;\\n}(JSONFeature));\\n/**\\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\\n * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n */\\nfunction readGeometry(object, opt_options) {\\n    if (!object) {\\n        return null;\\n    }\\n    /**\\n     * @type {import(\\\"../geom/Geometry.js\\\").default}\\n     */\\n    var geometry;\\n    switch (object['type']) {\\n        case GeometryType.POINT: {\\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\\n            break;\\n        }\\n        case GeometryType.LINE_STRING: {\\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\\n            break;\\n        }\\n        case GeometryType.POLYGON: {\\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\\n            break;\\n        }\\n        case GeometryType.MULTI_POINT: {\\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\\n            break;\\n        }\\n        case GeometryType.MULTI_LINE_STRING: {\\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\\n        }\\n    }\\n    return transformGeometryWithOptions(geometry, false, opt_options);\\n}\\n/**\\n * @param {GeoJSONGeometryCollection} object Object.\\n * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n * @return {GeometryCollection} Geometry collection.\\n */\\nfunction readGeometryCollectionGeometry(object, opt_options) {\\n    var geometries = object['geometries'].map(\\n    /**\\n     * @param {GeoJSONGeometry} geometry Geometry.\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     */\\n    function (geometry) {\\n        return readGeometry(geometry, opt_options);\\n    });\\n    return new GeometryCollection(geometries);\\n}\\n/**\\n * @param {GeoJSONPoint} object Object.\\n * @return {Point} Point.\\n */\\nfunction readPointGeometry(object) {\\n    return new Point(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONLineString} object Object.\\n * @return {LineString} LineString.\\n */\\nfunction readLineStringGeometry(object) {\\n    return new LineString(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONMultiLineString} object Object.\\n * @return {MultiLineString} MultiLineString.\\n */\\nfunction readMultiLineStringGeometry(object) {\\n    return new MultiLineString(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONMultiPoint} object Object.\\n * @return {MultiPoint} MultiPoint.\\n */\\nfunction readMultiPointGeometry(object) {\\n    return new MultiPoint(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONMultiPolygon} object Object.\\n * @return {MultiPolygon} MultiPolygon.\\n */\\nfunction readMultiPolygonGeometry(object) {\\n    return new MultiPolygon(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONPolygon} object Object.\\n * @return {Polygon} Polygon.\\n */\\nfunction readPolygonGeometry(object) {\\n    return new Polygon(object['coordinates']);\\n}\\n/**\\n * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeGeometry(geometry, opt_options) {\\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\\n    var type = geometry.getType();\\n    /** @type {GeoJSONGeometry} */\\n    var geoJSON;\\n    switch (type) {\\n        case GeometryType.POINT: {\\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.LINE_STRING: {\\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.POLYGON: {\\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.MULTI_POINT: {\\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.MULTI_LINE_STRING: {\\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.CIRCLE: {\\n            geoJSON = {\\n                type: 'GeometryCollection',\\n                geometries: []\\n            };\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported geometry type: ' + type);\\n        }\\n    }\\n    return geoJSON;\\n}\\n/**\\n * @param {GeometryCollection} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\\n */\\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\\n        var options = assign({}, opt_options);\\n        delete options.featureProjection;\\n        return writeGeometry(geometry, options);\\n    });\\n    return {\\n        type: 'GeometryCollection',\\n        geometries: geometries\\n    };\\n}\\n/**\\n * @param {LineString} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeLineStringGeometry(geometry, opt_options) {\\n    return {\\n        type: 'LineString',\\n        coordinates: geometry.getCoordinates()\\n    };\\n}\\n/**\\n * @param {MultiLineString} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\\n    return {\\n        type: 'MultiLineString',\\n        coordinates: geometry.getCoordinates()\\n    };\\n}\\n/**\\n * @param {MultiPoint} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeMultiPointGeometry(geometry, opt_options) {\\n    return {\\n        type: 'MultiPoint',\\n        coordinates: geometry.getCoordinates()\\n    };\\n}\\n/**\\n * @param {MultiPolygon} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\\n    var right;\\n    if (opt_options) {\\n        right = opt_options.rightHanded;\\n    }\\n    return {\\n        type: 'MultiPolygon',\\n        coordinates: geometry.getCoordinates(right)\\n    };\\n}\\n/**\\n * @param {Point} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writePointGeometry(geometry, opt_options) {\\n    return {\\n        type: 'Point',\\n        coordinates: geometry.getCoordinates()\\n    };\\n}\\n/**\\n * @param {Polygon} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writePolygonGeometry(geometry, opt_options) {\\n    var right;\\n    if (opt_options) {\\n        right = opt_options.rightHanded;\\n    }\\n    return {\\n        type: 'Polygon',\\n        coordinates: geometry.getCoordinates(right)\\n    };\\n}\\nexport default GeoJSON;\\n//# sourceMappingURL=GeoJSON.js.map\",\"/**\\n * @module ol/style/Text\\n */\\nimport Fill from './Fill.js';\\nimport TextPlacement from './TextPlacement.js';\\n/**\\n * The default fill color to use if no fill was set at construction time; a\\n * blackish `#333`.\\n *\\n * @const {string}\\n */\\nvar DEFAULT_FILL_COLOR = '#333';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [font] Font style as CSS 'font' value, see:\\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\\n * the width of the polygon at the label position or the length of the path that it follows.\\n * @property {import(\\\"./TextPlacement.js\\\").default|string} [placement='point'] Text placement.\\n * @property {number} [scale] Scale.\\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\\n * @property {string} [text] Text content.\\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\\n * placement where `maxAngle` is not exceeded.\\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\\n * 'hanging', 'ideographic'.\\n * @property {import(\\\"./Fill.js\\\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\\n * @property {import(\\\"./Stroke.js\\\").default} [stroke] Stroke style.\\n * @property {import(\\\"./Fill.js\\\").default} [backgroundFill] Fill style for the text background when `placement` is\\n * `'point'`. Default is no fill.\\n * @property {import(\\\"./Stroke.js\\\").default} [backgroundStroke] Stroke style for the text background  when `placement`\\n * is `'point'`. Default is no stroke.\\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\\n * values in the array is `[top, right, bottom, left]`.\\n */\\n/**\\n * @classdesc\\n * Set text style for vector features.\\n * @api\\n */\\nvar Text = /** @class */ (function () {\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function Text(opt_options) {\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.font_ = options.font;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.rotation_ = options.rotation;\\n        /**\\n         * @private\\n         * @type {boolean|undefined}\\n         */\\n        this.rotateWithView_ = options.rotateWithView;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.scale_ = options.scale;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.text_ = options.text;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.textAlign_ = options.textAlign;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.textBaseline_ = options.textBaseline;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Fill.js\\\").default}\\n         */\\n        this.fill_ = options.fill !== undefined ? options.fill :\\n            new Fill({ color: DEFAULT_FILL_COLOR });\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\\n        /**\\n         * @private\\n         * @type {import(\\\"./TextPlacement.js\\\").default|string}\\n         */\\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.overflow_ = !!options.overflow;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Stroke.js\\\").default}\\n         */\\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Fill.js\\\").default}\\n         */\\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Stroke.js\\\").default}\\n         */\\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        this.padding_ = options.padding === undefined ? null : options.padding;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {Text} The cloned style.\\n     * @api\\n     */\\n    Text.prototype.clone = function () {\\n        return new Text({\\n            font: this.getFont(),\\n            placement: this.getPlacement(),\\n            maxAngle: this.getMaxAngle(),\\n            overflow: this.getOverflow(),\\n            rotation: this.getRotation(),\\n            rotateWithView: this.getRotateWithView(),\\n            scale: this.getScale(),\\n            text: this.getText(),\\n            textAlign: this.getTextAlign(),\\n            textBaseline: this.getTextBaseline(),\\n            fill: this.getFill() ? this.getFill().clone() : undefined,\\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\\n            offsetX: this.getOffsetX(),\\n            offsetY: this.getOffsetY(),\\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\\n        });\\n    };\\n    /**\\n     * Get the `overflow` configuration.\\n     * @return {boolean} Let text overflow the length of the path they follow.\\n     * @api\\n     */\\n    Text.prototype.getOverflow = function () {\\n        return this.overflow_;\\n    };\\n    /**\\n     * Get the font name.\\n     * @return {string|undefined} Font.\\n     * @api\\n     */\\n    Text.prototype.getFont = function () {\\n        return this.font_;\\n    };\\n    /**\\n     * Get the maximum angle between adjacent characters.\\n     * @return {number} Angle in radians.\\n     * @api\\n     */\\n    Text.prototype.getMaxAngle = function () {\\n        return this.maxAngle_;\\n    };\\n    /**\\n     * Get the label placement.\\n     * @return {import(\\\"./TextPlacement.js\\\").default|string} Text placement.\\n     * @api\\n     */\\n    Text.prototype.getPlacement = function () {\\n        return this.placement_;\\n    };\\n    /**\\n     * Get the x-offset for the text.\\n     * @return {number} Horizontal text offset.\\n     * @api\\n     */\\n    Text.prototype.getOffsetX = function () {\\n        return this.offsetX_;\\n    };\\n    /**\\n     * Get the y-offset for the text.\\n     * @return {number} Vertical text offset.\\n     * @api\\n     */\\n    Text.prototype.getOffsetY = function () {\\n        return this.offsetY_;\\n    };\\n    /**\\n     * Get the fill style for the text.\\n     * @return {import(\\\"./Fill.js\\\").default} Fill style.\\n     * @api\\n     */\\n    Text.prototype.getFill = function () {\\n        return this.fill_;\\n    };\\n    /**\\n     * Determine whether the text rotates with the map.\\n     * @return {boolean|undefined} Rotate with map.\\n     * @api\\n     */\\n    Text.prototype.getRotateWithView = function () {\\n        return this.rotateWithView_;\\n    };\\n    /**\\n     * Get the text rotation.\\n     * @return {number|undefined} Rotation.\\n     * @api\\n     */\\n    Text.prototype.getRotation = function () {\\n        return this.rotation_;\\n    };\\n    /**\\n     * Get the text scale.\\n     * @return {number|undefined} Scale.\\n     * @api\\n     */\\n    Text.prototype.getScale = function () {\\n        return this.scale_;\\n    };\\n    /**\\n     * Get the stroke style for the text.\\n     * @return {import(\\\"./Stroke.js\\\").default} Stroke style.\\n     * @api\\n     */\\n    Text.prototype.getStroke = function () {\\n        return this.stroke_;\\n    };\\n    /**\\n     * Get the text to be rendered.\\n     * @return {string|undefined} Text.\\n     * @api\\n     */\\n    Text.prototype.getText = function () {\\n        return this.text_;\\n    };\\n    /**\\n     * Get the text alignment.\\n     * @return {string|undefined} Text align.\\n     * @api\\n     */\\n    Text.prototype.getTextAlign = function () {\\n        return this.textAlign_;\\n    };\\n    /**\\n     * Get the text baseline.\\n     * @return {string|undefined} Text baseline.\\n     * @api\\n     */\\n    Text.prototype.getTextBaseline = function () {\\n        return this.textBaseline_;\\n    };\\n    /**\\n     * Get the background fill style for the text.\\n     * @return {import(\\\"./Fill.js\\\").default} Fill style.\\n     * @api\\n     */\\n    Text.prototype.getBackgroundFill = function () {\\n        return this.backgroundFill_;\\n    };\\n    /**\\n     * Get the background stroke style for the text.\\n     * @return {import(\\\"./Stroke.js\\\").default} Stroke style.\\n     * @api\\n     */\\n    Text.prototype.getBackgroundStroke = function () {\\n        return this.backgroundStroke_;\\n    };\\n    /**\\n     * Get the padding for the text.\\n     * @return {Array<number>} Padding.\\n     * @api\\n     */\\n    Text.prototype.getPadding = function () {\\n        return this.padding_;\\n    };\\n    /**\\n     * Set the `overflow` property.\\n     *\\n     * @param {boolean} overflow Let text overflow the path that it follows.\\n     * @api\\n     */\\n    Text.prototype.setOverflow = function (overflow) {\\n        this.overflow_ = overflow;\\n    };\\n    /**\\n     * Set the font.\\n     *\\n     * @param {string|undefined} font Font.\\n     * @api\\n     */\\n    Text.prototype.setFont = function (font) {\\n        this.font_ = font;\\n    };\\n    /**\\n     * Set the maximum angle between adjacent characters.\\n     *\\n     * @param {number} maxAngle Angle in radians.\\n     * @api\\n     */\\n    Text.prototype.setMaxAngle = function (maxAngle) {\\n        this.maxAngle_ = maxAngle;\\n    };\\n    /**\\n     * Set the x offset.\\n     *\\n     * @param {number} offsetX Horizontal text offset.\\n     * @api\\n     */\\n    Text.prototype.setOffsetX = function (offsetX) {\\n        this.offsetX_ = offsetX;\\n    };\\n    /**\\n     * Set the y offset.\\n     *\\n     * @param {number} offsetY Vertical text offset.\\n     * @api\\n     */\\n    Text.prototype.setOffsetY = function (offsetY) {\\n        this.offsetY_ = offsetY;\\n    };\\n    /**\\n     * Set the text placement.\\n     *\\n     * @param {import(\\\"./TextPlacement.js\\\").default|string} placement Placement.\\n     * @api\\n     */\\n    Text.prototype.setPlacement = function (placement) {\\n        this.placement_ = placement;\\n    };\\n    /**\\n     * Set whether to rotate the text with the view.\\n     *\\n     * @param {boolean} rotateWithView Rotate with map.\\n     * @api\\n     */\\n    Text.prototype.setRotateWithView = function (rotateWithView) {\\n        this.rotateWithView_ = rotateWithView;\\n    };\\n    /**\\n     * Set the fill.\\n     *\\n     * @param {import(\\\"./Fill.js\\\").default} fill Fill style.\\n     * @api\\n     */\\n    Text.prototype.setFill = function (fill) {\\n        this.fill_ = fill;\\n    };\\n    /**\\n     * Set the rotation.\\n     *\\n     * @param {number|undefined} rotation Rotation.\\n     * @api\\n     */\\n    Text.prototype.setRotation = function (rotation) {\\n        this.rotation_ = rotation;\\n    };\\n    /**\\n     * Set the scale.\\n     *\\n     * @param {number|undefined} scale Scale.\\n     * @api\\n     */\\n    Text.prototype.setScale = function (scale) {\\n        this.scale_ = scale;\\n    };\\n    /**\\n     * Set the stroke.\\n     *\\n     * @param {import(\\\"./Stroke.js\\\").default} stroke Stroke style.\\n     * @api\\n     */\\n    Text.prototype.setStroke = function (stroke) {\\n        this.stroke_ = stroke;\\n    };\\n    /**\\n     * Set the text.\\n     *\\n     * @param {string|undefined} text Text.\\n     * @api\\n     */\\n    Text.prototype.setText = function (text) {\\n        this.text_ = text;\\n    };\\n    /**\\n     * Set the text alignment.\\n     *\\n     * @param {string|undefined} textAlign Text align.\\n     * @api\\n     */\\n    Text.prototype.setTextAlign = function (textAlign) {\\n        this.textAlign_ = textAlign;\\n    };\\n    /**\\n     * Set the text baseline.\\n     *\\n     * @param {string|undefined} textBaseline Text baseline.\\n     * @api\\n     */\\n    Text.prototype.setTextBaseline = function (textBaseline) {\\n        this.textBaseline_ = textBaseline;\\n    };\\n    /**\\n     * Set the background fill.\\n     *\\n     * @param {import(\\\"./Fill.js\\\").default} fill Fill style.\\n     * @api\\n     */\\n    Text.prototype.setBackgroundFill = function (fill) {\\n        this.backgroundFill_ = fill;\\n    };\\n    /**\\n     * Set the background stroke.\\n     *\\n     * @param {import(\\\"./Stroke.js\\\").default} stroke Stroke style.\\n     * @api\\n     */\\n    Text.prototype.setBackgroundStroke = function (stroke) {\\n        this.backgroundStroke_ = stroke;\\n    };\\n    /**\\n     * Set the padding (`[top, right, bottom, left]`).\\n     *\\n     * @param {!Array<number>} padding Padding.\\n     * @api\\n     */\\n    Text.prototype.setPadding = function (padding) {\\n        this.padding_ = padding;\\n    };\\n    return Text;\\n}());\\nexport default Text;\\n//# sourceMappingURL=Text.js.map\",\"/**\\n * @module ol/reproj/common\\n */\\n/**\\n * Default maximum allowed threshold  (in pixels) for reprojection\\n * triangulation.\\n * @type {number}\\n */\\nexport var ERROR_THRESHOLD = 0.5;\\n/**\\n * Enable automatic reprojection of raster sources. Default is `true`.\\n * TODO: decide if we want to expose this as a build flag or remove it\\n * @type {boolean}\\n */\\nexport var ENABLE_RASTER_REPROJECTION = true;\\n//# sourceMappingURL=common.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Tile\\n */\\nimport TileState from './TileState.js';\\nimport { easeIn } from './easing.js';\\nimport EventTarget from './events/Target.js';\\nimport EventType from './events/EventType.js';\\nimport { abstract } from './util.js';\\n/**\\n * A function that takes an {@link module:ol/Tile} for the tile and a\\n * `{string}` for the url as arguments. The default is\\n * ```js\\n * source.setTileLoadFunction(function(tile, src) {\\n *   tile.getImage().src = src;\\n * });\\n * ```\\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\\n * error handling:\\n *\\n * ```js\\n * import TileState from 'ol/TileState';\\n *\\n * source.setTileLoadFunction(function(tile, src) {\\n *   var xhr = new XMLHttpRequest();\\n *   xhr.responseType = 'blob';\\n *   xhr.addEventListener('loadend', function (evt) {\\n *     var data = this.response;\\n *     if (data !== undefined) {\\n *       tile.getImage().src = URL.createObjectURL(data);\\n *     } else {\\n *       tile.setState(TileState.ERROR);\\n *     }\\n *   });\\n *   xhr.addEventListener('error', function () {\\n *     tile.setState(TileState.ERROR);\\n *   });\\n *   xhr.open('GET', src);\\n *   xhr.send();\\n * });\\n * ```\\n *\\n * @typedef {function(Tile, string): void} LoadFunction\\n * @api\\n */\\n/**\\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\\n * the url that provides a tile for a given tile coordinate.\\n *\\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\\n * coordinate, a `{number}` representing the pixel ratio and a\\n * {@link module:ol/proj/Projection} for the projection  as arguments\\n * and returns a `{string}` representing the tile URL, or undefined if no tile\\n * should be requested for the passed tile coordinate.\\n *\\n * @typedef {function(import(\\\"./tilecoord.js\\\").TileCoord, number,\\n *           import(\\\"./proj/Projection.js\\\").default): (string|undefined)} UrlFunction\\n * @api\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {number} [transition=250] A duration for tile opacity\\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\\n * @api\\n */\\n/**\\n * @classdesc\\n * Base class for tiles.\\n *\\n * @abstract\\n */\\nvar Tile = /** @class */ (function (_super) {\\n    __extends(Tile, _super);\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {TileState} state State.\\n     * @param {Options=} opt_options Tile options.\\n     */\\n    function Tile(tileCoord, state, opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @type {import(\\\"./tilecoord.js\\\").TileCoord}\\n         */\\n        _this.tileCoord = tileCoord;\\n        /**\\n         * @protected\\n         * @type {TileState}\\n         */\\n        _this.state = state;\\n        /**\\n         * An \\\"interim\\\" tile for this tile. The interim tile may be used while this\\n         * one is loading, for \\\"smooth\\\" transitions when changing params/dimensions\\n         * on the source.\\n         * @type {Tile}\\n         */\\n        _this.interimTile = null;\\n        /**\\n         * The tile is available at the highest possible resolution. Subclasses can\\n         * set this to `false` initially. Tile load listeners will not be\\n         * unregistered before this is set to `true` and a `#changed()` is called.\\n         * @type {boolean}\\n         */\\n        _this.hifi = true;\\n        /**\\n         * A key assigned to the tile. This is used by the tile source to determine\\n         * if this tile can effectively be used, or if a new tile should be created\\n         * and this one be used as an interim tile for this new tile.\\n         * @type {string}\\n         */\\n        _this.key = '';\\n        /**\\n         * The duration for the opacity transition.\\n         * @type {number}\\n         */\\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\\n        /**\\n         * Lookup of start times for rendering transitions.  If the start time is\\n         * equal to -1, the transition is complete.\\n         * @type {Object<string, number>}\\n         */\\n        _this.transitionStarts_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @protected\\n     */\\n    Tile.prototype.changed = function () {\\n        this.dispatchEvent(EventType.CHANGE);\\n    };\\n    /**\\n     * @return {string} Key.\\n     */\\n    Tile.prototype.getKey = function () {\\n        return this.key + '/' + this.tileCoord;\\n    };\\n    /**\\n     * Get the interim tile most suitable for rendering using the chain of interim\\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\\n     * such tile exists, the original tile is returned.\\n     * @return {!Tile} Best tile for rendering.\\n     */\\n    Tile.prototype.getInterimTile = function () {\\n        if (!this.interimTile) {\\n            //empty chain\\n            return this;\\n        }\\n        var tile = this.interimTile;\\n        // find the first loaded tile and return it. Since the chain is sorted in\\n        // decreasing order of creation time, there is no need to search the remainder\\n        // of the list (all those tiles correspond to older requests and will be\\n        // cleaned up by refreshInterimChain)\\n        do {\\n            if (tile.getState() == TileState.LOADED) {\\n                // Show tile immediately instead of fading it in after loading, because\\n                // the interim tile is in place already\\n                this.transition_ = 0;\\n                return tile;\\n            }\\n            tile = tile.interimTile;\\n        } while (tile);\\n        // we can not find a better tile\\n        return this;\\n    };\\n    /**\\n     * Goes through the chain of interim tiles and discards sections of the chain\\n     * that are no longer relevant.\\n     */\\n    Tile.prototype.refreshInterimChain = function () {\\n        if (!this.interimTile) {\\n            return;\\n        }\\n        var tile = this.interimTile;\\n        var prev = /** @type {Tile} */ (this);\\n        do {\\n            if (tile.getState() == TileState.LOADED) {\\n                //we have a loaded tile, we can discard the rest of the list\\n                //we would could abort any LOADING tile request\\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\\n                tile.interimTile = null;\\n                break;\\n            }\\n            else if (tile.getState() == TileState.LOADING) {\\n                //keep this LOADING tile any loaded tiles later in the chain are\\n                //older than this tile, so we're still interested in the request\\n                prev = tile;\\n            }\\n            else if (tile.getState() == TileState.IDLE) {\\n                //the head of the list is the most current tile, we don't need\\n                //to start any other requests for this chain\\n                prev.interimTile = tile.interimTile;\\n            }\\n            else {\\n                prev = tile;\\n            }\\n            tile = prev.interimTile;\\n        } while (tile);\\n    };\\n    /**\\n     * Get the tile coordinate for this tile.\\n     * @return {import(\\\"./tilecoord.js\\\").TileCoord} The tile coordinate.\\n     * @api\\n     */\\n    Tile.prototype.getTileCoord = function () {\\n        return this.tileCoord;\\n    };\\n    /**\\n     * @return {TileState} State.\\n     */\\n    Tile.prototype.getState = function () {\\n        return this.state;\\n    };\\n    /**\\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\\n     * the tile queue and will block other requests.\\n     * @param {TileState} state State.\\n     * @api\\n     */\\n    Tile.prototype.setState = function (state) {\\n        this.state = state;\\n        this.changed();\\n    };\\n    /**\\n     * Load the image or retry if loading previously failed.\\n     * Loading is taken care of by the tile queue, and calling this method is\\n     * only needed for preloading or for reloading in case of an error.\\n     * @abstract\\n     * @api\\n     */\\n    Tile.prototype.load = function () {\\n        abstract();\\n    };\\n    /**\\n     * Get the alpha value for rendering.\\n     * @param {string} id An id for the renderer.\\n     * @param {number} time The render frame time.\\n     * @return {number} A number between 0 and 1.\\n     */\\n    Tile.prototype.getAlpha = function (id, time) {\\n        if (!this.transition_) {\\n            return 1;\\n        }\\n        var start = this.transitionStarts_[id];\\n        if (!start) {\\n            start = time;\\n            this.transitionStarts_[id] = start;\\n        }\\n        else if (start === -1) {\\n            return 1;\\n        }\\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\\n        if (delta >= this.transition_) {\\n            return 1;\\n        }\\n        return easeIn(delta / this.transition_);\\n    };\\n    /**\\n     * Determine if a tile is in an alpha transition.  A tile is considered in\\n     * transition if tile.getAlpha() has not yet been called or has been called\\n     * and returned 1.\\n     * @param {string} id An id for the renderer.\\n     * @return {boolean} The tile is in transition.\\n     */\\n    Tile.prototype.inTransition = function (id) {\\n        if (!this.transition_) {\\n            return false;\\n        }\\n        return this.transitionStarts_[id] !== -1;\\n    };\\n    /**\\n     * Mark a transition as complete.\\n     * @param {string} id An id for the renderer.\\n     */\\n    Tile.prototype.endTransition = function (id) {\\n        if (this.transition_) {\\n            this.transitionStarts_[id] = -1;\\n        }\\n    };\\n    return Tile;\\n}(EventTarget));\\nexport default Tile;\\n//# sourceMappingURL=Tile.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/ImageTile\\n */\\nimport Tile from './Tile.js';\\nimport TileState from './TileState.js';\\nimport { createCanvasContext2D } from './dom.js';\\nimport { listenOnce, unlistenByKey } from './events.js';\\nimport EventType from './events/EventType.js';\\nvar ImageTile = /** @class */ (function (_super) {\\n    __extends(ImageTile, _super);\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {TileState} state State.\\n     * @param {string} src Image source URI.\\n     * @param {?string} crossOrigin Cross origin.\\n     * @param {import(\\\"./Tile.js\\\").LoadFunction} tileLoadFunction Tile load function.\\n     * @param {import(\\\"./Tile.js\\\").Options=} opt_options Tile options.\\n     */\\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\\n        /**\\n         * @private\\n         * @type {?string}\\n         */\\n        _this.crossOrigin_ = crossOrigin;\\n        /**\\n         * Image URI\\n         *\\n         * @private\\n         * @type {string}\\n         */\\n        _this.src_ = src;\\n        /**\\n         * @private\\n         * @type {HTMLImageElement|HTMLCanvasElement}\\n         */\\n        _this.image_ = new Image();\\n        if (crossOrigin !== null) {\\n            _this.image_.crossOrigin = crossOrigin;\\n        }\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"./events.js\\\").EventsKey>}\\n         */\\n        _this.imageListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Tile.js\\\").LoadFunction}\\n         */\\n        _this.tileLoadFunction_ = tileLoadFunction;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    ImageTile.prototype.disposeInternal = function () {\\n        if (this.state == TileState.LOADING) {\\n            this.unlistenImage_();\\n            this.image_ = getBlankImage();\\n        }\\n        if (this.interimTile) {\\n            this.interimTile.dispose();\\n        }\\n        this.state = TileState.ABORT;\\n        this.changed();\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\\n     * @api\\n     */\\n    ImageTile.prototype.getImage = function () {\\n        return this.image_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    ImageTile.prototype.getKey = function () {\\n        return this.src_;\\n    };\\n    /**\\n     * Tracks loading or read errors.\\n     *\\n     * @private\\n     */\\n    ImageTile.prototype.handleImageError_ = function () {\\n        this.state = TileState.ERROR;\\n        this.unlistenImage_();\\n        this.image_ = getBlankImage();\\n        this.changed();\\n    };\\n    /**\\n     * Tracks successful image load.\\n     *\\n     * @private\\n     */\\n    ImageTile.prototype.handleImageLoad_ = function () {\\n        var image = /** @type {HTMLImageElement} */ (this.image_);\\n        if (image.naturalWidth && image.naturalHeight) {\\n            this.state = TileState.LOADED;\\n        }\\n        else {\\n            this.state = TileState.EMPTY;\\n        }\\n        this.unlistenImage_();\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    ImageTile.prototype.load = function () {\\n        if (this.state == TileState.ERROR) {\\n            this.state = TileState.IDLE;\\n            this.image_ = new Image();\\n            if (this.crossOrigin_ !== null) {\\n                this.image_.crossOrigin = this.crossOrigin_;\\n            }\\n        }\\n        if (this.state == TileState.IDLE) {\\n            this.state = TileState.LOADING;\\n            this.changed();\\n            this.imageListenerKeys_ = [\\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\\n            ];\\n            this.tileLoadFunction_(this, this.src_);\\n        }\\n    };\\n    /**\\n     * Discards event handlers which listen for load completion or errors.\\n     *\\n     * @private\\n     */\\n    ImageTile.prototype.unlistenImage_ = function () {\\n        this.imageListenerKeys_.forEach(unlistenByKey);\\n        this.imageListenerKeys_ = null;\\n    };\\n    return ImageTile;\\n}(Tile));\\n/**\\n * Get a 1-pixel blank image.\\n * @return {HTMLCanvasElement} Blank image.\\n */\\nfunction getBlankImage() {\\n    var ctx = createCanvasContext2D(1, 1);\\n    ctx.fillStyle = 'rgba(0,0,0,0)';\\n    ctx.fillRect(0, 0, 1, 1);\\n    return ctx.canvas;\\n}\\nexport default ImageTile;\\n//# sourceMappingURL=ImageTile.js.map\",\"/**\\n * @module ol/tilecoord\\n */\\n/**\\n * An array of three numbers representing the location of a tile in a tile\\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\\n * @typedef {Array<number>} TileCoord\\n * @api\\n */\\n/**\\n * @param {number} z Z.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\\n * @return {TileCoord} Tile coordinate.\\n */\\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\\n    if (opt_tileCoord !== undefined) {\\n        opt_tileCoord[0] = z;\\n        opt_tileCoord[1] = x;\\n        opt_tileCoord[2] = y;\\n        return opt_tileCoord;\\n    }\\n    else {\\n        return [z, x, y];\\n    }\\n}\\n/**\\n * @param {number} z Z.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {string} Key.\\n */\\nexport function getKeyZXY(z, x, y) {\\n    return z + '/' + x + '/' + y;\\n}\\n/**\\n * Get the key for a tile coord.\\n * @param {TileCoord} tileCoord The tile coord.\\n * @return {string} Key.\\n */\\nexport function getKey(tileCoord) {\\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\\n}\\n/**\\n * Get a tile coord given a key.\\n * @param {string} key The tile coord key.\\n * @return {TileCoord} The tile coord.\\n */\\nexport function fromKey(key) {\\n    return key.split('/').map(Number);\\n}\\n/**\\n * @param {TileCoord} tileCoord Tile coord.\\n * @return {number} Hash.\\n */\\nexport function hash(tileCoord) {\\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\\n}\\n/**\\n * @param {TileCoord} tileCoord Tile coordinate.\\n * @param {!import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {boolean} Tile coordinate is within extent and zoom level range.\\n */\\nexport function withinExtentAndZ(tileCoord, tileGrid) {\\n    var z = tileCoord[0];\\n    var x = tileCoord[1];\\n    var y = tileCoord[2];\\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\\n        return false;\\n    }\\n    var extent = tileGrid.getExtent();\\n    var tileRange;\\n    if (!extent) {\\n        tileRange = tileGrid.getFullTileRange(z);\\n    }\\n    else {\\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\\n    }\\n    if (!tileRange) {\\n        return true;\\n    }\\n    else {\\n        return tileRange.containsXY(x, y);\\n    }\\n}\\n//# sourceMappingURL=tilecoord.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/TileCache\\n */\\nimport LRUCache from './structs/LRUCache.js';\\nimport { fromKey, getKey } from './tilecoord.js';\\nvar TileCache = /** @class */ (function (_super) {\\n    __extends(TileCache, _super);\\n    /**\\n     * @param {number=} opt_highWaterMark High water mark.\\n     */\\n    function TileCache(opt_highWaterMark) {\\n        return _super.call(this, opt_highWaterMark) || this;\\n    }\\n    /**\\n     * @param {!Object<string, import(\\\"./TileRange.js\\\").default>} usedTiles Used tiles.\\n     */\\n    TileCache.prototype.expireCache = function (usedTiles) {\\n        while (this.canExpireCache()) {\\n            var tile = this.peekLast();\\n            if (tile.getKey() in usedTiles) {\\n                break;\\n            }\\n            else {\\n                this.pop().dispose();\\n            }\\n        }\\n    };\\n    /**\\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\\n     */\\n    TileCache.prototype.pruneExceptNewestZ = function () {\\n        if (this.getCount() === 0) {\\n            return;\\n        }\\n        var key = this.peekFirstKey();\\n        var tileCoord = fromKey(key);\\n        var z = tileCoord[0];\\n        this.forEach(function (tile) {\\n            if (tile.tileCoord[0] !== z) {\\n                this.remove(getKey(tile.tileCoord));\\n                tile.dispose();\\n            }\\n        }.bind(this));\\n    };\\n    return TileCache;\\n}(LRUCache));\\nexport default TileCache;\\n//# sourceMappingURL=TileCache.js.map\",\"/**\\n * @module ol/reproj\\n */\\nimport { createCanvasContext2D } from './dom.js';\\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\\nimport { solveLinearSystem } from './math.js';\\nimport { getPointResolution, transform } from './proj.js';\\n/**\\n * Calculates ideal resolution to use from the source in order to achieve\\n * pixel mapping as close as possible to 1:1 during reprojection.\\n * The resolution is calculated regardless of what resolutions\\n * are actually available in the dataset (TileGrid, Image, ...).\\n *\\n * @param {import(\\\"./proj/Projection.js\\\").default} sourceProj Source projection.\\n * @param {import(\\\"./proj/Projection.js\\\").default} targetProj Target projection.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} targetCenter Target center.\\n * @param {number} targetResolution Target resolution.\\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\\n */\\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\\n    // calculate the ideal resolution of the source data\\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\\n    if (targetMetersPerUnit !== undefined) {\\n        sourceResolution *= targetMetersPerUnit;\\n    }\\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\\n    if (sourceMetersPerUnit !== undefined) {\\n        sourceResolution /= sourceMetersPerUnit;\\n    }\\n    // Based on the projection properties, the point resolution at the specified\\n    // coordinates may be slightly different. We need to reverse-compensate this\\n    // in order to achieve optimal results.\\n    var sourceExtent = sourceProj.getExtent();\\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\\n            sourceResolution;\\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\\n            sourceResolution /= compensationFactor;\\n        }\\n    }\\n    return sourceResolution;\\n}\\n/**\\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\\n * in order to mask gaps caused by antialiasing.\\n *\\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\\n * @param {number} x X coordinate of the point (in pixels).\\n * @param {number} y Y coordinate of the point (in pixels).\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} New point 1 px farther from the centroid.\\n */\\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\\n    var dX = x - centroidX;\\n    var dY = y - centroidY;\\n    var distance = Math.sqrt(dX * dX + dY * dY);\\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\\n}\\n/**\\n * Renders the source data into new canvas based on the triangulation.\\n *\\n * @param {number} width Width of the canvas.\\n * @param {number} height Height of the canvas.\\n * @param {number} pixelRatio Pixel ratio.\\n * @param {number} sourceResolution Source resolution.\\n * @param {import(\\\"./extent.js\\\").Extent} sourceExtent Extent of the data source.\\n * @param {number} targetResolution Target resolution.\\n * @param {import(\\\"./extent.js\\\").Extent} targetExtent Target extent.\\n * @param {import(\\\"./reproj/Triangulation.js\\\").default} triangulation\\n * Calculated triangulation.\\n * @param {Array<{extent: import(\\\"./extent.js\\\").Extent,\\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\\n * Array of sources.\\n * @param {number} gutter Gutter of the sources.\\n * @param {boolean=} opt_renderEdges Render reprojection edges.\\n * @return {HTMLCanvasElement} Canvas with reprojected data.\\n */\\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\\n    if (sources.length === 0) {\\n        return context.canvas;\\n    }\\n    context.scale(pixelRatio, pixelRatio);\\n    var sourceDataExtent = createEmpty();\\n    sources.forEach(function (src, i, arr) {\\n        extend(sourceDataExtent, src.extent);\\n    });\\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\\n    var stitchScale = pixelRatio / sourceResolution;\\n    sources.forEach(function (src, i, arr) {\\n        var xPos = src.extent[0] - sourceDataExtent[0];\\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\\n        var srcWidth = getWidth(src.extent);\\n        var srcHeight = getHeight(src.extent);\\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\\n    });\\n    var targetTopLeft = getTopLeft(targetExtent);\\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\\n        /* Calculate affine transform (src -> dst)\\n         * Resulting matrix can be used to transform coordinate\\n         * from `sourceProjection` to destination pixels.\\n         *\\n         * To optimize number of context calls and increase numerical stability,\\n         * we also do the following operations:\\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\\n         *\\n         * Src points: xi, yi\\n         * Dst points: ui, vi\\n         * Affine coefficients: aij\\n         *\\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\\n         */\\n        var source = triangle.source;\\n        var target = triangle.target;\\n        var x0 = source[0][0], y0 = source[0][1];\\n        var x1 = source[1][0], y1 = source[1][1];\\n        var x2 = source[2][0], y2 = source[2][1];\\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\\n        // Shift all the source points to improve numerical stability\\n        // of all the subsequent calculations. The [x0, y0] is used here.\\n        // This is also used to simplify the linear system.\\n        var sourceNumericalShiftX = x0;\\n        var sourceNumericalShiftY = y0;\\n        x0 = 0;\\n        y0 = 0;\\n        x1 -= sourceNumericalShiftX;\\n        y1 -= sourceNumericalShiftY;\\n        x2 -= sourceNumericalShiftX;\\n        y2 -= sourceNumericalShiftY;\\n        var augmentedMatrix = [\\n            [x1, y1, 0, 0, u1 - u0],\\n            [x2, y2, 0, 0, u2 - u0],\\n            [0, 0, x1, y1, v1 - v0],\\n            [0, 0, x2, y2, v2 - v0]\\n        ];\\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\\n        if (!affineCoefs) {\\n            return;\\n        }\\n        context.save();\\n        context.beginPath();\\n        var centroidX = (u0 + u1 + u2) / 3;\\n        var centroidY = (v0 + v1 + v2) / 3;\\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\\n        context.moveTo(p1[0], p1[1]);\\n        context.lineTo(p0[0], p0[1]);\\n        context.lineTo(p2[0], p2[1]);\\n        context.clip();\\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\\n        context.drawImage(stitchContext.canvas, 0, 0);\\n        context.restore();\\n    });\\n    if (opt_renderEdges) {\\n        context.save();\\n        context.strokeStyle = 'black';\\n        context.lineWidth = 1;\\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\\n            var target = triangle.target;\\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\\n            context.beginPath();\\n            context.moveTo(u1, v1);\\n            context.lineTo(u0, v0);\\n            context.lineTo(u2, v2);\\n            context.closePath();\\n            context.stroke();\\n        });\\n        context.restore();\\n    }\\n    return context.canvas;\\n}\\n//# sourceMappingURL=reproj.js.map\",\"/**\\n * @module ol/reproj/Triangulation\\n */\\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\\nimport { modulo } from '../math.js';\\nimport { getTransform } from '../proj.js';\\n/**\\n * Single triangle; consists of 3 source points and 3 target points.\\n * @typedef {Object} Triangle\\n * @property {Array<import(\\\"../coordinate.js\\\").Coordinate>} source\\n * @property {Array<import(\\\"../coordinate.js\\\").Coordinate>} target\\n */\\n/**\\n * Maximum number of subdivision steps during raster reprojection triangulation.\\n * Prevents high memory usage and large number of proj4 calls (for certain\\n * transformations and areas). At most `2*(2^this)` triangles are created for\\n * each triangulated extent (tile/image).\\n * @type {number}\\n */\\nvar MAX_SUBDIVISION = 10;\\n/**\\n * Maximum allowed size of triangle relative to world width. When transforming\\n * corners of world extent between certain projections, the resulting\\n * triangulation seems to have zero error and no subdivision is performed. If\\n * the triangle width is more than this (relative to world width; 0-1),\\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\\n * @type {number}\\n */\\nvar MAX_TRIANGLE_WIDTH = 0.25;\\n/**\\n * @classdesc\\n * Class containing triangulation of the given target extent.\\n * Used for determining source data and the reprojection itself.\\n */\\nvar Triangulation = /** @class */ (function () {\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} sourceProj Source projection.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} targetProj Target projection.\\n     * @param {import(\\\"../extent.js\\\").Extent} targetExtent Target extent to triangulate.\\n     * @param {import(\\\"../extent.js\\\").Extent} maxSourceExtent Maximal source extent that can be used.\\n     * @param {number} errorThreshold Acceptable error (in source units).\\n     */\\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\\n        /**\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         * @private\\n         */\\n        this.sourceProj_ = sourceProj;\\n        /**\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         * @private\\n         */\\n        this.targetProj_ = targetProj;\\n        /** @type {!Object<string, import(\\\"../coordinate.js\\\").Coordinate>} */\\n        var transformInvCache = {};\\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\\n        /**\\n         * @param {import(\\\"../coordinate.js\\\").Coordinate} c A coordinate.\\n         * @return {import(\\\"../coordinate.js\\\").Coordinate} Transformed coordinate.\\n         * @private\\n         */\\n        this.transformInv_ = function (c) {\\n            var key = c[0] + '/' + c[1];\\n            if (!transformInvCache[key]) {\\n                transformInvCache[key] = transformInv(c);\\n            }\\n            return transformInvCache[key];\\n        };\\n        /**\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         * @private\\n         */\\n        this.maxSourceExtent_ = maxSourceExtent;\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\\n        /**\\n         * @type {Array<Triangle>}\\n         * @private\\n         */\\n        this.triangles_ = [];\\n        /**\\n         * Indicates that the triangulation crosses edge of the source projection.\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.wrapsXInSource_ = false;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\\n            !!maxSourceExtent &&\\n            !!this.sourceProj_.getExtent() &&\\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\\n        /**\\n         * @type {?number}\\n         * @private\\n         */\\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\\n            getWidth(this.sourceProj_.getExtent()) : null;\\n        /**\\n         * @type {?number}\\n         * @private\\n         */\\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\\n            getWidth(this.targetProj_.getExtent()) : null;\\n        var destinationTopLeft = getTopLeft(targetExtent);\\n        var destinationTopRight = getTopRight(targetExtent);\\n        var destinationBottomRight = getBottomRight(targetExtent);\\n        var destinationBottomLeft = getBottomLeft(targetExtent);\\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\\n        var sourceTopRight = this.transformInv_(destinationTopRight);\\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\\n        if (this.wrapsXInSource_) {\\n            var leftBound_1 = Infinity;\\n            this.triangles_.forEach(function (triangle, i, arr) {\\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\\n            });\\n            // Shift triangles to be as close to `leftBound` as possible\\n            // (if the distance is more than `worldWidth / 2` it can be closer.\\n            this.triangles_.forEach(function (triangle) {\\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\\n                        [triangle.source[1][0], triangle.source[1][1]],\\n                        [triangle.source[2][0], triangle.source[2][1]]];\\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\\n                    }\\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\\n                    }\\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\\n                    }\\n                    // Rarely (if the extent contains both the dateline and prime meridian)\\n                    // the shift can in turn break some triangles.\\n                    // Detect this here and don't shift in such cases.\\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\\n                        triangle.source = newTriangle;\\n                    }\\n                }\\n            }.bind(this));\\n        }\\n        transformInvCache = {};\\n    }\\n    /**\\n     * Adds triangle to the triangulation.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} a The target a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} b The target b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} c The target c coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} aSrc The source a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} bSrc The source b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} cSrc The source c coordinate.\\n     * @private\\n     */\\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\\n        this.triangles_.push({\\n            source: [aSrc, bSrc, cSrc],\\n            target: [a, b, c]\\n        });\\n    };\\n    /**\\n     * Adds quad (points in clock-wise order) to the triangulation\\n     * (and reprojects the vertices) if valid.\\n     * Performs quad subdivision if needed to increase precision.\\n     *\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} a The target a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} b The target b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} c The target c coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} d The target d coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} aSrc The source a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} bSrc The source b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} cSrc The source c coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} dSrc The source d coordinate.\\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\\n     * @private\\n     */\\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\\n        var sourceCoverageX = this.sourceWorldWidth_ ?\\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\\n        // when the quad is wrapped in the source projection\\n        // it covers most of the projection extent, but not fully\\n        var wrapsX = this.sourceProj_.canWrapX() &&\\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\\n        var needsSubdivision = false;\\n        if (maxSubdivision > 0) {\\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\\n                    needsSubdivision;\\n            }\\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\\n                    needsSubdivision;\\n            }\\n        }\\n        if (!needsSubdivision && this.maxSourceExtent_) {\\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\\n                // whole quad outside source projection extent -> ignore\\n                return;\\n            }\\n        }\\n        if (!needsSubdivision) {\\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\\n                if (maxSubdivision > 0) {\\n                    needsSubdivision = true;\\n                }\\n                else {\\n                    return;\\n                }\\n            }\\n        }\\n        if (maxSubdivision > 0) {\\n            if (!needsSubdivision) {\\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\\n                var centerSrc = this.transformInv_(center);\\n                var dx = void 0;\\n                if (wrapsX) {\\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\\n                    dx = centerSrcEstimX -\\n                        modulo(centerSrc[0], sourceWorldWidth);\\n                }\\n                else {\\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\\n                }\\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\\n                var centerSrcErrorSquared = dx * dx + dy * dy;\\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\\n            }\\n            if (needsSubdivision) {\\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\\n                    // split horizontally (top & bottom)\\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\\n                    var bcSrc = this.transformInv_(bc);\\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\\n                    var daSrc = this.transformInv_(da);\\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\\n                }\\n                else {\\n                    // split vertically (left & right)\\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\\n                    var abSrc = this.transformInv_(ab);\\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\\n                    var cdSrc = this.transformInv_(cd);\\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\\n                }\\n                return;\\n            }\\n        }\\n        if (wrapsX) {\\n            if (!this.canWrapXInSource_) {\\n                return;\\n            }\\n            this.wrapsXInSource_ = true;\\n        }\\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\\n    };\\n    /**\\n     * Calculates extent of the 'source' coordinates from all the triangles.\\n     *\\n     * @return {import(\\\"../extent.js\\\").Extent} Calculated extent.\\n     */\\n    Triangulation.prototype.calculateSourceExtent = function () {\\n        var extent = createEmpty();\\n        this.triangles_.forEach(function (triangle, i, arr) {\\n            var src = triangle.source;\\n            extendCoordinate(extent, src[0]);\\n            extendCoordinate(extent, src[1]);\\n            extendCoordinate(extent, src[2]);\\n        });\\n        return extent;\\n    };\\n    /**\\n     * @return {Array<Triangle>} Array of the calculated triangles.\\n     */\\n    Triangulation.prototype.getTriangles = function () {\\n        return this.triangles_;\\n    };\\n    return Triangulation;\\n}());\\nexport default Triangulation;\\n//# sourceMappingURL=Triangulation.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/reproj/Tile\\n */\\nimport { ERROR_THRESHOLD } from './common.js';\\nimport Tile from '../Tile.js';\\nimport TileState from '../TileState.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getArea, getCenter, getIntersection } from '../extent.js';\\nimport { clamp } from '../math.js';\\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\\nimport Triangulation from './Triangulation.js';\\n/**\\n * @typedef {function(number, number, number, number) : import(\\\"../Tile.js\\\").default} FunctionType\\n */\\n/**\\n * @classdesc\\n * Class encapsulating single reprojected tile.\\n * See {@link module:ol/source/TileImage~TileImage}.\\n *\\n */\\nvar ReprojTile = /** @class */ (function (_super) {\\n    __extends(ReprojTile, _super);\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} sourceProj Source projection.\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} sourceTileGrid Source tile grid.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} targetProj Target projection.\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} targetTileGrid Target tile grid.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Coordinate of the tile.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {number} gutter Gutter of the source tiles.\\n     * @param {FunctionType} getTileFunction\\n     *     Function returning source tiles (z, x, y, pixelRatio).\\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\\n     */\\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelRatio_ = pixelRatio;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.gutter_ = gutter;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement}\\n         */\\n        _this.canvas_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        _this.sourceTileGrid_ = sourceTileGrid;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        _this.targetTileGrid_ = targetTileGrid;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilecoord.js\\\").TileCoord}\\n         */\\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\\n        /**\\n         * @private\\n         * @type {!Array<import(\\\"../Tile.js\\\").default>}\\n         */\\n        _this.sourceTiles_ = [];\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.sourcesListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.sourceZ_ = 0;\\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\\n        var limitedTargetExtent = maxTargetExtent ?\\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\\n        if (getArea(limitedTargetExtent) === 0) {\\n            // Tile is completely outside range -> EMPTY\\n            // TODO: is it actually correct that the source even creates the tile ?\\n            _this.state = TileState.EMPTY;\\n            return _this;\\n        }\\n        var sourceProjExtent = sourceProj.getExtent();\\n        if (sourceProjExtent) {\\n            if (!maxSourceExtent) {\\n                maxSourceExtent = sourceProjExtent;\\n            }\\n            else {\\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\\n            }\\n        }\\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\\n        var targetCenter = getCenter(limitedTargetExtent);\\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\\n            // invalid sourceResolution -> EMPTY\\n            // probably edges of the projections when no extent is defined\\n            _this.state = TileState.EMPTY;\\n            return _this;\\n        }\\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\\n            opt_errorThreshold : ERROR_THRESHOLD;\\n        /**\\n         * @private\\n         * @type {!import(\\\"./Triangulation.js\\\").default}\\n         */\\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\\n        if (_this.triangulation_.getTriangles().length === 0) {\\n            // no valid triangles -> EMPTY\\n            _this.state = TileState.EMPTY;\\n            return _this;\\n        }\\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\\n        if (maxSourceExtent) {\\n            if (sourceProj.canWrapX()) {\\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\\n            }\\n            else {\\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\\n            }\\n        }\\n        if (!getArea(sourceExtent)) {\\n            _this.state = TileState.EMPTY;\\n        }\\n        else {\\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\\n                    if (tile) {\\n                        _this.sourceTiles_.push(tile);\\n                    }\\n                }\\n            }\\n            if (_this.sourceTiles_.length === 0) {\\n                _this.state = TileState.EMPTY;\\n            }\\n        }\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    ReprojTile.prototype.disposeInternal = function () {\\n        if (this.state == TileState.LOADING) {\\n            this.unlistenSources_();\\n        }\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Get the HTML Canvas element for this tile.\\n     * @return {HTMLCanvasElement} Canvas.\\n     */\\n    ReprojTile.prototype.getImage = function () {\\n        return this.canvas_;\\n    };\\n    /**\\n     * @private\\n     */\\n    ReprojTile.prototype.reproject_ = function () {\\n        var sources = [];\\n        this.sourceTiles_.forEach(function (tile, i, arr) {\\n            if (tile && tile.getState() == TileState.LOADED) {\\n                sources.push({\\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\\n                    image: tile.getImage()\\n                });\\n            }\\n        }.bind(this));\\n        this.sourceTiles_.length = 0;\\n        if (sources.length === 0) {\\n            this.state = TileState.ERROR;\\n        }\\n        else {\\n            var z = this.wrappedTileCoord_[0];\\n            var size = this.targetTileGrid_.getTileSize(z);\\n            var width = typeof size === 'number' ? size : size[0];\\n            var height = typeof size === 'number' ? size : size[1];\\n            var targetResolution = this.targetTileGrid_.getResolution(z);\\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\\n            this.state = TileState.LOADED;\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    ReprojTile.prototype.load = function () {\\n        if (this.state == TileState.IDLE) {\\n            this.state = TileState.LOADING;\\n            this.changed();\\n            var leftToLoad_1 = 0;\\n            this.sourcesListenerKeys_ = [];\\n            this.sourceTiles_.forEach(function (tile, i, arr) {\\n                var state = tile.getState();\\n                if (state == TileState.IDLE || state == TileState.LOADING) {\\n                    leftToLoad_1++;\\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\\n                        var state = tile.getState();\\n                        if (state == TileState.LOADED ||\\n                            state == TileState.ERROR ||\\n                            state == TileState.EMPTY) {\\n                            unlistenByKey(sourceListenKey_1);\\n                            leftToLoad_1--;\\n                            if (leftToLoad_1 === 0) {\\n                                this.unlistenSources_();\\n                                this.reproject_();\\n                            }\\n                        }\\n                    }, this);\\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\\n                }\\n            }.bind(this));\\n            this.sourceTiles_.forEach(function (tile, i, arr) {\\n                var state = tile.getState();\\n                if (state == TileState.IDLE) {\\n                    tile.load();\\n                }\\n            });\\n            if (leftToLoad_1 === 0) {\\n                setTimeout(this.reproject_.bind(this), 0);\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    ReprojTile.prototype.unlistenSources_ = function () {\\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\\n        this.sourcesListenerKeys_ = null;\\n    };\\n    return ReprojTile;\\n}(Tile));\\nexport default ReprojTile;\\n//# sourceMappingURL=Tile.js.map\",\"/**\\n * @module ol/tileurlfunction\\n */\\nimport { assert } from './asserts.js';\\nimport { modulo } from './math.js';\\nimport { hash as tileCoordHash } from './tilecoord.js';\\n/**\\n * @param {string} template Template.\\n * @param {import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {import(\\\"./Tile.js\\\").UrlFunction} Tile URL function.\\n */\\nexport function createFromTemplate(template, tileGrid) {\\n    var zRegEx = /\\\\{z\\\\}/g;\\n    var xRegEx = /\\\\{x\\\\}/g;\\n    var yRegEx = /\\\\{y\\\\}/g;\\n    var dashYRegEx = /\\\\{-y\\\\}/g;\\n    return (\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile Coordinate.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n     * @return {string|undefined} Tile URL.\\n     */\\n    function (tileCoord, pixelRatio, projection) {\\n        if (!tileCoord) {\\n            return undefined;\\n        }\\n        else {\\n            return template.replace(zRegEx, tileCoord[0].toString())\\n                .replace(xRegEx, tileCoord[1].toString())\\n                .replace(yRegEx, tileCoord[2].toString())\\n                .replace(dashYRegEx, function () {\\n                var z = tileCoord[0];\\n                var range = tileGrid.getFullTileRange(z);\\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\\n                var y = range.getHeight() - tileCoord[2] - 1;\\n                return y.toString();\\n            });\\n        }\\n    });\\n}\\n/**\\n * @param {Array<string>} templates Templates.\\n * @param {import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {import(\\\"./Tile.js\\\").UrlFunction} Tile URL function.\\n */\\nexport function createFromTemplates(templates, tileGrid) {\\n    var len = templates.length;\\n    var tileUrlFunctions = new Array(len);\\n    for (var i = 0; i < len; ++i) {\\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\\n    }\\n    return createFromTileUrlFunctions(tileUrlFunctions);\\n}\\n/**\\n * @param {Array<import(\\\"./Tile.js\\\").UrlFunction>} tileUrlFunctions Tile URL Functions.\\n * @return {import(\\\"./Tile.js\\\").UrlFunction} Tile URL function.\\n */\\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\\n    if (tileUrlFunctions.length === 1) {\\n        return tileUrlFunctions[0];\\n    }\\n    return (\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile Coordinate.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n     * @return {string|undefined} Tile URL.\\n     */\\n    function (tileCoord, pixelRatio, projection) {\\n        if (!tileCoord) {\\n            return undefined;\\n        }\\n        else {\\n            var h = tileCoordHash(tileCoord);\\n            var index = modulo(h, tileUrlFunctions.length);\\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\\n        }\\n    });\\n}\\n/**\\n * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n * @param {number} pixelRatio Pixel ratio.\\n * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n * @return {string|undefined} Tile URL.\\n */\\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\\n    return undefined;\\n}\\n/**\\n * @param {string} url URL.\\n * @return {Array<string>} Array of urls.\\n */\\nexport function expandUrl(url) {\\n    var urls = [];\\n    var match = /\\\\{([a-z])-([a-z])\\\\}/.exec(url);\\n    if (match) {\\n        // char range\\n        var startCharCode = match[1].charCodeAt(0);\\n        var stopCharCode = match[2].charCodeAt(0);\\n        var charCode = void 0;\\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\\n        }\\n        return urls;\\n    }\\n    match = match = /\\\\{(\\\\d+)-(\\\\d+)\\\\}/.exec(url);\\n    if (match) {\\n        // number range\\n        var stop_1 = parseInt(match[2], 10);\\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\\n            urls.push(url.replace(match[0], i.toString()));\\n        }\\n        return urls;\\n    }\\n    urls.push(url);\\n    return urls;\\n}\\n//# sourceMappingURL=tileurlfunction.js.map\",\"/**\\n * @module ol/tilegrid/TileGrid\\n */\\nimport { DEFAULT_TILE_SIZE } from './common.js';\\nimport { assert } from '../asserts.js';\\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\\nimport { isSorted, linearFindNearest } from '../array.js';\\nimport { createOrUpdate, getTopLeft } from '../extent.js';\\nimport { clamp } from '../math.js';\\nimport { toSize } from '../size.js';\\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\\n/**\\n * @private\\n * @type {import(\\\"../tilecoord.js\\\").TileCoord}\\n */\\nvar tmpTileCoord = [0, 0, 0];\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] Extent for the tile grid. No tiles outside this\\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\\n * @property {number} [minZoom=0] Minimum zoom.\\n * @property {import(\\\"../coordinate.js\\\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\\n * specified, `extent` or `origins` must be provided.\\n * @property {Array<import(\\\"../coordinate.js\\\").Coordinate>} [origins] Tile grid origins, i.e. where\\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\\n * `origin` must be provided.\\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\\n * array will have a length of `maxZoom + 1`.\\n * @property {Array<import(\\\"../size.js\\\").Size>} [sizes] Sizes.\\n * @property {number|import(\\\"../size.js\\\").Size} [tileSize] Tile size.\\n * Default is `[256, 256]`.\\n * @property {Array<import(\\\"../size.js\\\").Size>} [tileSizes] Tile sizes. If given, the array length\\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\\n * tile size.\\n */\\n/**\\n * @classdesc\\n * Base class for setting the grid pattern for sources accessing tiled-image\\n * servers.\\n * @api\\n */\\nvar TileGrid = /** @class */ (function () {\\n    /**\\n     * @param {Options} options Tile grid options.\\n     */\\n    function TileGrid(options) {\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\\n        /**\\n         * @private\\n         * @type {!Array<number>}\\n         */\\n        this.resolutions_ = options.resolutions;\\n        assert(isSorted(this.resolutions_, function (a, b) {\\n            return b - a;\\n        }, true), 17); // `resolutions` must be sorted in descending order\\n        // check if we've got a consistent zoom factor and origin\\n        var zoomFactor;\\n        if (!options.origins) {\\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\\n                if (!zoomFactor) {\\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\\n                }\\n                else {\\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\\n                        zoomFactor = undefined;\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.zoomFactor_ = zoomFactor;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        this.maxZoom = this.resolutions_.length - 1;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        this.origin_ = options.origin !== undefined ? options.origin : null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../coordinate.js\\\").Coordinate>}\\n         */\\n        this.origins_ = null;\\n        if (options.origins !== undefined) {\\n            this.origins_ = options.origins;\\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\\n        }\\n        var extent = options.extent;\\n        if (extent !== undefined &&\\n            !this.origin_ && !this.origins_) {\\n            this.origin_ = getTopLeft(extent);\\n        }\\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\\n        /**\\n         * @private\\n         * @type {Array<number|import(\\\"../size.js\\\").Size>}\\n         */\\n        this.tileSizes_ = null;\\n        if (options.tileSizes !== undefined) {\\n            this.tileSizes_ = options.tileSizes;\\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\\n        }\\n        /**\\n         * @private\\n         * @type {number|import(\\\"../size.js\\\").Size}\\n         */\\n        this.tileSize_ = options.tileSize !== undefined ?\\n            options.tileSize :\\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\\n        assert((!this.tileSize_ && this.tileSizes_) ||\\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\\n        /**\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        this.extent_ = extent !== undefined ? extent : null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../TileRange.js\\\").default>}\\n         */\\n        this.fullTileRanges_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        this.tmpSize_ = [0, 0];\\n        if (options.sizes !== undefined) {\\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\\n                return tileRange;\\n            }, this);\\n        }\\n        else if (extent) {\\n            this.calculateTileRanges_(extent);\\n        }\\n    }\\n    /**\\n     * Call a function with each tile coordinate for a given extent and zoom level.\\n     *\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {number} zoom Integer zoom level.\\n     * @param {function(import(\\\"../tilecoord.js\\\").TileCoord): void} callback Function called with each tile coordinate.\\n     * @api\\n     */\\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\\n                callback([zoom, i, j]);\\n            }\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {function(number, import(\\\"../TileRange.js\\\").default): boolean} callback Callback.\\n     * @param {import(\\\"../TileRange.js\\\").default=} opt_tileRange Temporary import(\\\"../TileRange.js\\\").default object.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary import(\\\"../extent.js\\\").Extent object.\\n     * @return {boolean} Callback succeeded.\\n     */\\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\\n        var tileRange, x, y;\\n        var tileCoordExtent = null;\\n        var z = tileCoord[0] - 1;\\n        if (this.zoomFactor_ === 2) {\\n            x = tileCoord[1];\\n            y = tileCoord[2];\\n        }\\n        else {\\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\\n        }\\n        while (z >= this.minZoom) {\\n            if (this.zoomFactor_ === 2) {\\n                x = Math.floor(x / 2);\\n                y = Math.floor(y / 2);\\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\\n            }\\n            else {\\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\\n            }\\n            if (callback(z, tileRange)) {\\n                return true;\\n            }\\n            --z;\\n        }\\n        return false;\\n    };\\n    /**\\n     * Get the extent for this tile grid, if it was configured.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     */\\n    TileGrid.prototype.getExtent = function () {\\n        return this.extent_;\\n    };\\n    /**\\n     * Get the maximum zoom level for the grid.\\n     * @return {number} Max zoom.\\n     * @api\\n     */\\n    TileGrid.prototype.getMaxZoom = function () {\\n        return this.maxZoom;\\n    };\\n    /**\\n     * Get the minimum zoom level for the grid.\\n     * @return {number} Min zoom.\\n     * @api\\n     */\\n    TileGrid.prototype.getMinZoom = function () {\\n        return this.minZoom;\\n    };\\n    /**\\n     * Get the origin for the grid at the given zoom level.\\n     * @param {number} z Integer zoom level.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Origin.\\n     * @api\\n     */\\n    TileGrid.prototype.getOrigin = function (z) {\\n        if (this.origin_) {\\n            return this.origin_;\\n        }\\n        else {\\n            return this.origins_[z];\\n        }\\n    };\\n    /**\\n     * Get the resolution for the given zoom level.\\n     * @param {number} z Integer zoom level.\\n     * @return {number} Resolution.\\n     * @api\\n     */\\n    TileGrid.prototype.getResolution = function (z) {\\n        return this.resolutions_[z];\\n    };\\n    /**\\n     * Get the list of resolutions for the tile grid.\\n     * @return {Array<number>} Resolutions.\\n     * @api\\n     */\\n    TileGrid.prototype.getResolutions = function () {\\n        return this.resolutions_;\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {import(\\\"../TileRange.js\\\").default=} opt_tileRange Temporary import(\\\"../TileRange.js\\\").default object.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary import(\\\"../extent.js\\\").Extent object.\\n     * @return {import(\\\"../TileRange.js\\\").default} Tile range.\\n     */\\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\\n        if (tileCoord[0] < this.maxZoom) {\\n            if (this.zoomFactor_ === 2) {\\n                var minX = tileCoord[1] * 2;\\n                var minY = tileCoord[2] * 2;\\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\\n            }\\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\\n        }\\n        return null;\\n    };\\n    /**\\n     * Get the extent for a tile range.\\n     * @param {number} z Integer zoom level.\\n     * @param {import(\\\"../TileRange.js\\\").default} tileRange Tile range.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary import(\\\"../extent.js\\\").Extent object.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     */\\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\\n        var origin = this.getOrigin(z);\\n        var resolution = this.getResolution(z);\\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n    };\\n    /**\\n     * Get a tile range for the given extent and integer zoom level.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {number} z Integer zoom level.\\n     * @param {import(\\\"../TileRange.js\\\").default=} opt_tileRange Temporary tile range object.\\n     * @return {import(\\\"../TileRange.js\\\").default} Tile range.\\n     */\\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\\n        var tileCoord = tmpTileCoord;\\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\\n        var minX = tileCoord[1];\\n        var minY = tileCoord[2];\\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Tile center.\\n     */\\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\\n        var origin = this.getOrigin(tileCoord[0]);\\n        var resolution = this.getResolution(tileCoord[0]);\\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\\n        return [\\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\\n        ];\\n    };\\n    /**\\n     * Get the extent of a tile coordinate.\\n     *\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary extent object.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\\n        var origin = this.getOrigin(tileCoord[0]);\\n        var resolution = this.getResolution(tileCoord[0]);\\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\\n        var maxX = minX + tileSize[0] * resolution;\\n        var maxY = minY + tileSize[1] * resolution;\\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n    };\\n    /**\\n     * Get the tile coordinate for the given map coordinate and resolution.  This\\n     * method considers that coordinates that intersect tile boundaries should be\\n     * assigned the higher tile coordinate.\\n     *\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Destination import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\\n    };\\n    /**\\n     * Note that this method should not be called for resolutions that correspond\\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @param {number} resolution Resolution (for a non-integer zoom level).\\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\\n     *     intersections go to the higher tile coordinate, let edge intersections\\n     *     go to the lower tile coordinate.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Temporary import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @private\\n     */\\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\\n        var z = this.getZForResolution(resolution);\\n        var scale = resolution / this.getResolution(z);\\n        var origin = this.getOrigin(z);\\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\\n        if (reverseIntersectionPolicy) {\\n            tileCoordX = Math.ceil(tileCoordX) - 1;\\n            tileCoordY = Math.ceil(tileCoordY) - 1;\\n        }\\n        else {\\n            tileCoordX = Math.floor(tileCoordX);\\n            tileCoordY = Math.floor(tileCoordY);\\n        }\\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\\n    };\\n    /**\\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\\n     * they should have separate implementations.  This method is for integer zoom\\n     * levels.  The other method should only be called for resolutions corresponding\\n     * to non-integer zoom levels.\\n     * @param {number} x Map x coordinate.\\n     * @param {number} y Map y coordinate.\\n     * @param {number} z Integer zoom level.\\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\\n     *     intersections go to the higher tile coordinate, let edge intersections\\n     *     go to the lower tile coordinate.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Temporary import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @private\\n     */\\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\\n        var origin = this.getOrigin(z);\\n        var resolution = this.getResolution(z);\\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\\n        var tileCoordX = xFromOrigin / tileSize[0];\\n        var tileCoordY = yFromOrigin / tileSize[1];\\n        if (reverseIntersectionPolicy) {\\n            tileCoordX = Math.ceil(tileCoordX) - 1;\\n            tileCoordY = Math.ceil(tileCoordY) - 1;\\n        }\\n        else {\\n            tileCoordX = Math.floor(tileCoordX);\\n            tileCoordY = Math.floor(tileCoordY);\\n        }\\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\\n    };\\n    /**\\n     * Get a tile coordinate given a map coordinate and zoom level.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {number} z Zoom level.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Destination import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @return {number} Tile resolution.\\n     */\\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\\n        return this.resolutions_[tileCoord[0]];\\n    };\\n    /**\\n     * Get the tile size for a zoom level. The type of the return value matches the\\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\\n     * get an `import(\\\"../size.js\\\").Size`, run the result through `import(\\\"../size.js\\\").Size.toSize()`.\\n     * @param {number} z Z.\\n     * @return {number|import(\\\"../size.js\\\").Size} Tile size.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileSize = function (z) {\\n        if (this.tileSize_) {\\n            return this.tileSize_;\\n        }\\n        else {\\n            return this.tileSizes_[z];\\n        }\\n    };\\n    /**\\n     * @param {number} z Zoom level.\\n     * @return {import(\\\"../TileRange.js\\\").default} Extent tile range for the specified zoom level.\\n     */\\n    TileGrid.prototype.getFullTileRange = function (z) {\\n        if (!this.fullTileRanges_) {\\n            return null;\\n        }\\n        else {\\n            return this.fullTileRanges_[z];\\n        }\\n    };\\n    /**\\n     * @param {number} resolution Resolution.\\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\\n     *     higher resolution will be used. Default is 0.\\n     * @return {number} Z.\\n     * @api\\n     */\\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\\n        return clamp(z, this.minZoom, this.maxZoom);\\n    };\\n    /**\\n     * @param {!import(\\\"../extent.js\\\").Extent} extent Extent for this tile grid.\\n     * @private\\n     */\\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\\n        var length = this.resolutions_.length;\\n        var fullTileRanges = new Array(length);\\n        for (var z = this.minZoom; z < length; ++z) {\\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\\n        }\\n        this.fullTileRanges_ = fullTileRanges;\\n    };\\n    return TileGrid;\\n}());\\nexport default TileGrid;\\n//# sourceMappingURL=TileGrid.js.map\",\"/**\\n * @module ol/tilegrid\\n */\\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\\nimport { toSize } from './size.js';\\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\\nimport Corner from './extent/Corner.js';\\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\\nimport Units from './proj/Units.js';\\nimport TileGrid from './tilegrid/TileGrid.js';\\n/**\\n * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n * @return {!TileGrid} Default tile grid for the\\n * passed projection.\\n */\\nexport function getForProjection(projection) {\\n    var tileGrid = projection.getDefaultTileGrid();\\n    if (!tileGrid) {\\n        tileGrid = createForProjection(projection);\\n        projection.setDefaultTileGrid(tileGrid);\\n    }\\n    return tileGrid;\\n}\\n/**\\n * @param {TileGrid} tileGrid Tile grid.\\n * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n * @return {import(\\\"./tilecoord.js\\\").TileCoord} Tile coordinate.\\n */\\nexport function wrapX(tileGrid, tileCoord, projection) {\\n    var z = tileCoord[0];\\n    var center = tileGrid.getTileCoordCenter(tileCoord);\\n    var projectionExtent = extentFromProjection(projection);\\n    if (!containsCoordinate(projectionExtent, center)) {\\n        var worldWidth = getWidth(projectionExtent);\\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\\n        center[0] += worldWidth * worldsAway;\\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\\n    }\\n    else {\\n        return tileCoord;\\n    }\\n}\\n/**\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number=} opt_maxZoom Maximum zoom level (default is\\n *     DEFAULT_MAX_ZOOM).\\n * @param {number|import(\\\"./size.js\\\").Size=} opt_tileSize Tile size (default uses\\n *     DEFAULT_TILE_SIZE).\\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\\n * @return {!TileGrid} TileGrid instance.\\n */\\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\\n    return new TileGrid({\\n        extent: extent,\\n        origin: getCorner(extent, corner),\\n        resolutions: resolutions,\\n        tileSize: opt_tileSize\\n    });\\n}\\n/**\\n * @typedef {Object} XYZOptions\\n * @property {import(\\\"./extent.js\\\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\\n * @property {number} [minZoom=0] Minimum zoom.\\n * @property {number|import(\\\"./size.js\\\").Size} [tileSize=[256, 256]] Tile size in pixels.\\n */\\n/**\\n * Creates a tile grid with a standard XYZ tiling scheme.\\n * @param {XYZOptions=} opt_options Tile grid options.\\n * @return {!TileGrid} Tile grid instance.\\n * @api\\n */\\nexport function createXYZ(opt_options) {\\n    /** @type {XYZOptions} */\\n    var xyzOptions = opt_options || {};\\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\\n    /** @type {import(\\\"./tilegrid/TileGrid.js\\\").Options} */\\n    var gridOptions = {\\n        extent: extent,\\n        minZoom: xyzOptions.minZoom,\\n        tileSize: xyzOptions.tileSize,\\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\\n    };\\n    return new TileGrid(gridOptions);\\n}\\n/**\\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number=} opt_maxZoom Maximum zoom level (default is\\n *     DEFAULT_MAX_ZOOM).\\n * @param {number|import(\\\"./size.js\\\").Size=} opt_tileSize Tile size (default uses\\n *     DEFAULT_TILE_SIZE).\\n * @return {!Array<number>} Resolutions array.\\n */\\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\\n    var maxZoom = opt_maxZoom !== undefined ?\\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\\n    var height = getHeight(extent);\\n    var width = getWidth(extent);\\n    var tileSize = toSize(opt_tileSize !== undefined ?\\n        opt_tileSize : DEFAULT_TILE_SIZE);\\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\\n    var length = maxZoom + 1;\\n    var resolutions = new Array(length);\\n    for (var z = 0; z < length; ++z) {\\n        resolutions[z] = maxResolution / Math.pow(2, z);\\n    }\\n    return resolutions;\\n}\\n/**\\n * @param {import(\\\"./proj.js\\\").ProjectionLike} projection Projection.\\n * @param {number=} opt_maxZoom Maximum zoom level (default is\\n *     DEFAULT_MAX_ZOOM).\\n * @param {number|import(\\\"./size.js\\\").Size=} opt_tileSize Tile size (default uses\\n *     DEFAULT_TILE_SIZE).\\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\\n * @return {!TileGrid} TileGrid instance.\\n */\\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\\n    var extent = extentFromProjection(projection);\\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\\n}\\n/**\\n * Generate a tile grid extent from a projection.  If the projection has an\\n * extent, it is used.  If not, a global extent is assumed.\\n * @param {import(\\\"./proj.js\\\").ProjectionLike} projection Projection.\\n * @return {import(\\\"./extent.js\\\").Extent} Extent.\\n */\\nexport function extentFromProjection(projection) {\\n    projection = getProjection(projection);\\n    var extent = projection.getExtent();\\n    if (!extent) {\\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\\n        extent = createOrUpdate(-half, -half, half, half);\\n    }\\n    return extent;\\n}\\n//# sourceMappingURL=tilegrid.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/Tile\\n */\\nimport { abstract } from '../util.js';\\nimport TileCache from '../TileCache.js';\\nimport TileState from '../TileState.js';\\nimport Event from '../events/Event.js';\\nimport { equivalent } from '../proj.js';\\nimport { toSize, scale as scaleSize } from '../size.js';\\nimport Source from './Source.js';\\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize]\\n * @property {boolean} [opaque]\\n * @property {number} [tilePixelRatio]\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection]\\n * @property {import(\\\"./State.js\\\").default} [state]\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid]\\n * @property {boolean} [wrapX=true]\\n * @property {number} [transition]\\n * @property {string} [key]\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for sources providing images divided into a tile grid.\\n * @abstract\\n * @api\\n */\\nvar TileSource = /** @class */ (function (_super) {\\n    __extends(TileSource, _super);\\n    /**\\n     * @param {Options} options SourceTile source options.\\n     */\\n    function TileSource(options) {\\n        var _this = _super.call(this, {\\n            attributions: options.attributions,\\n            attributionsCollapsible: options.attributionsCollapsible,\\n            projection: options.projection,\\n            state: options.state,\\n            wrapX: options.wrapX\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\\n            options.tilePixelRatio : 1;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\\n        var cacheSize = options.cacheSize;\\n        if (cacheSize === undefined) {\\n            var tileSize = [256, 256];\\n            var tileGrid = options.tileGrid;\\n            if (tileGrid) {\\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\\n            }\\n            var canUseScreen = 'screen' in self;\\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\\n        }\\n        /**\\n         * @protected\\n         * @type {import(\\\"../TileCache.js\\\").default}\\n         */\\n        _this.tileCache = new TileCache(cacheSize);\\n        /**\\n         * @protected\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.tmpSize = [0, 0];\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.key_ = options.key || '';\\n        /**\\n         * @protected\\n         * @type {import(\\\"../Tile.js\\\").Options}\\n         */\\n        _this.tileOptions = { transition: options.transition };\\n        /**\\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\\n         * by a renderer if the views resolution does not match any resolution of the tile source.\\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\\n         * will be used. If -1, the nearest higher resolution will be used.\\n         * @type {number=}\\n         */\\n        _this.zDirection;\\n        return _this;\\n    }\\n    /**\\n     * @return {boolean} Can expire cache.\\n     */\\n    TileSource.prototype.canExpireCache = function () {\\n        return this.tileCache.canExpireCache();\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @param {!Object<string, import(\\\"../TileRange.js\\\").default>} usedTiles Used tiles.\\n     */\\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\\n        var tileCache = this.getTileCacheForProjection(projection);\\n        if (tileCache) {\\n            tileCache.expireCache(usedTiles);\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @param {number} z Zoom level.\\n     * @param {import(\\\"../TileRange.js\\\").default} tileRange Tile range.\\n     * @param {function(import(\\\"../Tile.js\\\").default):(boolean|void)} callback Called with each\\n     *     loaded tile.  If the callback returns `false`, the tile will not be\\n     *     considered loaded.\\n     * @return {boolean} The tile range is fully covered with loaded tiles.\\n     */\\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\\n        var tileCache = this.getTileCacheForProjection(projection);\\n        if (!tileCache) {\\n            return false;\\n        }\\n        var covered = true;\\n        var tile, tileCoordKey, loaded;\\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\\n                tileCoordKey = getKeyZXY(z, x, y);\\n                loaded = false;\\n                if (tileCache.containsKey(tileCoordKey)) {\\n                    tile = /** @type {!import(\\\"../Tile.js\\\").default} */ (tileCache.get(tileCoordKey));\\n                    loaded = tile.getState() === TileState.LOADED;\\n                    if (loaded) {\\n                        loaded = (callback(tile) !== false);\\n                    }\\n                }\\n                if (!loaded) {\\n                    covered = false;\\n                }\\n            }\\n        }\\n        return covered;\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {number} Gutter.\\n     */\\n    TileSource.prototype.getGutterForProjection = function (projection) {\\n        return 0;\\n    };\\n    /**\\n     * Return the key to be used for all tiles in the source.\\n     * @return {string} The key for all tiles.\\n     * @protected\\n     */\\n    TileSource.prototype.getKey = function () {\\n        return this.key_;\\n    };\\n    /**\\n     * Set the value to be used as the key for all tiles in the source.\\n     * @param {string} key The key for tiles.\\n     * @protected\\n     */\\n    TileSource.prototype.setKey = function (key) {\\n        if (this.key_ !== key) {\\n            this.key_ = key;\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {boolean} Opaque.\\n     */\\n    TileSource.prototype.getOpaque = function (projection) {\\n        return this.opaque_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileSource.prototype.getResolutions = function () {\\n        return this.tileGrid.getResolutions();\\n    };\\n    /**\\n     * @abstract\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {!import(\\\"../Tile.js\\\").default} Tile.\\n     */\\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\\n        return abstract();\\n    };\\n    /**\\n     * Return the tile grid of the tile source.\\n     * @return {import(\\\"../tilegrid/TileGrid.js\\\").default} Tile grid.\\n     * @api\\n     */\\n    TileSource.prototype.getTileGrid = function () {\\n        return this.tileGrid;\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {!import(\\\"../tilegrid/TileGrid.js\\\").default} Tile grid.\\n     */\\n    TileSource.prototype.getTileGridForProjection = function (projection) {\\n        if (!this.tileGrid) {\\n            return getTileGridForProjection(projection);\\n        }\\n        else {\\n            return this.tileGrid;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {import(\\\"../TileCache.js\\\").default} Tile cache.\\n     * @protected\\n     */\\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\\n        var thisProj = this.getProjection();\\n        if (thisProj && !equivalent(thisProj, projection)) {\\n            return null;\\n        }\\n        else {\\n            return this.tileCache;\\n        }\\n    };\\n    /**\\n     * Get the tile pixel ratio for this source. Subclasses may override this\\n     * method, which is meant to return a supported pixel ratio that matches the\\n     * provided `pixelRatio` as close as possible.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {number} Tile pixel ratio.\\n     */\\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\\n        return this.tilePixelRatio_;\\n    };\\n    /**\\n     * @param {number} z Z.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {import(\\\"../size.js\\\").Size} Tile size.\\n     */\\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\\n        var tileGrid = this.getTileGridForProjection(projection);\\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\\n        if (tilePixelRatio == 1) {\\n            return tileSize;\\n        }\\n        else {\\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\\n        }\\n    };\\n    /**\\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\\n     * is outside the resolution and extent range of the tile grid, `null` will be\\n     * returned.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {import(\\\"../proj/Projection.js\\\").default=} opt_projection Projection.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\\n     *     null if no tile URL should be created for the passed `tileCoord`.\\n     */\\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\\n        var projection = opt_projection !== undefined ?\\n            opt_projection : this.getProjection();\\n        var tileGrid = this.getTileGridForProjection(projection);\\n        if (this.getWrapX() && projection.isGlobal()) {\\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\\n        }\\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\\n    };\\n    /**\\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\\n     * @api\\n     */\\n    TileSource.prototype.clear = function () {\\n        this.tileCache.clear();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileSource.prototype.refresh = function () {\\n        this.clear();\\n        _super.prototype.refresh.call(this);\\n    };\\n    /**\\n     * Marks a tile coord as being used, without triggering a load.\\n     * @abstract\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     */\\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\\n    return TileSource;\\n}(Source));\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\\n * type.\\n */\\nvar TileSourceEvent = /** @class */ (function (_super) {\\n    __extends(TileSourceEvent, _super);\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../Tile.js\\\").default} tile The tile.\\n     */\\n    function TileSourceEvent(type, tile) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The tile related to the event.\\n         * @type {import(\\\"../Tile.js\\\").default}\\n         * @api\\n         */\\n        _this.tile = tile;\\n        return _this;\\n    }\\n    return TileSourceEvent;\\n}(Event));\\nexport { TileSourceEvent };\\nexport default TileSource;\\n//# sourceMappingURL=Tile.js.map\",\"/**\\n * @module ol/source/TileEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when a tile starts loading.\\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\\n     * @api\\n     */\\n    TILELOADSTART: 'tileloadstart',\\n    /**\\n     * Triggered when a tile finishes loading, either when its data is loaded,\\n     * or when loading was aborted because the tile is no longer needed.\\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\\n     * @api\\n     */\\n    TILELOADEND: 'tileloadend',\\n    /**\\n     * Triggered if tile loading results in an error.\\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\\n     * @api\\n     */\\n    TILELOADERROR: 'tileloaderror'\\n};\\n//# sourceMappingURL=TileEventType.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/UrlTile\\n */\\nimport { getUid } from '../util.js';\\nimport TileState from '../TileState.js';\\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\\nimport TileSource, { TileSourceEvent } from './Tile.js';\\nimport TileEventType from './TileEventType.js';\\nimport { getKeyZXY } from '../tilecoord.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize]\\n * @property {boolean} [opaque]\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection]\\n * @property {import(\\\"./State.js\\\").default} [state]\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid]\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} tileLoadFunction\\n * @property {number} [tilePixelRatio]\\n * @property {import(\\\"../Tile.js\\\").UrlFunction} [tileUrlFunction]\\n * @property {string} [url]\\n * @property {Array<string>} [urls]\\n * @property {boolean} [wrapX=true]\\n * @property {number} [transition]\\n * @property {string} [key]\\n */\\n/**\\n * @classdesc\\n * Base class for sources providing tiles divided into a tile grid over http.\\n *\\n * @fires import(\\\"./Tile.js\\\").TileSourceEvent\\n */\\nvar UrlTile = /** @class */ (function (_super) {\\n    __extends(UrlTile, _super);\\n    /**\\n     * @param {Options} options Image tile options.\\n     */\\n    function UrlTile(options) {\\n        var _this = _super.call(this, {\\n            attributions: options.attributions,\\n            cacheSize: options.cacheSize,\\n            opaque: options.opaque,\\n            projection: options.projection,\\n            state: options.state,\\n            tileGrid: options.tileGrid,\\n            tilePixelRatio: options.tilePixelRatio,\\n            wrapX: options.wrapX,\\n            transition: options.transition,\\n            key: options.key,\\n            attributionsCollapsible: options.attributionsCollapsible\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../Tile.js\\\").LoadFunction}\\n         */\\n        _this.tileLoadFunction = options.tileLoadFunction;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../Tile.js\\\").UrlFunction}\\n         */\\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\\n        /**\\n         * @protected\\n         * @type {!Array<string>|null}\\n         */\\n        _this.urls = null;\\n        if (options.urls) {\\n            _this.setUrls(options.urls);\\n        }\\n        else if (options.url) {\\n            _this.setUrl(options.url);\\n        }\\n        /**\\n         * @private\\n         * @type {!Object<string, boolean>}\\n         */\\n        _this.tileLoadingKeys_ = {};\\n        return _this;\\n    }\\n    /**\\n     * Return the tile load function of the source.\\n     * @return {import(\\\"../Tile.js\\\").LoadFunction} TileLoadFunction\\n     * @api\\n     */\\n    UrlTile.prototype.getTileLoadFunction = function () {\\n        return this.tileLoadFunction;\\n    };\\n    /**\\n     * Return the tile URL function of the source.\\n     * @return {import(\\\"../Tile.js\\\").UrlFunction} TileUrlFunction\\n     * @api\\n     */\\n    UrlTile.prototype.getTileUrlFunction = function () {\\n        return this.tileUrlFunction;\\n    };\\n    /**\\n     * Return the URLs used for this source.\\n     * When a tileUrlFunction is used instead of url or urls,\\n     * null will be returned.\\n     * @return {!Array<string>|null} URLs.\\n     * @api\\n     */\\n    UrlTile.prototype.getUrls = function () {\\n        return this.urls;\\n    };\\n    /**\\n     * Handle tile change events.\\n     * @param {import(\\\"../events/Event.js\\\").default} event Event.\\n     * @protected\\n     */\\n    UrlTile.prototype.handleTileChange = function (event) {\\n        var tile = /** @type {import(\\\"../Tile.js\\\").default} */ (event.target);\\n        var uid = getUid(tile);\\n        var tileState = tile.getState();\\n        var type;\\n        if (tileState == TileState.LOADING) {\\n            this.tileLoadingKeys_[uid] = true;\\n            type = TileEventType.TILELOADSTART;\\n        }\\n        else if (uid in this.tileLoadingKeys_) {\\n            delete this.tileLoadingKeys_[uid];\\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\\n                    TileEventType.TILELOADEND : undefined;\\n        }\\n        if (type != undefined) {\\n            this.dispatchEvent(new TileSourceEvent(type, tile));\\n        }\\n    };\\n    /**\\n     * Set the tile load function of the source.\\n     * @param {import(\\\"../Tile.js\\\").LoadFunction} tileLoadFunction Tile load function.\\n     * @api\\n     */\\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\\n        this.tileCache.clear();\\n        this.tileLoadFunction = tileLoadFunction;\\n        this.changed();\\n    };\\n    /**\\n     * Set the tile URL function of the source.\\n     * @param {import(\\\"../Tile.js\\\").UrlFunction} tileUrlFunction Tile URL function.\\n     * @param {string=} key Optional new tile key for the source.\\n     * @api\\n     */\\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\\n        this.tileUrlFunction = tileUrlFunction;\\n        this.tileCache.pruneExceptNewestZ();\\n        if (typeof key !== 'undefined') {\\n            this.setKey(key);\\n        }\\n        else {\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * Set the URL to use for requests.\\n     * @param {string} url URL.\\n     * @api\\n     */\\n    UrlTile.prototype.setUrl = function (url) {\\n        var urls = this.urls = expandUrl(url);\\n        this.setUrls(urls);\\n    };\\n    /**\\n     * Set the URLs to use for requests.\\n     * @param {Array<string>} urls URLs.\\n     * @api\\n     */\\n    UrlTile.prototype.setUrls = function (urls) {\\n        this.urls = urls;\\n        var key = urls.join('\\\\n');\\n        if (this.generateTileUrlFunction_) {\\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\\n        }\\n        else {\\n            this.setKey(key);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    UrlTile.prototype.useTile = function (z, x, y) {\\n        var tileCoordKey = getKeyZXY(z, x, y);\\n        if (this.tileCache.containsKey(tileCoordKey)) {\\n            this.tileCache.get(tileCoordKey);\\n        }\\n    };\\n    return UrlTile;\\n}(TileSource));\\nexport default UrlTile;\\n//# sourceMappingURL=UrlTile.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/TileImage\\n */\\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\\nimport { getUid } from '../util.js';\\nimport ImageTile from '../ImageTile.js';\\nimport TileCache from '../TileCache.js';\\nimport TileState from '../TileState.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { equivalent, get as getProjection } from '../proj.js';\\nimport ReprojTile from '../reproj/Tile.js';\\nimport UrlTile from './UrlTile.js';\\nimport { getKey, getKeyZXY } from '../tilecoord.js';\\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\\n * @property {boolean} [opaque=true] Whether the layer is opaque.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection] Projection. Default is the view projection.\\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\\n * Higher values can increase reprojection performance, but decrease precision.\\n * @property {import(\\\"./State.js\\\").default} [state] Source state.\\n * @property {typeof import(\\\"../ImageTile.js\\\").default} [tileClass] Class used to instantiate image tiles.\\n * Default is {@link module:ol/ImageTile~ImageTile}.\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid] Tile grid.\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\\n * ```js\\n * function(imageTile, src) {\\n *   imageTile.getImage().src = src;\\n * };\\n * ```\\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\\n * service advertizes 256px by 256px tiles but actually sends 512px\\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\\n * should be set to `2`.\\n * @property {import(\\\"../Tile.js\\\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\\n * used instead of defining each one separately in the `urls` option.\\n * @property {Array<string>} [urls] An array of URL templates.\\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\\n * request out-of-bounds tiles from the server. When set to `false`, only one\\n * world will be rendered. When set to `true`, tiles will be requested for one\\n * world only, but they will be wrapped horizontally to render multiple worlds.\\n * @property {number} [transition] Duration of the opacity transition for rendering.\\n * To disable the opacity transition, pass `transition: 0`.\\n * @property {string} [key] Optional tile key for proper cache fetching\\n */\\n/**\\n * @classdesc\\n * Base class for sources providing images divided into a tile grid.\\n *\\n * @fires import(\\\"./Tile.js\\\").TileSourceEvent\\n * @api\\n */\\nvar TileImage = /** @class */ (function (_super) {\\n    __extends(TileImage, _super);\\n    /**\\n     * @param {!Options} options Image tile options.\\n     */\\n    function TileImage(options) {\\n        var _this = _super.call(this, {\\n            attributions: options.attributions,\\n            cacheSize: options.cacheSize,\\n            opaque: options.opaque,\\n            projection: options.projection,\\n            state: options.state,\\n            tileGrid: options.tileGrid,\\n            tileLoadFunction: options.tileLoadFunction ?\\n                options.tileLoadFunction : defaultTileLoadFunction,\\n            tilePixelRatio: options.tilePixelRatio,\\n            tileUrlFunction: options.tileUrlFunction,\\n            url: options.url,\\n            urls: options.urls,\\n            wrapX: options.wrapX,\\n            transition: options.transition,\\n            key: options.key,\\n            attributionsCollapsible: options.attributionsCollapsible\\n        }) || this;\\n        /**\\n         * @protected\\n         * @type {?string}\\n         */\\n        _this.crossOrigin =\\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\\n        /**\\n         * @protected\\n         * @type {typeof ImageTile}\\n         */\\n        _this.tileClass = options.tileClass !== undefined ?\\n            options.tileClass : ImageTile;\\n        /**\\n         * @protected\\n         * @type {!Object<string, TileCache>}\\n         */\\n        _this.tileCacheForProjection = {};\\n        /**\\n         * @protected\\n         * @type {!Object<string, import(\\\"../tilegrid/TileGrid.js\\\").default>}\\n         */\\n        _this.tileGridForProjection = {};\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderReprojectionEdges_ = false;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.canExpireCache = function () {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            return _super.prototype.canExpireCache.call(this);\\n        }\\n        if (this.tileCache.canExpireCache()) {\\n            return true;\\n        }\\n        else {\\n            for (var key in this.tileCacheForProjection) {\\n                if (this.tileCacheForProjection[key].canExpireCache()) {\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            _super.prototype.expireCache.call(this, projection, usedTiles);\\n            return;\\n        }\\n        var usedTileCache = this.getTileCacheForProjection(projection);\\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\\n        for (var id in this.tileCacheForProjection) {\\n            var tileCache = this.tileCacheForProjection[id];\\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getGutterForProjection = function (projection) {\\n        if (ENABLE_RASTER_REPROJECTION &&\\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\\n            return 0;\\n        }\\n        else {\\n            return this.getGutter();\\n        }\\n    };\\n    /**\\n     * @return {number} Gutter.\\n     */\\n    TileImage.prototype.getGutter = function () {\\n        return 0;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getOpaque = function (projection) {\\n        if (ENABLE_RASTER_REPROJECTION &&\\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\\n            return false;\\n        }\\n        else {\\n            return _super.prototype.getOpaque.call(this, projection);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getTileGridForProjection = function (projection) {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            return _super.prototype.getTileGridForProjection.call(this, projection);\\n        }\\n        var thisProj = this.getProjection();\\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\\n            return this.tileGrid;\\n        }\\n        else {\\n            var projKey = getUid(projection);\\n            if (!(projKey in this.tileGridForProjection)) {\\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\\n            }\\n            return (\\n            /** @type {!import(\\\"../tilegrid/TileGrid.js\\\").default} */ (this.tileGridForProjection[projKey]));\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\\n        }\\n        var thisProj = this.getProjection();\\n        if (!thisProj || equivalent(thisProj, projection)) {\\n            return this.tileCache;\\n        }\\n        else {\\n            var projKey = getUid(projection);\\n            if (!(projKey in this.tileCacheForProjection)) {\\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\\n            }\\n            return this.tileCacheForProjection[projKey];\\n        }\\n    };\\n    /**\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @param {string} key The key set on the tile.\\n     * @return {!import(\\\"../Tile.js\\\").default} Tile.\\n     * @private\\n     */\\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\\n        var tileCoord = [z, x, y];\\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\\n        var tileUrl = urlTileCoord ?\\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\\n        tile.key = key;\\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\\n        return tile;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\\n        var sourceProjection = /** @type {!import(\\\"../proj/Projection.js\\\").default} */ (this.getProjection());\\n        if (!ENABLE_RASTER_REPROJECTION ||\\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\\n        }\\n        else {\\n            var cache = this.getTileCacheForProjection(projection);\\n            var tileCoord = [z, x, y];\\n            var tile = void 0;\\n            var tileCoordKey = getKey(tileCoord);\\n            if (cache.containsKey(tileCoordKey)) {\\n                tile = /** @type {!import(\\\"../Tile.js\\\").default} */ (cache.get(tileCoordKey));\\n            }\\n            var key = this.getKey();\\n            if (tile && tile.key == key) {\\n                return tile;\\n            }\\n            else {\\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\\n                var targetTileGrid = this.getTileGridForProjection(projection);\\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\\n                newTile.key = key;\\n                if (tile) {\\n                    newTile.interimTile = tile;\\n                    newTile.refreshInterimChain();\\n                    cache.replace(tileCoordKey, newTile);\\n                }\\n                else {\\n                    cache.set(tileCoordKey, newTile);\\n                }\\n                return newTile;\\n            }\\n        }\\n    };\\n    /**\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {!import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {!import(\\\"../Tile.js\\\").default} Tile.\\n     * @protected\\n     */\\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\\n        var tile = null;\\n        var tileCoordKey = getKeyZXY(z, x, y);\\n        var key = this.getKey();\\n        if (!this.tileCache.containsKey(tileCoordKey)) {\\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\\n            this.tileCache.set(tileCoordKey, tile);\\n        }\\n        else {\\n            tile = this.tileCache.get(tileCoordKey);\\n            if (tile.key != key) {\\n                // The source's params changed. If the tile has an interim tile and if we\\n                // can use it then we use it. Otherwise we create a new tile.  In both\\n                // cases we attempt to assign an interim tile to the new tile.\\n                var interimTile = tile;\\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\\n                //make the new tile the head of the list,\\n                if (interimTile.getState() == TileState.IDLE) {\\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\\n                    tile.interimTile = interimTile.interimTile;\\n                }\\n                else {\\n                    tile.interimTile = interimTile;\\n                }\\n                tile.refreshInterimChain();\\n                this.tileCache.replace(tileCoordKey, tile);\\n            }\\n        }\\n        return tile;\\n    };\\n    /**\\n     * Sets whether to render reprojection edges or not (usually for debugging).\\n     * @param {boolean} render Render the edges.\\n     * @api\\n     */\\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\\n        if (!ENABLE_RASTER_REPROJECTION ||\\n            this.renderReprojectionEdges_ == render) {\\n            return;\\n        }\\n        this.renderReprojectionEdges_ = render;\\n        for (var id in this.tileCacheForProjection) {\\n            this.tileCacheForProjection[id].clear();\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Sets the tile grid to use when reprojecting the tiles to the given\\n     * projection instead of the default tile grid for the projection.\\n     *\\n     * This can be useful when the default tile grid cannot be created\\n     * (e.g. projection has no extent defined) or\\n     * for optimization reasons (custom tile size, resolutions, ...).\\n     *\\n     * @param {import(\\\"../proj.js\\\").ProjectionLike} projection Projection.\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} tilegrid Tile grid to use for the projection.\\n     * @api\\n     */\\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\\n        if (ENABLE_RASTER_REPROJECTION) {\\n            var proj = getProjection(projection);\\n            if (proj) {\\n                var projKey = getUid(proj);\\n                if (!(projKey in this.tileGridForProjection)) {\\n                    this.tileGridForProjection[projKey] = tilegrid;\\n                }\\n            }\\n        }\\n    };\\n    return TileImage;\\n}(UrlTile));\\n/**\\n * @param {ImageTile} imageTile Image tile.\\n * @param {string} src Source.\\n */\\nfunction defaultTileLoadFunction(imageTile, src) {\\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\\n}\\nexport default TileImage;\\n//# sourceMappingURL=TileImage.js.map\",\"/**\\n * @module ol/source/XYZ\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport TileImage from './TileImage.js';\\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\\n * @property {boolean} [opaque=true] Whether the layer is opaque.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection='EPSG:3857'] Projection.\\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\\n * Higher values can increase reprojection performance, but decrease precision.\\n * @property {number} [maxZoom=18] Optional max zoom level.\\n * @property {number} [minZoom=0] Optional min zoom level.\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid] Tile grid.\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\\n * ```js\\n * function(imageTile, src) {\\n *   imageTile.getImage().src = src;\\n * };\\n * ```\\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\\n * should be set to `2`.\\n * @property {number|import(\\\"../size.js\\\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\\n * @property {import(\\\"../Tile.js\\\").UrlFunction} [tileUrlFunction] Optional function to get\\n * tile URL given a tile coordinate and the projection.\\n * Required if url or urls are not provided.\\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\\n * may be used instead of defining each one separately in the `urls` option.\\n * @property {Array<string>} [urls] An array of URL templates.\\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\\n * @property {number} [transition] Duration of the opacity transition for rendering.\\n * To disable the opacity transition, pass `transition: 0`.\\n */\\n/**\\n * @classdesc\\n * Layer source for tile data with URLs in a set XYZ format that are\\n * defined in a URL template. By default, this follows the widely-used\\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\\n * using the `{-y}` placeholder in the URL template, so long as the\\n * source does not have a custom tile grid. In this case,\\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\\n * such as:\\n *\\n *  tileUrlFunction: function(coordinate) {\\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\\n *        coordinate[1] + '/' + coordinate[2] + '.png';\\n *    }\\n *\\n * @api\\n */\\nvar XYZ = /** @class */ (function (_super) {\\n    __extends(XYZ, _super);\\n    /**\\n     * @param {Options=} opt_options XYZ options.\\n     */\\n    function XYZ(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        var projection = options.projection !== undefined ?\\n            options.projection : 'EPSG:3857';\\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\\n            createXYZ({\\n                extent: extentFromProjection(projection),\\n                maxZoom: options.maxZoom,\\n                minZoom: options.minZoom,\\n                tileSize: options.tileSize\\n            });\\n        _this = _super.call(this, {\\n            attributions: options.attributions,\\n            cacheSize: options.cacheSize,\\n            crossOrigin: options.crossOrigin,\\n            opaque: options.opaque,\\n            projection: projection,\\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\\n            tileGrid: tileGrid,\\n            tileLoadFunction: options.tileLoadFunction,\\n            tilePixelRatio: options.tilePixelRatio,\\n            tileUrlFunction: options.tileUrlFunction,\\n            url: options.url,\\n            urls: options.urls,\\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\\n            transition: options.transition,\\n            attributionsCollapsible: options.attributionsCollapsible\\n        }) || this;\\n        return _this;\\n    }\\n    return XYZ;\\n}(TileImage));\\nexport default XYZ;\\n//# sourceMappingURL=XYZ.js.map\",\"/**\\n * @module ol/source/OSM\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport XYZ from './XYZ.js';\\n/**\\n * The attribution containing a link to the OpenStreetMap Copyright and License\\n * page.\\n * @const\\n * @type {string}\\n * @api\\n */\\nexport var ATTRIBUTION = '&#169; ' +\\n    '<a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> ' +\\n    'contributors.';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\\n * @property {number} [maxZoom=19] Max zoom.\\n * @property {boolean} [opaque=true] Whether the layer is opaque.\\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\\n * Higher values can increase reprojection performance, but decrease precision.\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\\n * ```js\\n * function(imageTile, src) {\\n *   imageTile.getImage().src = src;\\n * };\\n * ```\\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\\n */\\n/**\\n * @classdesc\\n * Layer source for the OpenStreetMap tile server.\\n * @api\\n */\\nvar OSM = /** @class */ (function (_super) {\\n    __extends(OSM, _super);\\n    /**\\n     * @param {Options=} [opt_options] Open Street Map options.\\n     */\\n    function OSM(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        var attributions;\\n        if (options.attributions !== undefined) {\\n            attributions = options.attributions;\\n        }\\n        else {\\n            attributions = [ATTRIBUTION];\\n        }\\n        var crossOrigin = options.crossOrigin !== undefined ?\\n            options.crossOrigin : 'anonymous';\\n        var url = options.url !== undefined ?\\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\\n        _this = _super.call(this, {\\n            attributions: attributions,\\n            cacheSize: options.cacheSize,\\n            crossOrigin: crossOrigin,\\n            opaque: options.opaque !== undefined ? options.opaque : true,\\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\\n            tileLoadFunction: options.tileLoadFunction,\\n            url: url,\\n            wrapX: options.wrapX,\\n            attributionsCollapsible: false\\n        }) || this;\\n        return _this;\\n    }\\n    return OSM;\\n}(XYZ));\\nexport default OSM;\\n//# sourceMappingURL=OSM.js.map\",\"import 'ol/ol.css';\\nimport Map from 'ol/Map';\\nimport View from 'ol/View';\\nimport TileLayer from 'ol/layer/Tile';\\nimport VectorLayer from 'ol/layer/Vector';\\nimport Vector from 'ol/source/Vector';\\nimport GeoJSON from 'ol/format/GeoJSON';\\nimport Style from 'ol/style/Style';\\nimport Text from 'ol/style/Text';\\nimport Stroke from 'ol/style/Stroke';\\nimport * as olProj from 'ol/proj';\\nimport OSM from 'ol/source/OSM';\\nimport Circle from 'ol/style/Circle';\\nimport Fill from 'ol/style/Fill';\\n\\nconst map = new Map({\\n  target: 'map',\\n  view: new View({\\n    center: olProj.fromLonLat([16.372, 48.209]),\\n    zoom: 14\\n  })\\n});\\n\\nmap.addLayer(new TileLayer({\\n  source: new OSM()\\n}));\\n\\n\\nconst peopleLayer = new VectorLayer({\\n  source: new Vector({\\n    url: 'data/map.geojson',\\n    format: new GeoJSON()\\n  })\\n});\\npeopleLayer.setStyle(function(feature) {\\n  return new Style({\\n    text: new Text({\\n      text: feature.get('name'),\\n      font: 'Bold 8pt Verdana',\\n      stroke: new Stroke({\\n        color: 'white',\\n        width: 3\\n      })\\n    })\\n  });\\n});\\n\\nmap.addLayer(peopleLayer);\\n\\n\\nconst searchResultSource = new Vector();\\nconst searchResultLayer = new VectorLayer({\\n  source: searchResultSource\\n});\\n\\nsearchResultLayer.setStyle(new Style({\\n  image: new Circle({\\n    fill: new Fill({\\n      color: 'rgba(255,255,255,0.4)'\\n    }),\\n    stroke: new Stroke({\\n      color: '#3399CC',\\n      width: 1.25\\n    }),\\n    radius: 15\\n  })\\n}));\\nmap.addLayer(searchResultLayer);\\n\\n// Koordinatensuche\\nconst xhr = new XMLHttpRequest;\\nxhr.open('GET', 'https://photon.komoot.de/api/?q=' + 'Wien Schwedenplatz');\\nxhr.onload = function() {\\n  const json = JSON.parse(xhr.responseText);\\n  const geoJsonReader = new GeoJSON({\\n    featureProjection: 'EPSG:3857'\\n  });\\n  const features = geoJsonReader.readFeatures(json);\\n  console.log(features);\\n  searchResultSource.addFeatures(features);\\n};\\nxhr.send();\"]}","code":"!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=16)}([function(t,e,n){\"use strict\";t.exports=r,t.exports.default=r;var i=n(15);function r(t,e){if(!(this instanceof r))return new r(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function o(t,e,n){if(!n)return e.indexOf(t);for(var i=0;i<e.length;i++)if(n(t,e[i]))return i;return-1}function s(t,e){a(t,0,t.children.length,e,t)}function a(t,e,n,i,r){r||(r=_(null)),r.minX=1/0,r.minY=1/0,r.maxX=-1/0,r.maxY=-1/0;for(var o,s=e;s<n;s++)o=t.children[s],u(r,t.leaf?i(o):o);return r}function u(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function h(t,e){return t.minX-e.minX}function l(t,e){return t.minY-e.minY}function c(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function p(t){return t.maxX-t.minX+(t.maxY-t.minY)}function f(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function d(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function _(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function g(t,e,n,r,o){for(var s,a=[e,n];a.length;)(n=a.pop())-(e=a.pop())<=r||(s=e+Math.ceil((n-e)/r/2)*r,i(t,s,e,n,o),a.push(e,s,s,n))}r.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,n=[],i=this.toBBox;if(!d(t,e))return n;for(var r,o,s,a,u=[];e;){for(r=0,o=e.children.length;r<o;r++)s=e.children[r],d(t,a=e.leaf?i(s):s)&&(e.leaf?n.push(s):f(t,a)?this._all(s,n):u.push(s));e=u.pop()}return n},collides:function(t){var e=this.data,n=this.toBBox;if(!d(t,e))return!1;for(var i,r,o,s,a=[];e;){for(i=0,r=e.children.length;i<r;i++)if(o=e.children[i],d(t,s=e.leaf?n(o):o)){if(e.leaf||f(t,s))return!0;a.push(o)}e=a.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,n=t.length;e<n;e++)this.insert(t[e]);return this}var i=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===i.height)this._splitRoot(this.data,i);else{if(this.data.height<i.height){var r=this.data;this.data=i,i=r}this._insert(i,this.data.height-i.height-1,!0)}else this.data=i;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=_([]),this},remove:function(t,e){if(!t)return this;for(var n,i,r,s,a=this.data,u=this.toBBox(t),h=[],l=[];a||h.length;){if(a||(a=h.pop(),i=h[h.length-1],n=l.pop(),s=!0),a.leaf&&-1!==(r=o(t,a.children,e)))return a.children.splice(r,1),h.push(a),this._condense(h),this;s||a.leaf||!f(a,u)?i?(n++,a=i.children[n],s=!1):a=null:(h.push(a),l.push(n),n=0,i=a,a=a.children[0])}return this},toBBox:function(t){return t},compareMinX:h,compareMinY:l,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var n=[];t;)t.leaf?e.push.apply(e,t.children):n.push.apply(n,t.children),t=n.pop();return e},_build:function(t,e,n,i){var r,o=n-e+1,a=this._maxEntries;if(o<=a)return s(r=_(t.slice(e,n+1)),this.toBBox),r;i||(i=Math.ceil(Math.log(o)/Math.log(a)),a=Math.ceil(o/Math.pow(a,i-1))),(r=_([])).leaf=!1,r.height=i;var u,h,l,c,p=Math.ceil(o/a),f=p*Math.ceil(Math.sqrt(a));for(g(t,e,n,f,this.compareMinX),u=e;u<=n;u+=f)for(g(t,u,l=Math.min(u+f-1,n),p,this.compareMinY),h=u;h<=l;h+=p)c=Math.min(h+p-1,l),r.children.push(this._build(t,h,c,i-1));return s(r,this.toBBox),r},_chooseSubtree:function(t,e,n,i){for(var r,o,s,a,u,h,l,p,f,d;i.push(e),!e.leaf&&i.length-1!==n;){for(l=p=1/0,r=0,o=e.children.length;r<o;r++)u=c(s=e.children[r]),f=t,d=s,(h=(Math.max(d.maxX,f.maxX)-Math.min(d.minX,f.minX))*(Math.max(d.maxY,f.maxY)-Math.min(d.minY,f.minY))-u)<p?(p=h,l=u<l?u:l,a=s):h===p&&u<l&&(l=u,a=s);e=a||e.children[0]}return e},_insert:function(t,e,n){var i=this.toBBox,r=n?t:i(t),o=[],s=this._chooseSubtree(r,this.data,e,o);for(s.children.push(t),u(s,r);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(r,o,e)},_split:function(t,e){var n=t[e],i=n.children.length,r=this._minEntries;this._chooseSplitAxis(n,r,i);var o=this._chooseSplitIndex(n,r,i),a=_(n.children.splice(o,n.children.length-o));a.height=n.height,a.leaf=n.leaf,s(n,this.toBBox),s(a,this.toBBox),e?t[e-1].children.push(a):this._splitRoot(n,a)},_splitRoot:function(t,e){this.data=_([t,e]),this.data.height=t.height+1,this.data.leaf=!1,s(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,n){var i,r,o,s,u,h,l,p,f,d,_,g,y,v;for(h=l=1/0,i=e;i<=n-e;i++)r=a(t,0,i,this.toBBox),o=a(t,i,n,this.toBBox),f=r,d=o,_=void 0,g=void 0,y=void 0,v=void 0,_=Math.max(f.minX,d.minX),g=Math.max(f.minY,d.minY),y=Math.min(f.maxX,d.maxX),v=Math.min(f.maxY,d.maxY),s=Math.max(0,y-_)*Math.max(0,v-g),u=c(r)+c(o),s<h?(h=s,p=i,l=u<l?u:l):s===h&&u<l&&(l=u,p=i);return p},_chooseSplitAxis:function(t,e,n){var i=t.leaf?this.compareMinX:h,r=t.leaf?this.compareMinY:l;this._allDistMargin(t,e,n,i)<this._allDistMargin(t,e,n,r)&&t.children.sort(i)},_allDistMargin:function(t,e,n,i){t.children.sort(i);var r,o,s=this.toBBox,h=a(t,0,e,s),l=a(t,n-e,n,s),c=p(h)+p(l);for(r=e;r<n-e;r++)o=t.children[r],u(h,t.leaf?s(o):o),c+=p(h);for(r=n-e-1;r>=e;r--)o=t.children[r],u(l,t.leaf?s(o):o),c+=p(l);return c},_adjustParentBBoxes:function(t,e,n){for(var i=n;i>=0;i--)u(e[i],t)},_condense:function(t){for(var e,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():s(t[n],this.toBBox)},_initFormat:function(t){var e=[\"return a\",\" - b\",\";\"];this.compareMinX=new Function(\"a\",\"b\",e.join(t[0])),this.compareMinY=new Function(\"a\",\"b\",e.join(t[1])),this.toBBox=new Function(\"a\",\"return {minX: a\"+t[0]+\", minY: a\"+t[1]+\", maxX: a\"+t[2]+\", maxY: a\"+t[3]+\"};\")}}},,,,,,,,,,function(t,e,n){var i=n(11);\"string\"==typeof i&&(i=[[t.i,i,\"\"]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(13)(i,r);i.locals&&(t.exports=i.locals)},function(t,e,n){(t.exports=n(12)(!1)).push([t.i,'.ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \" \";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n',\"\"])},function(t,e,n){\"use strict\";t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||\"\",i=t[3];if(!i)return n;if(e&&\"function\"==typeof btoa){var r=(s=i,\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+\" */\"),o=i.sources.map(function(t){return\"/*# sourceURL=\"+i.sourceRoot+t+\" */\"});return[n].concat(o).concat([r]).join(\"\\n\")}var s;return[n].join(\"\\n\")}(e,t);return e[2]?\"@media \"+e[2]+\"{\"+n+\"}\":n}).join(\"\")},e.i=function(t,n){\"string\"==typeof t&&(t=[[null,t,\"\"]]);for(var i={},r=0;r<this.length;r++){var o=this[r][0];null!=o&&(i[o]=!0)}for(r=0;r<t.length;r++){var s=t[r];null!=s[0]&&i[s[0]]||(n&&!s[2]?s[2]=n:n&&(s[2]=\"(\"+s[2]+\") and (\"+n+\")\"),e.push(s))}},e}},function(t,e,n){var i,r,o={},s=(i=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=i.apply(this,arguments)),r}),a=function(t){var e={};return function(t,n){if(\"function\"==typeof t)return t();if(void 0===e[t]){var i=function(t,e){return e?e.querySelector(t):document.querySelector(t)}.call(this,t,n);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}}(),u=null,h=0,l=[],c=n(14);function p(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=o[i.id];if(r){r.refs++;for(var s=0;s<r.parts.length;s++)r.parts[s](i.parts[s]);for(;s<i.parts.length;s++)r.parts.push(v(i.parts[s],e))}else{var a=[];for(s=0;s<i.parts.length;s++)a.push(v(i.parts[s],e));o[i.id]={id:i.id,refs:1,parts:a}}}}function f(t,e){for(var n=[],i={},r=0;r<t.length;r++){var o=t[r],s=e.base?o[0]+e.base:o[0],a={css:o[1],media:o[2],sourceMap:o[3]};i[s]?i[s].parts.push(a):n.push(i[s]={id:s,parts:[a]})}return n}function d(t,e){var n=a(t.insertInto);if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");var i=l[l.length-1];if(\"top\"===t.insertAt)i?i.nextSibling?n.insertBefore(e,i.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),l.push(e);else if(\"bottom\"===t.insertAt)n.appendChild(e);else{if(\"object\"!=typeof t.insertAt||!t.insertAt.before)throw new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");var r=a(t.insertAt.before,n);n.insertBefore(e,r)}}function _(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=l.indexOf(t);e>=0&&l.splice(e,1)}function g(t){var e=document.createElement(\"style\");if(void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),void 0===t.attrs.nonce){var i=function(){0;return n.nc}();i&&(t.attrs.nonce=i)}return y(e,t.attrs),d(t,e),e}function y(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function v(t,e){var n,i,r,o;if(e.transform&&t.css){if(!(o=\"function\"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=o}if(e.singleton){var s=h++;n=u||(u=g(e)),i=E.bind(null,n,s,!1),r=E.bind(null,n,s,!0)}else t.sourceMap&&\"function\"==typeof URL&&\"function\"==typeof URL.createObjectURL&&\"function\"==typeof URL.revokeObjectURL&&\"function\"==typeof Blob&&\"function\"==typeof btoa?(n=function(t){var e=document.createElement(\"link\");return void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),t.attrs.rel=\"stylesheet\",y(e,t.attrs),d(t,e),e}(e),i=function(t,e,n){var i=n.css,r=n.sourceMap,o=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||o)&&(i=c(i));r&&(i+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+\" */\");var s=new Blob([i],{type:\"text/css\"}),a=t.href;t.href=URL.createObjectURL(s),a&&URL.revokeObjectURL(a)}.bind(null,n,e),r=function(){_(n),n.href&&URL.revokeObjectURL(n.href)}):(n=g(e),i=function(t,e){var n=e.css,i=e.media;i&&t.setAttribute(\"media\",i);if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}.bind(null,n),r=function(){_(n)});return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else r()}}t.exports=function(t,e){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");(e=e||{}).attrs=\"object\"==typeof e.attrs?e.attrs:{},e.singleton||\"boolean\"==typeof e.singleton||(e.singleton=s()),e.insertInto||(e.insertInto=\"head\"),e.insertAt||(e.insertAt=\"bottom\");var n=f(t,e);return p(n,e),function(t){for(var i=[],r=0;r<n.length;r++){var s=n[r];(a=o[s.id]).refs--,i.push(a)}t&&p(f(t,e),e);for(r=0;r<i.length;r++){var a;if(0===(a=i[r]).refs){for(var u=0;u<a.parts.length;u++)a.parts[u]();delete o[a.id]}}}};var m,x=(m=[],function(t,e){return m[t]=e,m.filter(Boolean).join(\"\\n\")});function E(t,e,n,i){var r=n?\"\":i.css;if(t.styleSheet)t.styleSheet.cssText=x(e,r);else{var o=document.createTextNode(r),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(o,s[e]):t.appendChild(o)}}},function(t,e){t.exports=function(t){var e=\"undefined\"!=typeof window&&window.location;if(!e)throw new Error(\"fixUrls requires window.location\");if(!t||\"string\"!=typeof t)return t;var n=e.protocol+\"//\"+e.host,i=n+e.pathname.replace(/\\/[^\\/]*$/,\"/\");return t.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi,function(t,e){var r,o=e.trim().replace(/^\"(.*)\"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(o)?t:(r=0===o.indexOf(\"//\")?o:0===o.indexOf(\"/\")?n+o:i+o.replace(/^\\.\\//,\"\"),\"url(\"+JSON.stringify(r)+\")\")})}},function(t,e,n){t.exports=function(){\"use strict\";function t(t,e,n){var i=t[e];t[e]=t[n],t[n]=i}function e(t,e){return t<e?-1:t>e?1:0}return function(n,i,r,o,s){!function e(n,i,r,o,s){for(;o>r;){if(o-r>600){var a=o-r+1,u=i-r+1,h=Math.log(a),l=.5*Math.exp(2*h/3),c=.5*Math.sqrt(h*l*(a-l)/a)*(u-a/2<0?-1:1),p=Math.max(r,Math.floor(i-u*l/a+c)),f=Math.min(o,Math.floor(i+(a-u)*l/a+c));e(n,i,p,f,s)}var d=n[i],_=r,g=o;for(t(n,r,i),s(n[o],d)>0&&t(n,r,o);_<g;){for(t(n,_,g),_++,g--;s(n[_],d)<0;)_++;for(;s(n[g],d)>0;)g--}0===s(n[r],d)?t(n,r,g):t(n,++g,o),g<=i&&(r=g+1),i<=g&&(o=g-1)}}(n,i,r||0,o||n.length-1,s||e)}}()},function(t,e,n){\"use strict\";n.r(e);n(10);function i(){return function(){throw new Error(\"Unimplemented abstract method.\")}()}var r=0;function o(t){return t.ol_uid||(t.ol_uid=String(++r))}var s,a=\"6.0.0-beta.6\",u=(s=function(t,e){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}s(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),h=function(t){function e(e){var n=this,i=\"Assertion failed. See https://openlayers.org/en/\"+(\"latest\"===a?a:\"v\"+a.split(\"-\")[0])+\"/doc/errors/#\"+e+\" for details.\";return(n=t.call(this,i)||this).code=e,n.name=\"AssertionError\",n.message=i,n}return u(e,t),e}(Error),l={ADD:\"add\",REMOVE:\"remove\"},c=\"propertychange\",p=\"function\"==typeof Object.assign?Object.assign:function(t,e){if(null==t)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(t),i=1,r=arguments.length;i<r;++i){var o=arguments[i];if(null!=o)for(var s in o)o.hasOwnProperty(s)&&(n[s]=o[s])}return n};function f(t){for(var e in t)delete t[e]}var d=\"function\"==typeof Object.values?Object.values:function(t){var e=[];for(var n in t)e.push(t[n]);return e};function _(t){var e;for(e in t)return!1;return!e}function g(t,e,n,i){for(var r,o=0,s=t.length;o<s;++o)if((r=t[o]).listener===e&&r.bindTo===n)return i&&(r.deleteIndex=o),r}function y(t,e){var n=v(t);return n?n[e]:void 0}function v(t,e){var n=t.ol_lm;return!n&&e&&(n=t.ol_lm={}),n}function m(t,e){var n=y(t,e);if(n){for(var i=0,r=n.length;i<r;++i)t.removeEventListener(e,n[i].boundListener),f(n[i]);n.length=0;var o=v(t);o&&(delete o[e],0===Object.keys(o).length&&function(t){delete t.ol_lm}(t))}}function x(t,e,n,i,r){var o=v(t,!0),s=o[e];s||(s=o[e]=[]);var a=g(s,n,i,!1);return a?r||(a.callOnce=!1):(a={bindTo:i,callOnce:!!r,listener:n,target:t,type:e},t.addEventListener(e,function(t){var e=function(e){var n=t.listener,i=t.bindTo||t.target;return t.callOnce&&w(t),n.call(i,e)};return t.boundListener=e,e}(a)),s.push(a)),a}function E(t,e,n,i){return x(t,e,n,i,!0)}function C(t,e,n,i){var r=y(t,e);if(r){var o=g(r,n,i,!0);o&&w(o)}}function w(t){if(t&&t.target){t.target.removeEventListener(t.type,t.boundListener);var e=y(t.target,t.type);if(e){var n=\"deleteIndex\"in t?t.deleteIndex:e.indexOf(t);-1!==n&&e.splice(n,1),0===e.length&&m(t.target,t.type)}f(t)}}var O=function(){function t(){this.disposed_=!1}return t.prototype.dispose=function(){this.disposed_||(this.disposed_=!0,this.disposeInternal())},t.prototype.disposeInternal=function(){},t}();function T(){return!0}function b(){return!1}function R(){}var S=function(){function t(t){this.propagationStopped,this.type=t,this.target=null}return t.prototype.preventDefault=function(){this.propagationStopped=!0},t.prototype.stopPropagation=function(){this.propagationStopped=!0},t}(),I=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),P=function(t){function e(){var e=t.call(this)||this;return e.pendingRemovals_={},e.dispatching_={},e.listeners_={},e}return I(e,t),e.prototype.addEventListener=function(t,e){var n=this.listeners_[t];n||(n=this.listeners_[t]=[]),-1===n.indexOf(e)&&n.push(e)},e.prototype.dispatchEvent=function(t){var e=\"string\"==typeof t?new S(t):t,n=e.type;e.target=this;var i,r=this.listeners_[n];if(r){n in this.dispatching_||(this.dispatching_[n]=0,this.pendingRemovals_[n]=0),++this.dispatching_[n];for(var o=0,s=r.length;o<s;++o)if(!1===r[o].call(this,e)||e.propagationStopped){i=!1;break}if(--this.dispatching_[n],0===this.dispatching_[n]){var a=this.pendingRemovals_[n];for(delete this.pendingRemovals_[n];a--;)this.removeEventListener(n,R);delete this.dispatching_[n]}return i}},e.prototype.disposeInternal=function(){!function(t){var e=v(t);if(e)for(var n in e)m(t,n)}(this)},e.prototype.getListeners=function(t){return this.listeners_[t]},e.prototype.hasListener=function(t){return t?t in this.listeners_:Object.keys(this.listeners_).length>0},e.prototype.removeEventListener=function(t,e){var n=this.listeners_[t];if(n){var i=n.indexOf(e);t in this.pendingRemovals_?(n[i]=R,++this.pendingRemovals_[t]):(n.splice(i,1),0===n.length&&delete this.listeners_[t])}},e}(O),L={CHANGE:\"change\",CLEAR:\"clear\",CONTEXTMENU:\"contextmenu\",CLICK:\"click\",DBLCLICK:\"dblclick\",DRAGENTER:\"dragenter\",DRAGOVER:\"dragover\",DROP:\"drop\",ERROR:\"error\",KEYDOWN:\"keydown\",KEYPRESS:\"keypress\",LOAD:\"load\",MOUSEDOWN:\"mousedown\",MOUSEMOVE:\"mousemove\",MOUSEOUT:\"mouseout\",MOUSEUP:\"mouseup\",MOUSEWHEEL:\"mousewheel\",MSPOINTERDOWN:\"MSPointerDown\",RESIZE:\"resize\",TOUCHSTART:\"touchstart\",TOUCHMOVE:\"touchmove\",TOUCHEND:\"touchend\",WHEEL:\"wheel\"},M=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();var F=function(t){function e(){var e=t.call(this)||this;return e.revision_=0,e}return M(e,t),e.prototype.changed=function(){++this.revision_,this.dispatchEvent(L.CHANGE)},e.prototype.getRevision=function(){return this.revision_},e.prototype.on=function(t,e){if(Array.isArray(t)){for(var n=t.length,i=new Array(n),r=0;r<n;++r)i[r]=x(this,t[r],e);return i}return x(this,t,e)},e.prototype.once=function(t,e){if(Array.isArray(t)){for(var n=t.length,i=new Array(n),r=0;r<n;++r)i[r]=E(this,t[r],e);return i}return E(this,t,e)},e.prototype.un=function(t,e){if(Array.isArray(t))for(var n=0,i=t.length;n<i;++n)C(this,t[n],e);else C(this,t,e)},e}(P),A=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),D=function(t){function e(e,n,i){var r=t.call(this,e)||this;return r.key=n,r.oldValue=i,r}return A(e,t),e}(S),k=function(t){function e(e){var n=t.call(this)||this;return o(n),n.values_={},void 0!==e&&n.setProperties(e),n}return A(e,t),e.prototype.get=function(t){var e;return this.values_.hasOwnProperty(t)&&(e=this.values_[t]),e},e.prototype.getKeys=function(){return Object.keys(this.values_)},e.prototype.getProperties=function(){return p({},this.values_)},e.prototype.notify=function(t,e){var n;n=N(t),this.dispatchEvent(new D(n,t,e)),n=c,this.dispatchEvent(new D(n,t,e))},e.prototype.set=function(t,e,n){if(n)this.values_[t]=e;else{var i=this.values_[t];this.values_[t]=e,i!==e&&this.notify(t,i)}},e.prototype.setProperties=function(t,e){for(var n in t)this.set(n,t[n],e)},e.prototype.unset=function(t,e){if(t in this.values_){var n=this.values_[t];delete this.values_[t],e||this.notify(t,n)}},e}(F),G={};function N(t){return G.hasOwnProperty(t)?G[t]:G[t]=\"change:\"+t}var j=k,Y=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),X=\"length\",z=function(t){function e(e,n,i){var r=t.call(this,e)||this;return r.element=n,r.index=i,r}return Y(e,t),e}(S),K=function(t){function e(e,n){var i=t.call(this)||this,r=n||{};if(i.unique_=!!r.unique,i.array_=e||[],i.unique_)for(var o=0,s=i.array_.length;o<s;++o)i.assertUnique_(i.array_[o],o);return i.updateLength_(),i}return Y(e,t),e.prototype.clear=function(){for(;this.getLength()>0;)this.pop()},e.prototype.extend=function(t){for(var e=0,n=t.length;e<n;++e)this.push(t[e]);return this},e.prototype.forEach=function(t){for(var e=this.array_,n=0,i=e.length;n<i;++n)t(e[n],n,e)},e.prototype.getArray=function(){return this.array_},e.prototype.item=function(t){return this.array_[t]},e.prototype.getLength=function(){return this.get(X)},e.prototype.insertAt=function(t,e){this.unique_&&this.assertUnique_(e),this.array_.splice(t,0,e),this.updateLength_(),this.dispatchEvent(new z(l.ADD,e,t))},e.prototype.pop=function(){return this.removeAt(this.getLength()-1)},e.prototype.push=function(t){this.unique_&&this.assertUnique_(t);var e=this.getLength();return this.insertAt(e,t),this.getLength()},e.prototype.remove=function(t){for(var e=this.array_,n=0,i=e.length;n<i;++n)if(e[n]===t)return this.removeAt(n)},e.prototype.removeAt=function(t){var e=this.array_[t];return this.array_.splice(t,1),this.updateLength_(),this.dispatchEvent(new z(l.REMOVE,e,t)),e},e.prototype.setAt=function(t,e){var n=this.getLength();if(t<n){this.unique_&&this.assertUnique_(e,t);var i=this.array_[t];this.array_[t]=e,this.dispatchEvent(new z(l.REMOVE,i,t)),this.dispatchEvent(new z(l.ADD,e,t))}else{for(var r=n;r<t;++r)this.insertAt(r,void 0);this.insertAt(t,e)}},e.prototype.updateLength_=function(){this.set(X,this.array_.length)},e.prototype.assertUnique_=function(t,e){for(var n=0,i=this.array_.length;n<i;++n)if(this.array_[n]===t&&n!==e)throw new h(58)},e}(j),W=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),U=function(t){function e(e,n,i){var r=t.call(this,e)||this;return r.map=n,r.frameState=void 0!==i?i:null,r}return W(e,t),e}(S),B=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Z=function(t){function e(e,n,i,r,o){var s=t.call(this,e,n,o)||this;return s.originalEvent=i,s.pixel=n.getEventPixel(i),s.coordinate=n.getCoordinateFromPixel(s.pixel),s.dragging=void 0!==r&&r,s}return B(e,t),e.prototype.preventDefault=function(){t.prototype.preventDefault.call(this),this.originalEvent.preventDefault()},e.prototype.stopPropagation=function(){t.prototype.stopPropagation.call(this),this.originalEvent.stopPropagation()},e}(U),V=\"undefined\"!=typeof navigator?navigator.userAgent.toLowerCase():\"\",H=-1!==V.indexOf(\"firefox\"),q=-1!==V.indexOf(\"safari\")&&-1==V.indexOf(\"chrom\"),J=-1!==V.indexOf(\"webkit\")&&-1==V.indexOf(\"edge\"),Q=-1!==V.indexOf(\"macintosh\"),$=window.devicePixelRatio||1,tt=(navigator,\"ontouchstart\"in window),et=\"PointerEvent\"in window,nt=!!navigator.msPointerEnabled,it={SINGLECLICK:\"singleclick\",CLICK:L.CLICK,DBLCLICK:L.DBLCLICK,POINTERDRAG:\"pointerdrag\",POINTERMOVE:\"pointermove\",POINTERDOWN:\"pointerdown\",POINTERUP:\"pointerup\",POINTEROVER:\"pointerover\",POINTEROUT:\"pointerout\",POINTERENTER:\"pointerenter\",POINTERLEAVE:\"pointerleave\",POINTERCANCEL:\"pointercancel\"},rt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ot=function(t){function e(e,n,i,r,o){var s=t.call(this,e,n,i.originalEvent,r,o)||this;return s.pointerEvent=i,s}return rt(e,t),e}(Z),st={POINTERMOVE:\"pointermove\",POINTERDOWN:\"pointerdown\",POINTERUP:\"pointerup\",POINTEROVER:\"pointerover\",POINTEROUT:\"pointerout\",POINTERENTER:\"pointerenter\",POINTERLEAVE:\"pointerleave\",POINTERCANCEL:\"pointercancel\"},at=function(){function t(t,e){this.dispatcher=t,this.mapping_=e}return t.prototype.getEvents=function(){return Object.keys(this.mapping_)},t.prototype.getHandlerForEvent=function(t){return this.mapping_[t]},t}(),ut=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ht=1,lt=\"mouse\";function ct(t){if(!this.isEventSimulatedFromTouch_(t)){ht.toString()in this.pointerMap&&this.cancel(t);var e=gt(t,this.dispatcher);this.pointerMap[ht.toString()]=t,this.dispatcher.down(e,t)}}function pt(t){if(!this.isEventSimulatedFromTouch_(t)){var e=gt(t,this.dispatcher);this.dispatcher.move(e,t)}}function ft(t){if(!this.isEventSimulatedFromTouch_(t)){var e=this.pointerMap[ht.toString()];if(e&&e.button===t.button){var n=gt(t,this.dispatcher);this.dispatcher.up(n,t),this.cleanupMouse()}}}function dt(t){if(!this.isEventSimulatedFromTouch_(t)){var e=gt(t,this.dispatcher);this.dispatcher.enterOver(e,t)}}function _t(t){if(!this.isEventSimulatedFromTouch_(t)){var e=gt(t,this.dispatcher);this.dispatcher.leaveOut(e,t)}}function gt(t,e){var n=e.cloneEvent(t,t),i=n.preventDefault;return n.preventDefault=function(){t.preventDefault(),i()},n.pointerId=ht,n.isPrimary=!0,n.pointerType=lt,n}var yt=function(t){function e(e){var n=this,i={mousedown:ct,mousemove:pt,mouseup:ft,mouseover:dt,mouseout:_t};return(n=t.call(this,e,i)||this).pointerMap=e.pointerMap,n.lastTouches=[],n}return ut(e,t),e.prototype.isEventSimulatedFromTouch_=function(t){for(var e=this.lastTouches,n=t.clientX,i=t.clientY,r=0,o=e.length,s=void 0;r<o&&(s=e[r]);r++){var a=Math.abs(n-s[0]),u=Math.abs(i-s[1]);if(a<=25&&u<=25)return!0}return!1},e.prototype.cancel=function(t){var e=gt(t,this.dispatcher);this.dispatcher.cancel(e,t),this.cleanupMouse()},e.prototype.cleanupMouse=function(){delete this.pointerMap[ht.toString()]},e}(at),vt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),mt=[\"\",\"unavailable\",\"touch\",\"pen\",\"mouse\"];function xt(t){this.pointerMap[t.pointerId.toString()]=t;var e=this.prepareEvent_(t);this.dispatcher.down(e,t)}function Et(t){var e=this.prepareEvent_(t);this.dispatcher.move(e,t)}function Ct(t){var e=this.prepareEvent_(t);this.dispatcher.up(e,t),this.cleanup(t.pointerId)}function wt(t){var e=this.prepareEvent_(t);this.dispatcher.leaveOut(e,t)}function Ot(t){var e=this.prepareEvent_(t);this.dispatcher.enterOver(e,t)}function Tt(t){var e=this.prepareEvent_(t);this.dispatcher.cancel(e,t),this.cleanup(t.pointerId)}function bt(t){var e=this.dispatcher.makeEvent(\"lostpointercapture\",t,t);this.dispatcher.dispatchEvent(e)}function Rt(t){var e=this.dispatcher.makeEvent(\"gotpointercapture\",t,t);this.dispatcher.dispatchEvent(e)}var St=function(t){function e(e){var n=this,i={MSPointerDown:xt,MSPointerMove:Et,MSPointerUp:Ct,MSPointerOut:wt,MSPointerOver:Ot,MSPointerCancel:Tt,MSGotPointerCapture:Rt,MSLostPointerCapture:bt};return(n=t.call(this,e,i)||this).pointerMap=e.pointerMap,n}return vt(e,t),e.prototype.prepareEvent_=function(t){var e=t;return\"number\"==typeof t.pointerType&&((e=this.dispatcher.cloneEvent(t,t)).pointerType=mt[t.pointerType]),e},e.prototype.cleanup=function(t){delete this.pointerMap[t.toString()]},e}(at),It=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Pt(t){this.dispatcher.fireNativeEvent(t)}function Lt(t){this.dispatcher.fireNativeEvent(t)}function Mt(t){this.dispatcher.fireNativeEvent(t)}function Ft(t){this.dispatcher.fireNativeEvent(t)}function At(t){this.dispatcher.fireNativeEvent(t)}function Dt(t){this.dispatcher.fireNativeEvent(t)}function kt(t){this.dispatcher.fireNativeEvent(t)}function Gt(t){this.dispatcher.fireNativeEvent(t)}var Nt=function(t){function e(e){var n={pointerdown:Pt,pointermove:Lt,pointerup:Mt,pointerout:Ft,pointerover:At,pointercancel:Dt,gotpointercapture:Gt,lostpointercapture:kt};return t.call(this,e,n)||this}return It(e,t),e}(at),jt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Yt=!1,Xt=function(t){function e(e,n,i){var r=t.call(this,e)||this;r.originalEvent=n;var o=i||{};return r.buttons=function(t){var e;if(t.buttons||Yt)e=t.buttons;else switch(t.which){case 1:e=1;break;case 2:e=4;break;case 3:e=2;break;default:e=0}return e}(o),r.pressure=function(t,e){var n=0;n=t.pressure?t.pressure:e?.5:0;return n}(o,r.buttons),r.bubbles=\"bubbles\"in o&&o.bubbles,r.cancelable=\"cancelable\"in o&&o.cancelable,r.view=\"view\"in o?o.view:null,r.detail=\"detail\"in o?o.detail:null,r.screenX=\"screenX\"in o?o.screenX:0,r.screenY=\"screenY\"in o?o.screenY:0,r.clientX=\"clientX\"in o?o.clientX:0,r.clientY=\"clientY\"in o?o.clientY:0,r.ctrlKey=\"ctrlKey\"in o&&o.ctrlKey,r.altKey=\"altKey\"in o&&o.altKey,r.shiftKey=\"shiftKey\"in o&&o.shiftKey,r.metaKey=\"metaKey\"in o&&o.metaKey,r.button=\"button\"in o?o.button:0,r.relatedTarget=\"relatedTarget\"in o?o.relatedTarget:null,r.pointerId=\"pointerId\"in o?o.pointerId:0,r.width=\"width\"in o?o.width:0,r.height=\"height\"in o?o.height:0,r.tiltX=\"tiltX\"in o?o.tiltX:0,r.tiltY=\"tiltY\"in o?o.tiltY:0,r.pointerType=\"pointerType\"in o?o.pointerType:\"\",r.hwTimestamp=\"hwTimestamp\"in o?o.hwTimestamp:0,r.isPrimary=\"isPrimary\"in o&&o.isPrimary,n.preventDefault&&(r.preventDefault=function(){n.preventDefault()}),r}return jt(e,t),e}(S);!function(){try{var t=new MouseEvent(\"click\",{buttons:1});Yt=1===t.buttons}catch(t){}}();var zt=Xt;function Kt(t,e){return t>e?1:t<e?-1:0}function Wt(t,e,n){var i=t.length;if(t[0]<=e)return 0;if(e<=t[i-1])return i-1;var r=void 0;if(n>0){for(r=1;r<i;++r)if(t[r]<e)return r-1}else if(n<0){for(r=1;r<i;++r)if(t[r]<=e)return r}else for(r=1;r<i;++r){if(t[r]==e)return r;if(t[r]<e)return t[r-1]-e<e-t[r]?r-1:r}return i-1}function Ut(t,e,n){for(;e<n;){var i=t[e];t[e]=t[n],t[n]=i,++e,--n}}function Bt(t,e){for(var n=Array.isArray(e)?e:[e],i=n.length,r=0;r<i;r++)t[t.length]=n[r]}function Zt(t,e){var n=t.length;if(n!==e.length)return!1;for(var i=0;i<n;i++)if(t[i]!==e[i])return!1;return!0}var Vt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Ht(t){this.vacuumTouches_(t),this.setPrimaryTouch_(t.changedTouches[0]),this.dedupSynthMouse_(t),this.clickCount_++,this.processTouches_(t,this.overDown_)}function qt(t){this.processTouches_(t,this.moveOverOut_)}function Jt(t){this.dedupSynthMouse_(t),this.processTouches_(t,this.upOut_)}function Qt(t){this.processTouches_(t,this.cancelOut_)}var $t=function(t){function e(e,n){var i=this,r={touchstart:Ht,touchmove:qt,touchend:Jt,touchcancel:Qt};return(i=t.call(this,e,r)||this).pointerMap=e.pointerMap,i.mouseSource=n,i.firstTouchId_=void 0,i.clickCount_=0,i.resetId_,i.dedupTimeout_=2500,i}return Vt(e,t),e.prototype.isPrimaryTouch_=function(t){return this.firstTouchId_===t.identifier},e.prototype.setPrimaryTouch_=function(t){var e=Object.keys(this.pointerMap).length;(0===e||1===e&&ht.toString()in this.pointerMap)&&(this.firstTouchId_=t.identifier,this.cancelResetClickCount_())},e.prototype.removePrimaryPointer_=function(t){t.isPrimary&&(this.firstTouchId_=void 0,this.resetClickCount_())},e.prototype.resetClickCount_=function(){this.resetId_=setTimeout(this.resetClickCountHandler_.bind(this),200)},e.prototype.resetClickCountHandler_=function(){this.clickCount_=0,this.resetId_=void 0},e.prototype.cancelResetClickCount_=function(){void 0!==this.resetId_&&clearTimeout(this.resetId_)},e.prototype.touchToPointer_=function(t,e){var n=this.dispatcher.cloneEvent(t,e);return n.pointerId=e.identifier+2,n.bubbles=!0,n.cancelable=!0,n.detail=this.clickCount_,n.button=0,n.buttons=1,n.width=e.radiusX||0,n.height=e.radiusY||0,n.pressure=e.force||.5,n.isPrimary=this.isPrimaryTouch_(e),n.pointerType=\"touch\",n.clientX=e.clientX,n.clientY=e.clientY,n.screenX=e.screenX,n.screenY=e.screenY,n},e.prototype.processTouches_=function(t,e){var n=Array.prototype.slice.call(t.changedTouches),i=n.length;function r(){t.preventDefault()}for(var o=0;o<i;++o){var s=this.touchToPointer_(t,n[o]);s.preventDefault=r,e.call(this,t,s)}},e.prototype.findTouch_=function(t,e){for(var n=t.length,i=0;i<n;i++){if(t[i].identifier===e)return!0}return!1},e.prototype.vacuumTouches_=function(t){var e=t.touches,n=Object.keys(this.pointerMap),i=n.length;if(i>=e.length){for(var r=[],o=0;o<i;++o){var s=Number(n[o]),a=this.pointerMap[s];s==ht||this.findTouch_(e,s-2)||r.push(a.out)}for(o=0;o<r.length;++o)this.cancelOut_(t,r[o])}},e.prototype.overDown_=function(t,e){this.pointerMap[e.pointerId]={target:e.target,out:e,outTarget:e.target},this.dispatcher.over(e,t),this.dispatcher.enter(e,t),this.dispatcher.down(e,t)},e.prototype.moveOverOut_=function(t,e){var n=e,i=this.pointerMap[n.pointerId];if(i){var r=i.out,o=i.outTarget;this.dispatcher.move(n,t),r&&o!==n.target&&(r.relatedTarget=n.target,n.relatedTarget=o,r.target=o,n.target?(this.dispatcher.leaveOut(r,t),this.dispatcher.enterOver(n,t)):(n.target=o,n.relatedTarget=null,this.cancelOut_(t,n))),i.out=n,i.outTarget=n.target}},e.prototype.upOut_=function(t,e){this.dispatcher.up(e,t),this.dispatcher.out(e,t),this.dispatcher.leave(e,t),this.cleanUpPointer_(e)},e.prototype.cancelOut_=function(t,e){this.dispatcher.cancel(e,t),this.dispatcher.out(e,t),this.dispatcher.leave(e,t),this.cleanUpPointer_(e)},e.prototype.cleanUpPointer_=function(t){delete this.pointerMap[t.pointerId],this.removePrimaryPointer_(t)},e.prototype.dedupSynthMouse_=function(t){var e=this.mouseSource.lastTouches,n=t.changedTouches[0];if(this.isPrimaryTouch_(n)){var i=[n.clientX,n.clientY];e.push(i),setTimeout(function(){var t,n,r;n=i,r=(t=e).indexOf(n),r>-1&&t.splice(r,1)},this.dedupTimeout_)}},e}(at),te=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ee=[[\"bubbles\",!1],[\"cancelable\",!1],[\"view\",null],[\"detail\",null],[\"screenX\",0],[\"screenY\",0],[\"clientX\",0],[\"clientY\",0],[\"ctrlKey\",!1],[\"altKey\",!1],[\"shiftKey\",!1],[\"metaKey\",!1],[\"button\",0],[\"relatedTarget\",null],[\"buttons\",0],[\"pointerId\",0],[\"width\",0],[\"height\",0],[\"pressure\",0],[\"tiltX\",0],[\"tiltY\",0],[\"pointerType\",\"\"],[\"hwTimestamp\",0],[\"isPrimary\",!1],[\"type\",\"\"],[\"target\",null],[\"currentTarget\",null],[\"which\",0]],ne=function(t){function e(e){var n=t.call(this)||this;return n.element_=e,n.pointerMap={},n.eventMap_={},n.eventSourceList_=[],n.registerSources(),n}return te(e,t),e.prototype.registerSources=function(){if(et)this.registerSource(\"native\",new Nt(this));else if(nt)this.registerSource(\"ms\",new St(this));else{var t=new yt(this);this.registerSource(\"mouse\",t),tt&&this.registerSource(\"touch\",new $t(this,t))}this.register_()},e.prototype.registerSource=function(t,e){var n=e,i=n.getEvents();i&&(i.forEach(function(t){var e=n.getHandlerForEvent(t);e&&(this.eventMap_[t]=e.bind(n))}.bind(this)),this.eventSourceList_.push(n))},e.prototype.register_=function(){for(var t=this.eventSourceList_.length,e=0;e<t;e++){var n=this.eventSourceList_[e];this.addEvents_(n.getEvents())}},e.prototype.unregister_=function(){for(var t=this.eventSourceList_.length,e=0;e<t;e++){var n=this.eventSourceList_[e];this.removeEvents_(n.getEvents())}},e.prototype.eventHandler_=function(t){var e=t.type,n=this.eventMap_[e];n&&n(t)},e.prototype.addEvents_=function(t){t.forEach(function(t){x(this.element_,t,this.eventHandler_,this)}.bind(this))},e.prototype.removeEvents_=function(t){t.forEach(function(t){C(this.element_,t,this.eventHandler_,this)}.bind(this))},e.prototype.cloneEvent=function(t,e){for(var n={},i=0,r=ee.length;i<r;i++){var o=ee[i][0];n[o]=t[o]||e[o]||ee[i][1]}return n},e.prototype.down=function(t,e){this.fireEvent(st.POINTERDOWN,t,e)},e.prototype.move=function(t,e){this.fireEvent(st.POINTERMOVE,t,e)},e.prototype.up=function(t,e){this.fireEvent(st.POINTERUP,t,e)},e.prototype.enter=function(t,e){t.bubbles=!1,this.fireEvent(st.POINTERENTER,t,e)},e.prototype.leave=function(t,e){t.bubbles=!1,this.fireEvent(st.POINTERLEAVE,t,e)},e.prototype.over=function(t,e){t.bubbles=!0,this.fireEvent(st.POINTEROVER,t,e)},e.prototype.out=function(t,e){t.bubbles=!0,this.fireEvent(st.POINTEROUT,t,e)},e.prototype.cancel=function(t,e){this.fireEvent(st.POINTERCANCEL,t,e)},e.prototype.leaveOut=function(t,e){this.out(t,e),this.contains_(t.target,t.relatedTarget)||this.leave(t,e)},e.prototype.enterOver=function(t,e){this.over(t,e),this.contains_(t.target,t.relatedTarget)||this.enter(t,e)},e.prototype.contains_=function(t,e){return!(!t||!e)&&t.contains(e)},e.prototype.makeEvent=function(t,e,n){return new zt(t,n,e)},e.prototype.fireEvent=function(t,e,n){var i=this.makeEvent(t,e,n);this.dispatchEvent(i)},e.prototype.fireNativeEvent=function(t){var e=this.makeEvent(t.type,t,t);this.dispatchEvent(e)},e.prototype.wrapMouseEvent=function(t,e){return this.makeEvent(t,gt(e,this),e)},e.prototype.disposeInternal=function(){this.unregister_(),t.prototype.disposeInternal.call(this)},e}(P),ie=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),re=function(t){function e(e,n){var i=t.call(this)||this;i.map_=e,i.clickTimeoutId_,i.dragging_=!1,i.dragListenerKeys_=[],i.moveTolerance_=n?n*$:$,i.down_=null;var r=i.map_.getViewport();return i.activePointers_=0,i.trackedTouches_={},i.pointerEventHandler_=new ne(r),i.documentPointerEventHandler_=null,i.pointerdownListenerKey_=x(i.pointerEventHandler_,st.POINTERDOWN,i.handlePointerDown_,i),i.relayedListenerKey_=x(i.pointerEventHandler_,st.POINTERMOVE,i.relayEvent_,i),i}return ie(e,t),e.prototype.emulateClick_=function(t){var e=new ot(it.CLICK,this.map_,t);this.dispatchEvent(e),void 0!==this.clickTimeoutId_?(clearTimeout(this.clickTimeoutId_),this.clickTimeoutId_=void 0,e=new ot(it.DBLCLICK,this.map_,t),this.dispatchEvent(e)):this.clickTimeoutId_=setTimeout(function(){this.clickTimeoutId_=void 0;var e=new ot(it.SINGLECLICK,this.map_,t);this.dispatchEvent(e)}.bind(this),250)},e.prototype.updateActivePointers_=function(t){var e=t;e.type==it.POINTERUP||e.type==it.POINTERCANCEL?delete this.trackedTouches_[e.pointerId]:e.type==it.POINTERDOWN&&(this.trackedTouches_[e.pointerId]=!0),this.activePointers_=Object.keys(this.trackedTouches_).length},e.prototype.handlePointerUp_=function(t){this.updateActivePointers_(t);var e=new ot(it.POINTERUP,this.map_,t);this.dispatchEvent(e),e.propagationStopped||this.dragging_||!this.isMouseActionButton_(t)||this.emulateClick_(this.down_),0===this.activePointers_&&(this.dragListenerKeys_.forEach(w),this.dragListenerKeys_.length=0,this.dragging_=!1,this.down_=null,this.documentPointerEventHandler_.dispose(),this.documentPointerEventHandler_=null)},e.prototype.isMouseActionButton_=function(t){return 0===t.button},e.prototype.handlePointerDown_=function(t){this.updateActivePointers_(t);var e=new ot(it.POINTERDOWN,this.map_,t);this.dispatchEvent(e),this.down_=t,0===this.dragListenerKeys_.length&&(this.documentPointerEventHandler_=new ne(document),this.dragListenerKeys_.push(x(this.documentPointerEventHandler_,it.POINTERMOVE,this.handlePointerMove_,this),x(this.documentPointerEventHandler_,it.POINTERUP,this.handlePointerUp_,this),x(this.pointerEventHandler_,it.POINTERCANCEL,this.handlePointerUp_,this)))},e.prototype.handlePointerMove_=function(t){if(this.isMoving_(t)){this.dragging_=!0;var e=new ot(it.POINTERDRAG,this.map_,t,this.dragging_);this.dispatchEvent(e)}t.preventDefault()},e.prototype.relayEvent_=function(t){var e=!(!this.down_||!this.isMoving_(t));this.dispatchEvent(new ot(t.type,this.map_,t,e))},e.prototype.isMoving_=function(t){return this.dragging_||Math.abs(t.clientX-this.down_.clientX)>this.moveTolerance_||Math.abs(t.clientY-this.down_.clientY)>this.moveTolerance_},e.prototype.disposeInternal=function(){this.relayedListenerKey_&&(w(this.relayedListenerKey_),this.relayedListenerKey_=null),this.pointerdownListenerKey_&&(w(this.pointerdownListenerKey_),this.pointerdownListenerKey_=null),this.dragListenerKeys_.forEach(w),this.dragListenerKeys_.length=0,this.documentPointerEventHandler_&&(this.documentPointerEventHandler_.dispose(),this.documentPointerEventHandler_=null),this.pointerEventHandler_&&(this.pointerEventHandler_.dispose(),this.pointerEventHandler_=null),t.prototype.disposeInternal.call(this)},e}(P),oe=\"postrender\",se=\"movestart\",ae=\"moveend\",ue={LAYERGROUP:\"layergroup\",SIZE:\"size\",TARGET:\"target\",VIEW:\"view\"},he=\"prerender\",le=\"postrender\",ce=\"precompose\",pe=\"postcompose\",fe=\"rendercomplete\",de={IDLE:0,LOADING:1,LOADED:2,ERROR:3,EMPTY:4,ABORT:5};function _e(t,e){if(!t)throw new h(e)}var ge=function(){function t(t,e){this.priorityFunction_=t,this.keyFunction_=e,this.elements_=[],this.priorities_=[],this.queuedElements_={}}return t.prototype.clear=function(){this.elements_.length=0,this.priorities_.length=0,f(this.queuedElements_)},t.prototype.dequeue=function(){var t=this.elements_,e=this.priorities_,n=t[0];1==t.length?(t.length=0,e.length=0):(t[0]=t.pop(),e[0]=e.pop(),this.siftUp_(0));var i=this.keyFunction_(n);return delete this.queuedElements_[i],n},t.prototype.enqueue=function(t){_e(!(this.keyFunction_(t)in this.queuedElements_),31);var e=this.priorityFunction_(t);return e!=1/0&&(this.elements_.push(t),this.priorities_.push(e),this.queuedElements_[this.keyFunction_(t)]=!0,this.siftDown_(0,this.elements_.length-1),!0)},t.prototype.getCount=function(){return this.elements_.length},t.prototype.getLeftChildIndex_=function(t){return 2*t+1},t.prototype.getRightChildIndex_=function(t){return 2*t+2},t.prototype.getParentIndex_=function(t){return t-1>>1},t.prototype.heapify_=function(){var t;for(t=(this.elements_.length>>1)-1;t>=0;t--)this.siftUp_(t)},t.prototype.isEmpty=function(){return 0===this.elements_.length},t.prototype.isKeyQueued=function(t){return t in this.queuedElements_},t.prototype.isQueued=function(t){return this.isKeyQueued(this.keyFunction_(t))},t.prototype.siftUp_=function(t){for(var e=this.elements_,n=this.priorities_,i=e.length,r=e[t],o=n[t],s=t;t<i>>1;){var a=this.getLeftChildIndex_(t),u=this.getRightChildIndex_(t),h=u<i&&n[u]<n[a]?u:a;e[t]=e[h],n[t]=n[h],t=h}e[t]=r,n[t]=o,this.siftDown_(s,t)},t.prototype.siftDown_=function(t,e){for(var n=this.elements_,i=this.priorities_,r=n[e],o=i[e];e>t;){var s=this.getParentIndex_(e);if(!(i[s]>o))break;n[e]=n[s],i[e]=i[s],e=s}n[e]=r,i[e]=o},t.prototype.reprioritize=function(){var t,e,n,i=this.priorityFunction_,r=this.elements_,o=this.priorities_,s=0,a=r.length;for(e=0;e<a;++e)(n=i(t=r[e]))==1/0?delete this.queuedElements_[this.keyFunction_(t)]:(o[s]=n,r[s++]=t);r.length=s,o.length=s,this.heapify_()},t}(),ye=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ve=function(t){function e(e,n){var i=t.call(this,function(t){return e.apply(null,t)},function(t){return t[0].getKey()})||this;return i.tileChangeCallback_=n,i.tilesLoading_=0,i.tilesLoadingKeys_={},i}return ye(e,t),e.prototype.enqueue=function(e){var n=t.prototype.enqueue.call(this,e);n&&x(e[0],L.CHANGE,this.handleTileChange,this);return n},e.prototype.getTilesLoading=function(){return this.tilesLoading_},e.prototype.handleTileChange=function(t){var e=t.target,n=e.getState();if(e.hifi&&n===de.LOADED||n===de.ERROR||n===de.EMPTY||n===de.ABORT){C(e,L.CHANGE,this.handleTileChange,this);var i=e.getKey();i in this.tilesLoadingKeys_&&(delete this.tilesLoadingKeys_[i],--this.tilesLoading_),this.tileChangeCallback_()}},e.prototype.loadMoreTiles=function(t,e){for(var n,i,r,o=0,s=!1;this.tilesLoading_<t&&o<e&&this.getCount()>0;)r=(i=this.dequeue()[0]).getKey(),(n=i.getState())===de.ABORT?s=!0:n!==de.IDLE||r in this.tilesLoadingKeys_||(this.tilesLoadingKeys_[r]=!0,++this.tilesLoading_,++o,i.load());0===o&&s&&this.tileChangeCallback_()},e}(ge),me=42,xe=256;function Ee(t,e,n){return Math.min(Math.max(t,e),n)}var Ce=\"cosh\"in Math?Math.cosh:function(t){var e=Math.exp(t);return(e+1/e)/2};function we(t,e,n,i,r,o){var s=r-n,a=o-i;if(0!==s||0!==a){var u=((t-n)*s+(e-i)*a)/(s*s+a*a);u>1?(n=r,i=o):u>0&&(n+=s*u,i+=a*u)}return Oe(t,e,n,i)}function Oe(t,e,n,i){var r=n-t,o=i-e;return r*r+o*o}function Te(t){return t*Math.PI/180}function be(t,e){var n=t%e;return n*e<0?n+e:n}function Re(t,e,n){return t+n*(e-t)}function Se(t){return t}var Ie={BOTTOM_LEFT:\"bottom-left\",BOTTOM_RIGHT:\"bottom-right\",TOP_LEFT:\"top-left\",TOP_RIGHT:\"top-right\"},Pe={UNKNOWN:0,INTERSECTING:1,ABOVE:2,RIGHT:4,BELOW:8,LEFT:16};function Le(t){for(var e=je(),n=0,i=t.length;n<i;++n)Ue(e,t[n]);return e}function Me(t,e,n){return n?(n[0]=t[0]-e,n[1]=t[1]-e,n[2]=t[2]+e,n[3]=t[3]+e,n):[t[0]-e,t[1]-e,t[2]+e,t[3]+e]}function Fe(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t.slice()}function Ae(t,e,n){var i,r;return(i=e<t[0]?t[0]-e:t[2]<e?e-t[2]:0)*i+(r=n<t[1]?t[1]-n:t[3]<n?n-t[3]:0)*r}function De(t,e){return Ge(t,e[0],e[1])}function ke(t,e){return t[0]<=e[0]&&e[2]<=t[2]&&t[1]<=e[1]&&e[3]<=t[3]}function Ge(t,e,n){return t[0]<=e&&e<=t[2]&&t[1]<=n&&n<=t[3]}function Ne(t,e){var n=t[0],i=t[1],r=t[2],o=t[3],s=e[0],a=e[1],u=Pe.UNKNOWN;return s<n?u|=Pe.LEFT:s>r&&(u|=Pe.RIGHT),a<i?u|=Pe.BELOW:a>o&&(u|=Pe.ABOVE),u===Pe.UNKNOWN&&(u=Pe.INTERSECTING),u}function je(){return[1/0,1/0,-1/0,-1/0]}function Ye(t,e,n,i,r){return r?(r[0]=t,r[1]=e,r[2]=n,r[3]=i,r):[t,e,n,i]}function Xe(t){return Ye(1/0,1/0,-1/0,-1/0,t)}function ze(t,e,n,i,r){return Ze(Xe(r),t,e,n,i)}function Ke(t,e){return t[0]==e[0]&&t[2]==e[2]&&t[1]==e[1]&&t[3]==e[3]}function We(t,e){return e[0]<t[0]&&(t[0]=e[0]),e[2]>t[2]&&(t[2]=e[2]),e[1]<t[1]&&(t[1]=e[1]),e[3]>t[3]&&(t[3]=e[3]),t}function Ue(t,e){e[0]<t[0]&&(t[0]=e[0]),e[0]>t[2]&&(t[2]=e[0]),e[1]<t[1]&&(t[1]=e[1]),e[1]>t[3]&&(t[3]=e[1])}function Be(t,e){for(var n=0,i=e.length;n<i;++n)Ue(t,e[n]);return t}function Ze(t,e,n,i,r){for(;n<i;n+=r)Ve(t,e[n],e[n+1]);return t}function Ve(t,e,n){t[0]=Math.min(t[0],e),t[1]=Math.min(t[1],n),t[2]=Math.max(t[2],e),t[3]=Math.max(t[3],n)}function He(t){var e=0;return un(t)||(e=sn(t)*en(t)),e}function qe(t){return[t[0],t[1]]}function Je(t){return[t[2],t[1]]}function Qe(t){return[(t[0]+t[2])/2,(t[1]+t[3])/2]}function $e(t,e){var n;return e===Ie.BOTTOM_LEFT?n=qe(t):e===Ie.BOTTOM_RIGHT?n=Je(t):e===Ie.TOP_LEFT?n=rn(t):e===Ie.TOP_RIGHT?n=on(t):_e(!1,13),n}function tn(t,e,n,i,r){var o=e*i[0]/2,s=e*i[1]/2,a=Math.cos(n),u=Math.sin(n),h=o*a,l=o*u,c=s*a,p=s*u,f=t[0],d=t[1],_=f-h+p,g=f-h-p,y=f+h-p,v=f+h+p,m=d-l-c,x=d-l+c,E=d+l+c,C=d+l-c;return Ye(Math.min(_,g,y,v),Math.min(m,x,E,C),Math.max(_,g,y,v),Math.max(m,x,E,C),r)}function en(t){return t[3]-t[1]}function nn(t,e,n){var i=n||[1/0,1/0,-1/0,-1/0];return an(t,e)?(t[0]>e[0]?i[0]=t[0]:i[0]=e[0],t[1]>e[1]?i[1]=t[1]:i[1]=e[1],t[2]<e[2]?i[2]=t[2]:i[2]=e[2],t[3]<e[3]?i[3]=t[3]:i[3]=e[3]):Xe(i),i}function rn(t){return[t[0],t[3]]}function on(t){return[t[2],t[3]]}function sn(t){return t[2]-t[0]}function an(t,e){return t[0]<=e[2]&&t[2]>=e[0]&&t[1]<=e[3]&&t[3]>=e[1]}function un(t){return t[2]<t[0]||t[3]<t[1]}function hn(t,e,n){var i=sn(e)/n[0],r=en(e)/n[1];return Math.min(t,Math.min(i,r))}function ln(t,e,n){var i=Math.min(t,e);return i*=Math.log(1+50*Math.max(0,t/e-1))/50+1,n&&(i=Math.max(i,n),i/=Math.log(1+50*Math.max(0,n/t-1))/50+1),Ee(i,n/2,2*e)}function cn(t,e,n,i){return function(r,o,s,a){if(void 0!==r){var u=i?hn(t,i,s):t;return(void 0===n||n)&&a?ln(r,u,e):Ee(r,e,u)}}}function pn(t){return void 0!==t?0:void 0}function fn(t){return void 0!==t?t:void 0}var dn=0,_n=1,gn=\"center\",yn=\"resolution\",vn=\"rotation\";function mn(t,e){for(var n=!0,i=t.length-1;i>=0;--i)if(t[i]!=e[i]){n=!1;break}return n}function xn(t,e){var n=Math.cos(e),i=Math.sin(e),r=t[0]*n-t[1]*i,o=t[1]*n+t[0]*i;return t[0]=r,t[1]=o,t}function En(t){return Math.pow(t,3)}function Cn(t){return 1-En(1-t)}function wn(t){return 3*t*t-2*t*t*t}function On(t){return t}var Tn={POINT:\"Point\",LINE_STRING:\"LineString\",LINEAR_RING:\"LinearRing\",POLYGON:\"Polygon\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\",GEOMETRY_COLLECTION:\"GeometryCollection\",CIRCLE:\"Circle\"},bn={XY:\"XY\",XYZ:\"XYZ\",XYM:\"XYM\",XYZM:\"XYZM\"};function Rn(t,e,n,i,r,o){for(var s=o||[],a=0,u=e;u<n;u+=i){var h=t[u],l=t[u+1];s[a++]=r[0]*h+r[2]*l+r[4],s[a++]=r[1]*h+r[3]*l+r[5]}return o&&s.length!=a&&(s.length=a),s}\n/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\nvar Sn=6371008.8;function In(t,e,n){var i=n||Sn,r=Te(t[1]),o=Te(e[1]),s=(o-r)/2,a=Te(e[0]-t[0])/2,u=Math.sin(s)*Math.sin(s)+Math.sin(a)*Math.sin(a)*Math.cos(r)*Math.cos(o);return 2*i*Math.atan2(Math.sqrt(u),Math.sqrt(1-u))}var Pn={DEGREES:\"degrees\",FEET:\"ft\",METERS:\"m\",PIXELS:\"pixels\",TILE_PIXELS:\"tile-pixels\",USFEET:\"us-ft\"},Ln={};Ln[Pn.DEGREES]=2*Math.PI*6370997/360,Ln[Pn.FEET]=.3048,Ln[Pn.METERS]=1,Ln[Pn.USFEET]=1200/3937;var Mn=Pn,Fn=function(){function t(t){this.code_=t.code,this.units_=t.units,this.extent_=void 0!==t.extent?t.extent:null,this.worldExtent_=void 0!==t.worldExtent?t.worldExtent:null,this.axisOrientation_=void 0!==t.axisOrientation?t.axisOrientation:\"enu\",this.global_=void 0!==t.global&&t.global,this.canWrapX_=!(!this.global_||!this.extent_),this.getPointResolutionFunc_=t.getPointResolution,this.defaultTileGrid_=null,this.metersPerUnit_=t.metersPerUnit}return t.prototype.canWrapX=function(){return this.canWrapX_},t.prototype.getCode=function(){return this.code_},t.prototype.getExtent=function(){return this.extent_},t.prototype.getUnits=function(){return this.units_},t.prototype.getMetersPerUnit=function(){return this.metersPerUnit_||Ln[this.units_]},t.prototype.getWorldExtent=function(){return this.worldExtent_},t.prototype.getAxisOrientation=function(){return this.axisOrientation_},t.prototype.isGlobal=function(){return this.global_},t.prototype.setGlobal=function(t){this.global_=t,this.canWrapX_=!(!t||!this.extent_)},t.prototype.getDefaultTileGrid=function(){return this.defaultTileGrid_},t.prototype.setDefaultTileGrid=function(t){this.defaultTileGrid_=t},t.prototype.setExtent=function(t){this.extent_=t,this.canWrapX_=!(!this.global_||!t)},t.prototype.setWorldExtent=function(t){this.worldExtent_=t},t.prototype.setGetPointResolution=function(t){this.getPointResolutionFunc_=t},t.prototype.getPointResolutionFunc=function(){return this.getPointResolutionFunc_},t}(),An=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Dn=6378137,kn=Math.PI*Dn,Gn=[-kn,-kn,kn,kn],Nn=[-180,-85,180,85],jn=function(t){function e(e){return t.call(this,{code:e,units:Mn.METERS,extent:Gn,global:!0,worldExtent:Nn,getPointResolution:function(t,e){return t/Ce(e[1]/Dn)}})||this}return An(e,t),e}(Fn),Yn=[new jn(\"EPSG:3857\"),new jn(\"EPSG:102100\"),new jn(\"EPSG:102113\"),new jn(\"EPSG:900913\"),new jn(\"urn:ogc:def:crs:EPSG:6.18:3:3857\"),new jn(\"urn:ogc:def:crs:EPSG::3857\"),new jn(\"http://www.opengis.net/gml/srs/epsg.xml#3857\")];function Xn(t,e,n){var i=t.length,r=n>1?n:2,o=e;void 0===o&&(o=r>2?t.slice():new Array(i));for(var s=kn,a=0;a<i;a+=r){o[a]=s*t[a]/180;var u=Dn*Math.log(Math.tan(Math.PI*(+t[a+1]+90)/360));u>s?u=s:u<-s&&(u=-s),o[a+1]=u}return o}function zn(t,e,n){var i=t.length,r=n>1?n:2,o=e;void 0===o&&(o=r>2?t.slice():new Array(i));for(var s=0;s<i;s+=r)o[s]=180*t[s]/kn,o[s+1]=360*Math.atan(Math.exp(t[s+1]/Dn))/Math.PI-90;return o}var Kn=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Wn=[-180,-90,180,90],Un=6378137*Math.PI/180,Bn=function(t){function e(e,n){return t.call(this,{code:e,units:Mn.DEGREES,extent:Wn,axisOrientation:n,global:!0,metersPerUnit:Un,worldExtent:Wn})||this}return Kn(e,t),e}(Fn),Zn=[new Bn(\"CRS:84\"),new Bn(\"EPSG:4326\",\"neu\"),new Bn(\"urn:ogc:def:crs:EPSG::4326\",\"neu\"),new Bn(\"urn:ogc:def:crs:EPSG:6.6:4326\",\"neu\"),new Bn(\"urn:ogc:def:crs:OGC:1.3:CRS84\"),new Bn(\"urn:ogc:def:crs:OGC:2:84\"),new Bn(\"http://www.opengis.net/gml/srs/epsg.xml#4326\",\"neu\"),new Bn(\"urn:x-ogc:def:crs:EPSG:4326\",\"neu\")],Vn={};var Hn,qn,Jn,Qn={};function $n(t,e,n){var i=t.getCode(),r=e.getCode();i in Qn||(Qn[i]={}),Qn[i][r]=n}function ti(t,e,n){var i;if(void 0!==e){for(var r=0,o=t.length;r<o;++r)e[r]=t[r];i=e}else i=t.slice();return i}function ei(t,e,n){if(void 0!==e&&t!==e){for(var i=0,r=t.length;i<r;++i)e[i]=t[i];t=e}return t}function ni(t){!function(t,e){Vn[t]=e}(t.getCode(),t),$n(t,t,ti)}function ii(t){return\"string\"==typeof t?Vn[t]||null:t||null}function ri(t,e,n,i){var r,o=(t=ii(t)).getPointResolutionFunc();if(o)r=o(e,n),i&&i!==t.getUnits()&&(s=t.getMetersPerUnit())&&(r=r*s/Ln[i]);else if(t.getUnits()==Mn.DEGREES&&!i||i==Mn.DEGREES)r=e;else{var s,a=ui(t,ii(\"EPSG:4326\")),u=[n[0]-e/2,n[1],n[0]+e/2,n[1],n[0],n[1]-e/2,n[0],n[1]+e/2];r=(In((u=a(u,u,2)).slice(0,2),u.slice(2,4))+In(u.slice(4,6),u.slice(6,8)))/2,void 0!==(s=i?Ln[i]:t.getMetersPerUnit())&&(r/=s)}return r}function oi(t){!function(t){t.forEach(ni)}(t),t.forEach(function(e){t.forEach(function(t){e!==t&&$n(e,t,ti)})})}function si(t,e){return t?\"string\"==typeof t?ii(t):t:ii(e)}function ai(t,e){if(t===e)return!0;var n=t.getUnits()===e.getUnits();return t.getCode()===e.getCode()?n:ui(t,e)===ti&&n}function ui(t,e){var n=function(t,e){var n;return t in Qn&&e in Qn[t]&&(n=Qn[t][e]),n}(t.getCode(),e.getCode());return n||(n=ei),n}function hi(t,e){return ui(ii(t),ii(e))}function li(t,e,n){return hi(e,n)(t,void 0,t.length)}oi(Yn),oi(Zn),Hn=Yn,qn=Xn,Jn=zn,Zn.forEach(function(t){Hn.forEach(function(e){$n(t,e,qn),$n(e,t,Jn)})});new Array(6);function ci(t,e,n,i,r,o,s){return t[0]=e,t[1]=n,t[2]=i,t[3]=r,t[4]=o,t[5]=s,t}function pi(t,e){var n=e[0],i=e[1];return e[0]=t[0]*n+t[2]*i+t[4],e[1]=t[1]*n+t[3]*i+t[5],e}function fi(t,e,n,i,r,o,s,a){var u=Math.sin(o),h=Math.cos(o);return t[0]=i*h,t[1]=r*u,t[2]=-i*u,t[3]=r*h,t[4]=s*i*h-a*i*u+e,t[5]=s*r*u+a*r*h+n,t}function di(t,e){var n,i=(n=e)[0]*n[3]-n[1]*n[2];_e(0!==i,32);var r=e[0],o=e[1],s=e[2],a=e[3],u=e[4],h=e[5];return t[0]=a/i,t[1]=-o/i,t[2]=-s/i,t[3]=r/i,t[4]=(s*h-a*u)/i,t[5]=-(r*h-o*u)/i,t}function _i(t){return\"matrix(\"+t.join(\", \")+\")\"}var gi=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),yi=[1,0,0,1,0,0],vi=function(t){function e(){var e=t.call(this)||this;return e.extent_=[1/0,1/0,-1/0,-1/0],e.extentRevision_=-1,e.simplifiedGeometryCache={},e.simplifiedGeometryMaxMinSquaredTolerance=0,e.simplifiedGeometryRevision=0,e}return gi(e,t),e.prototype.clone=function(){return i()},e.prototype.closestPointXY=function(t,e,n,r){return i()},e.prototype.containsXY=function(t,e){var n=this.getClosestPoint([t,e]);return n[0]===t&&n[1]===e},e.prototype.getClosestPoint=function(t,e){var n=e||[NaN,NaN];return this.closestPointXY(t[0],t[1],n,1/0),n},e.prototype.intersectsCoordinate=function(t){return this.containsXY(t[0],t[1])},e.prototype.computeExtent=function(t){return i()},e.prototype.getExtent=function(t){return this.extentRevision_!=this.getRevision()&&(this.extent_=this.computeExtent(this.extent_),this.extentRevision_=this.getRevision()),function(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t}(this.extent_,t)},e.prototype.rotate=function(t,e){i()},e.prototype.scale=function(t,e,n){i()},e.prototype.simplify=function(t){return this.getSimplifiedGeometry(t*t)},e.prototype.getSimplifiedGeometry=function(t){return i()},e.prototype.getType=function(){return i()},e.prototype.applyTransform=function(t){i()},e.prototype.intersectsExtent=function(t){return i()},e.prototype.translate=function(t,e){i()},e.prototype.transform=function(t,e){var n=ii(t),i=n.getUnits()==Mn.TILE_PIXELS?function(t,i,r){var o=n.getExtent(),s=n.getWorldExtent(),a=en(s)/en(o);return fi(yi,s[0],s[3],a,-a,0,0,0),Rn(t,0,t.length,r,yi,i),hi(n,e)(t,i,r)}:hi(n,e);return this.applyTransform(i),this},e}(j),mi=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function xi(t){var e;return t==bn.XY?e=2:t==bn.XYZ||t==bn.XYM?e=3:t==bn.XYZM&&(e=4),e}var Ei=function(t){function e(){var e=t.call(this)||this;return e.layout=bn.XY,e.stride=2,e.flatCoordinates=null,e}return mi(e,t),e.prototype.computeExtent=function(t){return ze(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},e.prototype.getCoordinates=function(){return i()},e.prototype.getFirstCoordinate=function(){return this.flatCoordinates.slice(0,this.stride)},e.prototype.getFlatCoordinates=function(){return this.flatCoordinates},e.prototype.getLastCoordinate=function(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)},e.prototype.getLayout=function(){return this.layout},e.prototype.getSimplifiedGeometry=function(t){if(this.simplifiedGeometryRevision!=this.getRevision()&&(f(this.simplifiedGeometryCache),this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&t<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;var e=t.toString();if(this.simplifiedGeometryCache.hasOwnProperty(e))return this.simplifiedGeometryCache[e];var n=this.getSimplifiedGeometryInternal(t);return n.getFlatCoordinates().length<this.flatCoordinates.length?(this.simplifiedGeometryCache[e]=n,n):(this.simplifiedGeometryMaxMinSquaredTolerance=t,this)},e.prototype.getSimplifiedGeometryInternal=function(t){return this},e.prototype.getStride=function(){return this.stride},e.prototype.setFlatCoordinates=function(t,e){this.stride=xi(t),this.layout=t,this.flatCoordinates=e},e.prototype.setCoordinates=function(t,e){i()},e.prototype.setLayout=function(t,e,n){var i;if(t)i=xi(t);else{for(var r=0;r<n;++r){if(0===e.length)return this.layout=bn.XY,void(this.stride=2);e=e[0]}t=function(t){var e;2==t?e=bn.XY:3==t?e=bn.XYZ:4==t&&(e=bn.XYZM);return e}(i=e.length)}this.layout=t,this.stride=i},e.prototype.applyTransform=function(t){this.flatCoordinates&&(t(this.flatCoordinates,this.flatCoordinates,this.stride),this.changed())},e.prototype.rotate=function(t,e){var n=this.getFlatCoordinates();if(n){var i=this.getStride();!function(t,e,n,i,r,o,s){for(var a=s||[],u=Math.cos(r),h=Math.sin(r),l=o[0],c=o[1],p=0,f=e;f<n;f+=i){var d=t[f]-l,_=t[f+1]-c;a[p++]=l+d*u-_*h,a[p++]=c+d*h+_*u;for(var g=f+2;g<f+i;++g)a[p++]=t[g]}s&&a.length!=p&&(a.length=p)}(n,0,n.length,i,t,e,n),this.changed()}},e.prototype.scale=function(t,e,n){var i=e;void 0===i&&(i=t);var r=n;r||(r=Qe(this.getExtent()));var o=this.getFlatCoordinates();if(o){var s=this.getStride();!function(t,e,n,i,r,o,s,a){for(var u=a||[],h=s[0],l=s[1],c=0,p=e;p<n;p+=i){var f=t[p]-h,d=t[p+1]-l;u[c++]=h+r*f,u[c++]=l+o*d;for(var _=p+2;_<p+i;++_)u[c++]=t[_]}a&&u.length!=c&&(u.length=c)}(o,0,o.length,s,t,i,r,o),this.changed()}},e.prototype.translate=function(t,e){var n=this.getFlatCoordinates();if(n){var i=this.getStride();!function(t,e,n,i,r,o,s){for(var a=s||[],u=0,h=e;h<n;h+=i){a[u++]=t[h]+r,a[u++]=t[h+1]+o;for(var l=h+2;l<h+i;++l)a[u++]=t[l]}s&&a.length!=u&&(a.length=u)}(n,0,n.length,i,t,e,n),this.changed()}},e}(vi);function Ci(t,e,n,i){for(var r=0,o=t[n-i],s=t[n-i+1];e<n;e+=i){var a=t[e],u=t[e+1];r+=s*a-o*u,o=a,s=u}return r/2}function wi(t,e,n,i){for(var r=0,o=0,s=n.length;o<s;++o){var a=n[o];r+=Ci(t,e,a,i),e=a}return r}function Oi(t,e,n,i,r,o,s){var a,u=t[e],h=t[e+1],l=t[n]-u,c=t[n+1]-h;if(0===l&&0===c)a=e;else{var p=((r-u)*l+(o-h)*c)/(l*l+c*c);if(p>1)a=n;else{if(p>0){for(var f=0;f<i;++f)s[f]=Re(t[e+f],t[n+f],p);return void(s.length=i)}a=e}}for(f=0;f<i;++f)s[f]=t[a+f];s.length=i}function Ti(t,e,n,i,r){var o=t[e],s=t[e+1];for(e+=i;e<n;e+=i){var a=t[e],u=t[e+1],h=Oe(o,s,a,u);h>r&&(r=h),o=a,s=u}return r}function bi(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o];r=Ti(t,e,a,i,r),e=a}return r}function Ri(t,e,n,i,r,o,s,a,u,h,l){if(e==n)return h;var c,p;if(0===r){if((p=Oe(s,a,t[e],t[e+1]))<h){for(c=0;c<i;++c)u[c]=t[e+c];return u.length=i,p}return h}for(var f=l||[NaN,NaN],d=e+i;d<n;)if(Oi(t,d-i,d,i,s,a,f),(p=Oe(s,a,f[0],f[1]))<h){for(h=p,c=0;c<i;++c)u[c]=f[c];u.length=i,d+=i}else d+=i*Math.max((Math.sqrt(p)-Math.sqrt(h))/r|0,1);if(o&&(Oi(t,n-i,e,i,s,a,f),(p=Oe(s,a,f[0],f[1]))<h)){for(h=p,c=0;c<i;++c)u[c]=f[c];u.length=i}return h}function Si(t,e,n,i,r,o,s,a,u,h,l){for(var c=l||[NaN,NaN],p=0,f=n.length;p<f;++p){var d=n[p];h=Ri(t,e,d,i,r,o,s,a,u,h,c),e=d}return h}function Ii(t,e,n,i){for(var r=0,o=n.length;r<o;++r)for(var s=n[r],a=0;a<i;++a)t[e++]=s[a];return e}function Pi(t,e,n,i,r){for(var o=r||[],s=0,a=0,u=n.length;a<u;++a){var h=Ii(t,e,n[a],i);o[s++]=h,e=h}return o.length=s,o}function Li(t,e,n,i,r){for(var o=void 0!==r?r:[],s=0,a=e;a<n;a+=i)o[s++]=t.slice(a,a+i);return o.length=s,o}function Mi(t,e,n,i,r){for(var o=void 0!==r?r:[],s=0,a=0,u=n.length;a<u;++a){var h=n[a];o[s++]=Li(t,e,h,i,o[s]),e=h}return o.length=s,o}function Fi(t,e,n,i,r){for(var o=void 0!==r?r:[],s=0,a=0,u=n.length;a<u;++a){var h=n[a];o[s++]=Mi(t,e,h,i,o[s]),e=h[h.length-1]}return o.length=s,o}function Ai(t,e,n,i,r,o,s){var a=(n-e)/i;if(a<3){for(;e<n;e+=i)o[s++]=t[e],o[s++]=t[e+1];return s}var u=new Array(a);u[0]=1,u[a-1]=1;for(var h=[e,n-i],l=0;h.length>0;){for(var c=h.pop(),p=h.pop(),f=0,d=t[p],_=t[p+1],g=t[c],y=t[c+1],v=p+i;v<c;v+=i){var m=we(t[v],t[v+1],d,_,g,y);m>f&&(l=v,f=m)}f>r&&(u[(l-e)/i]=1,p+i<l&&h.push(p,l),l+i<c&&h.push(l,c))}for(v=0;v<a;++v)u[v]&&(o[s++]=t[e+v*i],o[s++]=t[e+v*i+1]);return s}function Di(t,e,n,i,r,o,s,a){for(var u=0,h=n.length;u<h;++u){var l=n[u];s=Ai(t,e,l,i,r,o,s),a.push(s),e=l}return s}function ki(t,e){return e*Math.round(t/e)}function Gi(t,e,n,i,r,o,s){if(e==n)return s;var a,u,h=ki(t[e],r),l=ki(t[e+1],r);e+=i,o[s++]=h,o[s++]=l;do{if(a=ki(t[e],r),u=ki(t[e+1],r),(e+=i)==n)return o[s++]=a,o[s++]=u,s}while(a==h&&u==l);for(;e<n;){var c=ki(t[e],r),p=ki(t[e+1],r);if(e+=i,c!=a||p!=u){var f=a-h,d=u-l,_=c-h,g=p-l;f*g==d*_&&(f<0&&_<f||f==_||f>0&&_>f)&&(d<0&&g<d||d==g||d>0&&g>d)?(a=c,u=p):(o[s++]=a,o[s++]=u,h=a,l=u,a=c,u=p)}}return o[s++]=a,o[s++]=u,s}function Ni(t,e,n,i,r,o,s,a){for(var u=0,h=n.length;u<h;++u){var l=n[u];s=Gi(t,e,l,i,r,o,s),a.push(s),e=l}return s}var ji=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Yi=function(t){function e(e,n){var i=t.call(this)||this;return i.maxDelta_=-1,i.maxDeltaRevision_=-1,void 0===n||Array.isArray(e[0])?i.setCoordinates(e,n):i.setFlatCoordinates(n,e),i}return ji(e,t),e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){return i<Ae(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Ti(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Ri(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!0,t,e,n,i))},e.prototype.getArea=function(){return Ci(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getCoordinates=function(){return Li(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[];return n.length=Ai(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,n,0),new e(n,bn.XY)},e.prototype.getType=function(){return Tn.LINEAR_RING},e.prototype.intersectsExtent=function(t){return!1},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Ii(this.flatCoordinates,0,t,this.stride),this.changed()},e}(Ei),Xi=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),zi=function(t){function e(e,n){var i=t.call(this)||this;return i.setCoordinates(e,n),i}return Xi(e,t),e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){var r=this.flatCoordinates,o=Oe(t,e,r[0],r[1]);if(o<i){for(var s=this.stride,a=0;a<s;++a)n[a]=r[a];return n.length=s,o}return i},e.prototype.getCoordinates=function(){return this.flatCoordinates?this.flatCoordinates.slice():[]},e.prototype.computeExtent=function(t){return e=this.flatCoordinates,n=t,i=e[0],r=e[1],Ye(i,r,i,r,n);var e,n,i,r},e.prototype.getType=function(){return Tn.POINT},e.prototype.intersectsExtent=function(t){return Ge(t,this.flatCoordinates[0],this.flatCoordinates[1])},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=function(t,e,n,i){for(var r=0,o=n.length;r<o;++r)t[e++]=n[r];return e}(this.flatCoordinates,0,t,this.stride),this.changed()},e}(Ei);function Ki(t,e,n,i,r){return!function(t,e){var n;return(n=e(qe(t)))?n:(n=e(Je(t)))?n:(n=e(on(t)))?n:(n=e(rn(t)))||!1}(r,function(r){return!Wi(t,e,n,i,r[0],r[1])})}function Wi(t,e,n,i,r,o){for(var s=0,a=t[n-i],u=t[n-i+1];e<n;e+=i){var h=t[e],l=t[e+1];u<=o?l>o&&(h-a)*(o-u)-(r-a)*(l-u)>0&&s++:l<=o&&(h-a)*(o-u)-(r-a)*(l-u)<0&&s--,a=h,u=l}return 0!==s}function Ui(t,e,n,i,r,o){if(0===n.length)return!1;if(!Wi(t,e,n[0],i,r,o))return!1;for(var s=1,a=n.length;s<a;++s)if(Wi(t,n[s-1],n[s],i,r,o))return!1;return!0}function Bi(t,e,n,i,r,o,s){for(var a,u,h,l,c,p,f,d=r[o+1],_=[],g=0,y=n.length;g<y;++g){var v=n[g];for(l=t[v-i],p=t[v-i+1],a=e;a<v;a+=i)c=t[a],f=t[a+1],(d<=p&&f<=d||p<=d&&d<=f)&&(h=(d-p)/(f-p)*(c-l)+l,_.push(h)),l=c,p=f}var m=NaN,x=-1/0;for(_.sort(Kt),l=_[0],a=1,u=_.length;a<u;++a){c=_[a];var E=Math.abs(c-l);E>x&&Ui(t,e,n,i,h=(l+c)/2,d)&&(m=h,x=E),l=c}return isNaN(m)&&(m=r[o]),s?(s.push(m,d,x),s):[m,d,x]}function Zi(t,e,n,i,r){for(var o,s=[t[e],t[e+1]],a=[];e+i<n;e+=i){if(a[0]=t[e+i],a[1]=t[e+i+1],o=r(s,a))return o;s[0]=a[0],s[1]=a[1]}return!1}function Vi(t,e,n,i,r){var o=Ze([1/0,1/0,-1/0,-1/0],t,e,n,i);return!!an(r,o)&&(!!ke(r,o)||(o[0]>=r[0]&&o[2]<=r[2]||(o[1]>=r[1]&&o[3]<=r[3]||Zi(t,e,n,i,function(t,e){return function(t,e,n){var i=!1,r=Ne(t,e),o=Ne(t,n);if(r===Pe.INTERSECTING||o===Pe.INTERSECTING)i=!0;else{var s=t[0],a=t[1],u=t[2],h=t[3],l=e[0],c=e[1],p=n[0],f=n[1],d=(f-c)/(p-l),_=void 0,g=void 0;o&Pe.ABOVE&&!(r&Pe.ABOVE)&&(i=(_=p-(f-h)/d)>=s&&_<=u),i||!(o&Pe.RIGHT)||r&Pe.RIGHT||(i=(g=f-(p-u)*d)>=a&&g<=h),i||!(o&Pe.BELOW)||r&Pe.BELOW||(i=(_=p-(f-a)/d)>=s&&_<=u),i||!(o&Pe.LEFT)||r&Pe.LEFT||(i=(g=f-(p-s)*d)>=a&&g<=h)}return i}(r,t,e)}))))}function Hi(t,e,n,i,r){if(!function(t,e,n,i,r){return!!(Vi(t,e,n,i,r)||Wi(t,e,n,i,r[0],r[1])||Wi(t,e,n,i,r[0],r[3])||Wi(t,e,n,i,r[2],r[1])||Wi(t,e,n,i,r[2],r[3]))}(t,e,n[0],i,r))return!1;if(1===n.length)return!0;for(var o=1,s=n.length;o<s;++o)if(Ki(t,n[o-1],n[o],i,r)&&!Vi(t,n[o-1],n[o],i,r))return!1;return!0}function qi(t,e,n,i){for(;e<n-i;){for(var r=0;r<i;++r){var o=t[e+r];t[e+r]=t[n-i+r],t[n-i+r]=o}e+=i,n-=i}}function Ji(t,e,n,i){for(var r=0,o=t[n-i],s=t[n-i+1];e<n;e+=i){var a=t[e],u=t[e+1];r+=(a-o)*(u+s),o=a,s=u}return r>0}function Qi(t,e,n,i,r){for(var o=void 0!==r&&r,s=0,a=n.length;s<a;++s){var u=n[s],h=Ji(t,e,u,i);if(0===s){if(o&&h||!o&&!h)return!1}else if(o&&!h||!o&&h)return!1;e=u}return!0}function $i(t,e,n,i,r){for(var o=void 0!==r&&r,s=0,a=n.length;s<a;++s){var u=n[s],h=Ji(t,e,u,i);(0===s?o&&h||!o&&!h:o&&!h||!o&&h)&&qi(t,e,u,i),e=u}return e}function tr(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o)e=$i(t,e,n[o],i,r);return e}var er=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),nr=function(t){function e(e,n,i){var r=t.call(this)||this;return r.ends_=[],r.flatInteriorPointRevision_=-1,r.flatInteriorPoint_=null,r.maxDelta_=-1,r.maxDeltaRevision_=-1,r.orientedRevision_=-1,r.orientedFlatCoordinates_=null,void 0!==n&&i?(r.setFlatCoordinates(n,e),r.ends_=i):r.setCoordinates(e,n),r}return er(e,t),e.prototype.appendLinearRing=function(t){this.flatCoordinates?Bt(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout,this.ends_.slice())},e.prototype.closestPointXY=function(t,e,n,i){return i<Ae(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(bi(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Si(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!0,t,e,n,i))},e.prototype.containsXY=function(t,e){return Ui(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,e)},e.prototype.getArea=function(){return wi(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride)},e.prototype.getCoordinates=function(t){var e;return void 0!==t?$i(e=this.getOrientedFlatCoordinates().slice(),0,this.ends_,this.stride,t):e=this.flatCoordinates,Mi(e,0,this.ends_,this.stride)},e.prototype.getEnds=function(){return this.ends_},e.prototype.getFlatInteriorPoint=function(){if(this.flatInteriorPointRevision_!=this.getRevision()){var t=Qe(this.getExtent());this.flatInteriorPoint_=Bi(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,0),this.flatInteriorPointRevision_=this.getRevision()}return this.flatInteriorPoint_},e.prototype.getInteriorPoint=function(){return new zi(this.getFlatInteriorPoint(),bn.XYM)},e.prototype.getLinearRingCount=function(){return this.ends_.length},e.prototype.getLinearRing=function(t){return t<0||this.ends_.length<=t?null:new Yi(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},e.prototype.getLinearRings=function(){for(var t=this.layout,e=this.flatCoordinates,n=this.ends_,i=[],r=0,o=0,s=n.length;o<s;++o){var a=n[o],u=new Yi(e.slice(r,a),t);i.push(u),r=a}return i},e.prototype.getOrientedFlatCoordinates=function(){if(this.orientedRevision_!=this.getRevision()){var t=this.flatCoordinates;Qi(t,0,this.ends_,this.stride)?this.orientedFlatCoordinates_=t:(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=$i(this.orientedFlatCoordinates_,0,this.ends_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[],i=[];return n.length=Ni(this.flatCoordinates,0,this.ends_,this.stride,Math.sqrt(t),n,0,i),new e(n,bn.XY,i)},e.prototype.getType=function(){return Tn.POLYGON},e.prototype.intersectsExtent=function(t){return Hi(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var n=Pi(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===n.length?0:n[n.length-1],this.changed()},e}(Ei),ir=nr;function rr(t){var e=t[0],n=t[1],i=t[2],r=t[3],o=[e,n,e,r,i,r,i,n,e,n];return new nr(o,bn.XY,[o.length])}var or=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),sr=0;function ar(t,e){setTimeout(function(){t(e)},0)}function ur(t){return!(t.sourceCenter&&t.targetCenter&&!mn(t.sourceCenter,t.targetCenter))&&(t.sourceResolution===t.targetResolution&&t.sourceRotation===t.targetRotation)}var hr=function(t){function e(e){var n=t.call(this)||this,i=p({},e);return n.hints_=[0,0],n.animations_=[],n.updateAnimationKey_,n.projection_=si(i.projection,\"EPSG:3857\"),n.targetCenter_=null,n.targetResolution_,n.targetRotation_,n.applyOptions_(i),n}return or(e,t),e.prototype.applyOptions_=function(t){var e=function(t){var e,n,i,r=void 0!==t.minZoom?t.minZoom:sr,o=void 0!==t.maxZoom?t.maxZoom:28,s=void 0!==t.zoomFactor?t.zoomFactor:2,a=void 0!==t.multiWorld&&t.multiWorld,u=void 0===t.smoothResolutionConstraint||t.smoothResolutionConstraint;if(void 0!==t.resolutions){var h=t.resolutions;n=h[r],i=void 0!==h[o]?h[o]:h[h.length-1],e=t.constrainResolution?function(t,e,n){return function(i,r,o,s){if(void 0!==i){var a=t[0],u=t[t.length-1],h=n?hn(a,n,o):a;if(s)return void 0===e||e?ln(i,h,u):Ee(i,u,h);var l=Math.min(h,i),c=Math.floor(Wt(t,l,r));return t[c]}}}(h,u,!t.constrainOnlyCenter&&t.extent):cn(n,i,u,!t.constrainOnlyCenter&&t.extent)}else{var l=si(t.projection,\"EPSG:3857\"),c=l.getExtent(),p=c?Math.max(sn(c),en(c)):360*Ln[Mn.DEGREES]/l.getMetersPerUnit(),f=p/xe/Math.pow(2,sr),d=f/Math.pow(2,28-sr);if(void 0!==(n=t.maxResolution)?r=0:n=f/Math.pow(s,r),void 0===(i=t.minResolution)&&(i=void 0!==t.maxZoom?void 0!==t.maxResolution?n/Math.pow(s,o):f/Math.pow(s,o):d),o=r+Math.floor(Math.log(n/i)/Math.log(s)),i=n/Math.pow(s,o-r),t.constrainResolution)e=function(t,e,n,i,r){return function(o,s,a,u){if(void 0!==o){var h=r?hn(e,r,a):e,l=void 0!==n?n:0;if(u)return void 0===i||i?ln(o,h,l):Ee(o,l,h);var c=-s*(.5-1e-9)+.5,p=Math.min(h,o),f=Math.floor(Math.log(e/p)/Math.log(t)+c);return Ee(e/Math.pow(t,f),l,h)}}}(s,n,i,u,!t.constrainOnlyCenter&&t.extent);else{var _=t.constrainOnlyCenter,g=t.extent;a||g||!l.isGlobal()||(_=!1,g=l.getExtent()),e=cn(n,i,u,!_&&g)}}return{constraint:e,maxResolution:n,minResolution:i,minZoom:r,zoomFactor:s}}(t);this.maxResolution_=e.maxResolution,this.minResolution_=e.minResolution,this.zoomFactor_=e.zoomFactor,this.resolutions_=t.resolutions,this.minZoom_=e.minZoom;var n=function(t){return void 0!==t.extent?(e=t.extent,n=t.constrainOnlyCenter,i=void 0===t.smoothExtentConstraint||t.smoothExtentConstraint,function(t,r,o,s){if(t){var a=n?0:o[0]*r,u=n?0:o[1]*r,h=e[0]+a/2,l=e[2]-a/2,c=e[1]+u/2,p=e[3]-u/2;h>l&&(h=l=(l+h)/2),c>p&&(c=p=(p+c)/2);var f=Ee(t[0],h,l),d=Ee(t[1],c,p),_=30*r;return s&&i&&(f+=-_*Math.log(1+Math.max(0,h-t[0])/_)+_*Math.log(1+Math.max(0,t[0]-l)/_),d+=-_*Math.log(1+Math.max(0,c-t[1])/_)+_*Math.log(1+Math.max(0,t[1]-p)/_)),[f,d]}}):Se;var e,n,i}(t),i=e.constraint,r=function(t){if(void 0===t.enableRotation||t.enableRotation){var e=t.constrainRotation;return void 0===e||!0===e?(o=r||Te(5),function(t,e){return e?t:void 0!==t?Math.abs(t)<=o?0:t:void 0}):!1===e?fn:\"number\"==typeof e?(n=e,i=2*Math.PI/n,function(t,e){return e?t:void 0!==t?t=Math.floor(t/i+.5)*i:void 0}):fn}return pn;var n,i;var r,o}(t);this.constraints_={center:n,resolution:i,rotation:r},this.setRotation(void 0!==t.rotation?t.rotation:0),this.setCenter(void 0!==t.center?t.center:null),void 0!==t.resolution?this.setResolution(t.resolution):void 0!==t.zoom&&this.setZoom(t.zoom),this.resolveConstraints(0),this.setProperties({}),this.options_=t},e.prototype.getUpdatedOptions_=function(t){var e=p({},this.options_);return void 0!==e.resolution?e.resolution=this.getResolution():e.zoom=this.getZoom(),e.center=this.getCenter(),e.rotation=this.getRotation(),p({},e,t)},e.prototype.animate=function(t){this.isDef()&&!this.getAnimating()&&this.resolveConstraints(0),this.animate_.apply(this,arguments)},e.prototype.animate_=function(t){var e,n=arguments.length;if(n>1&&\"function\"==typeof arguments[n-1]&&(e=arguments[n-1],--n),!this.isDef()){var i=arguments[n-1];return i.center&&this.setCenter(i.center),void 0!==i.zoom&&this.setZoom(i.zoom),void 0!==i.rotation&&this.setRotation(i.rotation),void(e&&ar(e,!0))}for(var r=Date.now(),o=this.targetCenter_.slice(),s=this.targetResolution_,a=this.targetRotation_,u=[],h=0;h<n;++h){var l=arguments[h],c={start:r,complete:!1,anchor:l.anchor,duration:void 0!==l.duration?l.duration:1e3,easing:l.easing||wn,callback:e};if(l.center&&(c.sourceCenter=o,c.targetCenter=l.center.slice(),o=c.targetCenter),void 0!==l.zoom?(c.sourceResolution=s,c.targetResolution=this.getResolutionForZoom(l.zoom),s=c.targetResolution):l.resolution&&(c.sourceResolution=s,c.targetResolution=l.resolution,s=c.targetResolution),void 0!==l.rotation){c.sourceRotation=a;var p=be(l.rotation-a+Math.PI,2*Math.PI)-Math.PI;c.targetRotation=a+p,a=c.targetRotation}ur(c)?c.complete=!0:r+=c.duration,u.push(c)}this.animations_.push(u),this.setHint(dn,1),this.updateAnimations_()},e.prototype.getAnimating=function(){return this.hints_[dn]>0},e.prototype.getInteracting=function(){return this.hints_[_n]>0},e.prototype.cancelAnimations=function(){this.setHint(dn,-this.hints_[dn]);for(var t=0,e=this.animations_.length;t<e;++t){var n=this.animations_[t];n[0].callback&&ar(n[0].callback,!1)}this.animations_.length=0},e.prototype.updateAnimations_=function(){if(void 0!==this.updateAnimationKey_&&(cancelAnimationFrame(this.updateAnimationKey_),this.updateAnimationKey_=void 0),this.getAnimating()){for(var t=Date.now(),e=!1,n=this.animations_.length-1;n>=0;--n){for(var i=this.animations_[n],r=!0,o=0,s=i.length;o<s;++o){var a=i[o];if(!a.complete){var u=t-a.start,h=a.duration>0?u/a.duration:1;h>=1?(a.complete=!0,h=1):r=!1;var l=a.easing(h);if(a.sourceCenter){var c=a.sourceCenter[0],p=a.sourceCenter[1],f=c+l*(a.targetCenter[0]-c),d=p+l*(a.targetCenter[1]-p);this.targetCenter_=[f,d]}if(a.sourceResolution&&a.targetResolution){var _=1===l?a.targetResolution:a.sourceResolution+l*(a.targetResolution-a.sourceResolution);if(a.anchor){var g=this.getSizeFromViewport_(this.getRotation()),y=this.constraints_.resolution(_,0,g,!0);this.targetCenter_=this.calculateCenterZoom(y,a.anchor)}this.targetResolution_=_,this.applyTargetState_(!0)}if(void 0!==a.sourceRotation&&void 0!==a.targetRotation){var v=1===l?be(a.targetRotation+Math.PI,2*Math.PI)-Math.PI:a.sourceRotation+l*(a.targetRotation-a.sourceRotation);if(a.anchor){var m=this.constraints_.rotation(v,!0);this.targetCenter_=this.calculateCenterRotate(m,a.anchor)}this.targetRotation_=v}if(this.applyTargetState_(!0),e=!0,!a.complete)break}}if(r){this.animations_[n]=null,this.setHint(dn,-1);var x=i[0].callback;x&&ar(x,!0)}}this.animations_=this.animations_.filter(Boolean),e&&void 0===this.updateAnimationKey_&&(this.updateAnimationKey_=requestAnimationFrame(this.updateAnimations_.bind(this)))}},e.prototype.calculateCenterRotate=function(t,e){var n,i,r,o=this.getCenter();return void 0!==o&&(xn(n=[o[0]-e[0],o[1]-e[1]],t-this.getRotation()),r=e,(i=n)[0]+=+r[0],i[1]+=+r[1]),n},e.prototype.calculateCenterZoom=function(t,e){var n,i=this.getCenter(),r=this.getResolution();void 0!==i&&void 0!==r&&(n=[e[0]-t*(e[0]-i[0])/r,e[1]-t*(e[1]-i[1])/r]);return n},e.prototype.getSizeFromViewport_=function(t){var e=[100,100],n='.ol-viewport[data-view=\"'+o(this)+'\"]',i=document.querySelector(n);if(i){var r=getComputedStyle(i);e[0]=parseInt(r.width,10),e[1]=parseInt(r.height,10)}if(t){var s=e[0],a=e[1];e[0]=Math.abs(s*Math.cos(t))+Math.abs(a*Math.sin(t)),e[1]=Math.abs(s*Math.sin(t))+Math.abs(a*Math.cos(t))}return e},e.prototype.getCenter=function(){return this.get(gn)},e.prototype.getConstraints=function(){return this.constraints_},e.prototype.getHints=function(t){return void 0!==t?(t[0]=this.hints_[0],t[1]=this.hints_[1],t):this.hints_.slice()},e.prototype.calculateExtent=function(t){var e=t||this.getSizeFromViewport_(),n=this.getCenter();_e(n,1);var i=this.getResolution();_e(void 0!==i,2);var r=this.getRotation();return _e(void 0!==r,3),tn(n,i,r,e)},e.prototype.getMaxResolution=function(){return this.maxResolution_},e.prototype.getMinResolution=function(){return this.minResolution_},e.prototype.getMaxZoom=function(){return this.getZoomForResolution(this.minResolution_)},e.prototype.setMaxZoom=function(t){this.applyOptions_(this.getUpdatedOptions_({maxZoom:t}))},e.prototype.getMinZoom=function(){return this.getZoomForResolution(this.maxResolution_)},e.prototype.setMinZoom=function(t){this.applyOptions_(this.getUpdatedOptions_({minZoom:t}))},e.prototype.setConstrainResolution=function(t){this.applyOptions_(this.getUpdatedOptions_({constrainResolution:t}))},e.prototype.getProjection=function(){return this.projection_},e.prototype.getResolution=function(){return this.get(yn)},e.prototype.getResolutions=function(){return this.resolutions_},e.prototype.getResolutionForExtent=function(t,e){var n=e||this.getSizeFromViewport_(),i=sn(t)/n[0],r=en(t)/n[1];return Math.max(i,r)},e.prototype.getResolutionForValueFunction=function(t){var e=t||2,n=this.maxResolution_,i=this.minResolution_,r=Math.log(n/i)/Math.log(e);return function(t){return n/Math.pow(e,t*r)}},e.prototype.getRotation=function(){return this.get(vn)},e.prototype.getValueForResolutionFunction=function(t){var e=t||2,n=this.maxResolution_,i=this.minResolution_,r=Math.log(n/i)/Math.log(e);return function(t){return Math.log(n/t)/Math.log(e)/r}},e.prototype.getState=function(t){var e=this.getCenter(),n=this.getProjection(),i=this.getResolution(),r=this.getRotation();return{center:e.slice(0),projection:void 0!==n?n:null,resolution:i,rotation:r,zoom:this.getZoom()}},e.prototype.getZoom=function(){var t,e=this.getResolution();return void 0!==e&&(t=this.getZoomForResolution(e)),t},e.prototype.getZoomForResolution=function(t){var e,n,i=this.minZoom_||0;if(this.resolutions_){var r=Wt(this.resolutions_,t,1);i=r,e=this.resolutions_[r],n=r==this.resolutions_.length-1?2:e/this.resolutions_[r+1]}else e=this.maxResolution_,n=this.zoomFactor_;return i+Math.log(e/t)/Math.log(n)},e.prototype.getResolutionForZoom=function(t){if(this.resolutions_){if(this.resolutions_.length<=1)return 0;var e=Ee(Math.floor(t),0,this.resolutions_.length-2),n=this.resolutions_[e]/this.resolutions_[e+1];return this.resolutions_[e]/Math.pow(n,Ee(t-e,0,1))}return this.maxResolution_/Math.pow(this.zoomFactor_,t-this.minZoom_)},e.prototype.fit=function(t,e){var n,i=e||{},r=i.size;r||(r=this.getSizeFromViewport_()),_e(Array.isArray(t)||\"function\"==typeof t.getSimplifiedGeometry,24),Array.isArray(t)?(_e(!un(t),25),n=rr(t)):t.getType()===Tn.CIRCLE?(n=rr(t=t.getExtent())).rotate(this.getRotation(),Qe(t)):n=t;var o,s=void 0!==i.padding?i.padding:[0,0,0,0],a=void 0!==i.nearest&&i.nearest;o=void 0!==i.minResolution?i.minResolution:void 0!==i.maxZoom?this.getResolutionForZoom(i.maxZoom):0;for(var u=n.getFlatCoordinates(),h=this.getRotation(),l=Math.cos(-h),c=Math.sin(-h),p=1/0,f=1/0,d=-1/0,_=-1/0,g=n.getStride(),y=0,v=u.length;y<v;y+=g){var m=u[y]*l-u[y+1]*c,x=u[y]*c+u[y+1]*l;p=Math.min(p,m),f=Math.min(f,x),d=Math.max(d,m),_=Math.max(_,x)}var E=this.getResolutionForExtent([p,f,d,_],[r[0]-s[1]-s[3],r[1]-s[0]-s[2]]);E=isNaN(E)?o:Math.max(E,o),E=this.getConstrainedResolution(E,a?0:1),c=-c;var C=(p+d)/2,w=(f+_)/2,O=[(C+=(s[1]-s[3])/2*E)*l-(w+=(s[0]-s[2])/2*E)*c,w*l+C*c],T=i.callback?i.callback:R;void 0!==i.duration?this.animate_({resolution:E,center:this.getConstrainedCenter(O,E),duration:i.duration,easing:i.easing},T):(this.targetResolution_=E,this.targetCenter_=O,this.applyTargetState_(!1,!0),ar(T,!0))},e.prototype.centerOn=function(t,e,n){var i=this.getRotation(),r=Math.cos(-i),o=Math.sin(-i),s=t[0]*r-t[1]*o,a=t[1]*r+t[0]*o,u=this.getResolution(),h=(s+=(e[0]/2-n[0])*u)*r-(a+=(n[1]-e[1]/2)*u)*(o=-o),l=a*r+s*o;this.setCenter([h,l])},e.prototype.isDef=function(){return!!this.getCenter()&&void 0!==this.getResolution()},e.prototype.adjustCenter=function(t){var e=this.targetCenter_;this.setCenter([e[0]+t[0],e[1]+t[1]])},e.prototype.adjustResolution=function(t,e){var n=this.getAnimating()||this.getInteracting(),i=this.getSizeFromViewport_(this.getRotation()),r=this.constraints_.resolution(this.targetResolution_*t,0,i,n);void 0!==e&&(this.targetCenter_=this.calculateCenterZoom(r,e)),this.targetResolution_*=t,this.applyTargetState_()},e.prototype.adjustZoom=function(t,e){this.adjustResolution(Math.pow(this.zoomFactor_,-t),e)},e.prototype.adjustRotation=function(t,e){var n=this.getAnimating()||this.getInteracting(),i=this.constraints_.rotation(this.targetRotation_+t,n);void 0!==e&&(this.targetCenter_=this.calculateCenterRotate(i,e)),this.targetRotation_+=t,this.applyTargetState_()},e.prototype.setCenter=function(t){this.targetCenter_=t,this.applyTargetState_()},e.prototype.setHint=function(t,e){return this.hints_[t]+=e,this.changed(),this.hints_[t]},e.prototype.setResolution=function(t){this.targetResolution_=t,this.applyTargetState_()},e.prototype.setRotation=function(t){this.targetRotation_=t,this.applyTargetState_()},e.prototype.setZoom=function(t){this.setResolution(this.getResolutionForZoom(t))},e.prototype.applyTargetState_=function(t,e){var n=this.getAnimating()||this.getInteracting()||e,i=this.constraints_.rotation(this.targetRotation_,n),r=this.getSizeFromViewport_(i),o=this.constraints_.resolution(this.targetResolution_,0,r,n),s=this.constraints_.center(this.targetCenter_,o,r,n);this.get(vn)!==i&&this.set(vn,i),this.get(yn)!==o&&this.set(yn,o),this.get(gn)&&mn(this.get(gn),s)||this.set(gn,s),this.getAnimating()&&!t&&this.cancelAnimations()},e.prototype.resolveConstraints=function(t,e,n){var i=void 0!==t?t:200,r=e||0,o=this.constraints_.rotation(this.targetRotation_),s=this.getSizeFromViewport_(o),a=this.constraints_.resolution(this.targetResolution_,r,s),u=this.constraints_.center(this.targetCenter_,a,s);if(0===i)return this.targetResolution_=a,this.targetRotation_=o,this.targetCenter_=u,void this.applyTargetState_();this.getResolution()===a&&this.getRotation()===o&&this.getCenter()&&mn(this.getCenter(),u)||(this.getAnimating()&&this.cancelAnimations(),this.animate_({rotation:o,center:u,resolution:a,duration:i,easing:Cn,anchor:n}))},e.prototype.beginInteraction=function(){this.resolveConstraints(0),this.setHint(_n,1)},e.prototype.endInteraction=function(t,e,n){this.setHint(_n,-1),this.resolveConstraints(t,e,n)},e.prototype.getConstrainedCenter=function(t,e){var n=this.getSizeFromViewport_(this.getRotation());return this.constraints_.center(t,e||this.getResolution(),n)},e.prototype.getConstrainedZoom=function(t,e){var n=this.getResolutionForZoom(t);return this.getZoomForResolution(this.getConstrainedResolution(n))},e.prototype.getConstrainedResolution=function(t,e){var n=e||0,i=this.getSizeFromViewport_(this.getRotation());return this.constraints_.resolution(t,n,i)},e}(j);function lr(t,e){var n=document.createElement(\"canvas\");return t&&(n.width=t),e&&(n.height=e),n.getContext(\"2d\")}function cr(t,e){var n=e.parentNode;n&&n.replaceChild(t,e)}function pr(t){return t&&t.parentNode?t.parentNode.removeChild(t):null}var fr={OPACITY:\"opacity\",VISIBLE:\"visible\",EXTENT:\"extent\",Z_INDEX:\"zIndex\",MAX_RESOLUTION:\"maxResolution\",MIN_RESOLUTION:\"minResolution\",SOURCE:\"source\"},dr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_r=function(t){function e(e){var n=t.call(this)||this,i=p({},e);return i[fr.OPACITY]=void 0!==e.opacity?e.opacity:1,i[fr.VISIBLE]=void 0===e.visible||e.visible,i[fr.Z_INDEX]=e.zIndex,i[fr.MAX_RESOLUTION]=void 0!==e.maxResolution?e.maxResolution:1/0,i[fr.MIN_RESOLUTION]=void 0!==e.minResolution?e.minResolution:0,n.className_=void 0!==i.className?e.className:\"ol-layer\",delete i.className,n.setProperties(i),n.state_=null,n}return dr(e,t),e.prototype.getClassName=function(){return this.className_},e.prototype.getLayerState=function(){var t=this.state_||{layer:this,managed:!0};return t.opacity=Ee(Math.round(100*this.getOpacity())/100,0,1),t.sourceState=this.getSourceState(),t.visible=this.getVisible(),t.extent=this.getExtent(),t.zIndex=this.getZIndex()||0,t.maxResolution=this.getMaxResolution(),t.minResolution=Math.max(this.getMinResolution(),0),this.state_=t,t},e.prototype.getLayersArray=function(t){return i()},e.prototype.getLayerStatesArray=function(t){return i()},e.prototype.getExtent=function(){return this.get(fr.EXTENT)},e.prototype.getMaxResolution=function(){return this.get(fr.MAX_RESOLUTION)},e.prototype.getMinResolution=function(){return this.get(fr.MIN_RESOLUTION)},e.prototype.getOpacity=function(){return this.get(fr.OPACITY)},e.prototype.getSourceState=function(){return i()},e.prototype.getVisible=function(){return this.get(fr.VISIBLE)},e.prototype.getZIndex=function(){return this.get(fr.Z_INDEX)},e.prototype.setExtent=function(t){this.set(fr.EXTENT,t)},e.prototype.setMaxResolution=function(t){this.set(fr.MAX_RESOLUTION,t)},e.prototype.setMinResolution=function(t){this.set(fr.MIN_RESOLUTION,t)},e.prototype.setOpacity=function(t){this.set(fr.OPACITY,t)},e.prototype.setVisible=function(t){this.set(fr.VISIBLE,t)},e.prototype.setZIndex=function(t){this.set(fr.Z_INDEX,t)},e}(j),gr={UNDEFINED:\"undefined\",LOADING:\"loading\",READY:\"ready\",ERROR:\"error\"},yr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),vr={LAYERS:\"layers\"},mr=function(t){function e(e){var n=this,i=e||{},r=p({},i);delete r.layers;var o=i.layers;return(n=t.call(this,r)||this).layersListenerKeys_=[],n.listenerKeys_={},x(n,N(vr.LAYERS),n.handleLayersChanged_,n),o?Array.isArray(o)?o=new K(o.slice(),{unique:!0}):_e(\"function\"==typeof o.getArray,43):o=new K(void 0,{unique:!0}),n.setLayers(o),n}return yr(e,t),e.prototype.handleLayerChange_=function(){this.changed()},e.prototype.handleLayersChanged_=function(){this.layersListenerKeys_.forEach(w),this.layersListenerKeys_.length=0;var t=this.getLayers();for(var e in this.layersListenerKeys_.push(x(t,l.ADD,this.handleLayersAdd_,this),x(t,l.REMOVE,this.handleLayersRemove_,this)),this.listenerKeys_)this.listenerKeys_[e].forEach(w);f(this.listenerKeys_);for(var n=t.getArray(),i=0,r=n.length;i<r;i++){var s=n[i];this.listenerKeys_[o(s)]=[x(s,c,this.handleLayerChange_,this),x(s,L.CHANGE,this.handleLayerChange_,this)]}this.changed()},e.prototype.handleLayersAdd_=function(t){var e=t.element;this.listenerKeys_[o(e)]=[x(e,c,this.handleLayerChange_,this),x(e,L.CHANGE,this.handleLayerChange_,this)],this.changed()},e.prototype.handleLayersRemove_=function(t){var e=o(t.element);this.listenerKeys_[e].forEach(w),delete this.listenerKeys_[e],this.changed()},e.prototype.getLayers=function(){return this.get(vr.LAYERS)},e.prototype.setLayers=function(t){this.set(vr.LAYERS,t)},e.prototype.getLayersArray=function(t){var e=void 0!==t?t:[];return this.getLayers().forEach(function(t){t.getLayersArray(e)}),e},e.prototype.getLayerStatesArray=function(t){var e=void 0!==t?t:[],n=e.length;this.getLayers().forEach(function(t){t.getLayerStatesArray(e)});for(var i=this.getLayerState(),r=n,o=e.length;r<o;r++){var s=e[r];s.opacity*=i.opacity,s.visible=s.visible&&i.visible,s.maxResolution=Math.min(s.maxResolution,i.maxResolution),s.minResolution=Math.max(s.minResolution,i.minResolution),void 0!==i.extent&&(void 0!==s.extent?s.extent=nn(s.extent,i.extent):s.extent=i.extent)}return e},e.prototype.getSourceState=function(){return gr.READY},e}(_r);function xr(t,e){return Array.isArray(t)?t:(void 0===e?e=[t,t]:e[0]=e[1]=t,e)}var Er=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();var Cr=function(t){function e(e){var n=t.call(this)||this,i=function(t){var e=null;void 0!==t.keyboardEventTarget&&(e=\"string\"==typeof t.keyboardEventTarget?document.getElementById(t.keyboardEventTarget):t.keyboardEventTarget);var n,i,r,o={},s=t.layers&&\"function\"==typeof t.layers.getLayers?t.layers:new mr({layers:t.layers});o[ue.LAYERGROUP]=s,o[ue.TARGET]=t.target,o[ue.VIEW]=void 0!==t.view?t.view:new hr,void 0!==t.controls&&(Array.isArray(t.controls)?n=new K(t.controls.slice()):(_e(\"function\"==typeof t.controls.getArray,47),n=t.controls));void 0!==t.interactions&&(Array.isArray(t.interactions)?i=new K(t.interactions.slice()):(_e(\"function\"==typeof t.interactions.getArray,48),i=t.interactions));void 0!==t.overlays?Array.isArray(t.overlays)?r=new K(t.overlays.slice()):(_e(\"function\"==typeof t.overlays.getArray,49),r=t.overlays):r=new K;return{controls:n,interactions:i,keyboardEventTarget:e,overlays:r,values:o}}(e);for(var r in n.maxTilesLoading_=void 0!==e.maxTilesLoading?e.maxTilesLoading:16,n.pixelRatio_=void 0!==e.pixelRatio?e.pixelRatio:$,n.animationDelayKey_,n.animationDelay_=function(){this.animationDelayKey_=void 0,this.renderFrame_(Date.now())}.bind(n),n.coordinateToPixelTransform_=[1,0,0,1,0,0],n.pixelToCoordinateTransform_=[1,0,0,1,0,0],n.frameIndex_=0,n.frameState_=null,n.previousExtent_=null,n.viewPropertyListenerKey_=null,n.viewChangeListenerKey_=null,n.layerGroupPropertyListenerKeys_=null,n.viewport_=document.createElement(\"div\"),n.viewport_.className=\"ol-viewport\"+(tt?\" ol-touch\":\"\"),n.viewport_.style.position=\"relative\",n.viewport_.style.overflow=\"hidden\",n.viewport_.style.width=\"100%\",n.viewport_.style.height=\"100%\",n.viewport_.style.msTouchAction=\"none\",n.viewport_.style.touchAction=\"none\",n.overlayContainer_=document.createElement(\"div\"),n.overlayContainer_.style.position=\"absolute\",n.overlayContainer_.style.zIndex=\"0\",n.overlayContainer_.style.width=\"100%\",n.overlayContainer_.style.height=\"100%\",n.overlayContainer_.className=\"ol-overlaycontainer\",n.viewport_.appendChild(n.overlayContainer_),n.overlayContainerStopEvent_=document.createElement(\"div\"),n.overlayContainerStopEvent_.style.position=\"absolute\",n.overlayContainerStopEvent_.style.zIndex=\"0\",n.overlayContainerStopEvent_.style.width=\"100%\",n.overlayContainerStopEvent_.style.height=\"100%\",n.overlayContainerStopEvent_.className=\"ol-overlaycontainer-stopevent\",n.viewport_.appendChild(n.overlayContainerStopEvent_),n.mapBrowserEventHandler_=new re(n,e.moveTolerance),it)x(n.mapBrowserEventHandler_,it[r],n.handleMapBrowserEvent,n);return n.keyboardEventTarget_=i.keyboardEventTarget,n.keyHandlerKeys_=null,x(n.viewport_,L.CONTEXTMENU,n.handleBrowserEvent,n),x(n.viewport_,L.WHEEL,n.handleBrowserEvent,n),x(n.viewport_,L.MOUSEWHEEL,n.handleBrowserEvent,n),n.controls=i.controls||new K,n.interactions=i.interactions||new K,n.overlays_=i.overlays,n.overlayIdIndex_={},n.renderer_=n.createRenderer(),n.handleResize_,n.focus_=null,n.postRenderFunctions_=[],n.tileQueue_=new ve(n.getTilePriority.bind(n),n.handleTileChange_.bind(n)),n.skippedFeatureUids_={},x(n,N(ue.LAYERGROUP),n.handleLayerGroupChanged_,n),x(n,N(ue.VIEW),n.handleViewChanged_,n),x(n,N(ue.SIZE),n.handleSizeChanged_,n),x(n,N(ue.TARGET),n.handleTargetChanged_,n),n.setProperties(i.values),n.controls.forEach(function(t){t.setMap(this)}.bind(n)),x(n.controls,l.ADD,function(t){t.element.setMap(this)},n),x(n.controls,l.REMOVE,function(t){t.element.setMap(null)},n),n.interactions.forEach(function(t){t.setMap(this)}.bind(n)),x(n.interactions,l.ADD,function(t){t.element.setMap(this)},n),x(n.interactions,l.REMOVE,function(t){t.element.setMap(null)},n),n.overlays_.forEach(n.addOverlayInternal_.bind(n)),x(n.overlays_,l.ADD,function(t){this.addOverlayInternal_(t.element)},n),x(n.overlays_,l.REMOVE,function(t){var e=t.element.getId();void 0!==e&&delete this.overlayIdIndex_[e.toString()],t.element.setMap(null)},n),n}return Er(e,t),e.prototype.createRenderer=function(){throw new Error(\"Use a map type that has a createRenderer method\")},e.prototype.addControl=function(t){this.getControls().push(t)},e.prototype.addInteraction=function(t){this.getInteractions().push(t)},e.prototype.addLayer=function(t){this.getLayerGroup().getLayers().push(t)},e.prototype.addOverlay=function(t){this.getOverlays().push(t)},e.prototype.addOverlayInternal_=function(t){var e=t.getId();void 0!==e&&(this.overlayIdIndex_[e.toString()]=t),t.setMap(this)},e.prototype.disposeInternal=function(){this.mapBrowserEventHandler_.dispose(),C(this.viewport_,L.CONTEXTMENU,this.handleBrowserEvent,this),C(this.viewport_,L.WHEEL,this.handleBrowserEvent,this),C(this.viewport_,L.MOUSEWHEEL,this.handleBrowserEvent,this),void 0!==this.handleResize_&&(removeEventListener(L.RESIZE,this.handleResize_,!1),this.handleResize_=void 0),this.animationDelayKey_&&(cancelAnimationFrame(this.animationDelayKey_),this.animationDelayKey_=void 0),this.setTarget(null),t.prototype.disposeInternal.call(this)},e.prototype.forEachFeatureAtPixel=function(t,e,n){if(this.frameState_){var i=this.getCoordinateFromPixel(t),r=void 0!==(n=void 0!==n?n:{}).hitTolerance?n.hitTolerance*this.frameState_.pixelRatio:0,o=void 0!==n.layerFilter?n.layerFilter:T;return this.renderer_.forEachFeatureAtCoordinate(i,this.frameState_,r,e,null,o,null)}},e.prototype.getFeaturesAtPixel=function(t,e){var n=null;return this.forEachFeatureAtPixel(t,function(t){n||(n=[]),n.push(t)},e),n},e.prototype.forEachLayerAtPixel=function(t,e,n){if(this.frameState_){var i=n||{},r=void 0!==i.hitTolerance?n.hitTolerance*this.frameState_.pixelRatio:0,o=i.layerFilter||T;return this.renderer_.forEachLayerAtPixel(t,this.frameState_,r,e,o)}},e.prototype.hasFeatureAtPixel=function(t,e){if(!this.frameState_)return!1;var n=this.getCoordinateFromPixel(t),i=void 0!==(e=void 0!==e?e:{}).layerFilter?e.layerFilter:T,r=void 0!==e.hitTolerance?e.hitTolerance*this.frameState_.pixelRatio:0;return this.renderer_.hasFeatureAtCoordinate(n,this.frameState_,r,i,null)},e.prototype.getEventCoordinate=function(t){return this.getCoordinateFromPixel(this.getEventPixel(t))},e.prototype.getEventPixel=function(t){var e=this.viewport_.getBoundingClientRect(),n=\"changedTouches\"in t?t.changedTouches[0]:t;return[n.clientX-e.left,n.clientY-e.top]},e.prototype.getTarget=function(){return this.get(ue.TARGET)},e.prototype.getTargetElement=function(){var t=this.getTarget();return void 0!==t?\"string\"==typeof t?document.getElementById(t):t:null},e.prototype.getCoordinateFromPixel=function(t){var e=this.frameState_;return e?pi(e.pixelToCoordinateTransform,t.slice()):null},e.prototype.getControls=function(){return this.controls},e.prototype.getOverlays=function(){return this.overlays_},e.prototype.getOverlayById=function(t){var e=this.overlayIdIndex_[t.toString()];return void 0!==e?e:null},e.prototype.getInteractions=function(){return this.interactions},e.prototype.getLayerGroup=function(){return this.get(ue.LAYERGROUP)},e.prototype.getLayers=function(){return this.getLayerGroup().getLayers()},e.prototype.getPixelFromCoordinate=function(t){var e=this.frameState_;return e?pi(e.coordinateToPixelTransform,t.slice(0,2)):null},e.prototype.getRenderer=function(){return this.renderer_},e.prototype.getSize=function(){return this.get(ue.SIZE)},e.prototype.getView=function(){return this.get(ue.VIEW)},e.prototype.getViewport=function(){return this.viewport_},e.prototype.getOverlayContainer=function(){return this.overlayContainer_},e.prototype.getOverlayContainerStopEvent=function(){return this.overlayContainerStopEvent_},e.prototype.getTilePriority=function(t,e,n,i){var r=this.frameState_;if(!(r&&e in r.wantedTiles))return 1/0;if(!r.wantedTiles[e][t.getKey()])return 1/0;var o=n[0]-r.focus[0],s=n[1]-r.focus[1];return 65536*Math.log(i)+Math.sqrt(o*o+s*s)/i},e.prototype.handleBrowserEvent=function(t,e){var n=e||t.type,i=new Z(n,this,t);this.handleMapBrowserEvent(i)},e.prototype.handleMapBrowserEvent=function(t){if(this.frameState_){for(var e=t.originalEvent.target;e instanceof HTMLElement;){if(e.parentElement===this.overlayContainerStopEvent_)return;e=e.parentElement}this.focus_=t.coordinate,t.frameState=this.frameState_;var n=this.getInteractions().getArray();if(!1!==this.dispatchEvent(t))for(var i=n.length-1;i>=0;i--){var r=n[i];if(r.getActive())if(!r.handleEvent(t))break}}},e.prototype.handlePostRender=function(){var t=this.frameState_,e=this.tileQueue_;if(!e.isEmpty()){var n=this.maxTilesLoading_,i=n;if(t){var r=t.viewHints;if(r[dn]||r[_n]){var o=Date.now()-t.time>8;n=o?0:8,i=o?0:2}}e.getTilesLoading()<n&&(e.reprioritize(),e.loadMoreTiles(n,i))}!t||!this.hasListener(fe)||t.animate||this.tileQueue_.getTilesLoading()||function t(e){for(var n=0,i=e.length;n<i;++n){var r=e[n];if(\"function\"==typeof r.getLayers)return t(r.getLayers().getArray());var o=r.getSource();if(o&&o.loading)return!0}return!1}(this.getLayers().getArray())||this.renderer_.dispatchRenderEvent(fe,t);for(var s=this.postRenderFunctions_,a=0,u=s.length;a<u;++a)s[a](this,t);s.length=0},e.prototype.handleSizeChanged_=function(){this.getView()&&this.getView().resolveConstraints(0),this.render()},e.prototype.handleTargetChanged_=function(){var t;if(this.getTarget()&&(t=this.getTargetElement()),this.keyHandlerKeys_){for(var e=0,n=this.keyHandlerKeys_.length;e<n;++e)w(this.keyHandlerKeys_[e]);this.keyHandlerKeys_=null}if(t){t.appendChild(this.viewport_);var i=this.keyboardEventTarget_?this.keyboardEventTarget_:t;this.keyHandlerKeys_=[x(i,L.KEYDOWN,this.handleBrowserEvent,this),x(i,L.KEYPRESS,this.handleBrowserEvent,this)],this.handleResize_||(this.handleResize_=this.updateSize.bind(this),addEventListener(L.RESIZE,this.handleResize_,!1))}else this.renderer_.removeLayerRenderers(),pr(this.viewport_),void 0!==this.handleResize_&&(removeEventListener(L.RESIZE,this.handleResize_,!1),this.handleResize_=void 0);this.updateSize()},e.prototype.handleTileChange_=function(){this.render()},e.prototype.handleViewPropertyChanged_=function(){this.render()},e.prototype.handleViewChanged_=function(){this.viewPropertyListenerKey_&&(w(this.viewPropertyListenerKey_),this.viewPropertyListenerKey_=null),this.viewChangeListenerKey_&&(w(this.viewChangeListenerKey_),this.viewChangeListenerKey_=null);var t=this.getView();t&&(this.viewport_.setAttribute(\"data-view\",o(t)),this.viewPropertyListenerKey_=x(t,c,this.handleViewPropertyChanged_,this),this.viewChangeListenerKey_=x(t,L.CHANGE,this.handleViewPropertyChanged_,this),t.resolveConstraints(0)),this.render()},e.prototype.handleLayerGroupChanged_=function(){this.layerGroupPropertyListenerKeys_&&(this.layerGroupPropertyListenerKeys_.forEach(w),this.layerGroupPropertyListenerKeys_=null);var t=this.getLayerGroup();t&&(this.layerGroupPropertyListenerKeys_=[x(t,c,this.render,this),x(t,L.CHANGE,this.render,this)]),this.render()},e.prototype.isRendered=function(){return!!this.frameState_},e.prototype.renderSync=function(){this.animationDelayKey_&&cancelAnimationFrame(this.animationDelayKey_),this.animationDelay_()},e.prototype.render=function(){void 0===this.animationDelayKey_&&(this.animationDelayKey_=requestAnimationFrame(this.animationDelay_))},e.prototype.removeControl=function(t){return this.getControls().remove(t)},e.prototype.removeInteraction=function(t){return this.getInteractions().remove(t)},e.prototype.removeLayer=function(t){return this.getLayerGroup().getLayers().remove(t)},e.prototype.removeOverlay=function(t){return this.getOverlays().remove(t)},e.prototype.renderFrame_=function(t){var e,n=this.getSize(),i=this.getView(),r=[1/0,1/0,-1/0,-1/0],o=this.frameState_,s=null;if(void 0!==n&&function(t){return t[0]>0&&t[1]>0}(n)&&i&&i.isDef()){var a=i.getHints(this.frameState_?this.frameState_.viewHints:void 0);e=i.getState(this.pixelRatio_),s={animate:!1,coordinateToPixelTransform:this.coordinateToPixelTransform_,extent:r,focus:this.focus_?this.focus_:e.center,index:this.frameIndex_++,layerStatesArray:this.getLayerGroup().getLayerStatesArray(),pixelRatio:this.pixelRatio_,pixelToCoordinateTransform:this.pixelToCoordinateTransform_,postRenderFunctions:[],size:n,skippedFeatureUids:this.skippedFeatureUids_,tileQueue:this.tileQueue_,time:t,usedTiles:{},viewState:e,viewHints:a,wantedTiles:{}}}if(s&&(s.extent=tn(e.center,e.resolution,e.rotation,s.size,r)),this.frameState_=s,this.renderer_.renderFrame(s),s){if(s.animate&&this.render(),Array.prototype.push.apply(this.postRenderFunctions_,s.postRenderFunctions),o)(!this.previousExtent_||!un(this.previousExtent_)&&!Ke(s.extent,this.previousExtent_))&&(this.dispatchEvent(new U(se,this,o)),this.previousExtent_=Xe(this.previousExtent_));this.previousExtent_&&!s.viewHints[dn]&&!s.viewHints[_n]&&!Ke(s.extent,this.previousExtent_)&&(this.dispatchEvent(new U(ae,this,s)),Fe(s.extent,this.previousExtent_))}this.dispatchEvent(new U(oe,this,s)),setTimeout(this.handlePostRender.bind(this),0)},e.prototype.setLayerGroup=function(t){this.set(ue.LAYERGROUP,t)},e.prototype.setSize=function(t){this.set(ue.SIZE,t)},e.prototype.setTarget=function(t){this.set(ue.TARGET,t)},e.prototype.setView=function(t){this.set(ue.VIEW,t)},e.prototype.skipFeature=function(t){this.skippedFeatureUids_[o(t)]=!0,this.render()},e.prototype.updateSize=function(){var t=this.getTargetElement();if(t){var e=getComputedStyle(t);this.setSize([t.offsetWidth-parseFloat(e.borderLeftWidth)-parseFloat(e.paddingLeft)-parseFloat(e.paddingRight)-parseFloat(e.borderRightWidth),t.offsetHeight-parseFloat(e.borderTopWidth)-parseFloat(e.paddingTop)-parseFloat(e.paddingBottom)-parseFloat(e.borderBottomWidth)])}else this.setSize(void 0)},e.prototype.unskipFeature=function(t){delete this.skippedFeatureUids_[o(t)],this.render()},e}(j);var wr,Or,Tr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),br=function(t){function e(e){var n=t.call(this)||this;return n.element=e.element?e.element:null,n.target_=null,n.map_=null,n.listenerKeys=[],n.render=e.render?e.render:R,e.target&&n.setTarget(e.target),n}return Tr(e,t),e.prototype.disposeInternal=function(){pr(this.element),t.prototype.disposeInternal.call(this)},e.prototype.getMap=function(){return this.map_},e.prototype.setMap=function(t){this.map_&&pr(this.element);for(var e=0,n=this.listenerKeys.length;e<n;++e)w(this.listenerKeys[e]);(this.listenerKeys.length=0,this.map_=t,this.map_)&&((this.target_?this.target_:t.getOverlayContainerStopEvent()).appendChild(this.element),this.render!==R&&this.listenerKeys.push(x(t,oe,this.render,this)),t.render())},e.prototype.setTarget=function(t){this.target_=\"string\"==typeof t?document.getElementById(t):t},e}(j),Rr=\"ol-hidden\",Sr=\"ol-unselectable\",Ir=\"ol-control\",Pr=\"ol-collapsed\",Lr=(Or={},function(t){if(wr||(wr=document.createElement(\"div\").style),!(t in Or)){wr.font=t;var e=wr.fontFamily;if(wr.font=\"\",!e)return null;Or[t]=e.split(/,\\s?/)}return Or[t]}),Mr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Fr(t,e){return t.visible&&e>=t.minResolution&&e<t.maxResolution}var Ar=function(t){function e(e){var n=this,i=p({},e);delete i.source,(n=t.call(this,i)||this).mapPrecomposeKey_=null,n.mapRenderKey_=null,n.sourceChangeKey_=null,n.renderer_=null,e.map&&n.setMap(e.map),x(n,N(fr.SOURCE),n.handleSourcePropertyChange_,n);var r=e.source?e.source:null;return n.setSource(r),n}return Mr(e,t),e.prototype.getLayersArray=function(t){var e=t||[];return e.push(this),e},e.prototype.getLayerStatesArray=function(t){var e=t||[];return e.push(this.getLayerState()),e},e.prototype.getSource=function(){return this.get(fr.SOURCE)||null},e.prototype.getSourceState=function(){var t=this.getSource();return t?t.getState():gr.UNDEFINED},e.prototype.handleSourceChange_=function(){this.changed()},e.prototype.handleSourcePropertyChange_=function(){this.sourceChangeKey_&&(w(this.sourceChangeKey_),this.sourceChangeKey_=null);var t=this.getSource();t&&(this.sourceChangeKey_=x(t,L.CHANGE,this.handleSourceChange_,this)),this.changed()},e.prototype.render=function(t){var e=this.getRenderer(),n=this.getLayerState();if(e.prepareFrame(t,n))return e.renderFrame(t,n)},e.prototype.setMap=function(t){this.mapPrecomposeKey_&&(w(this.mapPrecomposeKey_),this.mapPrecomposeKey_=null),t||this.changed(),this.mapRenderKey_&&(w(this.mapRenderKey_),this.mapRenderKey_=null),t&&(this.mapPrecomposeKey_=x(t,ce,function(t){var e=t,n=this.getLayerState();n.managed=!1,void 0===this.getZIndex()&&(n.zIndex=1/0),e.frameState.layerStatesArray.push(n)},this),this.mapRenderKey_=x(this,L.CHANGE,t.render,t),this.changed())},e.prototype.setSource=function(t){this.set(fr.SOURCE,t)},e.prototype.getRenderer=function(){return this.renderer_||(this.renderer_=this.createRenderer()),this.renderer_},e.prototype.createRenderer=function(){return null},e}(_r),Dr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function kr(t){this.updateElement_(t.frameState)}var Gr=function(t){function e(e){var n=this,i=e||{};(n=t.call(this,{element:document.createElement(\"div\"),render:i.render||kr,target:i.target})||this).ulElement_=document.createElement(\"ul\"),n.collapsed_=void 0===i.collapsed||i.collapsed,n.overrideCollapsible_=void 0!==i.collapsible,n.collapsible_=void 0===i.collapsible||i.collapsible,n.collapsible_||(n.collapsed_=!1);var r=void 0!==i.className?i.className:\"ol-attribution\",o=void 0!==i.tipLabel?i.tipLabel:\"Attributions\",s=void 0!==i.collapseLabel?i.collapseLabel:\"»\";\"string\"==typeof s?(n.collapseLabel_=document.createElement(\"span\"),n.collapseLabel_.textContent=s):n.collapseLabel_=s;var a=void 0!==i.label?i.label:\"i\";\"string\"==typeof a?(n.label_=document.createElement(\"span\"),n.label_.textContent=a):n.label_=a;var u=n.collapsible_&&!n.collapsed_?n.collapseLabel_:n.label_,h=document.createElement(\"button\");h.setAttribute(\"type\",\"button\"),h.title=o,h.appendChild(u),x(h,L.CLICK,n.handleClick_,n);var l=r+\" \"+Sr+\" \"+Ir+(n.collapsed_&&n.collapsible_?\" \"+Pr:\"\")+(n.collapsible_?\"\":\" ol-uncollapsible\"),c=n.element;return c.className=l,c.appendChild(n.ulElement_),c.appendChild(h),n.renderedAttributions_=[],n.renderedVisible_=!0,n}return Dr(e,t),e.prototype.collectSourceAttributions_=function(t){for(var e={},n=[],i=t.layerStatesArray,r=t.viewState.resolution,o=0,s=i.length;o<s;++o){var a=i[o];if(Fr(a,r)){var u=a.layer.getSource();if(u){var h=u.getAttributions();if(h){var l=h(t);if(l)if(this.overrideCollapsible_||!1!==u.getAttributionsCollapsible()||this.setCollapsible(!1),Array.isArray(l))for(var c=0,p=l.length;c<p;++c)l[c]in e||(n.push(l[c]),e[l[c]]=!0);else l in e||(n.push(l),e[l]=!0)}}}}return n},e.prototype.updateElement_=function(t){if(t){var e=this.collectSourceAttributions_(t),n=e.length>0;if(this.renderedVisible_!=n&&(this.element.style.display=n?\"\":\"none\",this.renderedVisible_=n),!Zt(e,this.renderedAttributions_)){!function(t){for(;t.lastChild;)t.removeChild(t.lastChild)}(this.ulElement_);for(var i=0,r=e.length;i<r;++i){var o=document.createElement(\"li\");o.innerHTML=e[i],this.ulElement_.appendChild(o)}this.renderedAttributions_=e}}else this.renderedVisible_&&(this.element.style.display=\"none\",this.renderedVisible_=!1)},e.prototype.handleClick_=function(t){t.preventDefault(),this.handleToggle_()},e.prototype.handleToggle_=function(){this.element.classList.toggle(Pr),this.collapsed_?cr(this.collapseLabel_,this.label_):cr(this.label_,this.collapseLabel_),this.collapsed_=!this.collapsed_},e.prototype.getCollapsible=function(){return this.collapsible_},e.prototype.setCollapsible=function(t){this.collapsible_!==t&&(this.collapsible_=t,this.element.classList.toggle(\"ol-uncollapsible\"),!t&&this.collapsed_&&this.handleToggle_())},e.prototype.setCollapsed=function(t){this.collapsible_&&this.collapsed_!==t&&this.handleToggle_()},e.prototype.getCollapsed=function(){return this.collapsed_},e}(br),Nr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function jr(t){var e=t.frameState;if(e){var n=e.viewState.rotation;if(n!=this.rotation_){var i=\"rotate(\"+n+\"rad)\";if(this.autoHide_){var r=this.element.classList.contains(Rr);r||0!==n?r&&0!==n&&this.element.classList.remove(Rr):this.element.classList.add(Rr)}this.label_.style.transform=i}this.rotation_=n}}var Yr=function(t){function e(e){var n=this,i=e||{};n=t.call(this,{element:document.createElement(\"div\"),render:i.render||jr,target:i.target})||this;var r=void 0!==i.className?i.className:\"ol-rotate\",o=void 0!==i.label?i.label:\"⇧\";n.label_=null,\"string\"==typeof o?(n.label_=document.createElement(\"span\"),n.label_.className=\"ol-compass\",n.label_.textContent=o):(n.label_=o,n.label_.classList.add(\"ol-compass\"));var s=i.tipLabel?i.tipLabel:\"Reset rotation\",a=document.createElement(\"button\");a.className=r+\"-reset\",a.setAttribute(\"type\",\"button\"),a.title=s,a.appendChild(n.label_),x(a,L.CLICK,n.handleClick_,n);var u=r+\" \"+Sr+\" \"+Ir,h=n.element;return h.className=u,h.appendChild(a),n.callResetNorth_=i.resetNorth?i.resetNorth:void 0,n.duration_=void 0!==i.duration?i.duration:250,n.autoHide_=void 0===i.autoHide||i.autoHide,n.rotation_=void 0,n.autoHide_&&n.element.classList.add(Rr),n}return Nr(e,t),e.prototype.handleClick_=function(t){t.preventDefault(),void 0!==this.callResetNorth_?this.callResetNorth_():this.resetNorth_()},e.prototype.resetNorth_=function(){var t=this.getMap().getView();t&&void 0!==t.getRotation()&&(this.duration_>0?t.animate({rotation:0,duration:this.duration_,easing:Cn}):t.setRotation(0))},e}(br),Xr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),zr=function(t){function e(e){var n=this,i=e||{};n=t.call(this,{element:document.createElement(\"div\"),target:i.target})||this;var r=void 0!==i.className?i.className:\"ol-zoom\",o=void 0!==i.delta?i.delta:1,s=void 0!==i.zoomInLabel?i.zoomInLabel:\"+\",a=void 0!==i.zoomOutLabel?i.zoomOutLabel:\"−\",u=void 0!==i.zoomInTipLabel?i.zoomInTipLabel:\"Zoom in\",h=void 0!==i.zoomOutTipLabel?i.zoomOutTipLabel:\"Zoom out\",l=document.createElement(\"button\");l.className=r+\"-in\",l.setAttribute(\"type\",\"button\"),l.title=u,l.appendChild(\"string\"==typeof s?document.createTextNode(s):s),x(l,L.CLICK,n.handleClick_.bind(n,o));var c=document.createElement(\"button\");c.className=r+\"-out\",c.setAttribute(\"type\",\"button\"),c.title=h,c.appendChild(\"string\"==typeof a?document.createTextNode(a):a),x(c,L.CLICK,n.handleClick_.bind(n,-o));var p=r+\" \"+Sr+\" \"+Ir,f=n.element;return f.className=p,f.appendChild(l),f.appendChild(c),n.duration_=void 0!==i.duration?i.duration:250,n}return Xr(e,t),e.prototype.handleClick_=function(t,e){e.preventDefault(),this.zoomByDelta_(t)},e.prototype.zoomByDelta_=function(t){var e=this.getMap().getView();if(e){var n=e.getZoom();if(void 0!==n){var i=e.getConstrainedZoom(n+t);this.duration_>0?(e.getAnimating()&&e.cancelAnimations(),e.animate({zoom:i,duration:this.duration_,easing:Cn})):e.setZoom(i)}}},e}(br);var Kr=function(){function t(t,e,n){this.decay_=t,this.minVelocity_=e,this.delay_=n,this.points_=[],this.angle_=0,this.initialVelocity_=0}return t.prototype.begin=function(){this.points_.length=0,this.angle_=0,this.initialVelocity_=0},t.prototype.update=function(t,e){this.points_.push(t,e,Date.now())},t.prototype.end=function(){if(this.points_.length<6)return!1;var t=Date.now()-this.delay_,e=this.points_.length-3;if(this.points_[e+2]<t)return!1;for(var n=e-3;n>0&&this.points_[n+2]>t;)n-=3;var i=this.points_[e+2]-this.points_[n+2];if(i<1e3/60)return!1;var r=this.points_[e]-this.points_[n],o=this.points_[e+1]-this.points_[n+1];return this.angle_=Math.atan2(o,r),this.initialVelocity_=Math.sqrt(r*r+o*o)/i,this.initialVelocity_>this.minVelocity_},t.prototype.getDistance=function(){return(this.minVelocity_-this.initialVelocity_)/this.decay_},t.prototype.getAngle=function(){return this.angle_},t}(),Wr=\"active\",Ur=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Br(t,e,n,i){var r=t.getZoom();if(void 0!==r){var o=t.getConstrainedZoom(r+e),s=t.getResolutionForZoom(o);t.getAnimating()&&t.cancelAnimations(),t.animate({resolution:s,anchor:n,duration:void 0!==i?i:250,easing:Cn})}}var Zr=function(t){function e(e){var n=t.call(this)||this;return e.handleEvent&&(n.handleEvent=e.handleEvent),n.map_=null,n.setActive(!0),n}return Ur(e,t),e.prototype.getActive=function(){return this.get(Wr)},e.prototype.getMap=function(){return this.map_},e.prototype.handleEvent=function(t){return!0},e.prototype.setActive=function(t){this.set(Wr,t)},e.prototype.setMap=function(t){this.map_=t},e}(j),Vr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Hr(t){var e=!1;if(t.type==it.DBLCLICK){var n=t.originalEvent,i=t.map,r=t.coordinate,o=n.shiftKey?-this.delta_:this.delta_;Br(i.getView(),o,r,this.duration_),t.preventDefault(),e=!0}return!e}var qr=function(t){function e(e){var n=t.call(this,{handleEvent:Hr})||this,i=e||{};return n.delta_=i.delta?i.delta:1,n.duration_=void 0!==i.duration?i.duration:250,n}return Vr(e,t),e}(Zr),Jr=function(t){var e=t.originalEvent;return e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},Qr=function(t){return t.target.getTargetElement()===document.activeElement},$r=T,to=function(t){var e=t.originalEvent;return 0==e.button&&!(J&&Q&&e.ctrlKey)},eo=function(t){var e=t.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&!e.shiftKey},no=function(t){var e=t.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},io=function(t){var e=t.originalEvent.target.tagName;return\"INPUT\"!==e&&\"SELECT\"!==e&&\"TEXTAREA\"!==e},ro=function(t){var e=t.pointerEvent;return _e(void 0!==e,56),\"mouse\"==e.pointerType},oo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function so(t){for(var e=t.length,n=0,i=0,r=0;r<e;r++)n+=t[r].clientX,i+=t[r].clientY;return[n/e,i/e]}var ao=function(t){function e(e){var n=this,i=e||{};return n=t.call(this,i)||this,i.handleDownEvent&&(n.handleDownEvent=i.handleDownEvent),i.handleDragEvent&&(n.handleDragEvent=i.handleDragEvent),i.handleMoveEvent&&(n.handleMoveEvent=i.handleMoveEvent),i.handleUpEvent&&(n.handleUpEvent=i.handleUpEvent),i.stopDown&&(n.stopDown=i.stopDown),n.handlingDownUpSequence=!1,n.trackedPointers_={},n.targetPointers=[],n}return oo(e,t),e.prototype.handleDownEvent=function(t){return!1},e.prototype.handleDragEvent=function(t){},e.prototype.handleEvent=function(t){if(!t.pointerEvent)return!0;var e=!1;if(this.updateTrackedPointers_(t),this.handlingDownUpSequence){if(t.type==it.POINTERDRAG)this.handleDragEvent(t);else if(t.type==it.POINTERUP){var n=this.handleUpEvent(t);this.handlingDownUpSequence=n&&this.targetPointers.length>0}}else if(t.type==it.POINTERDOWN){var i=this.handleDownEvent(t);i&&t.preventDefault(),this.handlingDownUpSequence=i,e=this.stopDown(i)}else t.type==it.POINTERMOVE&&this.handleMoveEvent(t);return!e},e.prototype.handleMoveEvent=function(t){},e.prototype.handleUpEvent=function(t){return!1},e.prototype.stopDown=function(t){return t},e.prototype.updateTrackedPointers_=function(t){if(function(t){var e=t.type;return e===it.POINTERDOWN||e===it.POINTERDRAG||e===it.POINTERUP}(t)){var e=t.pointerEvent,n=e.pointerId.toString();t.type==it.POINTERUP?delete this.trackedPointers_[n]:t.type==it.POINTERDOWN?this.trackedPointers_[n]=e:n in this.trackedPointers_&&(this.trackedPointers_[n]=e),this.targetPointers=d(this.trackedPointers_)}},e}(Zr),uo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ho=function(t){function e(e){var n=t.call(this,{stopDown:b})||this,i=e||{};return n.kinetic_=i.kinetic,n.lastCentroid=null,n.lastPointersCount_,n.panning_=!1,n.condition_=i.condition?i.condition:eo,n.noKinetic_=!1,n}return uo(e,t),e.prototype.handleDragEvent=function(t){var e,n,i=this.targetPointers,r=so(i);if(i.length==this.lastPointersCount_){if(this.kinetic_&&this.kinetic_.update(r[0],r[1]),this.lastCentroid){var o=[this.lastCentroid[0]-r[0],r[1]-this.lastCentroid[1]],s=t.map.getView();e=o,n=s.getResolution(),e[0]*=n,e[1]*=n,xn(o,s.getRotation()),s.adjustCenter(o)}}else this.kinetic_&&this.kinetic_.begin();this.lastCentroid=r,this.lastPointersCount_=i.length},e.prototype.handleUpEvent=function(t){var e=t.map,n=e.getView();if(0===this.targetPointers.length){if(!this.noKinetic_&&this.kinetic_&&this.kinetic_.end()){var i=this.kinetic_.getDistance(),r=this.kinetic_.getAngle(),o=n.getCenter(),s=e.getPixelFromCoordinate(o),a=e.getCoordinateFromPixel([s[0]-i*Math.cos(r),s[1]-i*Math.sin(r)]);n.animate({center:n.getConstrainedCenter(a),duration:500,easing:Cn})}return this.panning_&&(this.panning_=!1,n.endInteraction()),!1}return this.kinetic_&&this.kinetic_.begin(),this.lastCentroid=null,!0},e.prototype.handleDownEvent=function(t){if(this.targetPointers.length>0&&this.condition_(t)){var e=t.map.getView();return this.lastCentroid=null,e.getAnimating()&&e.cancelAnimations(),this.panning_||(this.panning_=!0,this.getMap().getView().beginInteraction()),this.kinetic_&&this.kinetic_.begin(),this.noKinetic_=this.targetPointers.length>1,!0}return!1},e}(ao),lo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),co=function(t){function e(e){var n=this,i=e||{};return(n=t.call(this,{stopDown:b})||this).condition_=i.condition?i.condition:Jr,n.lastAngle_=void 0,n.duration_=void 0!==i.duration?i.duration:250,n}return lo(e,t),e.prototype.handleDragEvent=function(t){if(ro(t)){var e=t.map,n=e.getView();if(n.getConstraints().rotation!==pn){var i=e.getSize(),r=t.pixel,o=Math.atan2(i[1]/2-r[1],r[0]-i[0]/2);if(void 0!==this.lastAngle_){var s=o-this.lastAngle_;n.adjustRotation(-s)}this.lastAngle_=o}}},e.prototype.handleUpEvent=function(t){return!ro(t)||(t.map.getView().endInteraction(this.duration_),!1)},e.prototype.handleDownEvent=function(t){return!!ro(t)&&(!(!to(t)||!this.condition_(t))&&(t.map.getView().beginInteraction(),this.lastAngle_=void 0,!0))},e}(ao),po=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),fo=function(t){function e(e){var n=t.call(this)||this;return n.geometry_=null,n.element_=document.createElement(\"div\"),n.element_.style.position=\"absolute\",n.element_.className=\"ol-box \"+e,n.map_=null,n.startPixel_=null,n.endPixel_=null,n}return po(e,t),e.prototype.disposeInternal=function(){this.setMap(null)},e.prototype.render_=function(){var t=this.startPixel_,e=this.endPixel_,n=this.element_.style;n.left=Math.min(t[0],e[0])+\"px\",n.top=Math.min(t[1],e[1])+\"px\",n.width=Math.abs(e[0]-t[0])+\"px\",n.height=Math.abs(e[1]-t[1])+\"px\"},e.prototype.setMap=function(t){if(this.map_){this.map_.getOverlayContainer().removeChild(this.element_);var e=this.element_.style;e.left=e.top=e.width=e.height=\"inherit\"}this.map_=t,this.map_&&this.map_.getOverlayContainer().appendChild(this.element_)},e.prototype.setPixels=function(t,e){this.startPixel_=t,this.endPixel_=e,this.createOrUpdateGeometry(),this.render_()},e.prototype.createOrUpdateGeometry=function(){var t=this.startPixel_,e=this.endPixel_,n=[t,[t[0],e[1]],e,[e[0],t[1]]].map(this.map_.getCoordinateFromPixel,this.map_);n[4]=n[0].slice(),this.geometry_?this.geometry_.setCoordinates([n]):this.geometry_=new ir([n])},e.prototype.getGeometry=function(){return this.geometry_},e}(O),_o=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),go=\"boxstart\",yo=\"boxdrag\",vo=\"boxend\",mo=function(t){function e(e,n,i){var r=t.call(this,e)||this;return r.coordinate=n,r.mapBrowserEvent=i,r}return _o(e,t),e}(S),xo=function(t){function e(e){var n=t.call(this)||this,i=e||{};return n.box_=new fo(i.className||\"ol-dragbox\"),n.minArea_=void 0!==i.minArea?i.minArea:64,n.onBoxEnd_=i.onBoxEnd?i.onBoxEnd:R,n.startPixel_=null,n.condition_=i.condition?i.condition:$r,n.boxEndCondition_=i.boxEndCondition?i.boxEndCondition:n.defaultBoxEndCondition,n}return _o(e,t),e.prototype.defaultBoxEndCondition=function(t,e,n){var i=n[0]-e[0],r=n[1]-e[1];return i*i+r*r>=this.minArea_},e.prototype.getGeometry=function(){return this.box_.getGeometry()},e.prototype.handleDragEvent=function(t){ro(t)&&(this.box_.setPixels(this.startPixel_,t.pixel),this.dispatchEvent(new mo(yo,t.coordinate,t)))},e.prototype.handleUpEvent=function(t){return!ro(t)||(this.box_.setMap(null),this.boxEndCondition_(t,this.startPixel_,t.pixel)&&(this.onBoxEnd_(t),this.dispatchEvent(new mo(vo,t.coordinate,t))),!1)},e.prototype.handleDownEvent=function(t){return!!ro(t)&&(!(!to(t)||!this.condition_(t))&&(this.startPixel_=t.pixel,this.box_.setMap(t.map),this.box_.setPixels(this.startPixel_,this.startPixel_),this.dispatchEvent(new mo(go,t.coordinate,t)),!0))},e}(ao),Eo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Co(){var t,e,n=this.getMap(),i=n.getView(),r=n.getSize(),o=this.getGeometry().getExtent();if(this.out_){var s=i.calculateExtent(r),a=(t=[n.getPixelFromCoordinate(qe(o)),n.getPixelFromCoordinate(on(o))],Be(Xe(e),t));!function(t,e){var n=(t[2]-t[0])/2*(e-1),i=(t[3]-t[1])/2*(e-1);t[0]-=n,t[2]+=n,t[1]-=i,t[3]+=i}(s,1/i.getResolutionForExtent(a,r)),o=s}var u=i.getConstrainedResolution(i.getResolutionForExtent(o,r)),h=i.getConstrainedCenter(Qe(o),u);i.animate({resolution:u,center:h,duration:this.duration_,easing:Cn})}var wo=function(t){function e(e){var n=this,i=e||{},r=i.condition?i.condition:no;return(n=t.call(this,{condition:r,className:i.className||\"ol-dragzoom\",onBoxEnd:Co})||this).duration_=void 0!==i.duration?i.duration:200,n.out_=void 0!==i.out&&i.out,n}return Eo(e,t),e}(xo),Oo={LEFT:37,UP:38,RIGHT:39,DOWN:40},To=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function bo(t){var e=!1;if(t.type==L.KEYDOWN){var n=t.originalEvent.keyCode;if(this.condition_(t)&&(n==Oo.DOWN||n==Oo.LEFT||n==Oo.RIGHT||n==Oo.UP)){var i=t.map.getView(),r=i.getResolution()*this.pixelDelta_,o=0,s=0;n==Oo.DOWN?s=-r:n==Oo.LEFT?o=-r:n==Oo.RIGHT?o=r:s=r;var a=[o,s];xn(a,i.getRotation()),function(t,e,n){var i=t.getCenter();if(i){var r=[i[0]+e[0],i[1]+e[1]];t.animate_({duration:void 0!==n?n:250,easing:On,center:t.getConstrainedCenter(r)})}}(i,a,this.duration_),t.preventDefault(),e=!0}}return!e}var Ro=function(t){function e(e){var n=t.call(this,{handleEvent:bo})||this,i=e||{};return n.defaultCondition_=function(t){return eo(t)&&io(t)},n.condition_=void 0!==i.condition?i.condition:n.defaultCondition_,n.duration_=void 0!==i.duration?i.duration:100,n.pixelDelta_=void 0!==i.pixelDelta?i.pixelDelta:128,n}return To(e,t),e}(Zr),So=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Io(t){var e=!1;if(t.type==L.KEYDOWN||t.type==L.KEYPRESS){var n=t.originalEvent.charCode;if(this.condition_(t)&&(n==\"+\".charCodeAt(0)||n==\"-\".charCodeAt(0))){var i=t.map,r=n==\"+\".charCodeAt(0)?this.delta_:-this.delta_;Br(i.getView(),r,void 0,this.duration_),t.preventDefault(),e=!0}}return!e}var Po=function(t){function e(e){var n=t.call(this,{handleEvent:Io})||this,i=e||{};return n.condition_=i.condition?i.condition:io,n.delta_=i.delta?i.delta:1,n.duration_=void 0!==i.duration?i.duration:100,n}return So(e,t),e}(Zr),Lo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Mo=\"trackpad\",Fo=\"wheel\",Ao=function(t){function e(e){var n=this,i=e||{};return(n=t.call(this,i)||this).totalDelta_=0,n.lastDelta_=0,n.maxDelta_=void 0!==i.maxDelta?i.maxDelta:1,n.duration_=void 0!==i.duration?i.duration:250,n.timeout_=void 0!==i.timeout?i.timeout:80,n.useAnchor_=void 0===i.useAnchor||i.useAnchor,n.condition_=i.condition?i.condition:$r,n.lastAnchor_=null,n.startTime_=void 0,n.timeoutId_,n.mode_=void 0,n.trackpadEventGap_=400,n.trackpadTimeoutId_,n.trackpadDeltaPerZoom_=300,n}return Lo(e,t),e.prototype.endInteraction_=function(){this.trackpadTimeoutId_=void 0,this.getMap().getView().endInteraction(void 0,Math.sign(this.lastDelta_),this.lastAnchor_)},e.prototype.handleEvent=function(t){if(!this.condition_(t))return!0;var e=t.type;if(e!==L.WHEEL&&e!==L.MOUSEWHEEL)return!0;t.preventDefault();var n,i=t.map,r=t.originalEvent;if(this.useAnchor_&&(this.lastAnchor_=t.coordinate),t.type==L.WHEEL?(n=r.deltaY,H&&r.deltaMode===WheelEvent.DOM_DELTA_PIXEL&&(n/=$),r.deltaMode===WheelEvent.DOM_DELTA_LINE&&(n*=40)):t.type==L.MOUSEWHEEL&&(n=-r.wheelDeltaY,q&&(n/=3)),0===n)return!1;this.lastDelta_=n;var o=Date.now();if(void 0===this.startTime_&&(this.startTime_=o),(!this.mode_||o-this.startTime_>this.trackpadEventGap_)&&(this.mode_=Math.abs(n)<4?Mo:Fo),this.mode_===Mo){var s=i.getView();return this.trackpadTimeoutId_?clearTimeout(this.trackpadTimeoutId_):s.beginInteraction(),this.trackpadTimeoutId_=setTimeout(this.endInteraction_.bind(this),this.trackpadEventGap_),s.adjustZoom(-n/this.trackpadDeltaPerZoom_,this.lastAnchor_),this.startTime_=o,!1}this.totalDelta_+=n;var a=Math.max(this.timeout_-(o-this.startTime_),0);return clearTimeout(this.timeoutId_),this.timeoutId_=setTimeout(this.handleWheelZoom_.bind(this,i),a),!1},e.prototype.handleWheelZoom_=function(t){var e=t.getView();e.getAnimating()&&e.cancelAnimations(),Br(e,-Ee(this.totalDelta_,-this.maxDelta_,this.maxDelta_),this.lastAnchor_,this.duration_),this.mode_=void 0,this.totalDelta_=0,this.lastAnchor_=null,this.startTime_=void 0,this.timeoutId_=void 0},e.prototype.setMouseAnchor=function(t){this.useAnchor_=t,t||(this.lastAnchor_=null)},e}(Zr),Do=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ko=function(t){function e(e){var n=this,i=e||{},r=i;return r.stopDown||(r.stopDown=b),(n=t.call(this,r)||this).anchor_=null,n.lastAngle_=void 0,n.rotating_=!1,n.rotationDelta_=0,n.threshold_=void 0!==i.threshold?i.threshold:.3,n.duration_=void 0!==i.duration?i.duration:250,n}return Do(e,t),e.prototype.handleDragEvent=function(t){var e=0,n=this.targetPointers[0],i=this.targetPointers[1],r=Math.atan2(i.clientY-n.clientY,i.clientX-n.clientX);if(void 0!==this.lastAngle_){var o=r-this.lastAngle_;this.rotationDelta_+=o,!this.rotating_&&Math.abs(this.rotationDelta_)>this.threshold_&&(this.rotating_=!0),e=o}this.lastAngle_=r;var s=t.map,a=s.getView();if(a.getConstraints().rotation!==pn){var u=s.getViewport().getBoundingClientRect(),h=so(this.targetPointers);h[0]-=u.left,h[1]-=u.top,this.anchor_=s.getCoordinateFromPixel(h),this.rotating_&&(s.render(),a.adjustRotation(e,this.anchor_))}},e.prototype.handleUpEvent=function(t){return!(this.targetPointers.length<2)||(t.map.getView().endInteraction(this.duration_),!1)},e.prototype.handleDownEvent=function(t){if(this.targetPointers.length>=2){var e=t.map;return this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.handlingDownUpSequence||e.getView().beginInteraction(),!0}return!1},e}(ao),Go=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),No=function(t){function e(e){var n=this,i=e||{},r=i;return r.stopDown||(r.stopDown=b),(n=t.call(this,r)||this).anchor_=null,n.duration_=void 0!==i.duration?i.duration:400,n.lastDistance_=void 0,n.lastScaleDelta_=1,n}return Go(e,t),e.prototype.handleDragEvent=function(t){var e=1,n=this.targetPointers[0],i=this.targetPointers[1],r=n.clientX-i.clientX,o=n.clientY-i.clientY,s=Math.sqrt(r*r+o*o);void 0!==this.lastDistance_&&(e=this.lastDistance_/s),this.lastDistance_=s;var a=t.map,u=a.getView();1!=e&&(this.lastScaleDelta_=e);var h=a.getViewport().getBoundingClientRect(),l=so(this.targetPointers);l[0]-=h.left,l[1]-=h.top,this.anchor_=a.getCoordinateFromPixel(l),a.render(),u.adjustResolution(e,this.anchor_)},e.prototype.handleUpEvent=function(t){if(this.targetPointers.length<2){var e=t.map.getView(),n=this.lastScaleDelta_>1?1:-1;return e.endInteraction(this.duration_,n),!1}return!0},e.prototype.handleDownEvent=function(t){if(this.targetPointers.length>=2){var e=t.map;return this.anchor_=null,this.lastDistance_=void 0,this.lastScaleDelta_=1,this.handlingDownUpSequence||e.getView().beginInteraction(),!0}return!1},e}(ao);var jo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Yo=function(t){function e(e,n,i,r,o){var s=t.call(this,e)||this;return s.inversePixelTransform=n,s.frameState=i,s.context=r,s.glContext=o,s}return jo(e,t),e}(S),Xo=/^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i,zo=/^([a-z]*)$/i;!function(){var t={},e=0}();function Ko(t){return t[0]=Ee(t[0]+.5|0,0,255),t[1]=Ee(t[1]+.5|0,0,255),t[2]=Ee(t[2]+.5|0,0,255),t[3]=Ee(t[3],0,1),t}function Wo(t){var e=t[0];e!=(0|e)&&(e=e+.5|0);var n=t[1];n!=(0|n)&&(n=n+.5|0);var i=t[2];return i!=(0|i)&&(i=i+.5|0),\"rgba(\"+e+\",\"+n+\",\"+i+\",\"+(void 0===t[3]?1:t[3])+\")\"}var Uo=function(){function t(){this.cache_={},this.cacheSize_=0,this.maxCacheSize_=32}return t.prototype.clear=function(){this.cache_={},this.cacheSize_=0},t.prototype.canExpireCache=function(){return this.cacheSize_>this.maxCacheSize_},t.prototype.expire=function(){if(this.canExpireCache()){var t=0;for(var e in this.cache_){var n=this.cache_[e];0!=(3&t++)||n.hasListener()||(delete this.cache_[e],--this.cacheSize_)}}},t.prototype.get=function(t,e,n){var i=Bo(t,e,n);return i in this.cache_?this.cache_[i]:null},t.prototype.set=function(t,e,n,i){var r=Bo(t,e,n);this.cache_[r]=i,++this.cacheSize_},t.prototype.setSize=function(t){this.maxCacheSize_=t,this.expire()},t}();function Bo(t,e,n){return e+\":\"+t+\":\"+(n?function(t){return\"string\"==typeof t?t:Wo(t)}(n):\"null\")}var Zo=new Uo,Vo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Ho(t,e){Zo.expire()}var qo=function(t){function e(e){var n=t.call(this)||this;return n.map_=e,n.layerRenderers_={},n.layerRendererListeners_={},n}return Vo(e,t),e.prototype.dispatchRenderEvent=function(t,e){i()},e.prototype.calculateMatrices2D=function(t){var e=t.viewState,n=t.coordinateToPixelTransform,i=t.pixelToCoordinateTransform;fi(n,t.size[0]/2,t.size[1]/2,1/e.resolution,-1/e.resolution,-e.rotation,-e.center[0],-e.center[1]),di(i,n)},e.prototype.removeLayerRenderers=function(){for(var t in this.layerRenderers_)this.removeLayerRendererByKey_(t).dispose()},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i,r,s,a){var u,h=e.viewState,l=h.resolution;function c(t,n,s){if(!(o(n)in e.skippedFeatureUids)||t)return i.call(r,n,t?s:null)}var p=h.projection,f=t;if(p.canWrapX()){var d=p.getExtent(),_=sn(d),g=t[0];if(g<d[0]||g>d[2])f=[g+_*Math.ceil((d[0]-g)/_),t[1]]}var y,v=e.layerStatesArray;for(y=v.length-1;y>=0;--y){var m=v[y],x=m.layer;if(Fr(m,l)&&s.call(a,x)){var E=this.getLayerRenderer(x),C=x.getSource();if(E&&C){var w=c.bind(null,m.managed);u=E.forEachFeatureAtCoordinate(C.getWrapX()?f:t,e,n,w)}if(u)return u}}},e.prototype.forEachLayerAtPixel=function(t,e,n,r,o){return i()},e.prototype.hasFeatureAtCoordinate=function(t,e,n,i,r){return void 0!==this.forEachFeatureAtCoordinate(t,e,n,T,this,i,r)},e.prototype.getLayerRenderer=function(t){var e=o(t);if(e in this.layerRenderers_)return this.layerRenderers_[e];var n=t.getRenderer();return n?(this.layerRenderers_[e]=n,this.layerRendererListeners_[e]=x(n,L.CHANGE,this.handleLayerRendererChange_,this),n):null},e.prototype.getLayerRenderers=function(){return this.layerRenderers_},e.prototype.getMap=function(){return this.map_},e.prototype.handleLayerRendererChange_=function(){this.map_.render()},e.prototype.removeLayerRendererByKey_=function(t){var e=this.layerRenderers_[t];return delete this.layerRenderers_[t],w(this.layerRendererListeners_[t]),delete this.layerRendererListeners_[t],e},e.prototype.renderFrame=function(t){i()},e.prototype.scheduleExpireIconCache=function(t){Zo.canExpireCache()&&t.postRenderFunctions.push(Ho)},e.prototype.scheduleRemoveUnusedLayerRenderers=function(t){var e=t.layerStatesArray.reduce(function(t,e){return t[o(e.layer)]=e,t},{}),n=function(n){n in e||t.postRenderFunctions.push(function(){this.removeLayerRendererByKey_(n).dispose()}.bind(i))},i=this;for(var r in this.layerRenderers_)n(r)},e}(O),Jo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Qo=function(t){function e(e){var n=t.call(this,e)||this;n.element_=document.createElement(\"div\");var i=n.element_.style;i.position=\"absolute\",i.width=\"100%\",i.height=\"100%\",i.zIndex=\"0\",n.element_.className=Sr+\" ol-layers\";var r=e.getViewport();return r.insertBefore(n.element_,r.firstChild||null),n.children_=[],n.renderedVisible_=!0,n}return Jo(e,t),e.prototype.dispatchRenderEvent=function(t,e){var n=this.getMap();if(n.hasListener(t)){var i=new Yo(t,void 0,e);n.dispatchEvent(i)}},e.prototype.renderFrame=function(t){if(t){this.calculateMatrices2D(t),this.dispatchRenderEvent(ce,t);var e=t.layerStatesArray,n=t.viewState.resolution;this.children_.length=0;for(var i=0,r=e.length;i<r;++i){var o=e[i];if(Fr(o,n)&&o.sourceState==gr.READY){var s=o.layer.render(t);if(s){var a=o.zIndex;a!==s.style.zIndex&&(s.style.zIndex=a),this.children_.push(s)}}}!function(t,e){for(var n=t.childNodes,i=0;;++i){var r=n[i],o=e[i];if(!r&&!o)break;r!==o&&(r?o?t.insertBefore(o,r):(t.removeChild(r),--i):t.appendChild(o))}}(this.element_,this.children_),this.dispatchRenderEvent(pe,t),this.renderedVisible_||(this.element_.style.display=\"\",this.renderedVisible_=!0),this.scheduleRemoveUnusedLayerRenderers(t),this.scheduleExpireIconCache(t)}else this.renderedVisible_&&(this.element_.style.display=\"none\",this.renderedVisible_=!1)},e.prototype.forEachLayerAtPixel=function(t,e,n,i,r){for(var o=e.viewState.resolution,s=e.layerStatesArray,a=s.length-1;a>=0;--a){var u=s[a],h=u.layer;if(Fr(u,o)&&r(h)){var l=this.getLayerRenderer(h);if(!l)continue;var c=l.getDataAtPixel(t,e,n);if(c){var p=i(h,c);if(p)return p}}}},e}(qo),$o=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ts=function(t){function e(e){return(e=p({},e)).controls||(e.controls=function(t){var e=t||{},n=new K;return(void 0===e.zoom||e.zoom)&&n.push(new zr(e.zoomOptions)),(void 0===e.rotate||e.rotate)&&n.push(new Yr(e.rotateOptions)),(void 0===e.attribution||e.attribution)&&n.push(new Gr(e.attributionOptions)),n}()),e.interactions||(e.interactions=function(t){var e=t||{},n=new K,i=new Kr(-.005,.05,100);return(void 0===e.altShiftDragRotate||e.altShiftDragRotate)&&n.push(new co),(void 0===e.doubleClickZoom||e.doubleClickZoom)&&n.push(new qr({delta:e.zoomDelta,duration:e.zoomDuration})),(void 0===e.dragPan||e.dragPan)&&n.push(new ho({condition:e.onFocusOnly?Qr:void 0,kinetic:i})),(void 0===e.pinchRotate||e.pinchRotate)&&n.push(new ko),(void 0===e.pinchZoom||e.pinchZoom)&&n.push(new No({duration:e.zoomDuration})),(void 0===e.keyboard||e.keyboard)&&(n.push(new Ro),n.push(new Po({delta:e.zoomDelta,duration:e.zoomDuration}))),(void 0===e.mouseWheelZoom||e.mouseWheelZoom)&&n.push(new Ao({condition:e.onFocusOnly?Qr:void 0,duration:e.zoomDuration})),(void 0===e.shiftDragZoom||e.shiftDragZoom)&&n.push(new wo({duration:e.zoomDuration})),n}()),t.call(this,e)||this}return $o(e,t),e.prototype.createRenderer=function(){return new Qo(this)},e}(Cr),es=\"preload\",ns=\"useInterimTilesOnError\",is=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),rs=function(t){function e(e){var n=this,i=e||{},r=p({},i);return delete r.preload,delete r.useInterimTilesOnError,(n=t.call(this,r)||this).setPreload(void 0!==i.preload?i.preload:0),n.setUseInterimTilesOnError(void 0===i.useInterimTilesOnError||i.useInterimTilesOnError),n}return is(e,t),e.prototype.getPreload=function(){return this.get(es)},e.prototype.setPreload=function(t){this.set(es,t)},e.prototype.getUseInterimTilesOnError=function(){return this.get(ns)},e.prototype.setUseInterimTilesOnError=function(t){this.set(ns,t)},e}(Ar),os=function(){function t(t,e,n,i){this.minX=t,this.maxX=e,this.minY=n,this.maxY=i}return t.prototype.contains=function(t){return this.containsXY(t[1],t[2])},t.prototype.containsTileRange=function(t){return this.minX<=t.minX&&t.maxX<=this.maxX&&this.minY<=t.minY&&t.maxY<=this.maxY},t.prototype.containsXY=function(t,e){return this.minX<=t&&t<=this.maxX&&this.minY<=e&&e<=this.maxY},t.prototype.equals=function(t){return this.minX==t.minX&&this.minY==t.minY&&this.maxX==t.maxX&&this.maxY==t.maxY},t.prototype.extend=function(t){t.minX<this.minX&&(this.minX=t.minX),t.maxX>this.maxX&&(this.maxX=t.maxX),t.minY<this.minY&&(this.minY=t.minY),t.maxY>this.maxY&&(this.maxY=t.maxY)},t.prototype.getHeight=function(){return this.maxY-this.minY+1},t.prototype.getSize=function(){return[this.getWidth(),this.getHeight()]},t.prototype.getWidth=function(){return this.maxX-this.minX+1},t.prototype.intersects=function(t){return this.minX<=t.maxX&&this.maxX>=t.minX&&this.minY<=t.maxY&&this.maxY>=t.minY},t}();function ss(t,e,n,i,r){return void 0!==r?(r.minX=t,r.maxX=e,r.minY=n,r.maxY=i,r):new os(t,e,n,i)}var as=os,us=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),hs=function(t){function e(e){var n=t.call(this)||this;return n.highWaterMark=void 0!==e?e:2048,n.count_=0,n.entries_={},n.oldest_=null,n.newest_=null,n}return us(e,t),e.prototype.canExpireCache=function(){return this.getCount()>this.highWaterMark},e.prototype.clear=function(){this.count_=0,this.entries_={},this.oldest_=null,this.newest_=null,this.dispatchEvent(L.CLEAR)},e.prototype.containsKey=function(t){return this.entries_.hasOwnProperty(t)},e.prototype.forEach=function(t){for(var e=this.oldest_;e;)t(e.value_,e.key_,this),e=e.newer},e.prototype.get=function(t,e){var n=this.entries_[t];return _e(void 0!==n,15),n===this.newest_?n.value_:(n===this.oldest_?(this.oldest_=this.oldest_.newer,this.oldest_.older=null):(n.newer.older=n.older,n.older.newer=n.newer),n.newer=null,n.older=this.newest_,this.newest_.newer=n,this.newest_=n,n.value_)},e.prototype.remove=function(t){var e=this.entries_[t];return _e(void 0!==e,15),e===this.newest_?(this.newest_=e.older,this.newest_&&(this.newest_.newer=null)):e===this.oldest_?(this.oldest_=e.newer,this.oldest_&&(this.oldest_.older=null)):(e.newer.older=e.older,e.older.newer=e.newer),delete this.entries_[t],--this.count_,e.value_},e.prototype.getCount=function(){return this.count_},e.prototype.getKeys=function(){var t,e=new Array(this.count_),n=0;for(t=this.newest_;t;t=t.older)e[n++]=t.key_;return e},e.prototype.getValues=function(){var t,e=new Array(this.count_),n=0;for(t=this.newest_;t;t=t.older)e[n++]=t.value_;return e},e.prototype.peekLast=function(){return this.oldest_.value_},e.prototype.peekLastKey=function(){return this.oldest_.key_},e.prototype.peekFirstKey=function(){return this.newest_.key_},e.prototype.pop=function(){var t=this.oldest_;return delete this.entries_[t.key_],t.newer&&(t.newer.older=null),this.oldest_=t.newer,this.oldest_||(this.newest_=null),--this.count_,t.value_},e.prototype.replace=function(t,e){this.get(t),this.entries_[t].value_=e},e.prototype.set=function(t,e){_e(!(t in this.entries_),16);var n={key_:t,newer:null,older:this.newest_,value_:e};this.newest_?this.newest_.newer=n:this.oldest_=n,this.newest_=n,this.entries_[t]=n,++this.count_},e.prototype.setSize=function(t){this.highWaterMark=t},e}(P),ls=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),cs=function(t){function e(e){var n=t.call(this,e)||this;return n.consumers={},n}return ls(e,t),e.prototype.clear=function(){t.prototype.clear.call(this),this.consumers={}},e.prototype.get=function(e,n){var i=t.prototype.get.call(this,e),r=o(n);return r in this.consumers||(this.consumers[r]={}),this.consumers[r][e]=!0,i},e.prototype.prune=function(){t:for(;this.canExpireCache();){var t=this.peekLastKey();for(var e in this.consumers)if(t in this.consumers[e])break t;var n=this.pop();for(var e in n.width=n.height=0,this.consumers)delete this.consumers[e][t]}},e.prototype.release=function(t){delete this.consumers[o(t)]},e}(hs),ps=[],fs=[0,0,0,0],ds=new cs,_s={},gs=null,ys={},vs=function(){var t,e,n=60,i=_s,r=\"32px \",o=[\"monospace\",\"serif\"],s=o.length,a=\"wmytzilWMYTZIL@#/&?$%10\";function u(t){for(var n=ms(),i=100;i<=700;i+=300){for(var u=i+\" \",h=!0,l=0;l<s;++l){var c=o[l];if(n.font=u+r+c,e=n.measureText(a).width,t!=c){n.font=u+r+t+\",\"+c;var p=n.measureText(a).width;h=h&&p!=e}}if(h)return!0}return!1}function h(){var e=!0;for(var r in i)i[r]<n&&(u(r)?(i[r]=n,f(ys),gs=null,ds.clear()):(++i[r],e=!1));e&&(clearInterval(t),t=void 0)}return function(e){var r=Lr(e);if(r)for(var o=0,s=r.length;o<s;++o){var a=r[o];a in i||(i[a]=n,u(a)||(i[a]=0,void 0===t&&(t=setInterval(h,32))))}}}();function ms(){return gs||(gs=lr(1,1)),gs}var xs,Es,Cs=(Es=ys,function(t){var e=Es[t];return null==e&&(xs||((xs=document.createElement(\"div\")).innerHTML=\"M\",xs.style.margin=xs.style.padding=\"0 !important\",xs.style.position=\"absolute !important\",xs.style.left=\"-99999px !important\"),xs.style.font=t,document.body.appendChild(xs),e=Es[t]=xs.offsetHeight,document.body.removeChild(xs)),e});function ws(t,e){var n=ms();return t!=n.font&&(n.font=t),n.measureText(e).width}function Os(t,e,n){return e in n?n[e]:n[e]=ws(t,e)}function Ts(t,e,n,i){0!==e&&(t.translate(n,i),t.rotate(e),t.translate(-n,-i))}var bs=[1,0,0,1,0,0];function Rs(t,e,n,i,r,o,s,a,u,h,l){var c;1!=n&&(c=t.globalAlpha,t.globalAlpha=c*n),e&&t.setTransform.apply(t,e),t.drawImage(i,r,o,s,a,u,h,s*l,a*l),c&&(t.globalAlpha=c),e&&t.setTransform.apply(t,bs)}var Ss={IDLE:0,LOADING:1,LOADED:2,ERROR:3},Is=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ps=function(t){function e(e){var n=t.call(this)||this;return n.layer_=e,n}return Is(e,t),e.prototype.prepareFrame=function(t,e){return i()},e.prototype.renderFrame=function(t,e){return i()},e.prototype.loadedTileCallback=function(t,e,n){t[e]||(t[e]={}),t[e][n.tileCoord.toString()]=n},e.prototype.createLoadedTileFinder=function(t,e,n){return function(i,r){var o=this.loadedTileCallback.bind(this,n,i);return t.forEachLoadedTile(e,i,r,o)}.bind(this)},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i){},e.prototype.getDataAtPixel=function(t,e,n){return i()},e.prototype.getLayer=function(){return this.layer_},e.prototype.handleImageChange_=function(t){t.target.getState()===Ss.LOADED&&this.renderIfReadyAndVisible()},e.prototype.hasFeatureAtCoordinate=function(t,e){return!1},e.prototype.loadImage=function(t){var e=t.getState();return e!=Ss.LOADED&&e!=Ss.ERROR&&x(t,L.CHANGE,this.handleImageChange_,this),e==Ss.IDLE&&(t.load(),e=t.getState()),e==Ss.LOADED},e.prototype.renderIfReadyAndVisible=function(){var t=this.getLayer();t.getVisible()&&t.getSourceState()==gr.READY&&t.changed()},e}(F),Ls=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ms=function(t){function e(e){var n=t.call(this,e)||this;n.renderedResolution,n.tempTransform_=[1,0,0,1,0,0],n.pixelTransform_=[1,0,0,1,0,0],n.inversePixelTransform_=[1,0,0,1,0,0],n.context=lr();var i=n.context.canvas;return i.style.position=\"absolute\",i.style.transformOrigin=\"top left\",i.className=n.getLayer().getClassName(),n}return Ls(e,t),e.prototype.disposeInternal=function(){this.context.canvas.width=this.context.canvas.height=0,t.prototype.disposeInternal.call(this)},e.prototype.clip=function(t,e,n){var i=e.pixelRatio,r=e.size[0]*i/2,o=e.size[1]*i/2,s=e.viewState.rotation,a=rn(n),u=on(n),h=Je(n),l=qe(n);pi(e.coordinateToPixelTransform,a),pi(e.coordinateToPixelTransform,u),pi(e.coordinateToPixelTransform,h),pi(e.coordinateToPixelTransform,l),t.save(),Ts(t,-s,r,o),t.beginPath(),t.moveTo(a[0]*i,a[1]*i),t.lineTo(u[0]*i,u[1]*i),t.lineTo(h[0]*i,h[1]*i),t.lineTo(l[0]*i,l[1]*i),t.clip(),Ts(t,s,r,o)},e.prototype.clipUnrotated=function(t,e,n){var i=rn(n),r=on(n),o=Je(n),s=qe(n);pi(e.coordinateToPixelTransform,i),pi(e.coordinateToPixelTransform,r),pi(e.coordinateToPixelTransform,o),pi(e.coordinateToPixelTransform,s);var a=this.inversePixelTransform_;pi(a,i),pi(a,r),pi(a,o),pi(a,s),t.save(),t.beginPath(),t.moveTo(Math.round(i[0]),Math.round(i[1])),t.lineTo(Math.round(r[0]),Math.round(r[1])),t.lineTo(Math.round(o[0]),Math.round(o[1])),t.lineTo(Math.round(s[0]),Math.round(s[1])),t.clip()},e.prototype.dispatchRenderEvent_=function(t,e,n){var i=this.getLayer();if(i.hasListener(t)){var r=new Yo(t,this.inversePixelTransform_,n,e,null);i.dispatchEvent(r)}},e.prototype.preRender=function(t,e){this.dispatchRenderEvent_(he,t,e)},e.prototype.postRender=function(t,e){this.dispatchRenderEvent_(le,t,e)},e.prototype.getRenderTransform=function(t,e,n,i){var r=t.viewState,o=e/2,s=n/2,a=t.pixelRatio/r.resolution,u=-a,h=-r.center[0]+i,l=-r.center[1];return fi(this.tempTransform_,o,s,a,u,-r.rotation,h,l)},e.prototype.getDataAtPixel=function(t,e,n){var i,r=pi(this.inversePixelTransform_,t.slice()),o=this.context;try{i=o.getImageData(Math.round(r[0]),Math.round(r[1]),1,1).data}catch(t){return\"SecurityError\"===t.name?new Uint8Array:i}return 0===i[3]?null:i},e}(Ps),Fs=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),As=function(t){function e(e){var n=t.call(this,e)||this;return n.extentChanged=!0,n.renderedExtent_=null,n.renderedRevision,n.renderedTiles=[],n.newTiles_=!1,n.tmpExtent=[1/0,1/0,-1/0,-1/0],n.tmpTileRange_=new as(0,0,0,0),n.zDirection=0,n}return Fs(e,t),e.prototype.isDrawableTile=function(t){var e=this.getLayer(),n=t.getState(),i=e.getUseInterimTilesOnError();return n==de.LOADED||n==de.EMPTY||n==de.ERROR&&!i},e.prototype.getTile=function(t,e,n,i){var r=i.pixelRatio,o=i.viewState.projection,s=this.getLayer(),a=s.getSource().getTile(t,e,n,r,o);return a.getState()==de.ERROR&&(s.getUseInterimTilesOnError()?s.getPreload()>0&&(this.newTiles_=!0):a.setState(de.LOADED)),this.isDrawableTile(a)||(a=a.getInterimTile()),a},e.prototype.loadedTileCallback=function(e,n,i){return!!this.isDrawableTile(i)&&t.prototype.loadedTileCallback.call(this,e,n,i)},e.prototype.prepareFrame=function(t,e){return!0},e.prototype.renderFrame=function(t,e){var n=this.context,i=t.viewState,r=i.projection,s=i.resolution,a=i.center,u=i.rotation,h=t.pixelRatio,l=this.getLayer(),c=l.getSource(),p=c.getRevision(),f=c.getTileGridForProjection(r),d=void 0===c.zDirection?this.zDirection:c.zDirection,_=f.getZForResolution(s,d),g=f.getResolution(_),y=t.extent;e.extent&&(y=nn(y,e.extent));var v=c.getTilePixelRatio(h),m=Math.round(t.size[0]*v),x=Math.round(t.size[1]*v);u&&(m=x=Math.round(Math.sqrt(m*m+x*x)));var E=g*m/2/v,C=g*x/2/v,w=[a[0]-E,a[1]-C,a[0]+E,a[1]+C],O=f.getTileRangeForExtentAndZ(y,_),T={};T[_]={};var b=this.createLoadedTileFinder(c,r,T),R=this.tmpExtent,S=this.tmpTileRange_;this.newTiles_=!1;for(var I=O.minX;I<=O.maxX;++I)for(var P=O.minY;P<=O.maxY;++P){var L=this.getTile(_,I,P,t);if(this.isDrawableTile(L)){var M=o(this);if(L.getState()==de.LOADED){T[_][L.tileCoord.toString()]=L;var F=L.inTransition(M);this.newTiles_||!F&&-1!==this.renderedTiles.indexOf(L)||(this.newTiles_=!0)}if(1===L.getAlpha(M,t.time))continue}var A=f.getTileCoordChildTileRange(L.tileCoord,S,R),D=!1;A&&(D=b(_+1,A)),D||f.forEachTileCoordParentTileRange(L.tileCoord,b,S,R)}var k=n.canvas,G=g/s;fi(this.pixelTransform_,t.size[0]/2,t.size[1]/2,1/v,1/v,u,-m/2,-x/2),di(this.inversePixelTransform_,this.pixelTransform_),fi(this.tempTransform_,m/2,x/2,G,G,0,-m/2,-x/2),k.width!=m||k.height!=x?(k.width=m,k.height=x):n.clearRect(0,0,m,x),e.extent&&this.clipUnrotated(n,t,e.extent),this.preRender(n,t),this.renderedTiles.length=0;var N=Object.keys(T).map(Number);N.sort(function(t,e){return t===_?1:e===_?-1:t>e?1:t<e?-1:0});for(var j=0,Y=N.length;j<Y;++j){var X=N[j],z=c.getTilePixelSize(X,h,r),K=f.getResolution(X)/g,W=z[0]*K*G,U=z[1]*K*G,B=f.getTileCoordForCoordAndZ(rn(w),X),Z=f.getTileCoordExtent(B),V=pi(this.tempTransform_,[v*(Z[0]-w[0])/g,v*(w[3]-Z[3])/g]),H=v*c.getGutterForProjection(r),q=T[X];for(var J in q){var Q=(L=q[J]).tileCoord,$=V[0]-(B[1]-Q[1])*W,tt=Math.round($+W),et=V[1]-(B[2]-Q[2])*U,nt=Math.round(et+U),it=tt-(I=Math.round($)),rt=nt-(P=Math.round(et));this.drawTileImage(L,t,I,P,it,rt,H,_===X),this.renderedTiles.push(L),this.updateUsedTiles(t.usedTiles,c,L)}}this.renderedRevision=p,this.renderedResolution=g,this.extentChanged=!this.renderedExtent_||!Ke(this.renderedExtent_,w),this.renderedExtent_=w,this.manageTilePyramid(t,c,f,h,r,y,_,l.getPreload()),this.updateCacheSize_(t,c),this.scheduleExpireCache(t,c),this.postRender(n,t),e.extent&&n.restore();var ot=e.opacity;ot!==parseFloat(k.style.opacity)&&(k.style.opacity=ot);var st=_i(this.pixelTransform_);return st!==k.style.transform&&(k.style.transform=st),k},e.prototype.drawTileImage=function(t,e,n,i,r,s,a,u){var h=this.getTileImage(t);if(h){var l=o(this),c=u?t.getAlpha(l,e.time):1,p=this.getLayer().getSource();1!==c||p.getOpaque(e.viewState.projection)||this.context.clearRect(n,i,r,s);var f=c!==this.context.globalAlpha;f&&(this.context.save(),this.context.globalAlpha=c),this.context.drawImage(h,a,a,h.width-2*a,h.height-2*a,n,i,r,s),f&&this.context.restore(),1!==c?e.animate=!0:u&&t.endTransition(l)}},e.prototype.getImage=function(){var t=this.context;return t?t.canvas:null},e.prototype.getTileImage=function(t){return t.getImage()},e.prototype.scheduleExpireCache=function(t,e){if(e.canExpireCache()){var n=function(t,e,n){var i=o(t);i in n.usedTiles&&t.expireCache(n.viewState.projection,n.usedTiles[i])}.bind(null,e);t.postRenderFunctions.push(n)}},e.prototype.updateUsedTiles=function(t,e,n){var i=o(e);i in t||(t[i]={}),t[i][n.getKey()]=!0},e.prototype.updateCacheSize_=function(t,e){var n=o(e),i=0;n in t.usedTiles&&(i+=Object.keys(t.usedTiles[n]).length),n in t.wantedTiles&&(i+=Object.keys(t.wantedTiles[n]).length);var r=e.tileCache;r.highWaterMark<i&&(r.highWaterMark=i)},e.prototype.manageTilePyramid=function(t,e,n,i,r,s,a,u,h){var l=o(e);l in t.wantedTiles||(t.wantedTiles[l]={});var c,p,f,d,_,g,y=t.wantedTiles[l],v=t.tileQueue;for(g=n.getMinZoom();g<=a;++g)for(p=n.getTileRangeForExtentAndZ(s,g,p),f=n.getResolution(g),d=p.minX;d<=p.maxX;++d)for(_=p.minY;_<=p.maxY;++_)a-g<=u?((c=e.getTile(g,d,_,i,r)).getState()==de.IDLE&&(y[c.getKey()]=!0,v.isKeyQueued(c.getKey())||v.enqueue([c,l,n.getTileCoordCenter(c.tileCoord),f])),void 0!==h&&h(c)):e.useTile(g,d,_,r)},e}(Ms);As.prototype.getLayer;var Ds=As,ks=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Gs=function(t){function e(e){return t.call(this,e)||this}return ks(e,t),e.prototype.createRenderer=function(){return new Ds(this)},e}(rs);function Ns(t){return Array.isArray(t)?Wo(t):t}var js=function(){function t(t){this.opacity_=t.opacity,this.rotateWithView_=t.rotateWithView,this.rotation_=t.rotation,this.scale_=t.scale}return t.prototype.clone=function(){return new t({opacity:this.getOpacity(),scale:this.getScale(),rotation:this.getRotation(),rotateWithView:this.getRotateWithView()})},t.prototype.getOpacity=function(){return this.opacity_},t.prototype.getRotateWithView=function(){return this.rotateWithView_},t.prototype.getRotation=function(){return this.rotation_},t.prototype.getScale=function(){return this.scale_},t.prototype.getAnchor=function(){return i()},t.prototype.getImage=function(t){return i()},t.prototype.getHitDetectionImage=function(t){return i()},t.prototype.getImageState=function(){return i()},t.prototype.getImageSize=function(){return i()},t.prototype.getHitDetectionImageSize=function(){return i()},t.prototype.getOrigin=function(){return i()},t.prototype.getSize=function(){return i()},t.prototype.setOpacity=function(t){this.opacity_=t},t.prototype.setRotateWithView=function(t){this.rotateWithView_=t},t.prototype.setRotation=function(t){this.rotation_=t},t.prototype.setScale=function(t){this.scale_=t},t.prototype.listenImageChange=function(t,e){return i()},t.prototype.load=function(){i()},t.prototype.unlistenImageChange=function(t,e){i()},t}(),Ys=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Xs=function(t){function e(e){var n=this,i=void 0!==e.rotateWithView&&e.rotateWithView;return(n=t.call(this,{opacity:1,rotateWithView:i,rotation:void 0!==e.rotation?e.rotation:0,scale:1})||this).canvas_=null,n.hitDetectionCanvas_=null,n.fill_=void 0!==e.fill?e.fill:null,n.origin_=[0,0],n.points_=e.points,n.radius_=void 0!==e.radius?e.radius:e.radius1,n.radius2_=e.radius2,n.angle_=void 0!==e.angle?e.angle:0,n.stroke_=void 0!==e.stroke?e.stroke:null,n.anchor_=null,n.size_=null,n.imageSize_=null,n.hitDetectionImageSize_=null,n.render_(),n}return Ys(e,t),e.prototype.clone=function(){var t=new e({fill:this.getFill()?this.getFill().clone():void 0,points:this.getPoints(),radius:this.getRadius(),radius2:this.getRadius2(),angle:this.getAngle(),stroke:this.getStroke()?this.getStroke().clone():void 0,rotation:this.getRotation(),rotateWithView:this.getRotateWithView()});return t.setOpacity(this.getOpacity()),t.setScale(this.getScale()),t},e.prototype.getAnchor=function(){return this.anchor_},e.prototype.getAngle=function(){return this.angle_},e.prototype.getFill=function(){return this.fill_},e.prototype.getHitDetectionImage=function(t){return this.hitDetectionCanvas_},e.prototype.getImage=function(t){return this.canvas_},e.prototype.getImageSize=function(){return this.imageSize_},e.prototype.getHitDetectionImageSize=function(){return this.hitDetectionImageSize_},e.prototype.getImageState=function(){return Ss.LOADED},e.prototype.getOrigin=function(){return this.origin_},e.prototype.getPoints=function(){return this.points_},e.prototype.getRadius=function(){return this.radius_},e.prototype.getRadius2=function(){return this.radius2_},e.prototype.getSize=function(){return this.size_},e.prototype.getStroke=function(){return this.stroke_},e.prototype.listenImageChange=function(t,e){},e.prototype.load=function(){},e.prototype.unlistenImageChange=function(t,e){},e.prototype.render_=function(){var t,e=\"\",n=\"\",i=0,r=null,o=0,s=0;this.stroke_&&(null===(t=this.stroke_.getColor())&&(t=\"#000\"),t=Ns(t),void 0===(s=this.stroke_.getWidth())&&(s=1),r=this.stroke_.getLineDash(),o=this.stroke_.getLineDashOffset(),void 0===(n=this.stroke_.getLineJoin())&&(n=\"round\"),void 0===(e=this.stroke_.getLineCap())&&(e=\"round\"),void 0===(i=this.stroke_.getMiterLimit())&&(i=10));var a=2*(this.radius_+s)+1,u={strokeStyle:t,strokeWidth:s,size:a,lineCap:e,lineDash:r,lineDashOffset:o,lineJoin:n,miterLimit:i},h=lr(a,a);this.canvas_=h.canvas;var l=a=this.canvas_.width;this.draw_(u,h,0,0),this.createHitDetectionCanvas_(u),this.anchor_=[a/2,a/2],this.size_=[a,a],this.imageSize_=[l,l]},e.prototype.draw_=function(t,e,n,i){var r,o,s;e.setTransform(1,0,0,1,0,0),e.translate(n,i),e.beginPath();var a=this.points_;if(a===1/0)e.arc(t.size/2,t.size/2,this.radius_,0,2*Math.PI,!0);else{var u=void 0!==this.radius2_?this.radius2_:this.radius_;for(u!==this.radius_&&(a*=2),r=0;r<=a;r++)o=2*r*Math.PI/a-Math.PI/2+this.angle_,s=r%2==0?this.radius_:u,e.lineTo(t.size/2+s*Math.cos(o),t.size/2+s*Math.sin(o))}if(this.fill_){var h=this.fill_.getColor();null===h&&(h=\"#000\"),e.fillStyle=Ns(h),e.fill()}this.stroke_&&(e.strokeStyle=t.strokeStyle,e.lineWidth=t.strokeWidth,e.setLineDash&&t.lineDash&&(e.setLineDash(t.lineDash),e.lineDashOffset=t.lineDashOffset),e.lineCap=t.lineCap,e.lineJoin=t.lineJoin,e.miterLimit=t.miterLimit,e.stroke()),e.closePath()},e.prototype.createHitDetectionCanvas_=function(t){if(this.hitDetectionImageSize_=[t.size,t.size],this.fill_)this.hitDetectionCanvas_=this.canvas_;else{var e=lr(t.size,t.size);this.hitDetectionCanvas_=e.canvas,this.drawHitDetectionCanvas_(t,e,0,0)}},e.prototype.drawHitDetectionCanvas_=function(t,e,n,i){e.setTransform(1,0,0,1,0,0),e.translate(n,i),e.beginPath();var r=this.points_;if(r===1/0)e.arc(t.size/2,t.size/2,this.radius_,0,2*Math.PI,!0);else{var o=void 0!==this.radius2_?this.radius2_:this.radius_;o!==this.radius_&&(r*=2);var s=void 0,a=void 0,u=void 0;for(s=0;s<=r;s++)u=2*s*Math.PI/r-Math.PI/2+this.angle_,a=s%2==0?this.radius_:o,e.lineTo(t.size/2+a*Math.cos(u),t.size/2+a*Math.sin(u))}e.fillStyle=\"#000\",e.fill(),this.stroke_&&(e.strokeStyle=t.strokeStyle,e.lineWidth=t.strokeWidth,t.lineDash&&(e.setLineDash(t.lineDash),e.lineDashOffset=t.lineDashOffset),e.stroke()),e.closePath()},e}(js),zs=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ks=function(t){function e(e){var n=e||{};return t.call(this,{points:1/0,fill:n.fill,radius:n.radius,stroke:n.stroke})||this}return zs(e,t),e.prototype.clone=function(){var t=new e({fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,radius:this.getRadius()});return t.setOpacity(this.getOpacity()),t.setScale(this.getScale()),t},e.prototype.setRadius=function(t){this.radius_=t},e}(Xs),Ws=function(){function t(t){var e=t||{};this.color_=void 0!==e.color?e.color:null}return t.prototype.clone=function(){var e=this.getColor();return new t({color:Array.isArray(e)?e.slice():e||void 0})},t.prototype.getColor=function(){return this.color_},t.prototype.setColor=function(t){this.color_=t},t}(),Us=function(){function t(t){var e=t||{};this.color_=void 0!==e.color?e.color:null,this.lineCap_=e.lineCap,this.lineDash_=void 0!==e.lineDash?e.lineDash:null,this.lineDashOffset_=e.lineDashOffset,this.lineJoin_=e.lineJoin,this.miterLimit_=e.miterLimit,this.width_=e.width}return t.prototype.clone=function(){var e=this.getColor();return new t({color:Array.isArray(e)?e.slice():e||void 0,lineCap:this.getLineCap(),lineDash:this.getLineDash()?this.getLineDash().slice():void 0,lineDashOffset:this.getLineDashOffset(),lineJoin:this.getLineJoin(),miterLimit:this.getMiterLimit(),width:this.getWidth()})},t.prototype.getColor=function(){return this.color_},t.prototype.getLineCap=function(){return this.lineCap_},t.prototype.getLineDash=function(){return this.lineDash_},t.prototype.getLineDashOffset=function(){return this.lineDashOffset_},t.prototype.getLineJoin=function(){return this.lineJoin_},t.prototype.getMiterLimit=function(){return this.miterLimit_},t.prototype.getWidth=function(){return this.width_},t.prototype.setColor=function(t){this.color_=t},t.prototype.setLineCap=function(t){this.lineCap_=t},t.prototype.setLineDash=function(t){this.lineDash_=t},t.prototype.setLineDashOffset=function(t){this.lineDashOffset_=t},t.prototype.setLineJoin=function(t){this.lineJoin_=t},t.prototype.setMiterLimit=function(t){this.miterLimit_=t},t.prototype.setWidth=function(t){this.width_=t},t}(),Bs=function(){function t(t){var e=t||{};this.geometry_=null,this.geometryFunction_=Hs,void 0!==e.geometry&&this.setGeometry(e.geometry),this.fill_=void 0!==e.fill?e.fill:null,this.image_=void 0!==e.image?e.image:null,this.renderer_=void 0!==e.renderer?e.renderer:null,this.stroke_=void 0!==e.stroke?e.stroke:null,this.text_=void 0!==e.text?e.text:null,this.zIndex_=e.zIndex}return t.prototype.clone=function(){var e=this.getGeometry();return e&&\"object\"==typeof e&&(e=e.clone()),new t({geometry:e,fill:this.getFill()?this.getFill().clone():void 0,image:this.getImage()?this.getImage().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,text:this.getText()?this.getText().clone():void 0,zIndex:this.getZIndex()})},t.prototype.getRenderer=function(){return this.renderer_},t.prototype.setRenderer=function(t){this.renderer_=t},t.prototype.getGeometry=function(){return this.geometry_},t.prototype.getGeometryFunction=function(){return this.geometryFunction_},t.prototype.getFill=function(){return this.fill_},t.prototype.setFill=function(t){this.fill_=t},t.prototype.getImage=function(){return this.image_},t.prototype.setImage=function(t){this.image_=t},t.prototype.getStroke=function(){return this.stroke_},t.prototype.setStroke=function(t){this.stroke_=t},t.prototype.getText=function(){return this.text_},t.prototype.setText=function(t){this.text_=t},t.prototype.getZIndex=function(){return this.zIndex_},t.prototype.setGeometry=function(t){\"function\"==typeof t?this.geometryFunction_=t:\"string\"==typeof t?this.geometryFunction_=function(e){return e.get(t)}:t?void 0!==t&&(this.geometryFunction_=function(){return t}):this.geometryFunction_=Hs,this.geometry_=t},t.prototype.setZIndex=function(t){this.zIndex_=t},t}();var Zs=null;function Vs(t,e){if(!Zs){var n=new Ws({color:\"rgba(255,255,255,0.4)\"}),i=new Us({color:\"#3399CC\",width:1.25});Zs=[new Bs({image:new Ks({fill:n,stroke:i,radius:5}),fill:n,stroke:i})]}return Zs}function Hs(t){return t.getGeometry()}var qs=Bs,Js=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Qs=\"renderOrder\",$s=function(t){function e(e){var n=this,i=e||{},r=p({},i);return delete r.style,delete r.renderBuffer,delete r.updateWhileAnimating,delete r.updateWhileInteracting,(n=t.call(this,r)||this).declutter_=void 0!==i.declutter&&i.declutter,n.renderBuffer_=void 0!==i.renderBuffer?i.renderBuffer:100,n.style_=null,n.styleFunction_=void 0,n.setStyle(i.style),n.updateWhileAnimating_=void 0!==i.updateWhileAnimating&&i.updateWhileAnimating,n.updateWhileInteracting_=void 0!==i.updateWhileInteracting&&i.updateWhileInteracting,n}return Js(e,t),e.prototype.getDeclutter=function(){return this.declutter_},e.prototype.getRenderBuffer=function(){return this.renderBuffer_},e.prototype.getRenderOrder=function(){return this.get(Qs)},e.prototype.getStyle=function(){return this.style_},e.prototype.getStyleFunction=function(){return this.styleFunction_},e.prototype.getUpdateWhileAnimating=function(){return this.updateWhileAnimating_},e.prototype.getUpdateWhileInteracting=function(){return this.updateWhileInteracting_},e.prototype.setRenderOrder=function(t){this.set(Qs,t)},e.prototype.setStyle=function(t){this.style_=void 0!==t?t:Vs,this.styleFunction_=null===t?void 0:function(t){var e;if(\"function\"==typeof t)e=t;else{var n;Array.isArray(t)?n=t:(_e(\"function\"==typeof t.getZIndex,41),n=[t]),e=function(){return n}}return e}(this.style_),this.changed()},e}(Ar),ta=n(0),ea=n.n(ta),na=function(){function t(){}return t.prototype.drawCustom=function(t,e,n){},t.prototype.drawGeometry=function(t){},t.prototype.setStyle=function(t){},t.prototype.drawCircle=function(t,e){},t.prototype.drawFeature=function(t,e){},t.prototype.drawGeometryCollection=function(t,e){},t.prototype.drawLineString=function(t,e){},t.prototype.drawMultiLineString=function(t,e){},t.prototype.drawMultiPoint=function(t,e){},t.prototype.drawMultiPolygon=function(t,e){},t.prototype.drawPoint=function(t,e){},t.prototype.drawPolygon=function(t,e){},t.prototype.drawText=function(t,e){},t.prototype.setFillStrokeStyle=function(t,e){},t.prototype.setImageStyle=function(t,e){},t.prototype.setTextStyle=function(t,e){},t}(),ia={BEGIN_GEOMETRY:0,BEGIN_PATH:1,CIRCLE:2,CLOSE_PATH:3,CUSTOM:4,DRAW_CHARS:5,DRAW_IMAGE:6,END_GEOMETRY:7,FILL:8,MOVE_TO_LINE_TO:9,SET_FILL_STYLE:10,SET_STROKE_STYLE:11,STROKE:12},ra=[ia.FILL],oa=[ia.STROKE],sa=[ia.BEGIN_PATH],aa=[ia.CLOSE_PATH],ua=ia,ha=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),la=function(t){function e(e,n,i,r){var o=t.call(this)||this;return o.tolerance=e,o.maxExtent=n,o.pixelRatio=r,o.maxLineWidth=0,o.resolution=i,o.beginGeometryInstruction1_=null,o.beginGeometryInstruction2_=null,o.bufferedMaxExtent_=null,o.instructions=[],o.coordinates=[],o.tmpCoordinate_=[],o.hitDetectionInstructions=[],o.state={},o}return ha(e,t),e.prototype.applyPixelRatio=function(t){var e=this.pixelRatio;return 1==e?t:t.map(function(t){return t*e})},e.prototype.appendFlatCoordinates=function(t,e,n,i,r,o){var s=this.coordinates.length,a=this.getBufferedMaxExtent();o&&(e+=i);var u,h,l,c=t[e],p=t[e+1],f=this.tmpCoordinate_,d=!0;for(u=e+i;u<n;u+=i)f[0]=t[u],f[1]=t[u+1],(l=Ne(a,f))!==h?(d&&(this.coordinates[s++]=c,this.coordinates[s++]=p),this.coordinates[s++]=f[0],this.coordinates[s++]=f[1],d=!1):l===Pe.INTERSECTING?(this.coordinates[s++]=f[0],this.coordinates[s++]=f[1],d=!1):d=!0,c=f[0],p=f[1],h=l;return(r&&d||u===e+i)&&(this.coordinates[s++]=c,this.coordinates[s++]=p),s},e.prototype.drawCustomCoordinates_=function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o],u=this.appendFlatCoordinates(t,e,a,i,!1,!1);r.push(u),e=a}return e},e.prototype.drawCustom=function(t,e,n){this.beginGeometry(e);var i,r,o,s,a,u=t.getType(),h=t.getStride(),l=this.coordinates.length;if(u==Tn.MULTI_POLYGON){i=(t=t).getOrientedFlatCoordinates(),s=[];var c=t.getEndss();a=0;for(var p=0,f=c.length;p<f;++p){var d=[];a=this.drawCustomCoordinates_(i,a,c[p],h,d),s.push(d)}this.instructions.push([ua.CUSTOM,l,s,t,n,Fi])}else u==Tn.POLYGON||u==Tn.MULTI_LINE_STRING?(o=[],i=u==Tn.POLYGON?t.getOrientedFlatCoordinates():t.getFlatCoordinates(),a=this.drawCustomCoordinates_(i,0,t.getEnds(),h,o),this.instructions.push([ua.CUSTOM,l,o,t,n,Mi])):u==Tn.LINE_STRING||u==Tn.MULTI_POINT?(i=t.getFlatCoordinates(),r=this.appendFlatCoordinates(i,0,i.length,h,!1,!1),this.instructions.push([ua.CUSTOM,l,r,t,n,Li])):u==Tn.POINT&&(i=t.getFlatCoordinates(),this.coordinates.push(i[0],i[1]),r=this.coordinates.length,this.instructions.push([ua.CUSTOM,l,r,t,n]));this.endGeometry(e)},e.prototype.beginGeometry=function(t){this.beginGeometryInstruction1_=[ua.BEGIN_GEOMETRY,t,0],this.instructions.push(this.beginGeometryInstruction1_),this.beginGeometryInstruction2_=[ua.BEGIN_GEOMETRY,t,0],this.hitDetectionInstructions.push(this.beginGeometryInstruction2_)},e.prototype.finish=function(){return{instructions:this.instructions,hitDetectionInstructions:this.hitDetectionInstructions,coordinates:this.coordinates}},e.prototype.reverseHitDetectionInstructions=function(){var t,e=this.hitDetectionInstructions;e.reverse();var n,i,r=e.length,o=-1;for(t=0;t<r;++t)(i=(n=e[t])[0])==ua.END_GEOMETRY?o=t:i==ua.BEGIN_GEOMETRY&&(n[2]=t,Ut(this.hitDetectionInstructions,o,t),o=-1)},e.prototype.setFillStrokeStyle=function(t,e){var n=this.state;if(t){var i=t.getColor();n.fillStyle=Ns(i||\"#000\")}else n.fillStyle=void 0;if(e){var r=e.getColor();n.strokeStyle=Ns(r||\"#000\");var o=e.getLineCap();n.lineCap=void 0!==o?o:\"round\";var s=e.getLineDash();n.lineDash=s?s.slice():ps;var a=e.getLineDashOffset();n.lineDashOffset=a||0;var u=e.getLineJoin();n.lineJoin=void 0!==u?u:\"round\";var h=e.getWidth();n.lineWidth=void 0!==h?h:1;var l=e.getMiterLimit();n.miterLimit=void 0!==l?l:10,n.lineWidth>this.maxLineWidth&&(this.maxLineWidth=n.lineWidth,this.bufferedMaxExtent_=null)}else n.strokeStyle=void 0,n.lineCap=void 0,n.lineDash=null,n.lineDashOffset=void 0,n.lineJoin=void 0,n.lineWidth=void 0,n.miterLimit=void 0},e.prototype.createFill=function(t){var e=t.fillStyle,n=[ua.SET_FILL_STYLE,e];return\"string\"!=typeof e&&n.push(!0),n},e.prototype.applyStroke=function(t){this.instructions.push(this.createStroke(t))},e.prototype.createStroke=function(t){return[ua.SET_STROKE_STYLE,t.strokeStyle,t.lineWidth*this.pixelRatio,t.lineCap,t.lineJoin,t.miterLimit,this.applyPixelRatio(t.lineDash),t.lineDashOffset*this.pixelRatio]},e.prototype.updateFillStyle=function(t,e){var n=t.fillStyle;\"string\"==typeof n&&t.currentFillStyle==n||(void 0!==n&&this.instructions.push(e.call(this,t)),t.currentFillStyle=n)},e.prototype.updateStrokeStyle=function(t,e){var n=t.strokeStyle,i=t.lineCap,r=t.lineDash,o=t.lineDashOffset,s=t.lineJoin,a=t.lineWidth,u=t.miterLimit;(t.currentStrokeStyle!=n||t.currentLineCap!=i||r!=t.currentLineDash&&!Zt(t.currentLineDash,r)||t.currentLineDashOffset!=o||t.currentLineJoin!=s||t.currentLineWidth!=a||t.currentMiterLimit!=u)&&(void 0!==n&&e.call(this,t),t.currentStrokeStyle=n,t.currentLineCap=i,t.currentLineDash=r,t.currentLineDashOffset=o,t.currentLineJoin=s,t.currentLineWidth=a,t.currentMiterLimit=u)},e.prototype.endGeometry=function(t){this.beginGeometryInstruction1_[2]=this.instructions.length,this.beginGeometryInstruction1_=null,this.beginGeometryInstruction2_[2]=this.hitDetectionInstructions.length,this.beginGeometryInstruction2_=null;var e=[ua.END_GEOMETRY,t];this.instructions.push(e),this.hitDetectionInstructions.push(e)},e.prototype.getBufferedMaxExtent=function(){if(!this.bufferedMaxExtent_&&(this.bufferedMaxExtent_=Fe(this.maxExtent),this.maxLineWidth>0)){var t=this.resolution*(this.maxLineWidth+1)/2;Me(this.bufferedMaxExtent_,t,this.bufferedMaxExtent_)}return this.bufferedMaxExtent_},e}(na),ca=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),pa=function(t){function e(e,n,i,r){var o=t.call(this,e,n,i,r)||this;return o.declutterGroup_=null,o.hitDetectionImage_=null,o.image_=null,o.anchorX_=void 0,o.anchorY_=void 0,o.height_=void 0,o.opacity_=void 0,o.originX_=void 0,o.originY_=void 0,o.rotateWithView_=void 0,o.rotation_=void 0,o.scale_=void 0,o.width_=void 0,o}return ca(e,t),e.prototype.drawCoordinates_=function(t,e,n,i){return this.appendFlatCoordinates(t,e,n,i,!1,!1)},e.prototype.drawPoint=function(t,e){if(this.image_){this.beginGeometry(e);var n=t.getFlatCoordinates(),i=t.getStride(),r=this.coordinates.length,o=this.drawCoordinates_(n,0,n.length,i);this.instructions.push([ua.DRAW_IMAGE,r,o,this.image_,this.anchorX_,this.anchorY_,this.declutterGroup_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_*this.pixelRatio,this.width_]),this.hitDetectionInstructions.push([ua.DRAW_IMAGE,r,o,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.declutterGroup_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_]),this.endGeometry(e)}},e.prototype.drawMultiPoint=function(t,e){if(this.image_){this.beginGeometry(e);var n=t.getFlatCoordinates(),i=t.getStride(),r=this.coordinates.length,o=this.drawCoordinates_(n,0,n.length,i);this.instructions.push([ua.DRAW_IMAGE,r,o,this.image_,this.anchorX_,this.anchorY_,this.declutterGroup_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_*this.pixelRatio,this.width_]),this.hitDetectionInstructions.push([ua.DRAW_IMAGE,r,o,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.declutterGroup_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_]),this.endGeometry(e)}},e.prototype.finish=function(){return this.reverseHitDetectionInstructions(),this.anchorX_=void 0,this.anchorY_=void 0,this.hitDetectionImage_=null,this.image_=null,this.height_=void 0,this.scale_=void 0,this.opacity_=void 0,this.originX_=void 0,this.originY_=void 0,this.rotateWithView_=void 0,this.rotation_=void 0,this.width_=void 0,t.prototype.finish.call(this)},e.prototype.setImageStyle=function(t,e){var n=t.getAnchor(),i=t.getSize(),r=t.getHitDetectionImage(1),o=t.getImage(1),s=t.getOrigin();this.anchorX_=n[0],this.anchorY_=n[1],this.declutterGroup_=e,this.hitDetectionImage_=r,this.image_=o,this.height_=i[1],this.opacity_=t.getOpacity(),this.originX_=s[0],this.originY_=s[1],this.rotateWithView_=t.getRotateWithView(),this.rotation_=t.getRotation(),this.scale_=t.getScale(),this.width_=i[0]},e}(la),fa=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),da=function(t){function e(e,n,i,r){return t.call(this,e,n,i,r)||this}return fa(e,t),e.prototype.drawFlatCoordinates_=function(t,e,n,i){var r=this.coordinates.length,o=this.appendFlatCoordinates(t,e,n,i,!1,!1),s=[ua.MOVE_TO_LINE_TO,r,o];return this.instructions.push(s),this.hitDetectionInstructions.push(s),n},e.prototype.drawLineString=function(t,e){var n=this.state,i=n.strokeStyle,r=n.lineWidth;if(void 0!==i&&void 0!==r){this.updateStrokeStyle(n,this.applyStroke),this.beginGeometry(e),this.hitDetectionInstructions.push([ua.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset],sa);var o=t.getFlatCoordinates(),s=t.getStride();this.drawFlatCoordinates_(o,0,o.length,s),this.hitDetectionInstructions.push(oa),this.endGeometry(e)}},e.prototype.drawMultiLineString=function(t,e){var n=this.state,i=n.strokeStyle,r=n.lineWidth;if(void 0!==i&&void 0!==r){this.updateStrokeStyle(n,this.applyStroke),this.beginGeometry(e),this.hitDetectionInstructions.push([ua.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset],sa);for(var o=t.getEnds(),s=t.getFlatCoordinates(),a=t.getStride(),u=0,h=0,l=o.length;h<l;++h)u=this.drawFlatCoordinates_(s,u,o[h],a);this.hitDetectionInstructions.push(oa),this.endGeometry(e)}},e.prototype.finish=function(){var e=this.state;return null!=e.lastStroke&&e.lastStroke!=this.coordinates.length&&this.instructions.push(oa),this.reverseHitDetectionInstructions(),this.state=null,t.prototype.finish.call(this)},e.prototype.applyStroke=function(e){null!=e.lastStroke&&e.lastStroke!=this.coordinates.length&&(this.instructions.push(oa),e.lastStroke=this.coordinates.length),e.lastStroke=0,t.prototype.applyStroke.call(this,e),this.instructions.push(sa)},e}(la),_a=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ga=function(t){function e(e,n,i,r){return t.call(this,e,n,i,r)||this}return _a(e,t),e.prototype.drawFlatCoordinatess_=function(t,e,n,i){var r=this.state,o=void 0!==r.fillStyle,s=null!=r.strokeStyle,a=n.length;this.instructions.push(sa),this.hitDetectionInstructions.push(sa);for(var u=0;u<a;++u){var h=n[u],l=this.coordinates.length,c=this.appendFlatCoordinates(t,e,h,i,!0,!s),p=[ua.MOVE_TO_LINE_TO,l,c];this.instructions.push(p),this.hitDetectionInstructions.push(p),s&&(this.instructions.push(aa),this.hitDetectionInstructions.push(aa)),e=h}return o&&(this.instructions.push(ra),this.hitDetectionInstructions.push(ra)),s&&(this.instructions.push(oa),this.hitDetectionInstructions.push(oa)),e},e.prototype.drawCircle=function(t,e){var n=this.state,i=n.fillStyle,r=n.strokeStyle;if(void 0!==i||void 0!==r){this.setFillStrokeStyles_(),this.beginGeometry(e),void 0!==n.fillStyle&&this.hitDetectionInstructions.push([ua.SET_FILL_STYLE,\"#000\"]),void 0!==n.strokeStyle&&this.hitDetectionInstructions.push([ua.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset]);var o=t.getFlatCoordinates(),s=t.getStride(),a=this.coordinates.length;this.appendFlatCoordinates(o,0,o.length,s,!1,!1);var u=[ua.CIRCLE,a];this.instructions.push(sa,u),this.hitDetectionInstructions.push(sa,u),this.hitDetectionInstructions.push(ra),void 0!==n.fillStyle&&this.instructions.push(ra),void 0!==n.strokeStyle&&(this.instructions.push(oa),this.hitDetectionInstructions.push(oa)),this.endGeometry(e)}},e.prototype.drawPolygon=function(t,e){var n=this.state,i=n.fillStyle,r=n.strokeStyle;if(void 0!==i||void 0!==r){this.setFillStrokeStyles_(),this.beginGeometry(e),void 0!==n.fillStyle&&this.hitDetectionInstructions.push([ua.SET_FILL_STYLE,\"#000\"]),void 0!==n.strokeStyle&&this.hitDetectionInstructions.push([ua.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset]);var o=t.getEnds(),s=t.getOrientedFlatCoordinates(),a=t.getStride();this.drawFlatCoordinatess_(s,0,o,a),this.endGeometry(e)}},e.prototype.drawMultiPolygon=function(t,e){var n=this.state,i=n.fillStyle,r=n.strokeStyle;if(void 0!==i||void 0!==r){this.setFillStrokeStyles_(),this.beginGeometry(e),void 0!==n.fillStyle&&this.hitDetectionInstructions.push([ua.SET_FILL_STYLE,\"#000\"]),void 0!==n.strokeStyle&&this.hitDetectionInstructions.push([ua.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset]);for(var o=t.getEndss(),s=t.getOrientedFlatCoordinates(),a=t.getStride(),u=0,h=0,l=o.length;h<l;++h)u=this.drawFlatCoordinatess_(s,u,o[h],a);this.endGeometry(e)}},e.prototype.finish=function(){this.reverseHitDetectionInstructions(),this.state=null;var e=this.tolerance;if(0!==e)for(var n=this.coordinates,i=0,r=n.length;i<r;++i)n[i]=ki(n[i],e);return t.prototype.finish.call(this)},e.prototype.setFillStrokeStyles_=function(){var t=this.state;void 0!==t.fillStyle&&this.updateFillStyle(t,this.createFill),void 0!==t.strokeStyle&&this.updateStrokeStyle(t,this.applyStroke)},e}(la);function ya(t,e,n,i,r){var o,s,a,u,h,l,c,p,f,d=n,_=n,g=0,y=0,v=n;for(o=n;o<i;o+=r){var m=e[o],x=e[o+1];void 0!==u&&(p=m-u,f=x-h,a=Math.sqrt(p*p+f*f),void 0!==l&&(y+=s,Math.acos((l*p+c*f)/(s*a))>t&&(y>g&&(g=y,d=v,_=o),y=0,v=o-r)),s=a,l=p,c=f),u=m,h=x}return(y+=a)>g?[v,o]:[d,_]}var va={POINT:\"point\",LINE:\"line\"},ma=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),xa={left:0,end:0,center:.5,right:1,start:1,top:0,middle:.5,hanging:.2,alphabetic:.8,ideographic:.8,bottom:1},Ea={Circle:ga,Default:la,Image:pa,LineString:da,Polygon:ga,Text:function(t){function e(e,n,i,r){var o=t.call(this,e,n,i,r)||this;return o.declutterGroup_,o.labels_=null,o.text_=\"\",o.textOffsetX_=0,o.textOffsetY_=0,o.textRotateWithView_=void 0,o.textRotation_=0,o.textFillState_=null,o.fillStates={},o.textStrokeState_=null,o.strokeStates={},o.textState_={},o.textStates={},o.textKey_=\"\",o.fillKey_=\"\",o.strokeKey_=\"\",ds.prune(),o}return ma(e,t),e.prototype.finish=function(){var e=t.prototype.finish.call(this);return e.textStates=this.textStates,e.fillStates=this.fillStates,e.strokeStates=this.strokeStates,e},e.prototype.drawText=function(t,e){var n=this.textFillState_,i=this.textStrokeState_,r=this.textState_;if(\"\"!==this.text_&&r&&(n||i)){var o,s,a=this.coordinates.length,u=t.getType(),h=null,l=2,c=2;if(r.placement===va.LINE){if(!an(this.getBufferedMaxExtent(),t.getExtent()))return;var p=void 0;if(h=t.getFlatCoordinates(),c=t.getStride(),u==Tn.LINE_STRING)p=[h.length];else if(u==Tn.MULTI_LINE_STRING)p=t.getEnds();else if(u==Tn.POLYGON)p=t.getEnds().slice(0,1);else if(u==Tn.MULTI_POLYGON){var f=t.getEndss();for(p=[],o=0,s=f.length;o<s;++o)p.push(f[o][0])}this.beginGeometry(e);for(var d=r.textAlign,_=0,g=void 0,y=0,v=p.length;y<v;++y){if(null==d){var m=ya(r.maxAngle,h,_,p[y],c);_=m[0],g=m[1]}else g=p[y];for(o=_;o<g;o+=c)this.coordinates.push(h[o],h[o+1]);l=this.coordinates.length,_=p[y],this.drawChars_(a,l,this.declutterGroup_),a=l}this.endGeometry(e)}else{var x=null;switch(r.overflow||(x=[]),u){case Tn.POINT:case Tn.MULTI_POINT:l=(h=t.getFlatCoordinates()).length;break;case Tn.LINE_STRING:h=t.getFlatMidpoint();break;case Tn.CIRCLE:h=t.getCenter();break;case Tn.MULTI_LINE_STRING:l=(h=t.getFlatMidpoints()).length;break;case Tn.POLYGON:h=t.getFlatInteriorPoint(),r.overflow||x.push(h[2]/this.resolution),c=3;break;case Tn.MULTI_POLYGON:var E=t.getFlatInteriorPoints();for(h=[],o=0,s=E.length;o<s;o+=3)r.overflow||x.push(E[o+2]/this.resolution),h.push(E[o],E[o+1]);if(0==(l=h.length))return}l=this.appendFlatCoordinates(h,0,l,c,!1,!1),this.saveTextStates_(),(r.backgroundFill||r.backgroundStroke)&&(this.setFillStrokeStyle(r.backgroundFill,r.backgroundStroke),r.backgroundFill&&(this.updateFillStyle(this.state,this.createFill),this.hitDetectionInstructions.push(this.createFill(this.state))),r.backgroundStroke&&(this.updateStrokeStyle(this.state,this.applyStroke),this.hitDetectionInstructions.push(this.createStroke(this.state)))),this.beginGeometry(e);var C=this.pixelRatio;this.instructions.push([ua.DRAW_IMAGE,a,l,null,NaN,NaN,this.declutterGroup_,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,1,NaN,r.padding==fs?fs:r.padding.map(function(t){return t*C}),!!r.backgroundFill,!!r.backgroundStroke,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,x]),this.hitDetectionInstructions.push([ua.DRAW_IMAGE,a,l,null,NaN,NaN,this.declutterGroup_,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,1/this.pixelRatio,NaN,r.padding,!!r.backgroundFill,!!r.backgroundStroke,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,x]),this.endGeometry(e)}}},e.prototype.saveTextStates_=function(){var t=this.textStrokeState_,e=this.textState_,n=this.textFillState_,i=this.strokeKey_;t&&(i in this.strokeStates||(this.strokeStates[i]={strokeStyle:t.strokeStyle,lineCap:t.lineCap,lineDashOffset:t.lineDashOffset,lineWidth:t.lineWidth,lineJoin:t.lineJoin,miterLimit:t.miterLimit,lineDash:t.lineDash}));var r=this.textKey_;r in this.textStates||(this.textStates[r]={font:e.font,textAlign:e.textAlign||\"center\",textBaseline:e.textBaseline||\"middle\",scale:e.scale});var o=this.fillKey_;n&&(o in this.fillStates||(this.fillStates[o]={fillStyle:n.fillStyle}))},e.prototype.drawChars_=function(t,e,n){var i=this.textStrokeState_,r=this.textState_,o=this.strokeKey_,s=this.textKey_,a=this.fillKey_;this.saveTextStates_();var u=this.pixelRatio,h=xa[r.textBaseline],l=this.textOffsetY_*u,c=this.text_,p=r.scale,f=i?i.lineWidth*p/2:0;this.instructions.push([ua.DRAW_CHARS,t,e,h,n,r.overflow,a,r.maxAngle,u,l,o,f*u,c,s,1]),this.hitDetectionInstructions.push([ua.DRAW_CHARS,t,e,h,n,r.overflow,a,r.maxAngle,1,l,o,f,c,s,1/u])},e.prototype.setTextStyle=function(t,e){var n,i,r;if(t){this.declutterGroup_=e;var s=t.getFill();s?((i=this.textFillState_)||(i=this.textFillState_={}),i.fillStyle=Ns(s.getColor()||\"#000\")):i=this.textFillState_=null;var a=t.getStroke();if(a){(r=this.textStrokeState_)||(r=this.textStrokeState_={});var u=a.getLineDash(),h=a.getLineDashOffset(),l=a.getWidth(),c=a.getMiterLimit();r.lineCap=a.getLineCap()||\"round\",r.lineDash=u?u.slice():ps,r.lineDashOffset=void 0===h?0:h,r.lineJoin=a.getLineJoin()||\"round\",r.lineWidth=void 0===l?1:l,r.miterLimit=void 0===c?10:c,r.strokeStyle=Ns(a.getColor()||\"#000\")}else r=this.textStrokeState_=null;n=this.textState_;var p=t.getFont()||\"10px sans-serif\";vs(p);var f=t.getScale();n.overflow=t.getOverflow(),n.font=p,n.maxAngle=t.getMaxAngle(),n.placement=t.getPlacement(),n.textAlign=t.getTextAlign(),n.textBaseline=t.getTextBaseline()||\"middle\",n.backgroundFill=t.getBackgroundFill(),n.backgroundStroke=t.getBackgroundStroke(),n.padding=t.getPadding()||fs,n.scale=void 0===f?1:f;var d=t.getOffsetX(),_=t.getOffsetY(),g=t.getRotateWithView(),y=t.getRotation();this.text_=t.getText()||\"\",this.textOffsetX_=void 0===d?0:d,this.textOffsetY_=void 0===_?0:_,this.textRotateWithView_=void 0!==g&&g,this.textRotation_=void 0===y?0:y,this.strokeKey_=r?(\"string\"==typeof r.strokeStyle?r.strokeStyle:o(r.strokeStyle))+r.lineCap+r.lineDashOffset+\"|\"+r.lineWidth+r.lineJoin+r.miterLimit+\"[\"+r.lineDash.join()+\"]\":\"\",this.textKey_=n.font+n.scale+(n.textAlign||\"?\"),this.fillKey_=i?\"string\"==typeof i.fillStyle?i.fillStyle:\"|\"+o(i.fillStyle):\"\"}else this.text_=\"\"},e}(la)},Ca=function(){function t(t,e,n,i,r){this.declutter_=r,this.declutterGroup_=null,this.tolerance_=t,this.maxExtent_=e,this.pixelRatio_=i,this.resolution_=n,this.buildersByZIndex_={}}return t.prototype.addDeclutter=function(t){var e=null;return this.declutter_&&(t?(e=this.declutterGroup_)[4]++:(e=this.declutterGroup_=[1/0,1/0,-1/0,-1/0]).push(1)),e},t.prototype.finish=function(){var t={};for(var e in this.buildersByZIndex_){t[e]=t[e]||{};var n=this.buildersByZIndex_[e];for(var i in n){var r=n[i].finish();t[e][i]=r}}return t},t.prototype.getBuilder=function(t,e){var n=void 0!==t?t.toString():\"0\",i=this.buildersByZIndex_[n];void 0===i&&(i={},this.buildersByZIndex_[n]=i);var r=i[e];void 0===r&&(r=new(0,Ea[e])(this.tolerance_,this.maxExtent_,this.resolution_,this.pixelRatio_),i[e]=r);return r},t}(),wa={CIRCLE:\"Circle\",DEFAULT:\"Default\",IMAGE:\"Image\",LINE_STRING:\"LineString\",POLYGON:\"Polygon\",TEXT:\"Text\"};function Oa(t,e,n,i){for(var r=t[e],o=t[e+1],s=0,a=e+i;a<n;a+=i){var u=t[a],h=t[a+1];s+=Math.sqrt((u-r)*(u-r)+(h-o)*(h-o)),r=u,o=h}return s}function Ta(t,e,n,i,r,o,s,a,u,h,l){for(var c,p,f,d=[],_=t[e]>t[n-i],g=r.length,y=t[e],v=t[e+1],m=t[e+=i],x=t[e+1],E=0,C=Math.sqrt(Math.pow(m-y,2)+Math.pow(x-v,2)),w=\"\",O=0,T=0;T<g;++T){p=_?g-T-1:T;var b=r.charAt(p),R=a*u(h,w=_?b+w:w+b,l)-O;O+=R;for(var S=o+R/2;e<n-i&&E+C<S;)y=m,v=x,m=t[e+=i],x=t[e+1],E+=C,C=Math.sqrt(Math.pow(m-y,2)+Math.pow(x-v,2));var I=S-E,P=Math.atan2(x-v,m-y);if(_&&(P+=P>0?-Math.PI:Math.PI),void 0!==f){var L=P-f;if(L+=L>Math.PI?-2*Math.PI:L<-Math.PI?2*Math.PI:0,Math.abs(L)>s)return null}var M=I/C,F=Re(y,m,M),A=Re(v,x,M);f==P?(_&&(c[0]=F,c[1]=A,c[2]=R/2),c[4]=w):(O=R,c=[F,A,R/2,P,w=b],_?d.unshift(c):d.push(c),f=P),o+=R}return d}var ba=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ra=[1/0,1/0,-1/0,-1/0],Sa=[1,0,0,1,0,0],Ia=[],Pa=[],La=[],Ma=[],Fa=function(t){function e(e,n,i,r,o){var s=t.call(this)||this;return s.declutterTree=r,s.overlaps=i,s.pixelRatio=n,s.resolution=e,s.alignFill_,s.instructions=o.instructions,s.coordinates=o.coordinates,s.coordinateCache_={},s.renderedTransform_=[1,0,0,1,0,0],s.hitDetectionInstructions=o.hitDetectionInstructions,s.pixelCoordinates_=null,s.viewRotation_=0,s.fillStates=o.fillStates||{},s.strokeStates=o.strokeStates||{},s.textStates=o.textStates||{},s.widths_={},s}return ba(e,t),e.prototype.disposeInternal=function(){ds.release(this),t.prototype.disposeInternal.call(this)},e.prototype.getTextImage=function(t,e,n,i){var r,o=i+e+t+n+this.pixelRatio;if(!ds.containsKey(o)){var s=i?this.strokeStates[i]:null,a=n?this.fillStates[n]:null,u=this.textStates[e],h=this.pixelRatio,l=u.scale*h,c=xa[u.textAlign||\"center\"],p=i&&s.lineWidth?s.lineWidth:0,f=t.split(\"\\n\"),d=f.length,_=[],g=function(t,e,n){for(var i=e.length,r=0,o=0;o<i;++o){var s=ws(t,e[o]);r=Math.max(r,s),n.push(s)}return r}(u.font,f,_),y=Cs(u.font),v=y*d,m=g+p,x=lr(Math.ceil(m*l),Math.ceil((v+p)*l));r=x.canvas,ds.set(o,r),1!=l&&x.scale(l,l),x.font=u.font,i&&(x.strokeStyle=s.strokeStyle,x.lineWidth=p,x.lineCap=s.lineCap,x.lineJoin=s.lineJoin,x.miterLimit=s.miterLimit,x.setLineDash&&s.lineDash.length&&(x.setLineDash(s.lineDash),x.lineDashOffset=s.lineDashOffset)),n&&(x.fillStyle=a.fillStyle),x.textBaseline=\"middle\",x.textAlign=\"center\";var E=.5-c,C=c*r.width/l+E*p,w=void 0;if(i)for(w=0;w<d;++w)x.strokeText(f[w],C+E*_[w],.5*(p+y)+w*y);if(n)for(w=0;w<d;++w)x.fillText(f[w],C+E*_[w],.5*(p+y)+w*y)}return ds.get(o,this)},e.prototype.replayTextBackground_=function(t,e,n,i,r,o,s){t.beginPath(),t.moveTo.apply(t,e),t.lineTo.apply(t,n),t.lineTo.apply(t,i),t.lineTo.apply(t,r),t.lineTo.apply(t,e),o&&(this.alignFill_=o[2],this.fill_(t)),s&&(this.setStrokeStyle_(t,s),t.stroke())},e.prototype.replayImage_=function(t,e,n,i,r,o,s,a,u,h,l,c,p,f,d,_,g,y){var v=g||y;e-=r*=p,n-=o*=p;var m=d+h>i.width?i.width-h:d,x=a+l>i.height?i.height-l:a,E=_[3]+m*p+_[1],C=_[0]+x*p+_[2],w=e-_[3],O=n-_[0];(v||0!==c)&&(Ia[0]=Ma[0]=w,Ia[1]=Pa[1]=O,Pa[0]=La[0]=w+E,La[1]=Ma[1]=O+C);var T=null;if(0!==c){var b=e+r,R=n+o;T=fi(Sa,b,R,1,1,c,-b,-R),pi(Sa,Ia),pi(Sa,Pa),pi(Sa,La),pi(Sa,Ma),Ye(Math.min(Ia[0],Pa[0],La[0],Ma[0]),Math.min(Ia[1],Pa[1],La[1],Ma[1]),Math.max(Ia[0],Pa[0],La[0],Ma[0]),Math.max(Ia[1],Pa[1],La[1],Ma[1]),Ra)}else Ye(w,O,w+E,O+C,Ra);var S=t.canvas,I=y?y[2]*p/2:0,P=Ra[0]-I<=S.width&&Ra[2]+I>=0&&Ra[1]-I<=S.height&&Ra[3]+I>=0;if(f&&(e=Math.round(e),n=Math.round(n)),s){if(!P&&1==s[4])return;We(s,Ra);var L=P?[t,T?T.slice(0):null,u,i,h,l,m,x,e,n,p]:null;L&&v&&L.push(g,y,Ia,Pa,La,Ma),s.push(L)}else P&&(v&&this.replayTextBackground_(t,Ia,Pa,La,Ma,g,y),Rs(t,T,u,i,h,l,m,x,e,n,p))},e.prototype.fill_=function(t){if(this.alignFill_){var e=pi(this.renderedTransform_,[0,0]),n=512*this.pixelRatio;t.save(),t.translate(e[0]%n,e[1]%n),t.rotate(this.viewRotation_)}t.fill(),this.alignFill_&&t.restore()},e.prototype.setStrokeStyle_=function(t,e){t.strokeStyle=e[1],t.lineWidth=e[2],t.lineCap=e[3],t.lineJoin=e[4],t.miterLimit=e[5],t.setLineDash&&(t.lineDashOffset=e[7],t.setLineDash(e[6]))},e.prototype.renderDeclutter_=function(t,e){if(t&&t.length>5){var n=t[4];if(1==n||n==t.length-5){var i={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3],value:e};if(!this.declutterTree.collides(i)){this.declutterTree.insert(i);for(var r=5,o=t.length;r<o;++r){var s=t[r];s&&(s.length>11&&this.replayTextBackground_(s[0],s[13],s[14],s[15],s[16],s[11],s[12]),Rs.apply(void 0,s))}}t.length=5,Xe(t)}}},e.prototype.drawTextImageWithPointPlacement_=function(t,e,n,i){var r=this.textStates[e],o=this.getTextImage(t,e,i,n),s=this.strokeStates[n],a=this.pixelRatio,u=xa[r.textAlign||\"center\"],h=xa[r.textBaseline||\"middle\"],l=s&&s.lineWidth?s.lineWidth:0;return{label:o,anchorX:u*o.width/a+2*(.5-u)*l,anchorY:h*o.height/a+2*(.5-h)*l}},e.prototype.execute_=function(t,e,n,i,r,s,a){var u,h,l;this.pixelCoordinates_&&Zt(e,this.renderedTransform_)?u=this.pixelCoordinates_:(this.pixelCoordinates_||(this.pixelCoordinates_=[]),u=Rn(this.coordinates,0,this.coordinates.length,2,e,this.pixelCoordinates_),h=this.renderedTransform_,l=e,h[0]=l[0],h[1]=l[1],h[2]=l[2],h[3]=l[3],h[4]=l[4],h[5]=l[5]);for(var c,p,f,d,g,y,v,m,x,E,C,w,O,T,b,R,S=!_(n),I=0,P=i.length,L=0,M=0,F=0,A=null,D=null,k=this.coordinateCache_,G=this.viewRotation_,N={context:t,pixelRatio:this.pixelRatio,resolution:this.resolution,rotation:G},j=this.instructions!=i||this.overlaps?0:200;I<P;){var Y=i[I];switch(Y[0]){case ua.BEGIN_GEOMETRY:T=Y[1],S&&n[o(T)]||!T.getGeometry()?I=Y[2]:void 0===a||an(a,T.getGeometry().getExtent())?++I:I=Y[2]+1;break;case ua.BEGIN_PATH:M>j&&(this.fill_(t),M=0),F>j&&(t.stroke(),F=0),M||F||(t.beginPath(),d=g=NaN),++I;break;case ua.CIRCLE:var X=u[L=Y[1]],z=u[L+1],K=u[L+2]-X,W=u[L+3]-z,U=Math.sqrt(K*K+W*W);t.moveTo(X+U,z),t.arc(X,z,U,0,2*Math.PI,!0),++I;break;case ua.CLOSE_PATH:t.closePath(),++I;break;case ua.CUSTOM:L=Y[1],c=Y[2];var B=Y[3],Z=Y[4],V=6==Y.length?Y[5]:void 0;N.geometry=B,N.feature=T,I in k||(k[I]=[]);var H=k[I];V?V(u,L,c,2,H):(H[0]=u[L],H[1]=u[L+1],H.length=2),Z(H,N),++I;break;case ua.DRAW_IMAGE:L=Y[1],c=Y[2],x=Y[3],p=Y[4],f=Y[5],m=s?null:Y[6];var q=Y[7],J=Y[8],Q=Y[9],$=Y[10],tt=Y[11],et=Y[12],nt=Y[13],it=Y[14];if(!x&&Y.length>=19){E=Y[18],C=Y[19],w=Y[20],O=Y[21];var rt=this.drawTextImageWithPointPlacement_(E,C,w,O);x=Y[3]=rt.label;var ot=Y[22];p=Y[4]=(rt.anchorX-ot)*this.pixelRatio;var st=Y[23];f=Y[5]=(rt.anchorY-st)*this.pixelRatio,q=Y[7]=x.height,it=Y[14]=x.width}var at=void 0;Y.length>24&&(at=Y[24]);var ut=void 0,ht=void 0,lt=void 0;Y.length>16?(ut=Y[15],ht=Y[16],lt=Y[17]):(ut=fs,ht=lt=!1),tt&&(et+=G);for(var ct=0;L<c;L+=2)at&&at[ct++]<it/this.pixelRatio||this.replayImage_(t,u[L],u[L+1],x,p,f,m,q,J,Q,$,et,nt,r,it,ut,ht?A:null,lt?D:null);this.renderDeclutter_(m,T),++I;break;case ua.DRAW_CHARS:var pt=Y[1],ft=Y[2],dt=Y[3];m=s?null:Y[4];var _t=Y[5];O=Y[6];var gt=Y[7],yt=Y[8],vt=Y[9];w=Y[10];var mt=Y[11];E=Y[12],C=Y[13];var xt=Y[14],Et=this.textStates[C],Ct=Et.font,wt=Et.scale*yt,Ot=void 0;Ot=Ct in this.widths_?this.widths_[Ct]:this.widths_[Ct]={};var Tt=Oa(u,pt,ft,2),bt=wt*Os(Ct,E,Ot);if(_t||bt<=Tt){var Rt=this.textStates[C].textAlign,St=Ta(u,pt,ft,2,E,(Tt-bt)*xa[Rt],gt,wt,Os,Ct,Ot);if(St){var It=void 0,Pt=void 0,Lt=void 0,Mt=void 0,Ft=void 0;if(w)for(It=0,Pt=St.length;It<Pt;++It)Lt=(Ft=St[It])[4],Mt=this.getTextImage(Lt,C,\"\",w),p=Ft[2]+mt,f=dt*Mt.height+2*(.5-dt)*mt-vt,this.replayImage_(t,Ft[0],Ft[1],Mt,p,f,m,Mt.height,1,0,0,Ft[3],xt,!1,Mt.width,fs,null,null);if(O)for(It=0,Pt=St.length;It<Pt;++It)Lt=(Ft=St[It])[4],Mt=this.getTextImage(Lt,C,O,\"\"),p=Ft[2],f=dt*Mt.height-vt,this.replayImage_(t,Ft[0],Ft[1],Mt,p,f,m,Mt.height,1,0,0,Ft[3],xt,!1,Mt.width,fs,null,null)}}this.renderDeclutter_(m,T),++I;break;case ua.END_GEOMETRY:if(void 0!==s){var At=s(T=Y[1]);if(At)return At}++I;break;case ua.FILL:j?M++:this.fill_(t),++I;break;case ua.MOVE_TO_LINE_TO:for(L=Y[1],c=Y[2],b=u[L],v=(R=u[L+1])+.5|0,(y=b+.5|0)===d&&v===g||(t.moveTo(b,R),d=y,g=v),L+=2;L<c;L+=2)y=(b=u[L])+.5|0,v=(R=u[L+1])+.5|0,L!=c-2&&y===d&&v===g||(t.lineTo(b,R),d=y,g=v);++I;break;case ua.SET_FILL_STYLE:A=Y,this.alignFill_=Y[2],M&&(this.fill_(t),M=0,F&&(t.stroke(),F=0)),t.fillStyle=Y[1],++I;break;case ua.SET_STROKE_STYLE:D=Y,F&&(t.stroke(),F=0),this.setStrokeStyle_(t,Y),++I;break;case ua.STROKE:j?F++:t.stroke(),++I;break;default:++I}}M&&this.fill_(t),F&&t.stroke()},e.prototype.execute=function(t,e,n,i,r){this.viewRotation_=n,this.execute_(t,e,i,this.instructions,r,void 0,void 0)},e.prototype.executeHitDetection=function(t,e,n,i,r,o){return this.viewRotation_=n,this.execute_(t,e,i,this.hitDetectionInstructions,!0,r,o)},e}(O),Aa=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Da=[wa.POLYGON,wa.CIRCLE,wa.LINE_STRING,wa.IMAGE,wa.TEXT,wa.DEFAULT],ka=function(t){function e(e,n,i,r,o,s,a){var u=t.call(this)||this;return u.declutterTree_=o,u.maxExtent_=e,u.overlaps_=r,u.pixelRatio_=i,u.resolution_=n,u.renderBuffer_=a,u.executorsByZIndex_={},u.hitDetectionContext_=lr(1,1),u.hitDetectionTransform_=[1,0,0,1,0,0],u.createExecutors_(s),u}return Aa(e,t),e.prototype.clip=function(t,e){var n=this.getClipCoords(e);t.beginPath(),t.moveTo(n[0],n[1]),t.lineTo(n[2],n[3]),t.lineTo(n[4],n[5]),t.lineTo(n[6],n[7]),t.clip()},e.prototype.createExecutors_=function(t){for(var e in t){var n=this.executorsByZIndex_[e];void 0===n&&(this.executorsByZIndex_[e]=n={});var i=t[e];for(var r in i){var o=i[r];n[r]=new Fa(this.resolution_,this.pixelRatio_,this.overlaps_,this.declutterTree_,o)}}},e.prototype.disposeInternal=function(){for(var e in this.executorsByZIndex_){var n=this.executorsByZIndex_[e];for(var i in n)n[i].disposeInternal()}var r=this.hitDetectionContext_.canvas;r.width=r.height=0,t.prototype.disposeInternal.call(this)},e.prototype.hasExecutors=function(t){for(var e in this.executorsByZIndex_)for(var n=this.executorsByZIndex_[e],i=0,r=t.length;i<r;++i)if(t[i]in n)return!0;return!1},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i,r,o,s){var a,u=2*(i=Math.round(i))+1,h=fi(this.hitDetectionTransform_,i+.5,i+.5,1/e,-1/e,-n,-t[0],-t[1]),l=this.hitDetectionContext_;l.canvas.width!==u||l.canvas.height!==u?(l.canvas.width=u,l.canvas.height=u):l.clearRect(0,0,u,u),void 0!==this.renderBuffer_&&(Ue(a=[1/0,1/0,-1/0,-1/0],t),Me(a,e*(this.renderBuffer_+i),a));var c,p,f=function(t){if(void 0!==Ga[t])return Ga[t];for(var e=2*t+1,n=new Array(e),i=0;i<e;i++)n[i]=new Array(e);var r=t,o=0,s=0;for(;r>=o;)Na(n,t+r,t+o),Na(n,t+o,t+r),Na(n,t-o,t+r),Na(n,t-r,t+o),Na(n,t-r,t-o),Na(n,t-o,t-r),Na(n,t+o,t-r),Na(n,t+r,t-o),2*((s+=1+2*++o)-r)+1>0&&(s+=1-2*(r-=1));return Ga[t]=n,n}(i);function d(t){for(var e=l.getImageData(0,0,u,u).data,n=0;n<u;n++)for(var i=0;i<u;i++)if(f[n][i]&&e[4*(i*u+n)+3]>0){var r=void 0;return(!c||p!=wa.IMAGE&&p!=wa.TEXT||-1!==c.indexOf(t))&&(r=o(t)),r||void l.clearRect(0,0,u,u)}}this.declutterTree_&&(c=this.declutterTree_.all().map(function(t){return t.value}));var _,g,y,v,m,x=Object.keys(this.executorsByZIndex_).map(Number);for(x.sort(Kt),_=x.length-1;_>=0;--_){var E=x[_].toString();for(y=this.executorsByZIndex_[E],g=Da.length-1;g>=0;--g)if(void 0!==(v=y[p=Da[g]]))if(!s||p!=wa.IMAGE&&p!=wa.TEXT){if(m=v.executeHitDetection(l,h,n,r,d,a))return m}else{var C=s[E];C?C.push(v,h.slice(0)):s[E]=[v,h.slice(0)]}}},e.prototype.getClipCoords=function(t){var e=this.maxExtent_;if(!e)return null;var n=e[0],i=e[1],r=e[2],o=e[3],s=[n,i,n,o,r,o,r,i];return Rn(s,0,8,2,t,s),s},e.prototype.isEmpty=function(){return _(this.executorsByZIndex_)},e.prototype.execute=function(t,e,n,i,r,o,s){var a=Object.keys(this.executorsByZIndex_).map(Number);a.sort(Kt),this.maxExtent_&&(t.save(),this.clip(t,e));var u,h,l,c,p,f,d=o||Da;for(u=0,h=a.length;u<h;++u){var _=a[u].toString();for(p=this.executorsByZIndex_[_],l=0,c=d.length;l<c;++l){var g=d[l];if(void 0!==(f=p[g]))if(!s||g!=wa.IMAGE&&g!=wa.TEXT)f.execute(t,e,n,i,r);else{var y=s[_];y?y.push(f,e.slice(0)):s[_]=[f,e.slice(0)]}}}this.maxExtent_&&t.restore()},e}(O),Ga={0:[[!0]]};function Na(t,e,n){var i,r=Math.floor(t.length/2);if(e>=r)for(i=r;i<e;i++)t[i][n]=!0;else if(e<r)for(i=e+1;i<r;i++)t[i][n]=!0}var ja=ka,Ya=.5,Xa={Point:function(t,e,n,i){var r=n.getImage();if(r){if(r.getImageState()!=Ss.LOADED)return;var o=t.getBuilder(n.getZIndex(),wa.IMAGE);o.setImageStyle(r,t.addDeclutter(!1)),o.drawPoint(e,i)}var s=n.getText();if(s){var a=t.getBuilder(n.getZIndex(),wa.TEXT);a.setTextStyle(s,t.addDeclutter(!!r)),a.drawText(e,i)}},LineString:function(t,e,n,i){var r=n.getStroke();if(r){var o=t.getBuilder(n.getZIndex(),wa.LINE_STRING);o.setFillStrokeStyle(null,r),o.drawLineString(e,i)}var s=n.getText();if(s){var a=t.getBuilder(n.getZIndex(),wa.TEXT);a.setTextStyle(s,t.addDeclutter(!1)),a.drawText(e,i)}},Polygon:function(t,e,n,i){var r=n.getFill(),o=n.getStroke();if(r||o){var s=t.getBuilder(n.getZIndex(),wa.POLYGON);s.setFillStrokeStyle(r,o),s.drawPolygon(e,i)}var a=n.getText();if(a){var u=t.getBuilder(n.getZIndex(),wa.TEXT);u.setTextStyle(a,t.addDeclutter(!1)),u.drawText(e,i)}},MultiPoint:function(t,e,n,i){var r=n.getImage();if(r){if(r.getImageState()!=Ss.LOADED)return;var o=t.getBuilder(n.getZIndex(),wa.IMAGE);o.setImageStyle(r,t.addDeclutter(!1)),o.drawMultiPoint(e,i)}var s=n.getText();if(s){var a=t.getBuilder(n.getZIndex(),wa.TEXT);a.setTextStyle(s,t.addDeclutter(!!r)),a.drawText(e,i)}},MultiLineString:function(t,e,n,i){var r=n.getStroke();if(r){var o=t.getBuilder(n.getZIndex(),wa.LINE_STRING);o.setFillStrokeStyle(null,r),o.drawMultiLineString(e,i)}var s=n.getText();if(s){var a=t.getBuilder(n.getZIndex(),wa.TEXT);a.setTextStyle(s,t.addDeclutter(!1)),a.drawText(e,i)}},MultiPolygon:function(t,e,n,i){var r=n.getFill(),o=n.getStroke();if(o||r){var s=t.getBuilder(n.getZIndex(),wa.POLYGON);s.setFillStrokeStyle(r,o),s.drawMultiPolygon(e,i)}var a=n.getText();if(a){var u=t.getBuilder(n.getZIndex(),wa.TEXT);u.setTextStyle(a,t.addDeclutter(!1)),u.drawText(e,i)}},GeometryCollection:function(t,e,n,i){var r,o,s=e.getGeometriesArray();for(r=0,o=s.length;r<o;++r){var a=Xa[s[r].getType()];a(t,s[r],n,i)}},Circle:function(t,e,n,i){var r=n.getFill(),o=n.getStroke();if(r||o){var s=t.getBuilder(n.getZIndex(),wa.CIRCLE);s.setFillStrokeStyle(r,o),s.drawCircle(e,i)}var a=n.getText();if(a){var u=t.getBuilder(n.getZIndex(),wa.TEXT);u.setTextStyle(a,t.addDeclutter(!1)),u.drawText(e,i)}}};function za(t,e){return parseInt(o(t),10)-parseInt(o(e),10)}function Ka(t,e){var n=Wa(t,e);return n*n}function Wa(t,e){return Ya*t/e}function Ua(t,e,n,i,r,o){var s=!1,a=n.getImage();if(a){var u=a.getImageState();u==Ss.LOADED||u==Ss.ERROR?a.unlistenImageChange(r,o):(u==Ss.IDLE&&a.load(),u=a.getImageState(),a.listenImageChange(r,o),s=!0)}return function(t,e,n,i){var r=n.getGeometryFunction()(e);if(!r)return;var o=r.getSimplifiedGeometry(i);if(n.getRenderer())!function t(e,n,i,r){if(n.getType()==Tn.GEOMETRY_COLLECTION){for(var o=n.getGeometries(),s=0,a=o.length;s<a;++s)t(e,o[s],i,r);return}var u=e.getBuilder(i.getZIndex(),wa.DEFAULT);u.drawCustom(n,r,i.getRenderer())}(t,o,n,e);else{var s=Xa[o.getType()];s(t,o,n,e)}}(t,e,n,i),s}var Ba=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Za=function(t){function e(e){var n=t.call(this,e)||this;return n.declutterTree_=e.getDeclutter()?ea()(9,void 0):null,n.dirty_=!1,n.renderedRevision_=-1,n.renderedResolution_=NaN,n.renderedExtent_=[1/0,1/0,-1/0,-1/0],n.renderedRenderOrder_=null,n.replayGroup_=null,n.replayGroupChanged=!0,x(ds,L.CLEAR,n.handleFontsChanged_,n),n}return Ba(e,t),e.prototype.disposeInternal=function(){C(ds,L.CLEAR,this.handleFontsChanged_,this),t.prototype.disposeInternal.call(this)},e.prototype.renderFrame=function(t,e){var n=this.context,i=n.canvas,r=this.replayGroup_;if(!r||r.isEmpty())return i.width>0&&(i.width=0),i;var o=t.pixelRatio;ci(this.pixelTransform_,1/o,0,0,1/o,0,0),di(this.inversePixelTransform_,this.pixelTransform_);var s=Math.round(t.size[0]*o),a=Math.round(t.size[1]*o);if(i.width!=s||i.height!=a){i.width=s,i.height=a;var u=_i(this.pixelTransform_);i.style.transform!==u&&(i.style.transform=u)}else n.clearRect(0,0,s,a);this.preRender(n,t);var h=t.extent,l=t.viewState,c=l.projection,p=l.rotation,f=c.getExtent(),d=this.getLayer().getSource(),_=e.extent,g=void 0!==_;g&&this.clip(n,t,_),this.declutterTree_&&this.declutterTree_.clear();var y=t.viewHints,v=!(y[dn]||y[_n]),m=this.getRenderTransform(t,s,a,0),x=e.managed?t.skippedFeatureUids:{};if(r.execute(n,m,p,x,v),d.getWrapX()&&c.canWrapX()&&!ke(f,h)){for(var E=h[0],C=sn(f),w=0,O=void 0;E<f[0];){O=C*--w;var T=this.getRenderTransform(t,s,a,O);r.execute(n,T,p,x,v),E+=C}for(w=0,E=h[2];E>f[2];){O=C*++w;var b=this.getRenderTransform(t,s,a,O);r.execute(n,b,p,x,v),E-=C}}g&&n.restore(),this.postRender(n,t);var R=e.opacity;return R!==parseFloat(i.style.opacity)&&(i.style.opacity=R),i},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i,r){if(this.replayGroup_){var s=e.viewState.resolution,a=e.viewState.rotation,u=this.getLayer(),h={};return this.replayGroup_.forEachFeatureAtCoordinate(t,s,a,n,{},function(t){var e=o(t);if(!(e in h))return h[e]=!0,i.call(r,t,u)},null)}},e.prototype.handleFontsChanged_=function(t){var e=this.getLayer();e.getVisible()&&this.replayGroup_&&e.changed()},e.prototype.handleStyleImageChange_=function(t){this.renderIfReadyAndVisible()},e.prototype.prepareFrame=function(t,e){var n=this.getLayer(),i=n.getSource(),r=t.viewHints[dn],o=t.viewHints[_n],s=n.getUpdateWhileAnimating(),a=n.getUpdateWhileInteracting();if(!this.dirty_&&!s&&r||!a&&o)return!0;var u=t.extent,h=t.viewState,l=h.projection,c=h.resolution,p=t.pixelRatio,f=n.getRevision(),d=n.getRenderBuffer(),_=n.getRenderOrder();void 0===_&&(_=za);var g=Me(u,d*c),y=h.projection.getExtent();if(i.getWrapX()&&h.projection.canWrapX()&&!ke(y,t.extent)){var v=sn(y),m=Math.max(sn(g)/2,v);g[0]=y[0]-m,g[2]=y[2]+m}if(!this.dirty_&&this.renderedResolution_==c&&this.renderedRevision_==f&&this.renderedRenderOrder_==_&&ke(this.renderedExtent_,g))return this.replayGroupChanged=!1,!0;this.replayGroup_&&this.replayGroup_.dispose(),this.replayGroup_=null,this.dirty_=!1;var x=new Ca(Wa(c,p),g,c,p,!!this.declutterTree_);i.loadFeatures(g,c,l);var E=function(t){var e,i=t.getStyleFunction()||n.getStyleFunction();if(i&&(e=i(t,c)),e){var r=this.renderFeature(t,c,p,e,x);this.dirty_=this.dirty_||r}}.bind(this);if(_){var C=[];i.forEachFeatureInExtent(g,function(t){C.push(t)}),C.sort(_);for(var w=0,O=C.length;w<O;++w)E(C[w])}else i.forEachFeatureInExtent(g,E);var T=x.finish(),b=new ja(g,c,p,i.getOverlaps(),this.declutterTree_,T,n.getRenderBuffer());return this.renderedResolution_=c,this.renderedRevision_=f,this.renderedRenderOrder_=_,this.renderedExtent_=g,this.replayGroup_=b,this.replayGroupChanged=!0,!0},e.prototype.renderFeature=function(t,e,n,i,r){if(!i)return!1;var o=!1;if(Array.isArray(i))for(var s=0,a=i.length;s<a;++s)o=Ua(r,t,i[s],Ka(e,n),this.handleStyleImageChange_,this)||o;else o=Ua(r,t,i,Ka(e,n),this.handleStyleImageChange_,this);return o},e}(Ms),Va=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ha=function(t){function e(e){return t.call(this,e)||this}return Va(e,t),e.prototype.createRenderer=function(){return new Za(this)},e}($s),qa={ARRAY_BUFFER:\"arraybuffer\",JSON:\"json\",TEXT:\"text\",XML:\"xml\"};function Ja(t,e){return function(t,e,n,i){return function(r,o,s){var a=new XMLHttpRequest;a.open(\"GET\",\"function\"==typeof t?t(r,o,s):t,!0),e.getType()==qa.ARRAY_BUFFER&&(a.responseType=\"arraybuffer\"),a.onload=function(t){if(!a.status||a.status>=200&&a.status<300){var o=e.getType(),u=void 0;o==qa.JSON||o==qa.TEXT?u=a.responseText:o==qa.XML?(u=a.responseXML)||(u=(new DOMParser).parseFromString(a.responseText,\"application/xml\")):o==qa.ARRAY_BUFFER&&(u=a.response),u?n.call(this,e.readFeatures(u,{extent:r,featureProjection:s}),e.readProjection(u)):i.call(this)}else i.call(this)}.bind(this),a.onerror=function(){i.call(this)}.bind(this),a.send()}}(t,e,function(t,e){\"function\"==typeof this.addFeatures&&this.addFeatures(t)},R)}function Qa(t,e){return[[-1/0,-1/0,1/0,1/0]]}var $a=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function tu(t){return t?Array.isArray(t)?function(e){return t}:\"function\"==typeof t?t:function(e){return[t]}:null}var eu=function(t){function e(e){var n=t.call(this)||this;return n.projection_=ii(e.projection),n.attributions_=tu(e.attributions),n.attributionsCollapsible_=void 0===e.attributionsCollapsible||e.attributionsCollapsible,n.loading=!1,n.state_=void 0!==e.state?e.state:gr.READY,n.wrapX_=void 0!==e.wrapX&&e.wrapX,n}return $a(e,t),e.prototype.getAttributions=function(){return this.attributions_},e.prototype.getAttributionsCollapsible=function(){return this.attributionsCollapsible_},e.prototype.getProjection=function(){return this.projection_},e.prototype.getResolutions=function(){return i()},e.prototype.getState=function(){return this.state_},e.prototype.getWrapX=function(){return this.wrapX_},e.prototype.refresh=function(){this.changed()},e.prototype.setAttributions=function(t){this.attributions_=tu(t),this.changed()},e.prototype.setState=function(t){this.state_=t,this.changed()},e}(j),nu=\"addfeature\",iu=\"changefeature\",ru=\"clear\",ou=\"removefeature\",su=function(){function t(t){this.rbush_=ea()(t,void 0),this.items_={}}return t.prototype.insert=function(t,e){var n={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3],value:e};this.rbush_.insert(n),this.items_[o(e)]=n},t.prototype.load=function(t,e){for(var n=new Array(e.length),i=0,r=e.length;i<r;i++){var s=t[i],a=e[i],u={minX:s[0],minY:s[1],maxX:s[2],maxY:s[3],value:a};n[i]=u,this.items_[o(a)]=u}this.rbush_.load(n)},t.prototype.remove=function(t){var e=o(t),n=this.items_[e];return delete this.items_[e],null!==this.rbush_.remove(n)},t.prototype.update=function(t,e){var n=this.items_[o(e)];Ke([n.minX,n.minY,n.maxX,n.maxY],t)||(this.remove(e),this.insert(t,e))},t.prototype.getAll=function(){return this.rbush_.all().map(function(t){return t.value})},t.prototype.getInExtent=function(t){var e={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]};return this.rbush_.search(e).map(function(t){return t.value})},t.prototype.forEach=function(t){return this.forEach_(this.getAll(),t)},t.prototype.forEachInExtent=function(t,e){return this.forEach_(this.getInExtent(t),e)},t.prototype.forEach_=function(t,e){for(var n,i=0,r=t.length;i<r;i++)if(n=e(t[i]))return n;return n},t.prototype.isEmpty=function(){return _(this.items_)},t.prototype.clear=function(){this.rbush_.clear(),this.items_={}},t.prototype.getExtent=function(t){var e=this.rbush_.toJSON();return Ye(e.minX,e.minY,e.maxX,e.maxY,t)},t.prototype.concat=function(t){for(var e in this.rbush_.load(t.rbush_.all()),t.items_)this.items_[e]=t.items_[e]},t}(),au=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),uu=function(t){function e(e,n){var i=t.call(this,e)||this;return i.feature=n,i}return au(e,t),e}(S),hu=function(t){function e(e){var n=this,i=e||{};(n=t.call(this,{attributions:i.attributions,projection:void 0,state:gr.READY,wrapX:void 0===i.wrapX||i.wrapX})||this).loader_=R,n.format_=i.format,n.overlaps_=null==i.overlaps||i.overlaps,n.url_=i.url,void 0!==i.loader?n.loader_=i.loader:void 0!==n.url_&&(_e(n.format_,7),n.loader_=Ja(n.url_,n.format_)),n.strategy_=void 0!==i.strategy?i.strategy:Qa;var r,o,s=void 0===i.useSpatialIndex||i.useSpatialIndex;return n.featuresRtree_=s?new su:null,n.loadedExtentsRtree_=new su,n.nullGeometryFeatures_={},n.idIndex_={},n.undefIdIndex_={},n.featureChangeKeys_={},n.featuresCollection_=null,Array.isArray(i.features)?o=i.features:i.features&&(o=(r=i.features).getArray()),s||void 0!==r||(r=new K(o)),void 0!==o&&n.addFeaturesInternal(o),void 0!==r&&n.bindFeaturesCollection_(r),n}return au(e,t),e.prototype.addFeature=function(t){this.addFeatureInternal(t),this.changed()},e.prototype.addFeatureInternal=function(t){var e=o(t);if(this.addToIndex_(e,t)){this.setupChangeEvents_(e,t);var n=t.getGeometry();if(n){var i=n.getExtent();this.featuresRtree_&&this.featuresRtree_.insert(i,t)}else this.nullGeometryFeatures_[e]=t;this.dispatchEvent(new uu(nu,t))}},e.prototype.setupChangeEvents_=function(t,e){this.featureChangeKeys_[t]=[x(e,L.CHANGE,this.handleFeatureChange_,this),x(e,c,this.handleFeatureChange_,this)]},e.prototype.addToIndex_=function(t,e){var n=!0,i=e.getId();return void 0!==i?i.toString()in this.idIndex_?n=!1:this.idIndex_[i.toString()]=e:(_e(!(t in this.undefIdIndex_),30),this.undefIdIndex_[t]=e),n},e.prototype.addFeatures=function(t){this.addFeaturesInternal(t),this.changed()},e.prototype.addFeaturesInternal=function(t){for(var e=[],n=[],i=[],r=0,s=t.length;r<s;r++){var a=o(h=t[r]);this.addToIndex_(a,h)&&n.push(h)}r=0;for(var u=n.length;r<u;r++){var h;a=o(h=n[r]);this.setupChangeEvents_(a,h);var l=h.getGeometry();if(l){var c=l.getExtent();e.push(c),i.push(h)}else this.nullGeometryFeatures_[a]=h}this.featuresRtree_&&this.featuresRtree_.load(e,i);r=0;for(var p=n.length;r<p;r++)this.dispatchEvent(new uu(nu,n[r]))},e.prototype.bindFeaturesCollection_=function(t){var e=!1;x(this,nu,function(n){e||(e=!0,t.push(n.feature),e=!1)}),x(this,ou,function(n){e||(e=!0,t.remove(n.feature),e=!1)}),x(t,l.ADD,function(t){e||(e=!0,this.addFeature(t.element),e=!1)},this),x(t,l.REMOVE,function(t){e||(e=!0,this.removeFeature(t.element),e=!1)},this),this.featuresCollection_=t},e.prototype.clear=function(t){if(t){for(var e in this.featureChangeKeys_){this.featureChangeKeys_[e].forEach(w)}this.featuresCollection_||(this.featureChangeKeys_={},this.idIndex_={},this.undefIdIndex_={})}else if(this.featuresRtree_)for(var n in this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this)),this.nullGeometryFeatures_)this.removeFeatureInternal(this.nullGeometryFeatures_[n]);this.featuresCollection_&&this.featuresCollection_.clear(),this.featuresRtree_&&this.featuresRtree_.clear(),this.nullGeometryFeatures_={};var i=new uu(ru);this.dispatchEvent(i),this.changed()},e.prototype.forEachFeature=function(t){if(this.featuresRtree_)return this.featuresRtree_.forEach(t);this.featuresCollection_&&this.featuresCollection_.forEach(t)},e.prototype.forEachFeatureAtCoordinateDirect=function(t,e){var n=[t[0],t[1],t[0],t[1]];return this.forEachFeatureInExtent(n,function(n){return n.getGeometry().intersectsCoordinate(t)?e(n):void 0})},e.prototype.forEachFeatureInExtent=function(t,e){if(this.featuresRtree_)return this.featuresRtree_.forEachInExtent(t,e);this.featuresCollection_&&this.featuresCollection_.forEach(e)},e.prototype.forEachFeatureIntersectingExtent=function(t,e){return this.forEachFeatureInExtent(t,function(n){if(n.getGeometry().intersectsExtent(t)){var i=e(n);if(i)return i}})},e.prototype.getFeaturesCollection=function(){return this.featuresCollection_},e.prototype.getFeatures=function(){var t;return this.featuresCollection_?t=this.featuresCollection_.getArray():this.featuresRtree_&&(t=this.featuresRtree_.getAll(),_(this.nullGeometryFeatures_)||Bt(t,d(this.nullGeometryFeatures_))),t},e.prototype.getFeaturesAtCoordinate=function(t){var e=[];return this.forEachFeatureAtCoordinateDirect(t,function(t){e.push(t)}),e},e.prototype.getFeaturesInExtent=function(t){return this.featuresRtree_.getInExtent(t)},e.prototype.getClosestFeatureToCoordinate=function(t,e){var n=t[0],i=t[1],r=null,o=[NaN,NaN],s=1/0,a=[-1/0,-1/0,1/0,1/0],u=e||T;return this.featuresRtree_.forEachInExtent(a,function(t){if(u(t)){var e=t.getGeometry(),h=s;if((s=e.closestPointXY(n,i,o,s))<h){r=t;var l=Math.sqrt(s);a[0]=n-l,a[1]=i-l,a[2]=n+l,a[3]=i+l}}}),r},e.prototype.getExtent=function(t){return this.featuresRtree_.getExtent(t)},e.prototype.getFeatureById=function(t){var e=this.idIndex_[t.toString()];return void 0!==e?e:null},e.prototype.getFormat=function(){return this.format_},e.prototype.getOverlaps=function(){return this.overlaps_},e.prototype.getUrl=function(){return this.url_},e.prototype.handleFeatureChange_=function(t){var e=t.target,n=o(e),i=e.getGeometry();if(i){var r=i.getExtent();n in this.nullGeometryFeatures_?(delete this.nullGeometryFeatures_[n],this.featuresRtree_&&this.featuresRtree_.insert(r,e)):this.featuresRtree_&&this.featuresRtree_.update(r,e)}else n in this.nullGeometryFeatures_||(this.featuresRtree_&&this.featuresRtree_.remove(e),this.nullGeometryFeatures_[n]=e);var s=e.getId();if(void 0!==s){var a=s.toString();n in this.undefIdIndex_?(delete this.undefIdIndex_[n],this.idIndex_[a]=e):this.idIndex_[a]!==e&&(this.removeFromIdIndex_(e),this.idIndex_[a]=e)}else n in this.undefIdIndex_||(this.removeFromIdIndex_(e),this.undefIdIndex_[n]=e);this.changed(),this.dispatchEvent(new uu(iu,e))},e.prototype.hasFeature=function(t){var e=t.getId();return void 0!==e?e in this.idIndex_:o(t)in this.undefIdIndex_},e.prototype.isEmpty=function(){return this.featuresRtree_.isEmpty()&&_(this.nullGeometryFeatures_)},e.prototype.loadFeatures=function(t,e,n){var i=this.loadedExtentsRtree_,r=this.strategy_(t,e);this.loading=!1;for(var o=function(t,o){var a=r[t];i.forEachInExtent(a,function(t){return ke(t.extent,a)})||(s.loader_.call(s,a,e,n),i.insert(a,{extent:a.slice()}),s.loading=s.loader_!==R)},s=this,a=0,u=r.length;a<u;++a)o(a)},e.prototype.refresh=function(){this.clear(!0),this.loadedExtentsRtree_.clear(),t.prototype.refresh.call(this)},e.prototype.removeLoadedExtent=function(t){var e,n=this.loadedExtentsRtree_;n.forEachInExtent(t,function(n){if(Ke(n.extent,t))return e=n,!0}),e&&n.remove(e)},e.prototype.removeFeature=function(t){var e=o(t);e in this.nullGeometryFeatures_?delete this.nullGeometryFeatures_[e]:this.featuresRtree_&&this.featuresRtree_.remove(t),this.removeFeatureInternal(t),this.changed()},e.prototype.removeFeatureInternal=function(t){var e=o(t);this.featureChangeKeys_[e].forEach(w),delete this.featureChangeKeys_[e];var n=t.getId();void 0!==n?delete this.idIndex_[n.toString()]:delete this.undefIdIndex_[e],this.dispatchEvent(new uu(ou,t))},e.prototype.removeFromIdIndex_=function(t){var e=!1;for(var n in this.idIndex_)if(this.idIndex_[n]===t){delete this.idIndex_[n],e=!0;break}return e},e.prototype.setLoader=function(t){this.loader_=t},e.prototype.setUrl=function(t){_e(this.format_,7),this.setLoader(Ja(t,this.format_))},e}(eu),lu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();var cu=function(t){function e(e){var n=t.call(this)||this;if(n.id_=void 0,n.geometryName_=\"geometry\",n.style_=null,n.styleFunction_=void 0,n.geometryChangeKey_=null,x(n,N(n.geometryName_),n.handleGeometryChanged_,n),e)if(\"function\"==typeof e.getSimplifiedGeometry){var i=e;n.setGeometry(i)}else{var r=e;n.setProperties(r)}return n}return lu(e,t),e.prototype.clone=function(){var t=new e(this.getProperties());t.setGeometryName(this.getGeometryName());var n=this.getGeometry();n&&t.setGeometry(n.clone());var i=this.getStyle();return i&&t.setStyle(i),t},e.prototype.getGeometry=function(){return this.get(this.geometryName_)},e.prototype.getId=function(){return this.id_},e.prototype.getGeometryName=function(){return this.geometryName_},e.prototype.getStyle=function(){return this.style_},e.prototype.getStyleFunction=function(){return this.styleFunction_},e.prototype.handleGeometryChange_=function(){this.changed()},e.prototype.handleGeometryChanged_=function(){this.geometryChangeKey_&&(w(this.geometryChangeKey_),this.geometryChangeKey_=null);var t=this.getGeometry();t&&(this.geometryChangeKey_=x(t,L.CHANGE,this.handleGeometryChange_,this)),this.changed()},e.prototype.setGeometry=function(t){this.set(this.geometryName_,t)},e.prototype.setStyle=function(t){this.style_=t,this.styleFunction_=t?function(t){if(\"function\"==typeof t)return t;var e;if(Array.isArray(t))e=t;else{_e(\"function\"==typeof t.getZIndex,41);var n=t;e=[n]}return function(){return e}}(t):void 0,this.changed()},e.prototype.setId=function(t){this.id_=t,this.changed()},e.prototype.setGeometryName=function(t){C(this,N(this.geometryName_),this.handleGeometryChanged_,this),this.geometryName_=t,x(this,N(this.geometryName_),this.handleGeometryChanged_,this),this.handleGeometryChanged_()},e}(j),pu=function(){function t(){this.dataProjection=null,this.defaultFeatureProjection=null}return t.prototype.getReadOptions=function(t,e){var n;return e&&(n={dataProjection:e.dataProjection?e.dataProjection:this.readProjection(t),featureProjection:e.featureProjection}),this.adaptOptions(n)},t.prototype.adaptOptions=function(t){return p({dataProjection:this.dataProjection,featureProjection:this.defaultFeatureProjection},t)},t.prototype.getType=function(){return i()},t.prototype.readFeature=function(t,e){return i()},t.prototype.readFeatures=function(t,e){return i()},t.prototype.readGeometry=function(t,e){return i()},t.prototype.readProjection=function(t){return i()},t.prototype.writeFeature=function(t,e){return i()},t.prototype.writeFeatures=function(t,e){return i()},t.prototype.writeGeometry=function(t,e){return i()},t}();function fu(t,e,n){var i,r=n?ii(n.featureProjection):null,o=n?ii(n.dataProjection):null;if(i=r&&o&&!ai(r,o)?(e?t.clone():t).transform(e?r:o,e?o:r):t,e&&n&&void 0!==n.decimals){var s=Math.pow(10,n.decimals);i===t&&(i=t.clone()),i.applyTransform(function(t){for(var e=0,n=t.length;e<n;++e)t[e]=Math.round(t[e]*s)/s;return t})}return i}var du=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function _u(t){if(\"string\"==typeof t){var e=JSON.parse(t);return e||null}return null!==t?t:null}var gu=function(t){function e(){return t.call(this)||this}return du(e,t),e.prototype.getType=function(){return qa.JSON},e.prototype.readFeature=function(t,e){return this.readFeatureFromObject(_u(t),this.getReadOptions(t,e))},e.prototype.readFeatures=function(t,e){return this.readFeaturesFromObject(_u(t),this.getReadOptions(t,e))},e.prototype.readFeatureFromObject=function(t,e){return i()},e.prototype.readFeaturesFromObject=function(t,e){return i()},e.prototype.readGeometry=function(t,e){return this.readGeometryFromObject(_u(t),this.getReadOptions(t,e))},e.prototype.readGeometryFromObject=function(t,e){return i()},e.prototype.readProjection=function(t){return this.readProjectionFromObject(_u(t))},e.prototype.readProjectionFromObject=function(t){return i()},e.prototype.writeFeature=function(t,e){return JSON.stringify(this.writeFeatureObject(t,e))},e.prototype.writeFeatureObject=function(t,e){return i()},e.prototype.writeFeatures=function(t,e){return JSON.stringify(this.writeFeaturesObject(t,e))},e.prototype.writeFeaturesObject=function(t,e){return i()},e.prototype.writeGeometry=function(t,e){return JSON.stringify(this.writeGeometryObject(t,e))},e.prototype.writeGeometryObject=function(t,e){return i()},e}(pu),yu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function vu(t){for(var e=[],n=0,i=t.length;n<i;++n)e.push(t[n].clone());return e}var mu=function(t){function e(e){var n=t.call(this)||this;return n.geometries_=e||null,n.listenGeometriesChange_(),n}return yu(e,t),e.prototype.unlistenGeometriesChange_=function(){if(this.geometries_)for(var t=0,e=this.geometries_.length;t<e;++t)C(this.geometries_[t],L.CHANGE,this.changed,this)},e.prototype.listenGeometriesChange_=function(){if(this.geometries_)for(var t=0,e=this.geometries_.length;t<e;++t)x(this.geometries_[t],L.CHANGE,this.changed,this)},e.prototype.clone=function(){var t=new e(null);return t.setGeometries(this.geometries_),t},e.prototype.closestPointXY=function(t,e,n,i){if(i<Ae(this.getExtent(),t,e))return i;for(var r=this.geometries_,o=0,s=r.length;o<s;++o)i=r[o].closestPointXY(t,e,n,i);return i},e.prototype.containsXY=function(t,e){for(var n=this.geometries_,i=0,r=n.length;i<r;++i)if(n[i].containsXY(t,e))return!0;return!1},e.prototype.computeExtent=function(t){Xe(t);for(var e=this.geometries_,n=0,i=e.length;n<i;++n)We(t,e[n].getExtent());return t},e.prototype.getGeometries=function(){return vu(this.geometries_)},e.prototype.getGeometriesArray=function(){return this.geometries_},e.prototype.getSimplifiedGeometry=function(t){if(this.simplifiedGeometryRevision!=this.getRevision()&&(f(this.simplifiedGeometryCache),this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&t<this.simplifiedGeometryMaxMinSquaredTolerance)return this;var n=t.toString();if(this.simplifiedGeometryCache.hasOwnProperty(n))return this.simplifiedGeometryCache[n];for(var i=[],r=this.geometries_,o=!1,s=0,a=r.length;s<a;++s){var u=r[s],h=u.getSimplifiedGeometry(t);i.push(h),h!==u&&(o=!0)}if(o){var l=new e(null);return l.setGeometriesArray(i),this.simplifiedGeometryCache[n]=l,l}return this.simplifiedGeometryMaxMinSquaredTolerance=t,this},e.prototype.getType=function(){return Tn.GEOMETRY_COLLECTION},e.prototype.intersectsExtent=function(t){for(var e=this.geometries_,n=0,i=e.length;n<i;++n)if(e[n].intersectsExtent(t))return!0;return!1},e.prototype.isEmpty=function(){return 0===this.geometries_.length},e.prototype.rotate=function(t,e){for(var n=this.geometries_,i=0,r=n.length;i<r;++i)n[i].rotate(t,e);this.changed()},e.prototype.scale=function(t,e,n){var i=n;i||(i=Qe(this.getExtent()));for(var r=this.geometries_,o=0,s=r.length;o<s;++o)r[o].scale(t,e,i);this.changed()},e.prototype.setGeometries=function(t){this.setGeometriesArray(vu(t))},e.prototype.setGeometriesArray=function(t){this.unlistenGeometriesChange_(),this.geometries_=t,this.listenGeometriesChange_(),this.changed()},e.prototype.applyTransform=function(t){for(var e=this.geometries_,n=0,i=e.length;n<i;++n)e[n].applyTransform(t);this.changed()},e.prototype.translate=function(t,e){for(var n=this.geometries_,i=0,r=n.length;i<r;++i)n[i].translate(t,e);this.changed()},e.prototype.disposeInternal=function(){this.unlistenGeometriesChange_(),t.prototype.disposeInternal.call(this)},e}(vi);function xu(t,e,n,i,r,o){var s=NaN,a=NaN,u=(n-e)/i;if(1===u)s=t[e],a=t[e+1];else if(2==u)s=(1-r)*t[e]+r*t[e+i],a=(1-r)*t[e+1]+r*t[e+i+1];else if(0!==u){for(var h=t[e],l=t[e+1],c=0,p=[0],f=e+i;f<n;f+=i){var d=t[f],_=t[f+1];c+=Math.sqrt((d-h)*(d-h)+(_-l)*(_-l)),p.push(c),h=d,l=_}var g=r*c,y=function(t,e,n){for(var i,r,o=n||Kt,s=0,a=t.length,u=!1;s<a;)(r=+o(t[i=s+(a-s>>1)],e))<0?s=i+1:(a=i,u=!r);return u?s:~s}(p,g);if(y<0){var v=(g-p[-y-2])/(p[-y-1]-p[-y-2]),m=e+(-y-2)*i;s=Re(t[m],t[m+i],v),a=Re(t[m+1],t[m+i+1],v)}else s=t[e+y*i],a=t[e+y*i+1]}return o?(o[0]=s,o[1]=a,o):[s,a]}function Eu(t,e,n,i,r,o){if(n==e)return null;var s;if(r<t[e+i-1])return o?((s=t.slice(e,e+i))[i-1]=r,s):null;if(t[n-1]<r)return o?((s=t.slice(n-i,n))[i-1]=r,s):null;if(r==t[e+i-1])return t.slice(e,e+i);for(var a=e/i,u=n/i;a<u;){var h=a+u>>1;r<t[(h+1)*i-1]?u=h:a=h+1}var l=t[a*i-1];if(r==l)return t.slice((a-1)*i,(a-1)*i+i);var c=(r-l)/(t[(a+1)*i-1]-l);s=[];for(var p=0;p<i-1;++p)s.push(Re(t[(a-1)*i+p],t[a*i+p],c));return s.push(r),s}var Cu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),wu=function(t){function e(e,n){var i=t.call(this)||this;return i.flatMidpoint_=null,i.flatMidpointRevision_=-1,i.maxDelta_=-1,i.maxDeltaRevision_=-1,void 0===n||Array.isArray(e[0])?i.setCoordinates(e,n):i.setFlatCoordinates(n,e),i}return Cu(e,t),e.prototype.appendCoordinate=function(t){this.flatCoordinates?Bt(this.flatCoordinates,t):this.flatCoordinates=t.slice(),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){return i<Ae(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Ti(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Ri(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!1,t,e,n,i))},e.prototype.forEachSegment=function(t){return Zi(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},e.prototype.getCoordinateAtM=function(t,e){if(this.layout!=bn.XYM&&this.layout!=bn.XYZM)return null;var n=void 0!==e&&e;return Eu(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,n)},e.prototype.getCoordinates=function(){return Li(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getCoordinateAt=function(t,e){return xu(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,e)},e.prototype.getLength=function(){return Oa(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getFlatMidpoint=function(){return this.flatMidpointRevision_!=this.getRevision()&&(this.flatMidpoint_=this.getCoordinateAt(.5,this.flatMidpoint_),this.flatMidpointRevision_=this.getRevision()),this.flatMidpoint_},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[];return n.length=Ai(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,n,0),new e(n,bn.XY)},e.prototype.getType=function(){return Tn.LINE_STRING},e.prototype.intersectsExtent=function(t){return Vi(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Ii(this.flatCoordinates,0,t,this.stride),this.changed()},e}(Ei),Ou=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Tu=function(t){function e(e,n,i){var r=t.call(this)||this;if(r.ends_=[],r.maxDelta_=-1,r.maxDeltaRevision_=-1,Array.isArray(e[0]))r.setCoordinates(e,n);else if(void 0!==n&&i)r.setFlatCoordinates(n,e),r.ends_=i;else{for(var o=r.getLayout(),s=e,a=[],u=[],h=0,l=s.length;h<l;++h){var c=s[h];0===h&&(o=c.getLayout()),Bt(a,c.getFlatCoordinates()),u.push(a.length)}r.setFlatCoordinates(o,a),r.ends_=u}return r}return Ou(e,t),e.prototype.appendLineString=function(t){this.flatCoordinates?Bt(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout,this.ends_.slice())},e.prototype.closestPointXY=function(t,e,n,i){return i<Ae(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(bi(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Si(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,e,n,i))},e.prototype.getCoordinateAtM=function(t,e,n){if(this.layout!=bn.XYM&&this.layout!=bn.XYZM||0===this.flatCoordinates.length)return null;var i=void 0!==e&&e,r=void 0!==n&&n;return function(t,e,n,i,r,o,s){if(s)return Eu(t,e,n[n.length-1],i,r,o);var a;if(r<t[i-1])return o?((a=t.slice(0,i))[i-1]=r,a):null;if(t[t.length-1]<r)return o?((a=t.slice(t.length-i))[i-1]=r,a):null;for(var u=0,h=n.length;u<h;++u){var l=n[u];if(e!=l){if(r<t[e+i-1])return null;if(r<=t[l-1])return Eu(t,e,l,i,r,!1);e=l}}return null}(this.flatCoordinates,0,this.ends_,this.stride,t,i,r)},e.prototype.getCoordinates=function(){return Mi(this.flatCoordinates,0,this.ends_,this.stride)},e.prototype.getEnds=function(){return this.ends_},e.prototype.getLineString=function(t){return t<0||this.ends_.length<=t?null:new wu(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},e.prototype.getLineStrings=function(){for(var t=this.flatCoordinates,e=this.ends_,n=this.layout,i=[],r=0,o=0,s=e.length;o<s;++o){var a=e[o],u=new wu(t.slice(r,a),n);i.push(u),r=a}return i},e.prototype.getFlatMidpoints=function(){for(var t=[],e=this.flatCoordinates,n=0,i=this.ends_,r=this.stride,o=0,s=i.length;o<s;++o){var a=i[o];Bt(t,xu(e,n,a,r,.5)),n=a}return t},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[],i=[];return n.length=Di(this.flatCoordinates,0,this.ends_,this.stride,t,n,0,i),new e(n,bn.XY,i)},e.prototype.getType=function(){return Tn.MULTI_LINE_STRING},e.prototype.intersectsExtent=function(t){return function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){if(Vi(t,e,n[o],i,r))return!0;e=n[o]}return!1}(this.flatCoordinates,0,this.ends_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var n=Pi(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===n.length?0:n[n.length-1],this.changed()},e}(Ei),bu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ru=function(t){function e(e,n){var i=t.call(this)||this;return n&&!Array.isArray(e[0])?i.setFlatCoordinates(n,e):i.setCoordinates(e,n),i}return bu(e,t),e.prototype.appendPoint=function(t){this.flatCoordinates?Bt(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){if(i<Ae(this.getExtent(),t,e))return i;for(var r=this.flatCoordinates,o=this.stride,s=0,a=r.length;s<a;s+=o){var u=Oe(t,e,r[s],r[s+1]);if(u<i){i=u;for(var h=0;h<o;++h)n[h]=r[s+h];n.length=o}}return i},e.prototype.getCoordinates=function(){return Li(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getPoint=function(t){var e=this.flatCoordinates?this.flatCoordinates.length/this.stride:0;return t<0||e<=t?null:new zi(this.flatCoordinates.slice(t*this.stride,(t+1)*this.stride),this.layout)},e.prototype.getPoints=function(){for(var t=this.flatCoordinates,e=this.layout,n=this.stride,i=[],r=0,o=t.length;r<o;r+=n){var s=new zi(t.slice(r,r+n),e);i.push(s)}return i},e.prototype.getType=function(){return Tn.MULTI_POINT},e.prototype.intersectsExtent=function(t){for(var e=this.flatCoordinates,n=this.stride,i=0,r=e.length;i<r;i+=n){if(Ge(t,e[i],e[i+1]))return!0}return!1},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Ii(this.flatCoordinates,0,t,this.stride),this.changed()},e}(Ei);var Su=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Iu=function(t){function e(e,n,i){var r=t.call(this)||this;if(r.endss_=[],r.flatInteriorPointsRevision_=-1,r.flatInteriorPoints_=null,r.maxDelta_=-1,r.maxDeltaRevision_=-1,r.orientedRevision_=-1,r.orientedFlatCoordinates_=null,!i&&!Array.isArray(e[0])){for(var o=r.getLayout(),s=e,a=[],u=[],h=0,l=s.length;h<l;++h){var c=s[h];0===h&&(o=c.getLayout());for(var p=a.length,f=c.getEnds(),d=0,_=f.length;d<_;++d)f[d]+=p;Bt(a,c.getFlatCoordinates()),u.push(f)}n=o,e=a,i=u}return void 0!==n&&i?(r.setFlatCoordinates(n,e),r.endss_=i):r.setCoordinates(e,n),r}return Su(e,t),e.prototype.appendPolygon=function(t){var e;if(this.flatCoordinates){var n=this.flatCoordinates.length;Bt(this.flatCoordinates,t.getFlatCoordinates());for(var i=0,r=(e=t.getEnds().slice()).length;i<r;++i)e[i]+=n}else this.flatCoordinates=t.getFlatCoordinates().slice(),e=t.getEnds().slice(),this.endss_.push();this.endss_.push(e),this.changed()},e.prototype.clone=function(){for(var t=this.endss_.length,n=new Array(t),i=0;i<t;++i)n[i]=this.endss_[i].slice();return new e(this.flatCoordinates.slice(),this.layout,n)},e.prototype.closestPointXY=function(t,e,n,i){return i<Ae(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o];r=bi(t,e,a,i,r),e=a[a.length-1]}return r}(this.flatCoordinates,0,this.endss_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),function(t,e,n,i,r,o,s,a,u,h,l){for(var c=l||[NaN,NaN],p=0,f=n.length;p<f;++p){var d=n[p];h=Si(t,e,d,i,r,o,s,a,u,h,c),e=d[d.length-1]}return h}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,this.maxDelta_,!0,t,e,n,i))},e.prototype.containsXY=function(t,e){return function(t,e,n,i,r,o){if(0===n.length)return!1;for(var s=0,a=n.length;s<a;++s){var u=n[s];if(Ui(t,e,u,i,r,o))return!0;e=u[u.length-1]}return!1}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t,e)},e.prototype.getArea=function(){return function(t,e,n,i){for(var r=0,o=0,s=n.length;o<s;++o){var a=n[o];r+=wi(t,e,a,i),e=a[a.length-1]}return r}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride)},e.prototype.getCoordinates=function(t){var e;return void 0!==t?tr(e=this.getOrientedFlatCoordinates().slice(),0,this.endss_,this.stride,t):e=this.flatCoordinates,Fi(e,0,this.endss_,this.stride)},e.prototype.getEndss=function(){return this.endss_},e.prototype.getFlatInteriorPoints=function(){if(this.flatInteriorPointsRevision_!=this.getRevision()){var t=function(t,e,n,i){for(var r=[],o=[1/0,1/0,-1/0,-1/0],s=0,a=n.length;s<a;++s){var u=n[s];o=ze(t,e,u[0],i),r.push((o[0]+o[2])/2,(o[1]+o[3])/2),e=u[u.length-1]}return r}(this.flatCoordinates,0,this.endss_,this.stride);this.flatInteriorPoints_=function(t,e,n,i,r){for(var o=[],s=0,a=n.length;s<a;++s){var u=n[s];o=Bi(t,e,u,i,r,2*s,o),e=u[u.length-1]}return o}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t),this.flatInteriorPointsRevision_=this.getRevision()}return this.flatInteriorPoints_},e.prototype.getInteriorPoints=function(){return new Ru(this.getFlatInteriorPoints().slice(),bn.XYM)},e.prototype.getOrientedFlatCoordinates=function(){if(this.orientedRevision_!=this.getRevision()){var t=this.flatCoordinates;!function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o];if(!Qi(t,e,a,i,r))return!1;a.length&&(e=a[a.length-1])}return!0}(t,0,this.endss_,this.stride)?(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=tr(this.orientedFlatCoordinates_,0,this.endss_,this.stride)):this.orientedFlatCoordinates_=t,this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[],i=[];return n.length=function(t,e,n,i,r,o,s,a){for(var u=0,h=n.length;u<h;++u){var l=n[u],c=[];s=Ni(t,e,l,i,r,o,s,c),a.push(c),e=l[l.length-1]}return s}(this.flatCoordinates,0,this.endss_,this.stride,Math.sqrt(t),n,0,i),new e(n,bn.XY,i)},e.prototype.getPolygon=function(t){if(t<0||this.endss_.length<=t)return null;var e;if(0===t)e=0;else{var n=this.endss_[t-1];e=n[n.length-1]}var i=this.endss_[t].slice(),r=i[i.length-1];if(0!==e)for(var o=0,s=i.length;o<s;++o)i[o]-=e;return new ir(this.flatCoordinates.slice(e,r),this.layout,i)},e.prototype.getPolygons=function(){for(var t=this.layout,e=this.flatCoordinates,n=this.endss_,i=[],r=0,o=0,s=n.length;o<s;++o){var a=n[o].slice(),u=a[a.length-1];if(0!==r)for(var h=0,l=a.length;h<l;++h)a[h]-=r;var c=new ir(e.slice(r,u),t,a);i.push(c),r=u}return i},e.prototype.getType=function(){return Tn.MULTI_POLYGON},e.prototype.intersectsExtent=function(t){return function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o];if(Hi(t,e,a,i,r))return!0;e=a[a.length-1]}return!1}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,3),this.flatCoordinates||(this.flatCoordinates=[]);var n=function(t,e,n,i,r){for(var o=r||[],s=0,a=0,u=n.length;a<u;++a){var h=Pi(t,e,n[a],i,o[s]);o[s++]=h,e=h[h.length-1]}return o.length=s,o}(this.flatCoordinates,0,t,this.stride,this.endss_);if(0===n.length)this.flatCoordinates.length=0;else{var i=n[n.length-1];this.flatCoordinates.length=0===i.length?0:i[i.length-1]}this.changed()},e}(Ei),Pu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Lu(t,e){if(!t)return null;var n;switch(t.type){case Tn.POINT:n=function(t){return new zi(t.coordinates)}(t);break;case Tn.LINE_STRING:n=function(t){return new wu(t.coordinates)}(t);break;case Tn.POLYGON:n=function(t){return new ir(t.coordinates)}(t);break;case Tn.MULTI_POINT:n=function(t){return new Ru(t.coordinates)}(t);break;case Tn.MULTI_LINE_STRING:n=function(t){return new Tu(t.coordinates)}(t);break;case Tn.MULTI_POLYGON:n=function(t){return new Iu(t.coordinates)}(t);break;case Tn.GEOMETRY_COLLECTION:n=function(t,e){var n=t.geometries.map(function(t){return Lu(t,e)});return new mu(n)}(t);break;default:throw new Error(\"Unsupported GeoJSON type: \"+t.type)}return fu(n,!1,e)}function Mu(t,e){var n,i=(t=fu(t,!0,e)).getType();switch(i){case Tn.POINT:n=function(t,e){return{type:\"Point\",coordinates:t.getCoordinates()}}(t);break;case Tn.LINE_STRING:n=function(t,e){return{type:\"LineString\",coordinates:t.getCoordinates()}}(t);break;case Tn.POLYGON:n=function(t,e){var n;e&&(n=e.rightHanded);return{type:\"Polygon\",coordinates:t.getCoordinates(n)}}(t,e);break;case Tn.MULTI_POINT:n=function(t,e){return{type:\"MultiPoint\",coordinates:t.getCoordinates()}}(t);break;case Tn.MULTI_LINE_STRING:n=function(t,e){return{type:\"MultiLineString\",coordinates:t.getCoordinates()}}(t);break;case Tn.MULTI_POLYGON:n=function(t,e){var n;e&&(n=e.rightHanded);return{type:\"MultiPolygon\",coordinates:t.getCoordinates(n)}}(t,e);break;case Tn.GEOMETRY_COLLECTION:n=function(t,e){return{type:\"GeometryCollection\",geometries:t.getGeometriesArray().map(function(t){var n=p({},e);return delete n.featureProjection,Mu(t,n)})}}(t,e);break;case Tn.CIRCLE:n={type:\"GeometryCollection\",geometries:[]};break;default:throw new Error(\"Unsupported geometry type: \"+i)}return n}var Fu=function(t){function e(e){var n=this,i=e||{};return(n=t.call(this)||this).dataProjection=ii(i.dataProjection?i.dataProjection:\"EPSG:4326\"),i.featureProjection&&(n.defaultFeatureProjection=ii(i.featureProjection)),n.geometryName_=i.geometryName,n.extractGeometryName_=i.extractGeometryName,n}return Pu(e,t),e.prototype.readFeatureFromObject=function(t,e){var n=null,i=Lu((n=\"Feature\"===t.type?t:{type:\"Feature\",geometry:t,properties:null}).geometry,e),r=new cu;return this.geometryName_?r.setGeometryName(this.geometryName_):this.extractGeometryName_&&\"geometry_name\"in n!==void 0&&r.setGeometryName(n.geometry_name),r.setGeometry(i),\"id\"in n&&r.setId(n.id),n.properties&&r.setProperties(n.properties,!0),r},e.prototype.readFeaturesFromObject=function(t,e){var n=null;if(\"FeatureCollection\"===t.type){n=[];for(var i=t.features,r=0,o=i.length;r<o;++r)n.push(this.readFeatureFromObject(i[r],e))}else n=[this.readFeatureFromObject(t,e)];return n},e.prototype.readGeometryFromObject=function(t,e){return Lu(t,e)},e.prototype.readProjectionFromObject=function(t){var e,n=t.crs;return n?\"name\"==n.type?e=ii(n.properties.name):_e(!1,36):e=this.dataProjection,e},e.prototype.writeFeatureObject=function(t,e){e=this.adaptOptions(e);var n={type:\"Feature\",geometry:null,properties:null},i=t.getId();void 0!==i&&(n.id=i);var r=t.getGeometry();r&&(n.geometry=Mu(r,e));var o=t.getProperties();return delete o[t.getGeometryName()],_(o)||(n.properties=o),n},e.prototype.writeFeaturesObject=function(t,e){e=this.adaptOptions(e);for(var n=[],i=0,r=t.length;i<r;++i)n.push(this.writeFeatureObject(t[i],e));return{type:\"FeatureCollection\",features:n}},e.prototype.writeGeometryObject=function(t,e){return Mu(t,this.adaptOptions(e))},e}(gu),Au=\"#333\",Du=function(){function t(t){var e=t||{};this.font_=e.font,this.rotation_=e.rotation,this.rotateWithView_=e.rotateWithView,this.scale_=e.scale,this.text_=e.text,this.textAlign_=e.textAlign,this.textBaseline_=e.textBaseline,this.fill_=void 0!==e.fill?e.fill:new Ws({color:Au}),this.maxAngle_=void 0!==e.maxAngle?e.maxAngle:Math.PI/4,this.placement_=void 0!==e.placement?e.placement:va.POINT,this.overflow_=!!e.overflow,this.stroke_=void 0!==e.stroke?e.stroke:null,this.offsetX_=void 0!==e.offsetX?e.offsetX:0,this.offsetY_=void 0!==e.offsetY?e.offsetY:0,this.backgroundFill_=e.backgroundFill?e.backgroundFill:null,this.backgroundStroke_=e.backgroundStroke?e.backgroundStroke:null,this.padding_=void 0===e.padding?null:e.padding}return t.prototype.clone=function(){return new t({font:this.getFont(),placement:this.getPlacement(),maxAngle:this.getMaxAngle(),overflow:this.getOverflow(),rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),scale:this.getScale(),text:this.getText(),textAlign:this.getTextAlign(),textBaseline:this.getTextBaseline(),fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,offsetX:this.getOffsetX(),offsetY:this.getOffsetY(),backgroundFill:this.getBackgroundFill()?this.getBackgroundFill().clone():void 0,backgroundStroke:this.getBackgroundStroke()?this.getBackgroundStroke().clone():void 0})},t.prototype.getOverflow=function(){return this.overflow_},t.prototype.getFont=function(){return this.font_},t.prototype.getMaxAngle=function(){return this.maxAngle_},t.prototype.getPlacement=function(){return this.placement_},t.prototype.getOffsetX=function(){return this.offsetX_},t.prototype.getOffsetY=function(){return this.offsetY_},t.prototype.getFill=function(){return this.fill_},t.prototype.getRotateWithView=function(){return this.rotateWithView_},t.prototype.getRotation=function(){return this.rotation_},t.prototype.getScale=function(){return this.scale_},t.prototype.getStroke=function(){return this.stroke_},t.prototype.getText=function(){return this.text_},t.prototype.getTextAlign=function(){return this.textAlign_},t.prototype.getTextBaseline=function(){return this.textBaseline_},t.prototype.getBackgroundFill=function(){return this.backgroundFill_},t.prototype.getBackgroundStroke=function(){return this.backgroundStroke_},t.prototype.getPadding=function(){return this.padding_},t.prototype.setOverflow=function(t){this.overflow_=t},t.prototype.setFont=function(t){this.font_=t},t.prototype.setMaxAngle=function(t){this.maxAngle_=t},t.prototype.setOffsetX=function(t){this.offsetX_=t},t.prototype.setOffsetY=function(t){this.offsetY_=t},t.prototype.setPlacement=function(t){this.placement_=t},t.prototype.setRotateWithView=function(t){this.rotateWithView_=t},t.prototype.setFill=function(t){this.fill_=t},t.prototype.setRotation=function(t){this.rotation_=t},t.prototype.setScale=function(t){this.scale_=t},t.prototype.setStroke=function(t){this.stroke_=t},t.prototype.setText=function(t){this.text_=t},t.prototype.setTextAlign=function(t){this.textAlign_=t},t.prototype.setTextBaseline=function(t){this.textBaseline_=t},t.prototype.setBackgroundFill=function(t){this.backgroundFill_=t},t.prototype.setBackgroundStroke=function(t){this.backgroundStroke_=t},t.prototype.setPadding=function(t){this.padding_=t},t}(),ku=.5,Gu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Nu=function(t){function e(e,n,i){var r=t.call(this)||this,o=i||{};return r.tileCoord=e,r.state=n,r.interimTile=null,r.hifi=!0,r.key=\"\",r.transition_=void 0===o.transition?250:o.transition,r.transitionStarts_={},r}return Gu(e,t),e.prototype.changed=function(){this.dispatchEvent(L.CHANGE)},e.prototype.getKey=function(){return this.key+\"/\"+this.tileCoord},e.prototype.getInterimTile=function(){if(!this.interimTile)return this;var t=this.interimTile;do{if(t.getState()==de.LOADED)return this.transition_=0,t;t=t.interimTile}while(t);return this},e.prototype.refreshInterimChain=function(){if(this.interimTile){var t=this.interimTile,e=this;do{if(t.getState()==de.LOADED){t.interimTile=null;break}t.getState()==de.LOADING?e=t:t.getState()==de.IDLE?e.interimTile=t.interimTile:e=t,t=e.interimTile}while(t)}},e.prototype.getTileCoord=function(){return this.tileCoord},e.prototype.getState=function(){return this.state},e.prototype.setState=function(t){this.state=t,this.changed()},e.prototype.load=function(){i()},e.prototype.getAlpha=function(t,e){if(!this.transition_)return 1;var n=this.transitionStarts_[t];if(n){if(-1===n)return 1}else n=e,this.transitionStarts_[t]=n;var i=e-n+1e3/60;return i>=this.transition_?1:En(i/this.transition_)},e.prototype.inTransition=function(t){return!!this.transition_&&-1!==this.transitionStarts_[t]},e.prototype.endTransition=function(t){this.transition_&&(this.transitionStarts_[t]=-1)},e}(P),ju=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Yu(){var t=lr(1,1);return t.fillStyle=\"rgba(0,0,0,0)\",t.fillRect(0,0,1,1),t.canvas}var Xu=function(t){function e(e,n,i,r,o,s){var a=t.call(this,e,n,s)||this;return a.crossOrigin_=r,a.src_=i,a.image_=new Image,null!==r&&(a.image_.crossOrigin=r),a.imageListenerKeys_=null,a.tileLoadFunction_=o,a}return ju(e,t),e.prototype.disposeInternal=function(){this.state==de.LOADING&&(this.unlistenImage_(),this.image_=Yu()),this.interimTile&&this.interimTile.dispose(),this.state=de.ABORT,this.changed(),t.prototype.disposeInternal.call(this)},e.prototype.getImage=function(){return this.image_},e.prototype.getKey=function(){return this.src_},e.prototype.handleImageError_=function(){this.state=de.ERROR,this.unlistenImage_(),this.image_=Yu(),this.changed()},e.prototype.handleImageLoad_=function(){var t=this.image_;t.naturalWidth&&t.naturalHeight?this.state=de.LOADED:this.state=de.EMPTY,this.unlistenImage_(),this.changed()},e.prototype.load=function(){this.state==de.ERROR&&(this.state=de.IDLE,this.image_=new Image,null!==this.crossOrigin_&&(this.image_.crossOrigin=this.crossOrigin_)),this.state==de.IDLE&&(this.state=de.LOADING,this.changed(),this.imageListenerKeys_=[E(this.image_,L.ERROR,this.handleImageError_,this),E(this.image_,L.LOAD,this.handleImageLoad_,this)],this.tileLoadFunction_(this,this.src_))},e.prototype.unlistenImage_=function(){this.imageListenerKeys_.forEach(w),this.imageListenerKeys_=null},e}(Nu);function zu(t,e,n,i){return void 0!==i?(i[0]=t,i[1]=e,i[2]=n,i):[t,e,n]}function Ku(t,e,n){return t+\"/\"+e+\"/\"+n}function Wu(t){return Ku(t[0],t[1],t[2])}var Uu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Bu=function(t){function e(e){return t.call(this,e)||this}return Uu(e,t),e.prototype.expireCache=function(t){for(;this.canExpireCache();){if(this.peekLast().getKey()in t)break;this.pop().dispose()}},e.prototype.pruneExceptNewestZ=function(){if(0!==this.getCount()){var t=function(t){return t.split(\"/\").map(Number)}(this.peekFirstKey())[0];this.forEach(function(e){e.tileCoord[0]!==t&&(this.remove(Wu(e.tileCoord)),e.dispose())}.bind(this))}},e}(hs);function Zu(t,e,n,i){var r=n-t,o=i-e,s=Math.sqrt(r*r+o*o);return[Math.round(n+r/s),Math.round(i+o/s)]}function Vu(t,e,n,i,r,o,s,a,u,h,l){var c=lr(Math.round(n*t),Math.round(n*e));if(0===u.length)return c.canvas;c.scale(n,n);var p=[1/0,1/0,-1/0,-1/0];u.forEach(function(t,e,n){We(p,t.extent)});var f=sn(p),d=en(p),_=lr(Math.round(n*f/i),Math.round(n*d/i)),g=n/i;u.forEach(function(t,e,n){var i=t.extent[0]-p[0],r=-(t.extent[3]-p[3]),o=sn(t.extent),s=en(t.extent);_.drawImage(t.image,h,h,t.image.width-2*h,t.image.height-2*h,i*g,r*g,o*g,s*g)});var y=rn(s);return a.getTriangles().forEach(function(t,e,r){var s=t.source,a=t.target,u=s[0][0],h=s[0][1],l=s[1][0],f=s[1][1],d=s[2][0],g=s[2][1],v=(a[0][0]-y[0])/o,m=-(a[0][1]-y[1])/o,x=(a[1][0]-y[0])/o,E=-(a[1][1]-y[1])/o,C=(a[2][0]-y[0])/o,w=-(a[2][1]-y[1])/o,O=u,T=h;u=0,h=0;var b=function(t){for(var e=t.length,n=0;n<e;n++){for(var i=n,r=Math.abs(t[n][n]),o=n+1;o<e;o++){var s=Math.abs(t[o][n]);s>r&&(r=s,i=o)}if(0===r)return null;var a=t[i];t[i]=t[n],t[n]=a;for(var u=n+1;u<e;u++)for(var h=-t[u][n]/t[n][n],l=n;l<e+1;l++)n==l?t[u][l]=0:t[u][l]+=h*t[n][l]}for(var c=new Array(e),p=e-1;p>=0;p--){c[p]=t[p][e]/t[p][p];for(var f=p-1;f>=0;f--)t[f][e]-=t[f][p]*c[p]}return c}([[l-=O,f-=T,0,0,x-v],[d-=O,g-=T,0,0,C-v],[0,0,l,f,E-m],[0,0,d,g,w-m]]);if(b){c.save(),c.beginPath();var R=(v+x+C)/3,S=(m+E+w)/3,I=Zu(R,S,v,m),P=Zu(R,S,x,E),L=Zu(R,S,C,w);c.moveTo(P[0],P[1]),c.lineTo(I[0],I[1]),c.lineTo(L[0],L[1]),c.clip(),c.transform(b[0],b[2],b[1],b[3],v,m),c.translate(p[0]-O,p[3]-T),c.scale(i/n,-i/n),c.drawImage(_.canvas,0,0),c.restore()}}),l&&(c.save(),c.strokeStyle=\"black\",c.lineWidth=1,a.getTriangles().forEach(function(t,e,n){var i=t.target,r=(i[0][0]-y[0])/o,s=-(i[0][1]-y[1])/o,a=(i[1][0]-y[0])/o,u=-(i[1][1]-y[1])/o,h=(i[2][0]-y[0])/o,l=-(i[2][1]-y[1])/o;c.beginPath(),c.moveTo(a,u),c.lineTo(r,s),c.lineTo(h,l),c.closePath(),c.stroke()}),c.restore()),c.canvas}var Hu=10,qu=function(){function t(t,e,n,i,r){this.sourceProj_=t,this.targetProj_=e;var o={},s=hi(this.targetProj_,this.sourceProj_);this.transformInv_=function(t){var e=t[0]+\"/\"+t[1];return o[e]||(o[e]=s(t)),o[e]},this.maxSourceExtent_=i,this.errorThresholdSquared_=r*r,this.triangles_=[],this.wrapsXInSource_=!1,this.canWrapXInSource_=this.sourceProj_.canWrapX()&&!!i&&!!this.sourceProj_.getExtent()&&sn(i)==sn(this.sourceProj_.getExtent()),this.sourceWorldWidth_=this.sourceProj_.getExtent()?sn(this.sourceProj_.getExtent()):null,this.targetWorldWidth_=this.targetProj_.getExtent()?sn(this.targetProj_.getExtent()):null;var a=rn(n),u=on(n),h=Je(n),l=qe(n),c=this.transformInv_(a),p=this.transformInv_(u),f=this.transformInv_(h),d=this.transformInv_(l);if(this.addQuad_(a,u,h,l,c,p,f,d,Hu),this.wrapsXInSource_){var _=1/0;this.triangles_.forEach(function(t,e,n){_=Math.min(_,t.source[0][0],t.source[1][0],t.source[2][0])}),this.triangles_.forEach(function(t){if(Math.max(t.source[0][0],t.source[1][0],t.source[2][0])-_>this.sourceWorldWidth_/2){var e=[[t.source[0][0],t.source[0][1]],[t.source[1][0],t.source[1][1]],[t.source[2][0],t.source[2][1]]];e[0][0]-_>this.sourceWorldWidth_/2&&(e[0][0]-=this.sourceWorldWidth_),e[1][0]-_>this.sourceWorldWidth_/2&&(e[1][0]-=this.sourceWorldWidth_),e[2][0]-_>this.sourceWorldWidth_/2&&(e[2][0]-=this.sourceWorldWidth_);var n=Math.min(e[0][0],e[1][0],e[2][0]);Math.max(e[0][0],e[1][0],e[2][0])-n<this.sourceWorldWidth_/2&&(t.source=e)}}.bind(this))}o={}}return t.prototype.addTriangle_=function(t,e,n,i,r,o){this.triangles_.push({source:[i,r,o],target:[t,e,n]})},t.prototype.addQuad_=function(t,e,n,i,r,o,s,a,u){var h=Le([r,o,s,a]),l=this.sourceWorldWidth_?sn(h)/this.sourceWorldWidth_:null,c=this.sourceWorldWidth_,p=this.sourceProj_.canWrapX()&&l>.5&&l<1,f=!1;if(u>0){if(this.targetProj_.isGlobal()&&this.targetWorldWidth_)f=sn(Le([t,e,n,i]))/this.targetWorldWidth_>.25||f;!p&&this.sourceProj_.isGlobal()&&l&&(f=l>.25||f)}if(f||!this.maxSourceExtent_||an(h,this.maxSourceExtent_)){if(!(f||isFinite(r[0])&&isFinite(r[1])&&isFinite(o[0])&&isFinite(o[1])&&isFinite(s[0])&&isFinite(s[1])&&isFinite(a[0])&&isFinite(a[1]))){if(!(u>0))return;f=!0}if(u>0){if(!f){var d=[(t[0]+n[0])/2,(t[1]+n[1])/2],_=this.transformInv_(d),g=void 0;if(p)g=(be(r[0],c)+be(s[0],c))/2-be(_[0],c);else g=(r[0]+s[0])/2-_[0];var y=(r[1]+s[1])/2-_[1];f=g*g+y*y>this.errorThresholdSquared_}if(f){if(Math.abs(t[0]-n[0])<=Math.abs(t[1]-n[1])){var v=[(e[0]+n[0])/2,(e[1]+n[1])/2],m=this.transformInv_(v),x=[(i[0]+t[0])/2,(i[1]+t[1])/2],E=this.transformInv_(x);this.addQuad_(t,e,v,x,r,o,m,E,u-1),this.addQuad_(x,v,n,i,E,m,s,a,u-1)}else{var C=[(t[0]+e[0])/2,(t[1]+e[1])/2],w=this.transformInv_(C),O=[(n[0]+i[0])/2,(n[1]+i[1])/2],T=this.transformInv_(O);this.addQuad_(t,C,O,i,r,w,T,a,u-1),this.addQuad_(C,e,n,O,w,o,s,T,u-1)}return}}if(p){if(!this.canWrapXInSource_)return;this.wrapsXInSource_=!0}this.addTriangle_(t,n,i,r,s,a),this.addTriangle_(t,e,n,r,o,s)}},t.prototype.calculateSourceExtent=function(){var t=[1/0,1/0,-1/0,-1/0];return this.triangles_.forEach(function(e,n,i){var r=e.source;Ue(t,r[0]),Ue(t,r[1]),Ue(t,r[2])}),t},t.prototype.getTriangles=function(){return this.triangles_},t}(),Ju=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Qu=function(t){function e(e,n,i,r,o,s,a,u,h,l,c){var p=t.call(this,o,de.IDLE)||this;p.renderEdges_=void 0!==c&&c,p.pixelRatio_=a,p.gutter_=u,p.canvas_=null,p.sourceTileGrid_=n,p.targetTileGrid_=r,p.wrappedTileCoord_=s||o,p.sourceTiles_=[],p.sourcesListenerKeys_=null,p.sourceZ_=0;var f=r.getTileCoordExtent(p.wrappedTileCoord_),d=p.targetTileGrid_.getExtent(),_=p.sourceTileGrid_.getExtent(),g=d?nn(f,d):f;if(0===He(g))return p.state=de.EMPTY,p;var y=e.getExtent();y&&(_=_?nn(_,y):y);var v=r.getResolution(p.wrappedTileCoord_[0]),m=function(t,e,n,i){var r=li(n,e,t),o=ri(e,i,n),s=e.getMetersPerUnit();void 0!==s&&(o*=s);var a=t.getMetersPerUnit();void 0!==a&&(o/=a);var u=t.getExtent();if(!u||De(u,r)){var h=ri(t,o,r)/o;isFinite(h)&&h>0&&(o/=h)}return o}(e,i,Qe(g),v);if(!isFinite(m)||m<=0)return p.state=de.EMPTY,p;var x=void 0!==l?l:ku;if(p.triangulation_=new qu(e,i,g,_,m*x),0===p.triangulation_.getTriangles().length)return p.state=de.EMPTY,p;p.sourceZ_=n.getZForResolution(m);var E=p.triangulation_.calculateSourceExtent();if(_&&(e.canWrapX()?(E[1]=Ee(E[1],_[1],_[3]),E[3]=Ee(E[3],_[1],_[3])):E=nn(E,_)),He(E)){for(var C=n.getTileRangeForExtentAndZ(E,p.sourceZ_),w=C.minX;w<=C.maxX;w++)for(var O=C.minY;O<=C.maxY;O++){var T=h(p.sourceZ_,w,O,a);T&&p.sourceTiles_.push(T)}0===p.sourceTiles_.length&&(p.state=de.EMPTY)}else p.state=de.EMPTY;return p}return Ju(e,t),e.prototype.disposeInternal=function(){this.state==de.LOADING&&this.unlistenSources_(),t.prototype.disposeInternal.call(this)},e.prototype.getImage=function(){return this.canvas_},e.prototype.reproject_=function(){var t=[];if(this.sourceTiles_.forEach(function(e,n,i){e&&e.getState()==de.LOADED&&t.push({extent:this.sourceTileGrid_.getTileCoordExtent(e.tileCoord),image:e.getImage()})}.bind(this)),this.sourceTiles_.length=0,0===t.length)this.state=de.ERROR;else{var e=this.wrappedTileCoord_[0],n=this.targetTileGrid_.getTileSize(e),i=\"number\"==typeof n?n:n[0],r=\"number\"==typeof n?n:n[1],o=this.targetTileGrid_.getResolution(e),s=this.sourceTileGrid_.getResolution(this.sourceZ_),a=this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);this.canvas_=Vu(i,r,this.pixelRatio_,s,this.sourceTileGrid_.getExtent(),o,a,this.triangulation_,t,this.gutter_,this.renderEdges_),this.state=de.LOADED}this.changed()},e.prototype.load=function(){if(this.state==de.IDLE){this.state=de.LOADING,this.changed();var t=0;this.sourcesListenerKeys_=[],this.sourceTiles_.forEach(function(e,n,i){var r=e.getState();if(r==de.IDLE||r==de.LOADING){t++;var o=x(e,L.CHANGE,function(n){var i=e.getState();i!=de.LOADED&&i!=de.ERROR&&i!=de.EMPTY||(w(o),0===--t&&(this.unlistenSources_(),this.reproject_()))},this);this.sourcesListenerKeys_.push(o)}}.bind(this)),this.sourceTiles_.forEach(function(t,e,n){t.getState()==de.IDLE&&t.load()}),0===t&&setTimeout(this.reproject_.bind(this),0)}},e.prototype.unlistenSources_=function(){this.sourcesListenerKeys_.forEach(w),this.sourcesListenerKeys_=null},e}(Nu);function $u(t,e){var n=/\\{z\\}/g,i=/\\{x\\}/g,r=/\\{y\\}/g,o=/\\{-y\\}/g;return function(s,a,u){return s?t.replace(n,s[0].toString()).replace(i,s[1].toString()).replace(r,s[2].toString()).replace(o,function(){var t=s[0],n=e.getFullTileRange(t);return _e(n,55),(n.getHeight()-s[2]-1).toString()}):void 0}}function th(t,e){for(var n=t.length,i=new Array(n),r=0;r<n;++r)i[r]=$u(t[r],e);return function(t){if(1===t.length)return t[0];return function(e,n,i){if(e){var r=function(t){return(t[1]<<t[0])+t[2]}(e),o=be(r,t.length);return t[o](e,n,i)}}}(i)}function eh(t,e,n){}var nh=[0,0,0],ih=function(){function t(t){var e,n,i,r;if(this.minZoom=void 0!==t.minZoom?t.minZoom:0,this.resolutions_=t.resolutions,_e((e=this.resolutions_,n=!0,i=function(t,e){return e-t}||Kt,e.every(function(t,r){if(0===r)return!0;var o=i(e[r-1],t);return!(o>0||n&&0===o)})),17),!t.origins)for(var o=0,s=this.resolutions_.length-1;o<s;++o)if(r){if(this.resolutions_[o]/this.resolutions_[o+1]!==r){r=void 0;break}}else r=this.resolutions_[o]/this.resolutions_[o+1];this.zoomFactor_=r,this.maxZoom=this.resolutions_.length-1,this.origin_=void 0!==t.origin?t.origin:null,this.origins_=null,void 0!==t.origins&&(this.origins_=t.origins,_e(this.origins_.length==this.resolutions_.length,20));var a=t.extent;void 0===a||this.origin_||this.origins_||(this.origin_=rn(a)),_e(!this.origin_&&this.origins_||this.origin_&&!this.origins_,18),this.tileSizes_=null,void 0!==t.tileSizes&&(this.tileSizes_=t.tileSizes,_e(this.tileSizes_.length==this.resolutions_.length,19)),this.tileSize_=void 0!==t.tileSize?t.tileSize:this.tileSizes_?null:xe,_e(!this.tileSize_&&this.tileSizes_||this.tileSize_&&!this.tileSizes_,22),this.extent_=void 0!==a?a:null,this.fullTileRanges_=null,this.tmpSize_=[0,0],void 0!==t.sizes?this.fullTileRanges_=t.sizes.map(function(t,e){return new as(Math.min(0,t[0]),Math.max(t[0]-1,-1),Math.min(0,t[1]),Math.max(t[1]-1,-1))},this):a&&this.calculateTileRanges_(a)}return t.prototype.forEachTileCoord=function(t,e,n){for(var i=this.getTileRangeForExtentAndZ(t,e),r=i.minX,o=i.maxX;r<=o;++r)for(var s=i.minY,a=i.maxY;s<=a;++s)n([e,r,s])},t.prototype.forEachTileCoordParentTileRange=function(t,e,n,i){var r,o,s=null,a=t[0]-1;for(2===this.zoomFactor_?(r=t[1],o=t[2]):s=this.getTileCoordExtent(t,i);a>=this.minZoom;){if(e(a,2===this.zoomFactor_?ss(r=Math.floor(r/2),r,o=Math.floor(o/2),o,n):this.getTileRangeForExtentAndZ(s,a,n)))return!0;--a}return!1},t.prototype.getExtent=function(){return this.extent_},t.prototype.getMaxZoom=function(){return this.maxZoom},t.prototype.getMinZoom=function(){return this.minZoom},t.prototype.getOrigin=function(t){return this.origin_?this.origin_:this.origins_[t]},t.prototype.getResolution=function(t){return this.resolutions_[t]},t.prototype.getResolutions=function(){return this.resolutions_},t.prototype.getTileCoordChildTileRange=function(t,e,n){if(t[0]<this.maxZoom){if(2===this.zoomFactor_){var i=2*t[1],r=2*t[2];return ss(i,i+1,r,r+1,e)}var o=this.getTileCoordExtent(t,n);return this.getTileRangeForExtentAndZ(o,t[0]+1,e)}return null},t.prototype.getTileRangeExtent=function(t,e,n){var i=this.getOrigin(t),r=this.getResolution(t),o=xr(this.getTileSize(t),this.tmpSize_),s=i[0]+e.minX*o[0]*r,a=i[0]+(e.maxX+1)*o[0]*r;return Ye(s,i[1]+e.minY*o[1]*r,a,i[1]+(e.maxY+1)*o[1]*r,n)},t.prototype.getTileRangeForExtentAndZ=function(t,e,n){var i=nh;this.getTileCoordForXYAndZ_(t[0],t[3],e,!1,i);var r=i[1],o=i[2];return this.getTileCoordForXYAndZ_(t[2],t[1],e,!0,i),ss(r,i[1],o,i[2],n)},t.prototype.getTileCoordCenter=function(t){var e=this.getOrigin(t[0]),n=this.getResolution(t[0]),i=xr(this.getTileSize(t[0]),this.tmpSize_);return[e[0]+(t[1]+.5)*i[0]*n,e[1]-(t[2]+.5)*i[1]*n]},t.prototype.getTileCoordExtent=function(t,e){var n=this.getOrigin(t[0]),i=this.getResolution(t[0]),r=xr(this.getTileSize(t[0]),this.tmpSize_),o=n[0]+t[1]*r[0]*i,s=n[1]-(t[2]+1)*r[1]*i;return Ye(o,s,o+r[0]*i,s+r[1]*i,e)},t.prototype.getTileCoordForCoordAndResolution=function(t,e,n){return this.getTileCoordForXYAndResolution_(t[0],t[1],e,!1,n)},t.prototype.getTileCoordForXYAndResolution_=function(t,e,n,i,r){var o=this.getZForResolution(n),s=n/this.getResolution(o),a=this.getOrigin(o),u=xr(this.getTileSize(o),this.tmpSize_),h=i?.5:0,l=i?.5:0,c=Math.floor((t-a[0])/n+h),p=Math.floor((a[1]-e)/n+l),f=s*c/u[0],d=s*p/u[1];return i?(f=Math.ceil(f)-1,d=Math.ceil(d)-1):(f=Math.floor(f),d=Math.floor(d)),zu(o,f,d,r)},t.prototype.getTileCoordForXYAndZ_=function(t,e,n,i,r){var o=this.getOrigin(n),s=this.getResolution(n),a=xr(this.getTileSize(n),this.tmpSize_),u=i?.5:0,h=i?.5:0,l=Math.floor((t-o[0])/s+u),c=Math.floor((o[1]-e)/s+h),p=l/a[0],f=c/a[1];return i?(p=Math.ceil(p)-1,f=Math.ceil(f)-1):(p=Math.floor(p),f=Math.floor(f)),zu(n,p,f,r)},t.prototype.getTileCoordForCoordAndZ=function(t,e,n){return this.getTileCoordForXYAndZ_(t[0],t[1],e,!1,n)},t.prototype.getTileCoordResolution=function(t){return this.resolutions_[t[0]]},t.prototype.getTileSize=function(t){return this.tileSize_?this.tileSize_:this.tileSizes_[t]},t.prototype.getFullTileRange=function(t){return this.fullTileRanges_?this.fullTileRanges_[t]:null},t.prototype.getZForResolution=function(t,e){return Ee(Wt(this.resolutions_,t,e||0),this.minZoom,this.maxZoom)},t.prototype.calculateTileRanges_=function(t){for(var e=this.resolutions_.length,n=new Array(e),i=this.minZoom;i<e;++i)n[i]=this.getTileRangeForExtentAndZ(t,i);this.fullTileRanges_=n},t}();function rh(t){var e=t.getDefaultTileGrid();return e||(e=function(t,e,n,i){return function(t,e,n,i){var r=void 0!==i?i:Ie.TOP_LEFT,o=oh(t,e,n);return new ih({extent:t,origin:$e(t,r),resolutions:o,tileSize:n})}(sh(t),e,n,i)}(t),t.setDefaultTileGrid(e)),e}function oh(t,e,n){for(var i=void 0!==e?e:me,r=en(t),o=sn(t),s=xr(void 0!==n?n:xe),a=Math.max(o/s[0],r/s[1]),u=i+1,h=new Array(u),l=0;l<u;++l)h[l]=a/Math.pow(2,l);return h}function sh(t){var e=(t=ii(t)).getExtent();if(!e){var n=180*Ln[Mn.DEGREES]/t.getMetersPerUnit();e=Ye(-n,-n,n,n)}return e}var ah=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),uh=function(t){function e(e){var n=t.call(this,{attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,projection:e.projection,state:e.state,wrapX:e.wrapX})||this;n.opaque_=void 0!==e.opaque&&e.opaque,n.tilePixelRatio_=void 0!==e.tilePixelRatio?e.tilePixelRatio:1,n.tileGrid=void 0!==e.tileGrid?e.tileGrid:null;var i=e.cacheSize;if(void 0===i){var r=[256,256],o=e.tileGrid;o&&xr(o.getTileSize(o.getMinZoom()),r);var s=\"screen\"in self,a=s?screen.availWidth||screen.width:1920,u=s?screen.availHeight||screen.height:1080;i=4*Math.ceil(a/r[0])*Math.ceil(u/r[1])}return n.tileCache=new Bu(i),n.tmpSize=[0,0],n.key_=e.key||\"\",n.tileOptions={transition:e.transition},n.zDirection,n}return ah(e,t),e.prototype.canExpireCache=function(){return this.tileCache.canExpireCache()},e.prototype.expireCache=function(t,e){var n=this.getTileCacheForProjection(t);n&&n.expireCache(e)},e.prototype.forEachLoadedTile=function(t,e,n,i){var r=this.getTileCacheForProjection(t);if(!r)return!1;for(var o,s,a,u=!0,h=n.minX;h<=n.maxX;++h)for(var l=n.minY;l<=n.maxY;++l)s=Ku(e,h,l),a=!1,r.containsKey(s)&&(a=(o=r.get(s)).getState()===de.LOADED)&&(a=!1!==i(o)),a||(u=!1);return u},e.prototype.getGutterForProjection=function(t){return 0},e.prototype.getKey=function(){return this.key_},e.prototype.setKey=function(t){this.key_!==t&&(this.key_=t,this.changed())},e.prototype.getOpaque=function(t){return this.opaque_},e.prototype.getResolutions=function(){return this.tileGrid.getResolutions()},e.prototype.getTile=function(t,e,n,r,o){return i()},e.prototype.getTileGrid=function(){return this.tileGrid},e.prototype.getTileGridForProjection=function(t){return this.tileGrid?this.tileGrid:rh(t)},e.prototype.getTileCacheForProjection=function(t){var e=this.getProjection();return e&&!ai(e,t)?null:this.tileCache},e.prototype.getTilePixelRatio=function(t){return this.tilePixelRatio_},e.prototype.getTilePixelSize=function(t,e,n){var i,r,o,s=this.getTileGridForProjection(n),a=this.getTilePixelRatio(e),u=xr(s.getTileSize(t),this.tmpSize);return 1==a?u:(i=u,r=a,void 0===(o=this.tmpSize)&&(o=[0,0]),o[0]=i[0]*r+.5|0,o[1]=i[1]*r+.5|0,o)},e.prototype.getTileCoordForTileUrlFunction=function(t,e){var n=void 0!==e?e:this.getProjection(),i=this.getTileGridForProjection(n);return this.getWrapX()&&n.isGlobal()&&(t=function(t,e,n){var i=e[0],r=t.getTileCoordCenter(e),o=sh(n);if(De(o,r))return e;var s=sn(o),a=Math.ceil((o[0]-r[0])/s);return r[0]+=s*a,t.getTileCoordForCoordAndZ(r,i)}(i,t,n)),function(t,e){var n=t[0],i=t[1],r=t[2];if(e.getMinZoom()>n||n>e.getMaxZoom())return!1;var o,s=e.getExtent();return!(o=s?e.getTileRangeForExtentAndZ(s,n):e.getFullTileRange(n))||o.containsXY(i,r)}(t,i)?t:null},e.prototype.clear=function(){this.tileCache.clear()},e.prototype.refresh=function(){this.clear(),t.prototype.refresh.call(this)},e.prototype.useTile=function(t,e,n,i){},e}(eu),hh=function(t){function e(e,n){var i=t.call(this,e)||this;return i.tile=n,i}return ah(e,t),e}(S),lh=uh,ch=\"tileloadstart\",ph=\"tileloadend\",fh=\"tileloaderror\",dh=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_h=function(t){function e(e){var n=t.call(this,{attributions:e.attributions,cacheSize:e.cacheSize,opaque:e.opaque,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tilePixelRatio:e.tilePixelRatio,wrapX:e.wrapX,transition:e.transition,key:e.key,attributionsCollapsible:e.attributionsCollapsible})||this;return n.generateTileUrlFunction_=!e.tileUrlFunction,n.tileLoadFunction=e.tileLoadFunction,n.tileUrlFunction=e.tileUrlFunction?e.tileUrlFunction.bind(n):eh,n.urls=null,e.urls?n.setUrls(e.urls):e.url&&n.setUrl(e.url),n.tileLoadingKeys_={},n}return dh(e,t),e.prototype.getTileLoadFunction=function(){return this.tileLoadFunction},e.prototype.getTileUrlFunction=function(){return this.tileUrlFunction},e.prototype.getUrls=function(){return this.urls},e.prototype.handleTileChange=function(t){var e,n=t.target,i=o(n),r=n.getState();r==de.LOADING?(this.tileLoadingKeys_[i]=!0,e=ch):i in this.tileLoadingKeys_&&(delete this.tileLoadingKeys_[i],e=r==de.ERROR?fh:r==de.LOADED||r==de.ABORT?ph:void 0),null!=e&&this.dispatchEvent(new hh(e,n))},e.prototype.setTileLoadFunction=function(t){this.tileCache.clear(),this.tileLoadFunction=t,this.changed()},e.prototype.setTileUrlFunction=function(t,e){this.tileUrlFunction=t,this.tileCache.pruneExceptNewestZ(),void 0!==e?this.setKey(e):this.changed()},e.prototype.setUrl=function(t){var e=this.urls=function(t){var e=[],n=/\\{([a-z])-([a-z])\\}/.exec(t);if(n){var i=n[1].charCodeAt(0),r=n[2].charCodeAt(0),o=void 0;for(o=i;o<=r;++o)e.push(t.replace(n[0],String.fromCharCode(o)));return e}if(n=n=/\\{(\\d+)-(\\d+)\\}/.exec(t)){for(var s=parseInt(n[2],10),a=parseInt(n[1],10);a<=s;a++)e.push(t.replace(n[0],a.toString()));return e}return e.push(t),e}(t);this.setUrls(e)},e.prototype.setUrls=function(t){this.urls=t;var e=t.join(\"\\n\");this.generateTileUrlFunction_?this.setTileUrlFunction(th(t,this.tileGrid),e):this.setKey(e)},e.prototype.useTile=function(t,e,n){var i=Ku(t,e,n);this.tileCache.containsKey(i)&&this.tileCache.get(i)},e}(lh),gh=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function yh(t,e){t.getImage().src=e}var vh=function(t){function e(e){var n=t.call(this,{attributions:e.attributions,cacheSize:e.cacheSize,opaque:e.opaque,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tileLoadFunction:e.tileLoadFunction?e.tileLoadFunction:yh,tilePixelRatio:e.tilePixelRatio,tileUrlFunction:e.tileUrlFunction,url:e.url,urls:e.urls,wrapX:e.wrapX,transition:e.transition,key:e.key,attributionsCollapsible:e.attributionsCollapsible})||this;return n.crossOrigin=void 0!==e.crossOrigin?e.crossOrigin:null,n.tileClass=void 0!==e.tileClass?e.tileClass:Xu,n.tileCacheForProjection={},n.tileGridForProjection={},n.reprojectionErrorThreshold_=e.reprojectionErrorThreshold,n.renderReprojectionEdges_=!1,n}return gh(e,t),e.prototype.canExpireCache=function(){if(this.tileCache.canExpireCache())return!0;for(var t in this.tileCacheForProjection)if(this.tileCacheForProjection[t].canExpireCache())return!0;return!1},e.prototype.expireCache=function(t,e){var n=this.getTileCacheForProjection(t);for(var i in this.tileCache.expireCache(this.tileCache==n?e:{}),this.tileCacheForProjection){var r=this.tileCacheForProjection[i];r.expireCache(r==n?e:{})}},e.prototype.getGutterForProjection=function(t){return this.getProjection()&&t&&!ai(this.getProjection(),t)?0:this.getGutter()},e.prototype.getGutter=function(){return 0},e.prototype.getOpaque=function(e){return!(this.getProjection()&&e&&!ai(this.getProjection(),e))&&t.prototype.getOpaque.call(this,e)},e.prototype.getTileGridForProjection=function(t){var e=this.getProjection();if(!this.tileGrid||e&&!ai(e,t)){var n=o(t);return n in this.tileGridForProjection||(this.tileGridForProjection[n]=rh(t)),this.tileGridForProjection[n]}return this.tileGrid},e.prototype.getTileCacheForProjection=function(t){var e=this.getProjection();if(!e||ai(e,t))return this.tileCache;var n=o(t);return n in this.tileCacheForProjection||(this.tileCacheForProjection[n]=new Bu(this.tileCache.highWaterMark)),this.tileCacheForProjection[n]},e.prototype.createTile_=function(t,e,n,i,r,o){var s=[t,e,n],a=this.getTileCoordForTileUrlFunction(s,r),u=a?this.tileUrlFunction(a,i,r):void 0,h=new this.tileClass(s,void 0!==u?de.IDLE:de.EMPTY,void 0!==u?u:\"\",this.crossOrigin,this.tileLoadFunction,this.tileOptions);return h.key=o,x(h,L.CHANGE,this.handleTileChange,this),h},e.prototype.getTile=function(t,e,n,i,r){var o=this.getProjection();if(o&&r&&!ai(o,r)){var s=this.getTileCacheForProjection(r),a=[t,e,n],u=void 0,h=Wu(a);s.containsKey(h)&&(u=s.get(h));var l=this.getKey();if(u&&u.key==l)return u;var c=this.getTileGridForProjection(o),p=this.getTileGridForProjection(r),f=this.getTileCoordForTileUrlFunction(a,r),d=new Qu(o,c,r,p,a,f,this.getTilePixelRatio(i),this.getGutter(),function(t,e,n,i){return this.getTileInternal(t,e,n,i,o)}.bind(this),this.reprojectionErrorThreshold_,this.renderReprojectionEdges_);return d.key=l,u?(d.interimTile=u,d.refreshInterimChain(),s.replace(h,d)):s.set(h,d),d}return this.getTileInternal(t,e,n,i,o||r)},e.prototype.getTileInternal=function(t,e,n,i,r){var o=null,s=Ku(t,e,n),a=this.getKey();if(this.tileCache.containsKey(s)){if((o=this.tileCache.get(s)).key!=a){var u=o;o=this.createTile_(t,e,n,i,r,a),u.getState()==de.IDLE?o.interimTile=u.interimTile:o.interimTile=u,o.refreshInterimChain(),this.tileCache.replace(s,o)}}else o=this.createTile_(t,e,n,i,r,a),this.tileCache.set(s,o);return o},e.prototype.setRenderReprojectionEdges=function(t){if(this.renderReprojectionEdges_!=t){for(var e in this.renderReprojectionEdges_=t,this.tileCacheForProjection)this.tileCacheForProjection[e].clear();this.changed()}},e.prototype.setTileGridForProjection=function(t,e){var n=ii(t);if(n){var i=o(n);i in this.tileGridForProjection||(this.tileGridForProjection[i]=e)}},e}(_h),mh=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),xh=function(t){function e(e){var n=e||{},i=void 0!==n.projection?n.projection:\"EPSG:3857\",r=void 0!==n.tileGrid?n.tileGrid:function(t){var e=t||{},n=e.extent||ii(\"EPSG:3857\").getExtent(),i={extent:n,minZoom:e.minZoom,tileSize:e.tileSize,resolutions:oh(n,e.maxZoom,e.tileSize)};return new ih(i)}({extent:sh(i),maxZoom:n.maxZoom,minZoom:n.minZoom,tileSize:n.tileSize});return t.call(this,{attributions:n.attributions,cacheSize:n.cacheSize,crossOrigin:n.crossOrigin,opaque:n.opaque,projection:i,reprojectionErrorThreshold:n.reprojectionErrorThreshold,tileGrid:r,tileLoadFunction:n.tileLoadFunction,tilePixelRatio:n.tilePixelRatio,tileUrlFunction:n.tileUrlFunction,url:n.url,urls:n.urls,wrapX:void 0===n.wrapX||n.wrapX,transition:n.transition,attributionsCollapsible:n.attributionsCollapsible})||this}return mh(e,t),e}(vh),Eh=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ch='&#169; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors.',wh=function(t){function e(e){var n,i=e||{};n=void 0!==i.attributions?i.attributions:[Ch];var r=void 0!==i.crossOrigin?i.crossOrigin:\"anonymous\",o=void 0!==i.url?i.url:\"https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png\";return t.call(this,{attributions:n,cacheSize:i.cacheSize,crossOrigin:r,opaque:void 0===i.opaque||i.opaque,maxZoom:void 0!==i.maxZoom?i.maxZoom:19,reprojectionErrorThreshold:i.reprojectionErrorThreshold,tileLoadFunction:i.tileLoadFunction,url:o,wrapX:i.wrapX,attributionsCollapsible:!1})||this}return Eh(e,t),e}(xh);const Oh=new ts({target:\"map\",view:new hr({center:(Th=[16.372,48.209],li(Th,\"EPSG:4326\",void 0!==bh?bh:\"EPSG:3857\")),zoom:14})});var Th,bh;Oh.addLayer(new Gs({source:new wh}));const Rh=new Ha({source:new hu({url:\"data/map.geojson\",format:new Fu})});Rh.setStyle(function(t){return new qs({text:new Du({text:t.get(\"name\"),font:\"Bold 8pt Verdana\",stroke:new Us({color:\"white\",width:3})})})}),Oh.addLayer(Rh);const Sh=new hu,Ih=new Ha({source:Sh});Ih.setStyle(new qs({image:new Ks({fill:new Ws({color:\"rgba(255,255,255,0.4)\"}),stroke:new Us({color:\"#3399CC\",width:1.25}),radius:15})})),Oh.addLayer(Ih);const Ph=new XMLHttpRequest;Ph.open(\"GET\",\"https://photon.komoot.de/api/?q=Wien Schwedenplatz\"),Ph.onload=function(){const t=JSON.parse(Ph.responseText),e=new Fu({featureProjection:\"EPSG:3857\"}).readFeatures(t);console.log(e),Sh.addFeatures(e)},Ph.send()}]);","extractedComments":[]}